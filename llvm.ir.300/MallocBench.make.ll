; ModuleID = 'llvm-link'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.pspec = type { i8*, i8*, i8* }
%struct.directory = type { %struct.directory*, i8*, %struct.dirfile**, %struct.__dirstream* }
%struct.dirfile = type { %struct.dirfile*, i8*, i8 }
%struct.__dirstream = type opaque
%struct.file = type { %struct.file*, i8*, %struct.dep*, %struct.commands*, i8*, %struct.dep*, i64, %struct.file*, %struct.file*, %struct.variable_set_list*, %struct.file*, i16, i16 }
%struct.commands = type { i8*, i32, i8*, i32, i8**, i8*, i8 }
%struct.dep = type { %struct.dep*, i8*, %struct.file*, i32 }
%struct.variable_set_list = type { %struct.variable_set_list*, %struct.variable_set* }
%struct.variable_set = type { %struct.variable**, i32 }
%struct.variable = type { %struct.variable*, i8*, i8*, i8 }
%struct.anon = type { i8*, i32, i32 }
%struct.child = type { %struct.child*, %struct.file*, i8**, i8**, i32, i8*, i32, i8 }
%struct.stringlist = type { i8**, i32, i32 }
%struct.command_switch = type { i8, i32, i8*, i8, i8*, i8* }
%struct.conditionals = type { i32, i32, i8* }
%struct.rule = type { %struct.rule*, i8**, i32*, i8**, %struct.dep*, %struct.commands*, i8, i8, i8 }
%struct.vpath = type { %struct.vpath*, i8*, i8*, i32, i8**, i32 }
%struct.ar_hdr = type { [16 x i8], [12 x i8], [6 x i8], [6 x i8], [8 x i8], [10 x i8], [2 x i8] }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.nameseq = type { %struct.nameseq*, i8* }
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.word = type { %struct.word*, i8*, i32 }
%struct.linebuffer = type { i32, i8* }
%struct.glob_t = type { i64, i8**, i64, i32, void (i8*)*, %struct.dirent* (i8*)*, i8* (i8*)*, i32 (i8*, %struct.stat*)*, i32 (i8*, %struct.stat*)* }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.variable_bucket = type { %struct.variable_bucket*, %struct.variable* }
%struct.output_state = type { i8*, i32 }

@.str = private unnamed_addr constant [41 x i8] c"attempt to use unsupported feature: `%s'\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"touch: Archive `%s' does not exist\00", align 1
@.str.2 = private unnamed_addr constant [35 x i8] c"touch: `%s' is not a valid archive\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"touch: \00", align 1
@.str.4 = private unnamed_addr constant [42 x i8] c"touch: Member `%s' does not exist in `%s'\00", align 1
@.str.5 = private unnamed_addr constant [52 x i8] c"touch: Bad return code from ar_member_touch on `%s'\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"!<arch>\0A\00", align 1
@.str.1.7 = private unnamed_addr constant [3 x i8] c"`\0A\00", align 1
@.str.2.8 = private unnamed_addr constant [3 x i8] c"%o\00", align 1
@.str.3.13 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"$(MAKE)\00", align 1
@.str.1.15 = private unnamed_addr constant [8 x i8] c"${MAKE}\00", align 1
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"@\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c".SUFFIXES\00", align 1
@.str.14.16 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"./\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"@D\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"@F\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"*D\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"*F\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"<D\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c"<F\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c"%D\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"%F\00", align 1
@.str.26 = private unnamed_addr constant [2 x i8] c"^\00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c"^D\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c"^F\00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"?D\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"?F\00", align 1
@.str.2.17 = private unnamed_addr constant [5 x i8] c"kill\00", align 1
@.str.3.18 = private unnamed_addr constant [23 x i8] c"*** Deleting file `%s'\00", align 1
@.str.4.19 = private unnamed_addr constant [9 x i8] c"unlink: \00", align 1
@.str.5.20 = private unnamed_addr constant [28 x i8] c"*** [%s] Deleting file `%s'\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.6.21 = private unnamed_addr constant [23 x i8] c"#  commands to execute\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c" (built-in):\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c" (from `%s', line %u):\0A\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"\09%.*s\0A\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c".SUFFIXES\00", align 1
@.str.1.33 = private unnamed_addr constant [9 x i8] c"SUFFIXES\00", align 1
@.str.2.34 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@default_suffixes = internal global [122 x i8] c".out .a .ln .o .c .cc .C .p .f .F .r .y .l .s .S .mod .sym .def .h .info .dvi .tex .texinfo .texi .cweb .web .sh .elc .el\00", align 16
@default_pattern_rules = internal global [3 x %struct.pspec] [%struct.pspec { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.61, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.54, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5.62, i32 0, i32 0) }, %struct.pspec { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.63, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.54, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7.64, i32 0, i32 0) }, %struct.pspec zeroinitializer], align 16
@default_terminal_rules = internal global [5 x %struct.pspec] [%struct.pspec { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.54, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8.55, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9.56, i32 0, i32 0) }, %struct.pspec { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.54, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.57, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9.56, i32 0, i32 0) }, %struct.pspec { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.54, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.58, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.59, i32 0, i32 0) }, %struct.pspec { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.54, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13.60, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.59, i32 0, i32 0) }, %struct.pspec zeroinitializer], align 16
@default_suffix_rules = internal global [83 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14.35, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.15.36, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16.37, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17.38, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.39, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.19.40, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.41, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21.42, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22.43, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.23.44, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.45, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.25.46, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.47, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.27.48, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28.49, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.29.50, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30.51, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.31.52, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.53, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.93, i32 0, i32 0), i8* null], align 16
@.str.14.35 = private unnamed_addr constant [3 x i8] c".o\00", align 1
@.str.15.36 = private unnamed_addr constant [42 x i8] c"$(LINK.o) $^ $(LOADLIBES) $(LDLIBS) -o $@\00", align 1
@.str.16.37 = private unnamed_addr constant [3 x i8] c".s\00", align 1
@.str.17.38 = private unnamed_addr constant [42 x i8] c"$(LINK.s) $^ $(LOADLIBES) $(LDLIBS) -o $@\00", align 1
@.str.18.39 = private unnamed_addr constant [3 x i8] c".S\00", align 1
@.str.19.40 = private unnamed_addr constant [42 x i8] c"$(LINK.S) $^ $(LOADLIBES) $(LDLIBS) -o $@\00", align 1
@.str.20.41 = private unnamed_addr constant [3 x i8] c".c\00", align 1
@.str.21.42 = private unnamed_addr constant [42 x i8] c"$(LINK.c) $^ $(LOADLIBES) $(LDLIBS) -o $@\00", align 1
@.str.22.43 = private unnamed_addr constant [4 x i8] c".cc\00", align 1
@.str.23.44 = private unnamed_addr constant [43 x i8] c"$(LINK.cc) $^ $(LOADLIBES) $(LDLIBS) -o $@\00", align 1
@.str.24.45 = private unnamed_addr constant [3 x i8] c".C\00", align 1
@.str.25.46 = private unnamed_addr constant [42 x i8] c"$(LINK.C) $^ $(LOADLIBES) $(LDLIBS) -o $@\00", align 1
@.str.26.47 = private unnamed_addr constant [3 x i8] c".f\00", align 1
@.str.27.48 = private unnamed_addr constant [42 x i8] c"$(LINK.f) $^ $(LOADLIBES) $(LDLIBS) -o $@\00", align 1
@.str.28.49 = private unnamed_addr constant [3 x i8] c".p\00", align 1
@.str.29.50 = private unnamed_addr constant [42 x i8] c"$(LINK.p) $^ $(LOADLIBES) $(LDLIBS) -o $@\00", align 1
@.str.30.51 = private unnamed_addr constant [3 x i8] c".F\00", align 1
@.str.31.52 = private unnamed_addr constant [42 x i8] c"$(LINK.F) $^ $(LOADLIBES) $(LDLIBS) -o $@\00", align 1
@.str.32.53 = private unnamed_addr constant [3 x i8] c".r\00", align 1
@.str.33 = private unnamed_addr constant [42 x i8] c"$(LINK.r) $^ $(LOADLIBES) $(LDLIBS) -o $@\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c".mod\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"$(COMPILE.mod) -o $@ -e $@ $^\00", align 1
@.str.36 = private unnamed_addr constant [9 x i8] c".def.sym\00", align 1
@.str.37 = private unnamed_addr constant [24 x i8] c"$(COMPILE.def) -o $@ $<\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c".sh\00", align 1
@.str.39 = private unnamed_addr constant [26 x i8] c"cat $< >$@ \0A chmod a+x $@\00", align 1
@.str.40 = private unnamed_addr constant [5 x i8] c".s.o\00", align 1
@.str.41 = private unnamed_addr constant [22 x i8] c"$(COMPILE.s) -o $@ $<\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c".S.o\00", align 1
@.str.43 = private unnamed_addr constant [22 x i8] c"$(COMPILE.S) -o $@ $<\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c".c.o\00", align 1
@.str.45 = private unnamed_addr constant [33 x i8] c"$(COMPILE.c) $< $(OUTPUT_OPTION)\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c".cc.o\00", align 1
@.str.47 = private unnamed_addr constant [34 x i8] c"$(COMPILE.cc) $< $(OUTPUT_OPTION)\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c".C.o\00", align 1
@.str.49 = private unnamed_addr constant [33 x i8] c"$(COMPILE.C) $< $(OUTPUT_OPTION)\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c".f.o\00", align 1
@.str.51 = private unnamed_addr constant [33 x i8] c"$(COMPILE.f) $< $(OUTPUT_OPTION)\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c".p.o\00", align 1
@.str.53 = private unnamed_addr constant [33 x i8] c"$(COMPILE.p) $< $(OUTPUT_OPTION)\00", align 1
@.str.54 = private unnamed_addr constant [5 x i8] c".F.o\00", align 1
@.str.55 = private unnamed_addr constant [33 x i8] c"$(COMPILE.F) $< $(OUTPUT_OPTION)\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c".r.o\00", align 1
@.str.57 = private unnamed_addr constant [33 x i8] c"$(COMPILE.r) $< $(OUTPUT_OPTION)\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c".mod.o\00", align 1
@.str.59 = private unnamed_addr constant [24 x i8] c"$(COMPILE.mod) -o $@ $<\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c".c.ln\00", align 1
@.str.61 = private unnamed_addr constant [18 x i8] c"$(LINT.c) -C$* $<\00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c".y.ln\00", align 1
@.str.63 = private unnamed_addr constant [54 x i8] c"$(YACC.y) $< \0A $(LINT.c) -C$* y.tab.c \0A $(RM) y.tab.c\00", align 1
@.str.64 = private unnamed_addr constant [6 x i8] c".l.ln\00", align 1
@.str.65 = private unnamed_addr constant [71 x i8] c"@$(RM) $*.c \0A $(LEX.l) $< > $*.c \0A$(LINT.c) -i $*.c -o $@ \0A $(RM) $*.c\00", align 1
@.str.66 = private unnamed_addr constant [5 x i8] c".y.c\00", align 1
@.str.67 = private unnamed_addr constant [32 x i8] c"$(YACC.y) $< \0A mv -f y.tab.c $@\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c".l.c\00", align 1
@.str.69 = private unnamed_addr constant [29 x i8] c"@$(RM) $@ \0A $(LEX.l) $< > $@\00", align 1
@.str.70 = private unnamed_addr constant [5 x i8] c".F.f\00", align 1
@.str.71 = private unnamed_addr constant [36 x i8] c"$(PREPROCESS.F) $< $(OUTPUT_OPTION)\00", align 1
@.str.72 = private unnamed_addr constant [5 x i8] c".r.f\00", align 1
@.str.73 = private unnamed_addr constant [36 x i8] c"$(PREPROCESS.r) $< $(OUTPUT_OPTION)\00", align 1
@.str.74 = private unnamed_addr constant [5 x i8] c".l.r\00", align 1
@.str.75 = private unnamed_addr constant [37 x i8] c"$(LEX.l) $< > $@ \0A mv -f lex.yy.r $@\00", align 1
@.str.76 = private unnamed_addr constant [5 x i8] c".S.s\00", align 1
@.str.77 = private unnamed_addr constant [24 x i8] c"$(PREPROCESS.S) $< > $@\00", align 1
@.str.78 = private unnamed_addr constant [14 x i8] c".texinfo.info\00", align 1
@.str.79 = private unnamed_addr constant [15 x i8] c"$(MAKEINFO) $<\00", align 1
@.str.80 = private unnamed_addr constant [11 x i8] c".texi.info\00", align 1
@.str.81 = private unnamed_addr constant [9 x i8] c".tex.dvi\00", align 1
@.str.82 = private unnamed_addr constant [10 x i8] c"$(TEX) $<\00", align 1
@.str.83 = private unnamed_addr constant [13 x i8] c".texinfo.dvi\00", align 1
@.str.84 = private unnamed_addr constant [15 x i8] c"$(TEXI2DVI) $<\00", align 1
@.str.85 = private unnamed_addr constant [10 x i8] c".texi.dvi\00", align 1
@.str.86 = private unnamed_addr constant [8 x i8] c".cweb.c\00", align 1
@.str.87 = private unnamed_addr constant [14 x i8] c"$(CTANGLE) $<\00", align 1
@.str.88 = private unnamed_addr constant [7 x i8] c".web.p\00", align 1
@.str.89 = private unnamed_addr constant [13 x i8] c"$(TANGLE) $<\00", align 1
@.str.90 = private unnamed_addr constant [10 x i8] c".cweb.tex\00", align 1
@.str.91 = private unnamed_addr constant [13 x i8] c"$(CWEAVE) $<\00", align 1
@.str.92 = private unnamed_addr constant [9 x i8] c".web.tex\00", align 1
@.str.93 = private unnamed_addr constant [12 x i8] c"$(WEAVE) $<\00", align 1
@.str.4.54 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str.8.55 = private unnamed_addr constant [4 x i8] c"%,v\00", align 1
@.str.9.56 = private unnamed_addr constant [37 x i8] c"test -f $@ || $(CO) $(COFLAGS) $< $@\00", align 1
@.str.10.57 = private unnamed_addr constant [8 x i8] c"RCS/%,v\00", align 1
@.str.11.58 = private unnamed_addr constant [4 x i8] c"s.%\00", align 1
@.str.12.59 = private unnamed_addr constant [20 x i8] c"$(GET) $(GFLAGS) $<\00", align 1
@.str.13.60 = private unnamed_addr constant [9 x i8] c"SCCS/s.%\00", align 1
@.str.3.61 = private unnamed_addr constant [4 x i8] c"(%)\00", align 1
@.str.5.62 = private unnamed_addr constant [23 x i8] c"$(AR) $(ARFLAGS) $@ $<\00", align 1
@.str.6.63 = private unnamed_addr constant [6 x i8] c"%.out\00", align 1
@.str.7.64 = private unnamed_addr constant [21 x i8] c"@rm -f $@ \0A cp $< $@\00", align 1
@default_variables = internal global [108 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.123, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.156, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.164, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.166, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.168, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.175, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.182, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.193, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.197, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), i8* null, i8* null], align 16
@.str.94 = private unnamed_addr constant [3 x i8] c"AR\00", align 1
@.str.95 = private unnamed_addr constant [3 x i8] c"ar\00", align 1
@.str.96 = private unnamed_addr constant [8 x i8] c"ARFLAGS\00", align 1
@.str.97 = private unnamed_addr constant [3 x i8] c"rv\00", align 1
@.str.98 = private unnamed_addr constant [3 x i8] c"AS\00", align 1
@.str.99 = private unnamed_addr constant [3 x i8] c"as\00", align 1
@.str.100 = private unnamed_addr constant [3 x i8] c"CC\00", align 1
@.str.101 = private unnamed_addr constant [3 x i8] c"cc\00", align 1
@.str.102 = private unnamed_addr constant [4 x i8] c"C++\00", align 1
@.str.103 = private unnamed_addr constant [4 x i8] c"g++\00", align 1
@.str.104 = private unnamed_addr constant [3 x i8] c"CO\00", align 1
@.str.105 = private unnamed_addr constant [3 x i8] c"co\00", align 1
@.str.106 = private unnamed_addr constant [4 x i8] c"CPP\00", align 1
@.str.107 = private unnamed_addr constant [9 x i8] c"$(CC) -E\00", align 1
@.str.108 = private unnamed_addr constant [3 x i8] c"FC\00", align 1
@.str.109 = private unnamed_addr constant [4 x i8] c"f77\00", align 1
@.str.110 = private unnamed_addr constant [4 x i8] c"F77\00", align 1
@.str.111 = private unnamed_addr constant [6 x i8] c"$(FC)\00", align 1
@.str.112 = private unnamed_addr constant [9 x i8] c"F77FLAGS\00", align 1
@.str.113 = private unnamed_addr constant [10 x i8] c"$(FFLAGS)\00", align 1
@.str.114 = private unnamed_addr constant [4 x i8] c"GET\00", align 1
@.str.115 = private unnamed_addr constant [14 x i8] c"/usr/sccs/get\00", align 1
@.str.116 = private unnamed_addr constant [3 x i8] c"LD\00", align 1
@.str.117 = private unnamed_addr constant [3 x i8] c"ld\00", align 1
@.str.118 = private unnamed_addr constant [4 x i8] c"LEX\00", align 1
@.str.119 = private unnamed_addr constant [4 x i8] c"lex\00", align 1
@.str.120 = private unnamed_addr constant [5 x i8] c"LINT\00", align 1
@.str.121 = private unnamed_addr constant [5 x i8] c"lint\00", align 1
@.str.122 = private unnamed_addr constant [4 x i8] c"M2C\00", align 1
@.str.123 = private unnamed_addr constant [4 x i8] c"m2c\00", align 1
@.str.124 = private unnamed_addr constant [3 x i8] c"PC\00", align 1
@.str.125 = private unnamed_addr constant [3 x i8] c"pc\00", align 1
@.str.126 = private unnamed_addr constant [5 x i8] c"YACC\00", align 1
@.str.127 = private unnamed_addr constant [5 x i8] c"yacc\00", align 1
@.str.128 = private unnamed_addr constant [9 x i8] c"MAKEINFO\00", align 1
@.str.129 = private unnamed_addr constant [9 x i8] c"makeinfo\00", align 1
@.str.130 = private unnamed_addr constant [4 x i8] c"TEX\00", align 1
@.str.131 = private unnamed_addr constant [4 x i8] c"tex\00", align 1
@.str.132 = private unnamed_addr constant [9 x i8] c"TEXI2DVI\00", align 1
@.str.133 = private unnamed_addr constant [9 x i8] c"texi2dvi\00", align 1
@.str.134 = private unnamed_addr constant [6 x i8] c"WEAVE\00", align 1
@.str.135 = private unnamed_addr constant [6 x i8] c"weave\00", align 1
@.str.136 = private unnamed_addr constant [7 x i8] c"CWEAVE\00", align 1
@.str.137 = private unnamed_addr constant [7 x i8] c"cweave\00", align 1
@.str.138 = private unnamed_addr constant [7 x i8] c"TANGLE\00", align 1
@.str.139 = private unnamed_addr constant [7 x i8] c"tangle\00", align 1
@.str.140 = private unnamed_addr constant [8 x i8] c"CTANGLE\00", align 1
@.str.141 = private unnamed_addr constant [8 x i8] c"ctangle\00", align 1
@.str.142 = private unnamed_addr constant [3 x i8] c"RM\00", align 1
@.str.143 = private unnamed_addr constant [6 x i8] c"rm -f\00", align 1
@.str.144 = private unnamed_addr constant [7 x i8] c"LINK.o\00", align 1
@.str.145 = private unnamed_addr constant [32 x i8] c"$(CC) $(LDFLAGS) $(TARGET_ARCH)\00", align 1
@.str.146 = private unnamed_addr constant [10 x i8] c"COMPILE.c\00", align 1
@.str.147 = private unnamed_addr constant [46 x i8] c"$(CC) $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c\00", align 1
@.str.148 = private unnamed_addr constant [7 x i8] c"LINK.c\00", align 1
@.str.149 = private unnamed_addr constant [54 x i8] c"$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH)\00", align 1
@.str.150 = private unnamed_addr constant [11 x i8] c"COMPILE.cc\00", align 1
@.str.151 = private unnamed_addr constant [49 x i8] c"$(C++) $(C++FLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c\00", align 1
@.str.152 = private unnamed_addr constant [10 x i8] c"COMPILE.C\00", align 1
@.str.153 = private unnamed_addr constant [14 x i8] c"$(COMPILE.cc)\00", align 1
@.str.154 = private unnamed_addr constant [8 x i8] c"LINK.cc\00", align 1
@.str.155 = private unnamed_addr constant [57 x i8] c"$(C++) $(C++FLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH)\00", align 1
@.str.156 = private unnamed_addr constant [7 x i8] c"LINK.C\00", align 1
@.str.157 = private unnamed_addr constant [11 x i8] c"$(LINK.cc)\00", align 1
@.str.158 = private unnamed_addr constant [7 x i8] c"YACC.y\00", align 1
@.str.159 = private unnamed_addr constant [18 x i8] c"$(YACC) $(YFLAGS)\00", align 1
@.str.160 = private unnamed_addr constant [6 x i8] c"LEX.l\00", align 1
@.str.161 = private unnamed_addr constant [20 x i8] c"$(LEX) $(LFLAGS) -t\00", align 1
@.str.162 = private unnamed_addr constant [10 x i8] c"COMPILE.f\00", align 1
@.str.163 = private unnamed_addr constant [34 x i8] c"$(FC) $(FFLAGS) $(TARGET_ARCH) -c\00", align 1
@.str.164 = private unnamed_addr constant [7 x i8] c"LINK.f\00", align 1
@.str.165 = private unnamed_addr constant [42 x i8] c"$(FC) $(FFLAGS) $(LDFLAGS) $(TARGET_ARCH)\00", align 1
@.str.166 = private unnamed_addr constant [10 x i8] c"COMPILE.F\00", align 1
@.str.167 = private unnamed_addr constant [46 x i8] c"$(FC) $(FFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c\00", align 1
@.str.168 = private unnamed_addr constant [7 x i8] c"LINK.F\00", align 1
@.str.169 = private unnamed_addr constant [54 x i8] c"$(FC) $(FFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH)\00", align 1
@.str.170 = private unnamed_addr constant [10 x i8] c"COMPILE.r\00", align 1
@.str.171 = private unnamed_addr constant [44 x i8] c"$(FC) $(FFLAGS) $(RFLAGS) $(TARGET_ARCH) -c\00", align 1
@.str.172 = private unnamed_addr constant [7 x i8] c"LINK.r\00", align 1
@.str.173 = private unnamed_addr constant [52 x i8] c"$(FC) $(FFLAGS) $(RFLAGS) $(LDFLAGS) $(TARGET_ARCH)\00", align 1
@.str.174 = private unnamed_addr constant [12 x i8] c"COMPILE.def\00", align 1
@.str.175 = private unnamed_addr constant [45 x i8] c"$(M2C) $(M2FLAGS) $(DEFFLAGS) $(TARGET_ARCH)\00", align 1
@.str.176 = private unnamed_addr constant [12 x i8] c"COMPILE.mod\00", align 1
@.str.177 = private unnamed_addr constant [45 x i8] c"$(M2C) $(M2FLAGS) $(MODFLAGS) $(TARGET_ARCH)\00", align 1
@.str.178 = private unnamed_addr constant [10 x i8] c"COMPILE.p\00", align 1
@.str.179 = private unnamed_addr constant [46 x i8] c"$(PC) $(PFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c\00", align 1
@.str.180 = private unnamed_addr constant [7 x i8] c"LINK.p\00", align 1
@.str.181 = private unnamed_addr constant [54 x i8] c"$(PC) $(PFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH)\00", align 1
@.str.182 = private unnamed_addr constant [7 x i8] c"LINK.s\00", align 1
@.str.183 = private unnamed_addr constant [43 x i8] c"$(CC) $(ASFLAGS) $(LDFLAGS) $(TARGET_MACH)\00", align 1
@.str.184 = private unnamed_addr constant [10 x i8] c"COMPILE.s\00", align 1
@.str.185 = private unnamed_addr constant [32 x i8] c"$(AS) $(ASFLAGS) $(TARGET_MACH)\00", align 1
@.str.186 = private unnamed_addr constant [7 x i8] c"LINK.S\00", align 1
@.str.187 = private unnamed_addr constant [55 x i8] c"$(CC) $(ASFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_MACH)\00", align 1
@.str.188 = private unnamed_addr constant [10 x i8] c"COMPILE.S\00", align 1
@.str.189 = private unnamed_addr constant [47 x i8] c"$(CC) $(ASFLAGS) $(CPPFLAGS) $(TARGET_MACH) -c\00", align 1
@.str.190 = private unnamed_addr constant [13 x i8] c"PREPROCESS.S\00", align 1
@.str.191 = private unnamed_addr constant [21 x i8] c"$(CC) -E $(CPPFLAGS)\00", align 1
@.str.192 = private unnamed_addr constant [13 x i8] c"PREPROCESS.F\00", align 1
@.str.193 = private unnamed_addr constant [46 x i8] c"$(FC) $(FFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -F\00", align 1
@.str.194 = private unnamed_addr constant [13 x i8] c"PREPROCESS.r\00", align 1
@.str.195 = private unnamed_addr constant [44 x i8] c"$(FC) $(FFLAGS) $(RFLAGS) $(TARGET_ARCH) -F\00", align 1
@.str.196 = private unnamed_addr constant [7 x i8] c"LINT.c\00", align 1
@.str.197 = private unnamed_addr constant [48 x i8] c"$(LINT) $(LINTFLAGS) $(CPPFLAGS) $(TARGET_ARCH)\00", align 1
@.str.198 = private unnamed_addr constant [14 x i8] c"OUTPUT_OPTION\00", align 1
@.str.199 = private unnamed_addr constant [6 x i8] c"-o $@\00", align 1
@open_directories = internal global i32 0, align 4
@directories = internal global [23 x %struct.directory*] zeroinitializer, align 16
@.str.200 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.201 = private unnamed_addr constant [16 x i8] c"\0A# Directories\0A\00", align 1
@.str.2.202 = private unnamed_addr constant [28 x i8] c"# %s: could not be opened.\0A\00", align 1
@.str.3.203 = private unnamed_addr constant [7 x i8] c"# %s: \00", align 1
@.str.4.204 = private unnamed_addr constant [3 x i8] c"No\00", align 1
@.str.5.205 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.6.206 = private unnamed_addr constant [9 x i8] c" files, \00", align 1
@.str.7.207 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.8.208 = private unnamed_addr constant [17 x i8] c" impossibilities\00", align 1
@.str.9.209 = private unnamed_addr constant [9 x i8] c" so far.\00", align 1
@.str.10.210 = private unnamed_addr constant [4 x i8] c"\0A# \00", align 1
@.str.11.211 = private unnamed_addr constant [37 x i8] c" impossibilities in %u directories.\0A\00", align 1
@variable_expand.start = internal global [3 x i8] c"$\00\00", align 1
@variable_expand.end = internal global [2 x i8] zeroinitializer, align 1
@.str.212 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.213 = private unnamed_addr constant [55 x i8] c"Recursive variable `%s' references itself (eventually)\00", align 1
@num_intermediates = dso_local global i32 0, align 4
@files = internal global [1007 x %struct.file*] zeroinitializer, align 16
@.str.218 = private unnamed_addr constant [48 x i8] c"Commands were specified for file `%s' at %s:%u,\00", align 1
@.str.1.219 = private unnamed_addr constant [50 x i8] c"but `%s' is now considered the same file as `%s'.\00", align 1
@.str.2.220 = private unnamed_addr constant [62 x i8] c"Commands for `%s' will be ignored in favor of those for `%s'.\00", align 1
@.str.3.221 = private unnamed_addr constant [52 x i8] c"can't rename single-colon `%s' to double-colon `%s'\00", align 1
@.str.4.222 = private unnamed_addr constant [52 x i8] c"can't rename double-colon `%s' to single-colon `%s'\00", align 1
@.str.5.225 = private unnamed_addr constant [23 x i8] c"*** Deleting file `%s'\00", align 1
@.str.6.226 = private unnamed_addr constant [4 x i8] c"rm \00", align 1
@.str.7.227 = private unnamed_addr constant [9 x i8] c"unlink: \00", align 1
@.str.8.228 = private unnamed_addr constant [10 x i8] c".PRECIOUS\00", align 1
@.str.9.229 = private unnamed_addr constant [7 x i8] c".PHONY\00", align 1
@.str.10.230 = private unnamed_addr constant [9 x i8] c"\0A# Files\00", align 1
@.str.11.231 = private unnamed_addr constant [16 x i8] c"# Not a target:\00", align 1
@.str.13.232 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.14.233 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.12.234 = private unnamed_addr constant [6 x i8] c"%s:%s\00", align 1
@.str.15.235 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str.16.236 = private unnamed_addr constant [44 x i8] c"#  Precious file (dependency of .PRECIOUS).\00", align 1
@.str.17.237 = private unnamed_addr constant [40 x i8] c"#  Phony target (dependency of .PHONY).\00", align 1
@.str.18.238 = private unnamed_addr constant [24 x i8] c"#  Command-line target.\00", align 1
@.str.19.239 = private unnamed_addr constant [36 x i8] c"#  A default or MAKEFILES makefile.\00", align 1
@.str.21.240 = private unnamed_addr constant [5 x i8] c" not\00", align 1
@.str.20.241 = private unnamed_addr constant [42 x i8] c"#  Implicit rule search has%s been done.\0A\00", align 1
@.str.22.242 = private unnamed_addr constant [39 x i8] c"#  Implicit/static pattern stem: `%s'\0A\00", align 1
@.str.23.243 = private unnamed_addr constant [39 x i8] c"#  File is an intermediate dependency.\00", align 1
@.str.24.244 = private unnamed_addr constant [15 x i8] c"#  Also makes:\00", align 1
@.str.25.245 = private unnamed_addr constant [36 x i8] c"#  Modification time never checked.\00", align 1
@.str.26.246 = private unnamed_addr constant [24 x i8] c"#  File does not exist.\00", align 1
@.str.27.247 = private unnamed_addr constant [30 x i8] c"#  Last modified %.24s (%ld)\0A\00", align 1
@.str.28.248 = private unnamed_addr constant [29 x i8] c"#  File has%s been updated.\0A\00", align 1
@.str.29.249 = private unnamed_addr constant [36 x i8] c"#  Commands currently running (?!).\00", align 1
@.str.30.250 = private unnamed_addr constant [43 x i8] c"#  Dependencies currently being made (?!).\00", align 1
@.str.31.251 = private unnamed_addr constant [25 x i8] c"#  Successfully updated.\00", align 1
@.str.32.252 = private unnamed_addr constant [25 x i8] c"#  Failed to be updated.\00", align 1
@.str.33.253 = private unnamed_addr constant [44 x i8] c"#  Invalid value in `update_status' member!\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.34.254 = private unnamed_addr constant [44 x i8] c"#  Invalid value in `command_state' member!\00", align 1
@.str.35.255 = private unnamed_addr constant [13 x i8] c"\0A# No files.\00", align 1
@.str.36.256 = private unnamed_addr constant [33 x i8] c"\0A# %u files in %u hash buckets.\0A\00", align 1
@.str.37.257 = private unnamed_addr constant [62 x i8] c"# average %.1f files per bucket, max %u files in one bucket.\0A\00", align 1
@shell_function_pid = dso_local global i32 0, align 4
@shell_function_completed = common dso_local global i32 0, align 4
@.str.262 = private unnamed_addr constant [2 x i8] c" \00", align 1
@function_table = internal global [22 x %struct.anon] [%struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.283, i32 0, i32 0), i32 5, i32 0 }, %struct.anon { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.289, i32 0, i32 0), i32 9, i32 1 }, %struct.anon { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.290, i32 0, i32 0), i32 9, i32 2 }, %struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.292, i32 0, i32 0), i32 3, i32 3 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.293, i32 0, i32 0), i32 6, i32 4 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.294, i32 0, i32 0), i32 6, i32 5 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.295, i32 0, i32 0), i32 8, i32 6 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.296, i32 0, i32 0), i32 8, i32 7 }, %struct.anon { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.297, i32 0, i32 0), i32 9, i32 8 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.284, i32 0, i32 0), i32 4, i32 9 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11.298, i32 0, i32 0), i32 5, i32 10 }, %struct.anon { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12.288, i32 0, i32 0), i32 10, i32 11 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.299, i32 0, i32 0), i32 5, i32 12 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14.282, i32 0, i32 0), i32 4, i32 13 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15.281, i32 0, i32 0), i32 8, i32 14 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16.279, i32 0, i32 0), i32 6, i32 15 }, %struct.anon { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17.280, i32 0, i32 0), i32 10, i32 16 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.278, i32 0, i32 0), i32 7, i32 17 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.300, i32 0, i32 0), i32 4, i32 18 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20.301, i32 0, i32 0), i32 6, i32 19 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21.302, i32 0, i32 0), i32 5, i32 20 }, %struct.anon { i8* null, i32 0, i32 21 }], align 16
@.str.22.265 = private unnamed_addr constant [8 x i8] c"%s:%u: \00", align 1
@.str.23.266 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.24.267 = private unnamed_addr constant [5 x i8] c"pipe\00", align 1
@.str.25.268 = private unnamed_addr constant [5 x i8] c"fork\00", align 1
@environ = external dso_local global i8**, align 8
@.str.26.269 = private unnamed_addr constant [10 x i8] c"undefined\00", align 1
@.str.27.270 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.28.271 = private unnamed_addr constant [12 x i8] c"environment\00", align 1
@.str.29.272 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.30.273 = private unnamed_addr constant [21 x i8] c"environment override\00", align 1
@.str.31.274 = private unnamed_addr constant [13 x i8] c"command line\00", align 1
@.str.32.275 = private unnamed_addr constant [9 x i8] c"override\00", align 1
@.str.33.276 = private unnamed_addr constant [10 x i8] c"automatic\00", align 1
@.str.34.277 = private unnamed_addr constant [40 x i8] c"insufficient arguments to function `%s'\00", align 1
@.str.18.278 = private unnamed_addr constant [8 x i8] c"foreach\00", align 1
@.str.16.279 = private unnamed_addr constant [7 x i8] c"filter\00", align 1
@.str.17.280 = private unnamed_addr constant [11 x i8] c"filter-out\00", align 1
@.str.15.281 = private unnamed_addr constant [9 x i8] c"patsubst\00", align 1
@.str.14.282 = private unnamed_addr constant [5 x i8] c"join\00", align 1
@.str.1.283 = private unnamed_addr constant [6 x i8] c"subst\00", align 1
@.str.10.284 = private unnamed_addr constant [5 x i8] c"word\00", align 1
@.str.35.285 = private unnamed_addr constant [46 x i8] c"non-numeric first argument to `word' function\00", align 1
@.str.36.286 = private unnamed_addr constant [54 x i8] c"the `word' function takes a one-origin index argument\00", align 1
@.str.37.287 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.12.288 = private unnamed_addr constant [11 x i8] c"findstring\00", align 1
@.str.2.289 = private unnamed_addr constant [10 x i8] c"addsuffix\00", align 1
@.str.3.290 = private unnamed_addr constant [10 x i8] c"addprefix\00", align 1
@.str.38.291 = private unnamed_addr constant [3 x i8] c"./\00", align 1
@string_glob.result = internal global i8* null, align 8
@string_glob.length = internal global i32 0, align 4
@.str.4.292 = private unnamed_addr constant [4 x i8] c"dir\00", align 1
@.str.5.293 = private unnamed_addr constant [7 x i8] c"notdir\00", align 1
@.str.6.294 = private unnamed_addr constant [7 x i8] c"suffix\00", align 1
@.str.7.295 = private unnamed_addr constant [9 x i8] c"basename\00", align 1
@.str.8.296 = private unnamed_addr constant [9 x i8] c"wildcard\00", align 1
@.str.9.297 = private unnamed_addr constant [10 x i8] c"firstword\00", align 1
@.str.11.298 = private unnamed_addr constant [6 x i8] c"words\00", align 1
@.str.13.299 = private unnamed_addr constant [6 x i8] c"strip\00", align 1
@.str.19.300 = private unnamed_addr constant [5 x i8] c"sort\00", align 1
@.str.20.301 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.21.302 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.303 = private unnamed_addr constant [40 x i8] c"Looking for an implicit rule for `%s'.\0A\00", align 1
@.str.1.304 = private unnamed_addr constant [52 x i8] c"Looking for archive-member implicit rule for `%s'.\0A\00", align 1
@.str.2.305 = private unnamed_addr constant [35 x i8] c"Avoiding implicit rule recursion.\0A\00", align 1
@.str.3.306 = private unnamed_addr constant [39 x i8] c"Trying pattern rule with stem `%.*s'.\0A\00", align 1
@.str.5.307 = private unnamed_addr constant [9 x i8] c"implicit\00", align 1
@.str.6.308 = private unnamed_addr constant [5 x i8] c"rule\00", align 1
@.str.4.309 = private unnamed_addr constant [41 x i8] c"Rejecting impossible %s dependent `%s'.\0A\00", align 1
@.str.7.310 = private unnamed_addr constant [28 x i8] c"Trying %s dependency `%s'.\0A\00", align 1
@.str.8.311 = private unnamed_addr constant [26 x i8] c"Found dependent as `%s'.\0A\00", align 1
@.str.9.312 = private unnamed_addr constant [49 x i8] c"Looking for a rule with intermediate file `%s'.\0A\00", align 1
@default_shell = dso_local global [8 x i8] c"/bin/sh\00", align 1
@children = dso_local global %struct.child* null, align 8
@job_slots_used = dso_local global i32 0, align 4
@signals_blocked_p_stack = internal global i8* null, align 8
@signals_blocked_p_max = internal global i32 0, align 4
@signals_blocked_p_depth = internal global i32 0, align 4
@.str.1.319 = private unnamed_addr constant [8 x i8] c" remote\00", align 1
@.str.2.320 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.321 = private unnamed_addr constant [17 x i8] c"Unknown%s job %d\00", align 1
@.str.3.322 = private unnamed_addr constant [13 x i8] c"%s finished.\00", align 1
@good_stdin_used = internal global i32 0, align 4
@.str.4.323 = private unnamed_addr constant [55 x i8] c"internal error: `%s' command_state %d in child_handler\00", align 1
@start_job.bad_stdin = internal global i32 -1, align 4
@.str.19.328 = private unnamed_addr constant [6 x i8] c"vfork\00", align 1
@.str.7.329 = private unnamed_addr constant [7 x i8] c"SHELL=\00", align 1
@.str.8.330 = private unnamed_addr constant [6 x i8] c"PATH=\00", align 1
@.str.9.331 = private unnamed_addr constant [22 x i8] c"%s: Command not found\00", align 1
@.str.10.332 = private unnamed_addr constant [28 x i8] c"%s: Shell program not found\00", align 1
@.str.11.333 = private unnamed_addr constant [9 x i8] c"execve: \00", align 1
@default_path = internal global [15 x i8] c":/bin:/usr/bin\00", align 1
@search_path.ngroups = internal global i32 -1, align 4
@search_path.groups = internal global [65536 x i32] zeroinitializer, align 16
@.str.12.334 = private unnamed_addr constant [9 x i8] c"$(SHELL)\00", align 1
@.str.13.335 = private unnamed_addr constant [7 x i8] c"$(IFS)\00", align 1
@construct_command_argv_internal.sh_chars = internal global [19 x i8] c"#;\22*?[]&|<>(){}=$`\00", align 16
@construct_command_argv_internal.sh_cmds = internal global [25 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.337, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21.338, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22.339, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.340, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24.341, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25.342, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26.343, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27.344, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28.345, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29.346, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30.347, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31.348, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.349, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33.350, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34.351, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35.352, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36.353, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37.354, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38.355, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39.356, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40.357, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41.358, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42.359, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43.360, i32 0, i32 0), i8* null], align 16
@.str.44.336 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@construct_command_argv_internal.minus_c = internal global [5 x i8] c" -c \00", align 1
@.str.20.337 = private unnamed_addr constant [3 x i8] c"cd\00", align 1
@.str.21.338 = private unnamed_addr constant [5 x i8] c"eval\00", align 1
@.str.22.339 = private unnamed_addr constant [5 x i8] c"exec\00", align 1
@.str.23.340 = private unnamed_addr constant [5 x i8] c"exit\00", align 1
@.str.24.341 = private unnamed_addr constant [6 x i8] c"login\00", align 1
@.str.25.342 = private unnamed_addr constant [7 x i8] c"logout\00", align 1
@.str.26.343 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.27.344 = private unnamed_addr constant [6 x i8] c"umask\00", align 1
@.str.28.345 = private unnamed_addr constant [5 x i8] c"wait\00", align 1
@.str.29.346 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@.str.30.347 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@.str.31.348 = private unnamed_addr constant [5 x i8] c"case\00", align 1
@.str.32.349 = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str.33.350 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.34.351 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.35.352 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str.36.353 = private unnamed_addr constant [9 x i8] c"continue\00", align 1
@.str.37.354 = private unnamed_addr constant [7 x i8] c"export\00", align 1
@.str.38.355 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str.39.356 = private unnamed_addr constant [9 x i8] c"readonly\00", align 1
@.str.40.357 = private unnamed_addr constant [6 x i8] c"shift\00", align 1
@.str.41.358 = private unnamed_addr constant [6 x i8] c"times\00", align 1
@.str.42.359 = private unnamed_addr constant [5 x i8] c"trap\00", align 1
@.str.43.360 = private unnamed_addr constant [7 x i8] c"switch\00", align 1
@.str.14.361 = private unnamed_addr constant [11 x i8] c" (ignored)\00", align 1
@.str.15.362 = private unnamed_addr constant [20 x i8] c"*** [%s] Error %d%s\00", align 1
@.str.16.363 = private unnamed_addr constant [15 x i8] c" (core dumped)\00", align 1
@sys_siglist = external dso_local constant [65 x i8*], align 16
@.str.17.364 = private unnamed_addr constant [14 x i8] c"*** [%s] %s%s\00", align 1
@.str.18.365 = private unnamed_addr constant [21 x i8] c"*** [%s] Signal %d%s\00", align 1
@.str.5.368 = private unnamed_addr constant [36 x i8] c"*** Waiting for unfinished jobs....\00", align 1
@.str.6.371 = private unnamed_addr constant [52 x i8] c"internal error: `%s' command_state == %d in new_job\00", align 1
@debug_flag = dso_local global i32 0, align 4
@env_overrides = dso_local global i32 0, align 4
@ignore_errors_flag = dso_local global i32 0, align 4
@print_data_base_flag = dso_local global i32 0, align 4
@question_flag = dso_local global i32 0, align 4
@no_builtin_rules_flag = dso_local global i32 0, align 4
@default_keep_going_flag = dso_local global i32 0, align 4
@print_directory_flag = dso_local global i32 0, align 4
@print_version_flag = dso_local global i32 0, align 4
@job_slots = dso_local global i32 1, align 4
@default_job_slots = dso_local global i32 1, align 4
@max_load_average = dso_local global double -1.000000e+00, align 8
@default_load_average = dso_local global double -1.000000e+00, align 8
@other_args = dso_local global %struct.stringlist* null, align 8
@default_goal_file = common dso_local global %struct.file* null, align 8
@fatal_signal_mask = common dso_local global i32 0, align 4
@program = common dso_local global i8* null, align 8
@makelevel = common dso_local global i32 0, align 4
@default_file = common dso_local global %struct.file* null, align 8
@silent_flag = common dso_local global i32 0, align 4
@touch_flag = common dso_local global i32 0, align 4
@just_print_flag = common dso_local global i32 0, align 4
@keep_going_flag = common dso_local global i32 0, align 4
@.str.394 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.395 = private unnamed_addr constant [5 x i8] c"make\00", align 1
@.str.2.396 = private unnamed_addr constant [10 x i8] c"getwd: %s\00", align 1
@.str.3.397 = private unnamed_addr constant [26 x i8] c";'\22*?[]$<>(){}|&~`\\ \09\0D\0A\0C\0B\00", align 1
@.str.4.398 = private unnamed_addr constant [14 x i8] c"MAKEOVERRIDES\00", align 1
@.str.5.399 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.6.400 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.7.401 = private unnamed_addr constant [5 x i8] c"MAKE\00", align 1
@directories.402 = internal global %struct.stringlist* null, align 8
@.str.8.403 = private unnamed_addr constant [10 x i8] c"MAKELEVEL\00", align 1
@include_directories = internal global %struct.stringlist* null, align 8
@makefiles = internal global %struct.stringlist* null, align 8
@main.name = internal global [14 x i8] c"/tmp/GmXXXXXX\00", align 1
@.str.9.404 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.10.405 = private unnamed_addr constant [23 x i8] c"fopen (temporary file)\00", align 1
@stdin = external dso_local global %struct._IO_FILE*, align 8
@.str.11.406 = private unnamed_addr constant [24 x i8] c"fwrite (temporary file)\00", align 1
@.str.12.407 = private unnamed_addr constant [6 x i8] c"%s:;\0A\00", align 1
@.str.13.408 = private unnamed_addr constant [9 x i8] c".DEFAULT\00", align 1
@.str.14.409 = private unnamed_addr constant [10 x i8] c"MAKEFLAGS\00", align 1
@.str.15.410 = private unnamed_addr constant [7 x i8] c"MFLAGS\00", align 1
@.str.16.411 = private unnamed_addr constant [8 x i8] c".IGNORE\00", align 1
@.str.17.412 = private unnamed_addr constant [8 x i8] c".SILENT\00", align 1
@old_files = internal global %struct.stringlist* null, align 8
@new_files = internal global %struct.stringlist* null, align 8
@.str.18.413 = private unnamed_addr constant [23 x i8] c"Updating makefiles....\00", align 1
@.str.19.414 = private unnamed_addr constant [44 x i8] c"Makefile `%s' might loop; not remaking it.\0A\00", align 1
@.str.20.415 = private unnamed_addr constant [32 x i8] c"Failed to remake makefile `%s'.\00", align 1
@.str.21.416 = private unnamed_addr constant [28 x i8] c"Makefile `%s' was not found\00", align 1
@.str.22.417 = private unnamed_addr constant [38 x i8] c"Included makefile `%s' was not found.\00", align 1
@.str.23.420 = private unnamed_addr constant [22 x i8] c"Re-execing myself....\00", align 1
@.str.24.421 = private unnamed_addr constant [3 x i8] c"-f\00", align 1
@.str.25.422 = private unnamed_addr constant [6 x i8] c"chdir\00", align 1
@.str.26.423 = private unnamed_addr constant [44 x i8] c"Couldn't change back to original directory.\00", align 1
@.str.27.424 = private unnamed_addr constant [11 x i8] c"MAKELEVEL=\00", align 1
@.str.28.425 = private unnamed_addr constant [13 x i8] c"MAKELEVEL=%u\00", align 1
@.str.29.426 = private unnamed_addr constant [26 x i8] c"Updating goal targets....\00", align 1
@.str.30.427 = private unnamed_addr constant [43 x i8] c"No targets specified and no makefile found\00", align 1
@.str.31.428 = private unnamed_addr constant [11 x i8] c"No targets\00", align 1
@.str.42.429 = private unnamed_addr constant [33 x i8] c"\0A# Make data base, printed on %s\00", align 1
@.str.43.430 = private unnamed_addr constant [34 x i8] c"\0A# Finished Make data base on %s\0A\00", align 1
@die.dying = internal global i8 0, align 1
@printed_version = internal global i32 0, align 4
@switches = internal global [23 x %struct.command_switch] [%struct.command_switch { i8 98, i32 5, i8* null, i8 0, i8* null, i8* null }, %struct.command_switch { i8 67, i32 2, i8* bitcast (%struct.stringlist** @directories.402 to i8*), i8 0, i8* null, i8* null }, %struct.command_switch { i8 100, i32 0, i8* bitcast (i32* @debug_flag to i8*), i8 3, i8* null, i8* null }, %struct.command_switch { i8 101, i32 0, i8* bitcast (i32* @env_overrides to i8*), i8 3, i8* null, i8* null }, %struct.command_switch { i8 102, i32 2, i8* bitcast (%struct.stringlist** @makefiles to i8*), i8 0, i8* null, i8* null }, %struct.command_switch { i8 105, i32 0, i8* bitcast (i32* @ignore_errors_flag to i8*), i8 3, i8* null, i8* null }, %struct.command_switch { i8 73, i32 2, i8* bitcast (%struct.stringlist** @include_directories to i8*), i8 0, i8* null, i8* null }, %struct.command_switch { i8 106, i32 3, i8* bitcast (i32* @job_slots to i8*), i8 3, i8* bitcast (i32* @inf_jobs to i8*), i8* bitcast (i32* @default_job_slots to i8*) }, %struct.command_switch { i8 107, i32 0, i8* bitcast (i32* @keep_going_flag to i8*), i8 3, i8* null, i8* bitcast (i32* @default_keep_going_flag to i8*) }, %struct.command_switch { i8 108, i32 4, i8* bitcast (double* @max_load_average to i8*), i8 3, i8* bitcast (double* @default_load_average to i8*), i8* bitcast (double* @default_load_average to i8*) }, %struct.command_switch { i8 109, i32 5, i8* null, i8 0, i8* null, i8* null }, %struct.command_switch { i8 110, i32 0, i8* bitcast (i32* @just_print_flag to i8*), i8 7, i8* null, i8* null }, %struct.command_switch { i8 111, i32 2, i8* bitcast (%struct.stringlist** @old_files to i8*), i8 0, i8* null, i8* null }, %struct.command_switch { i8 112, i32 0, i8* bitcast (i32* @print_data_base_flag to i8*), i8 3, i8* null, i8* null }, %struct.command_switch { i8 113, i32 0, i8* bitcast (i32* @question_flag to i8*), i8 7, i8* null, i8* null }, %struct.command_switch { i8 114, i32 0, i8* bitcast (i32* @no_builtin_rules_flag to i8*), i8 3, i8* null, i8* null }, %struct.command_switch { i8 115, i32 0, i8* bitcast (i32* @silent_flag to i8*), i8 3, i8* null, i8* null }, %struct.command_switch { i8 83, i32 1, i8* bitcast (i32* @keep_going_flag to i8*), i8 3, i8* null, i8* bitcast (i32* @default_keep_going_flag to i8*) }, %struct.command_switch { i8 116, i32 0, i8* bitcast (i32* @touch_flag to i8*), i8 7, i8* null, i8* null }, %struct.command_switch { i8 118, i32 0, i8* bitcast (i32* @print_version_flag to i8*), i8 0, i8* null, i8* null }, %struct.command_switch { i8 119, i32 0, i8* bitcast (i32* @print_directory_flag to i8*), i8 3, i8* null, i8* null }, %struct.command_switch { i8 87, i32 2, i8* bitcast (%struct.stringlist** @new_files to i8*), i8 0, i8* null, i8* null }, %struct.command_switch { i8 0, i32 5, i8* null, i8 0, i8* null, i8* null }], align 16
@inf_jobs = internal global i32 0, align 4
@.str.36.431 = private unnamed_addr constant [6 x i8] c"%c%u \00", align 1
@.str.37.432 = private unnamed_addr constant [6 x i8] c"%c%f \00", align 1
@.str.44.433 = private unnamed_addr constant [9 x i8] c"Entering\00", align 1
@.str.45.434 = private unnamed_addr constant [8 x i8] c"Leaving\00", align 1
@log_working_directory.entered = internal global i32 0, align 4
@.str.38.435 = private unnamed_addr constant [3 x i8] c"# \00", align 1
@.str.46.436 = private unnamed_addr constant [8 x i8] c"%s: %s \00", align 1
@.str.47.437 = private unnamed_addr constant [21 x i8] c"an unknown directory\00", align 1
@.str.48.438 = private unnamed_addr constant [16 x i8] c"directory `%s'\0A\00", align 1
@.str.39.439 = private unnamed_addr constant [22 x i8] c"%sGNU Make version %s\00", align 1
@.str.40.440 = private unnamed_addr constant [4 x i8] c"-%s\00", align 1
@.str.41.441 = private unnamed_addr constant [257 x i8] c", by Richard Stallman and Roland McGrath.\0A%sCopyright (C) 1988-1991 Free Software Foundation, Inc.\0A%sThis is free software; see the source for copying conditions.\0A%sThere is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A\0A%sPARTICULAR PURPOSE.\0A\0A\00", align 1
@.str.32.442 = private unnamed_addr constant [35 x i8] c"argument required for `-%c' option\00", align 1
@.str.33.443 = private unnamed_addr constant [55 x i8] c"the `-%c' option requires a positive integral argument\00", align 1
@.str.34.444 = private unnamed_addr constant [38 x i8] c"the `-%c' option requires an argument\00", align 1
@.str.35.445 = private unnamed_addr constant [21 x i8] c"unknown option `-%c'\00", align 1
@.str.8.456 = private unnamed_addr constant [25 x i8] c"virtual memory exhausted\00", align 1
@.str.459 = private unnamed_addr constant [5 x i8] c"%s: \00", align 1
@.str.1.460 = private unnamed_addr constant [9 x i8] c"%s[%u]: \00", align 1
@.str.2.461 = private unnamed_addr constant [10 x i8] c".  Stop.\0A\00", align 1
@.str.3.466 = private unnamed_addr constant [8 x i8] c"%s:%u: \00", align 1
@sys_nerr = external dso_local global i32, align 4
@sys_errlist = external dso_local constant [0 x i8*], align 8
@.str.4.471 = private unnamed_addr constant [9 x i8] c"%s%s: %s\00", align 1
@.str.5.472 = private unnamed_addr constant [23 x i8] c"%s%s: Unknown error %d\00", align 1
@.str.6.475 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.7.476 = private unnamed_addr constant [21 x i8] c"%s: Unknown error %d\00", align 1
@user_uid = internal global i32 -1, align 4
@current_access = internal global i32 0, align 4
@.str.9.489 = private unnamed_addr constant [7 x i8] c"setuid\00", align 1
@user_gid = internal global i32 -1, align 4
@.str.10.490 = private unnamed_addr constant [7 x i8] c"setgid\00", align 1
@make_uid = internal global i32 -1, align 4
@make_gid = internal global i32 -1, align 4
@.str.11.491 = private unnamed_addr constant [13 x i8] c"get{e}[gu]id\00", align 1
@reading_filename = common dso_local global i8* null, align 8
@reading_lineno_ptr = common dso_local global i32* null, align 8
@.str.502 = private unnamed_addr constant [21 x i8] c"Reading makefiles...\00", align 1
@.str.1.503 = private unnamed_addr constant [13 x i8] c"$(MAKEFILES)\00", align 1
@read_makefiles = internal global %struct.dep* null, align 8
@read_all_makefiles.default_makefiles = internal global [4 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.504, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3.505, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.506, i32 0, i32 0), i8* null], align 16
@.str.2.504 = private unnamed_addr constant [12 x i8] c"GNUmakefile\00", align 1
@.str.3.505 = private unnamed_addr constant [9 x i8] c"makefile\00", align 1
@.str.4.506 = private unnamed_addr constant [9 x i8] c"Makefile\00", align 1
@.str.10.507 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@include_directories.508 = internal global i8** null, align 8
@.str.8.509 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.11.510 = private unnamed_addr constant [8 x i8] c"fopen: \00", align 1
@read_makefile.collapsed_length = internal global i32 0, align 4
@read_makefile.collapsed = internal global i8* null, align 8
@.str.12.511 = private unnamed_addr constant [6 x i8] c"ifdef\00", align 1
@.str.13.512 = private unnamed_addr constant [7 x i8] c"ifndef\00", align 1
@.str.14.513 = private unnamed_addr constant [5 x i8] c"ifeq\00", align 1
@.str.15.514 = private unnamed_addr constant [6 x i8] c"ifneq\00", align 1
@.str.16.515 = private unnamed_addr constant [5 x i8] c"else\00", align 1
@.str.17.516 = private unnamed_addr constant [6 x i8] c"endif\00", align 1
@.str.18.517 = private unnamed_addr constant [30 x i8] c"invalid syntax in conditional\00", align 1
@.str.19.518 = private unnamed_addr constant [38 x i8] c"commands commence before first target\00", align 1
@.str.20.519 = private unnamed_addr constant [7 x i8] c"define\00", align 1
@.str.21.520 = private unnamed_addr constant [6 x i8] c"endef\00", align 1
@.str.22.521 = private unnamed_addr constant [19 x i8] c"extraneous `endef'\00", align 1
@.str.23.522 = private unnamed_addr constant [9 x i8] c"override\00", align 1
@.str.24.523 = private unnamed_addr constant [27 x i8] c"empty `override' directive\00", align 1
@.str.25.524 = private unnamed_addr constant [27 x i8] c"Empty `override' directive\00", align 1
@.str.26.525 = private unnamed_addr constant [8 x i8] c"include\00", align 1
@conditionals = internal global %struct.conditionals* @toplevel_conditionals, align 8
@.str.27.526 = private unnamed_addr constant [26 x i8] c"no filename for `include'\00", align 1
@.str.28.527 = private unnamed_addr constant [32 x i8] c"extraneous text after `include'\00", align 1
@.str.29.528 = private unnamed_addr constant [6 x i8] c"vpath\00", align 1
@.str.30.529 = private unnamed_addr constant [40 x i8] c"extraneous text after `vpath' directive\00", align 1
@.str.31.530 = private unnamed_addr constant [20 x i8] c"missing target name\00", align 1
@.str.32.535 = private unnamed_addr constant [18 x i8] c"missing separator\00", align 1
@.str.33.536 = private unnamed_addr constant [23 x i8] c"missing target pattern\00", align 1
@.str.34.537 = private unnamed_addr constant [25 x i8] c"multiple target patterns\00", align 1
@.str.35.540 = private unnamed_addr constant [32 x i8] c"target pattern contains no `%%'\00", align 1
@.str.36.541 = private unnamed_addr constant [16 x i8] c"missing `endif'\00", align 1
@.str.5.542 = private unnamed_addr constant [8 x i8] c"$(HOME)\00", align 1
@.str.6.543 = private unnamed_addr constant [5 x i8] c"HOME\00", align 1
@.str.7.544 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.9.545 = private unnamed_addr constant [25 x i8] c"virtual memory exhausted\00", align 1
@.str.41.546 = private unnamed_addr constant [40 x i8] c"mixed implicit and static pattern rules\00", align 1
@.str.42.547 = private unnamed_addr constant [32 x i8] c"mixed implicit and normal rules\00", align 1
@.str.43.548 = private unnamed_addr constant [45 x i8] c"target `%s' doesn't match the target pattern\00", align 1
@.str.44.549 = private unnamed_addr constant [43 x i8] c"target file `%s' has both : and :: entries\00", align 1
@.str.45.550 = private unnamed_addr constant [51 x i8] c"target `%s' given more than once in the same rule.\00", align 1
@.str.46.551 = private unnamed_addr constant [45 x i8] c"warning: overriding commands for target `%s'\00", align 1
@.str.47.552 = private unnamed_addr constant [47 x i8] c"warning: ignoring old commands for target `%s'\00", align 1
@record_files.percent = internal global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48.555, i32 0, i32 0), align 8
@.str.48.555 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@toplevel_conditionals = internal global %struct.conditionals zeroinitializer, align 8
@.str.39.556 = private unnamed_addr constant [40 x i8] c"Extraneous text after `endef' directive\00", align 1
@.str.40.557 = private unnamed_addr constant [39 x i8] c"missing `endef', unterminated `define'\00", align 1
@.str.37.558 = private unnamed_addr constant [37 x i8] c"Extraneous text after `%s' directive\00", align 1
@.str.38.559 = private unnamed_addr constant [16 x i8] c"extraneous `%s'\00", align 1
@default_include_directories = internal global [4 x i8*] [i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.49.562, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.50.563, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51.564, i32 0, i32 0), i8* null], align 16
@max_incl_len = internal global i32 0, align 4
@.str.49.562 = private unnamed_addr constant [17 x i8] c"/usr/gnu/include\00", align 1
@.str.50.563 = private unnamed_addr constant [19 x i8] c"/usr/local/include\00", align 1
@.str.51.564 = private unnamed_addr constant [13 x i8] c"/usr/include\00", align 1
@files_remade = internal global i32 0, align 4
@.str.569 = private unnamed_addr constant [29 x i8] c"Nothing to be done for `%s'.\00", align 1
@.str.1.570 = private unnamed_addr constant [20 x i8] c"`%s' is up to date.\00", align 1
@.str.2.571 = private unnamed_addr constant [31 x i8] c"Considering target file `%s'.\0A\00", align 1
@.str.3.572 = private unnamed_addr constant [48 x i8] c"Recently tried and failed to update file `%s'.\0A\00", align 1
@.str.4.573 = private unnamed_addr constant [35 x i8] c"File `%s' was considered already.\0A\00", align 1
@.str.5.574 = private unnamed_addr constant [27 x i8] c"Still updating file `%s'.\0A\00", align 1
@.str.6.575 = private unnamed_addr constant [30 x i8] c"Finished updating file `%s'.\0A\00", align 1
@.str.7.576 = private unnamed_addr constant [27 x i8] c"File `%s' does not exist.\0A\00", align 1
@.str.8.577 = private unnamed_addr constant [34 x i8] c"Found an implicit rule for `%s'.\0A\00", align 1
@.str.9.578 = private unnamed_addr constant [34 x i8] c"No implicit rule found for `%s'.\0A\00", align 1
@.str.10.579 = private unnamed_addr constant [34 x i8] c"Using default commands for `%s'.\0A\00", align 1
@.str.11.580 = private unnamed_addr constant [38 x i8] c"Circular %s <- %s dependency dropped.\00", align 1
@.str.12.581 = private unnamed_addr constant [44 x i8] c"Finished dependencies of target file `%s'.\0A\00", align 1
@.str.13.582 = private unnamed_addr constant [42 x i8] c"The dependencies of `%s' are being made.\0A\00", align 1
@.str.14.583 = private unnamed_addr constant [32 x i8] c"Giving up on target file `%s'.\0A\00", align 1
@.str.15.584 = private unnamed_addr constant [42 x i8] c"Target `%s' not remade because of errors.\00", align 1
@.str.16.585 = private unnamed_addr constant [33 x i8] c"Dependency `%s' does not exist.\0A\00", align 1
@.str.18.586 = private unnamed_addr constant [6 x i8] c"newer\00", align 1
@.str.19.587 = private unnamed_addr constant [6 x i8] c"older\00", align 1
@.str.17.588 = private unnamed_addr constant [44 x i8] c"Dependency `%s' is %s than dependent `%s'.\0A\00", align 1
@.str.20.589 = private unnamed_addr constant [54 x i8] c"Target `%s' is double-colon and has no dependencies.\0A\00", align 1
@.str.21.590 = private unnamed_addr constant [60 x i8] c"No commands for `%s' and no dependencies actually changed.\0A\00", align 1
@.str.22.591 = private unnamed_addr constant [32 x i8] c"No need to remake target `%s'.\0A\00", align 1
@.str.23.592 = private unnamed_addr constant [26 x i8] c"Must remake target `%s'.\0A\00", align 1
@.str.24.593 = private unnamed_addr constant [33 x i8] c"Commands of `%s' are being run.\0A\00", align 1
@.str.25.594 = private unnamed_addr constant [36 x i8] c"Failed to remake target file `%s'.\0A\00", align 1
@.str.26.595 = private unnamed_addr constant [39 x i8] c"Successfully remade target file `%s'.\0A\00", align 1
@.str.27.596 = private unnamed_addr constant [57 x i8] c"internal error: `%s' update_status is -1 at cs_finished!\00", align 1
@.str.28.597 = private unnamed_addr constant [44 x i8] c"internal error: `%s' update_status invalid!\00", align 1
@.str.29.598 = private unnamed_addr constant [9 x i8] c"%s `%s'.\00", align 1
@remake_file.noway = internal global [26 x i8] c"*** No way to make target\00", align 16
@.str.30.599 = private unnamed_addr constant [8 x i8] c"%s `%s'\00", align 1
@.str.31.602 = private unnamed_addr constant [10 x i8] c"touch %s\0A\00", align 1
@.str.32.603 = private unnamed_addr constant [14 x i8] c"touch: open: \00", align 1
@.str.33.604 = private unnamed_addr constant [15 x i8] c"touch: fstat: \00", align 1
@.str.34.605 = private unnamed_addr constant [14 x i8] c"touch: read: \00", align 1
@.str.35.606 = private unnamed_addr constant [15 x i8] c"touch: lseek: \00", align 1
@.str.36.607 = private unnamed_addr constant [15 x i8] c"touch: write: \00", align 1
@.str.37.608 = private unnamed_addr constant [13 x i8] c"/usr/lib/lib\00", align 1
@.str.38.609 = private unnamed_addr constant [3 x i8] c".a\00", align 1
@.str.39.610 = private unnamed_addr constant [19 x i8] c"/usr/local/lib/lib\00", align 1
@remote_description = dso_local global i8* null, align 8
@num_pattern_rules = common dso_local global i32 0, align 4
@pattern_rules = common dso_local global %struct.rule* null, align 8
@max_pattern_dep_length = common dso_local global i32 0, align 4
@max_pattern_deps = common dso_local global i32 0, align 4
@maxsuffix = common dso_local global i32 0, align 4
@suffix_file = common dso_local global %struct.file* null, align 8
@last_pattern_rule = common dso_local global %struct.rule* null, align 8
@.str.637 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.642 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str.2.643 = private unnamed_addr constant [6 x i8] c"(%.o)\00", align 1
@.str.3.648 = private unnamed_addr constant [18 x i8] c"\0A# Implicit Rules\00", align 1
@.str.4.649 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str.5.650 = private unnamed_addr constant [40 x i8] c"#  references nonexistent subdirectory.\00", align 1
@.str.6.651 = private unnamed_addr constant [22 x i8] c"\0A# No implicit rules.\00", align 1
@.str.7.652 = private unnamed_addr constant [25 x i8] c"\0A# %u implicit rules, %u\00", align 1
@.str.8.653 = private unnamed_addr constant [10 x i8] c" (%.1f%%)\00", align 1
@.str.9.654 = private unnamed_addr constant [11 x i8] c" terminal.\00", align 1
@.str.10.655 = private unnamed_addr constant [5 x i8] c"# %u\00", align 1
@.str.11.656 = private unnamed_addr constant [39 x i8] c" reference nonexistent subdirectories.\00", align 1
@current_variable_set_list = dso_local global %struct.variable_set_list* @global_setlist, align 8
@global_setlist = internal global %struct.variable_set_list { %struct.variable_set_list* null, %struct.variable_set* @global_variable_set }, align 8
@global_variable_set = internal global %struct.variable_set { %struct.variable** getelementptr inbounds ([523 x %struct.variable*], [523 x %struct.variable*]* @variable_table, i32 0, i32 0), i32 523 }, align 8
@variable_table = internal global [523 x %struct.variable*] zeroinitializer, align 16
@.str.675 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.1.676 = private unnamed_addr constant [10 x i8] c"MAKELEVEL\00", align 1
@.str.2.677 = private unnamed_addr constant [6 x i8] c"SHELL\00", align 1
@.str.3.678 = private unnamed_addr constant [8 x i8] c"/bin/sh\00", align 1
@variable_buffer = internal global i8* null, align 8
@variable_buffer_length = internal global i32 0, align 4
@.str.4.685 = private unnamed_addr constant [10 x i8] c".NOEXPORT\00", align 1
@.str.5.686 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.6.687 = private unnamed_addr constant [13 x i8] c"MAKELEVEL=%u\00", align 1
@.str.7.692 = private unnamed_addr constant [14 x i8] c"\0A# Variables\0A\00", align 1
@.str.8.693 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.10.694 = private unnamed_addr constant [16 x i8] c"# No variables.\00", align 1
@.str.11.695 = private unnamed_addr constant [36 x i8] c"# %u variables in %u hash buckets.\0A\00", align 1
@.str.12.696 = private unnamed_addr constant [63 x i8] c"# average of %.1f variables per bucket, max %u in one bucket.\0A\00", align 1
@.str.13.697 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.14.698 = private unnamed_addr constant [12 x i8] c"environment\00", align 1
@.str.15.699 = private unnamed_addr constant [9 x i8] c"makefile\00", align 1
@.str.16.700 = private unnamed_addr constant [21 x i8] c"environment under -e\00", align 1
@.str.17.701 = private unnamed_addr constant [13 x i8] c"command line\00", align 1
@.str.18.702 = private unnamed_addr constant [21 x i8] c"`override' directive\00", align 1
@.str.19.703 = private unnamed_addr constant [10 x i8] c"automatic\00", align 1
@.str.20.704 = private unnamed_addr constant [6 x i8] c"# %s\0A\00", align 1
@.str.21.705 = private unnamed_addr constant [20 x i8] c"define %s\0A%s\0Aendef\0A\00", align 1
@.str.23.706 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.22.707 = private unnamed_addr constant [8 x i8] c"%s %s= \00", align 1
@.str.24.708 = private unnamed_addr constant [14 x i8] c"$(subst ,,%s)\00", align 1
@.str.9.711 = private unnamed_addr constant [3 x i8] c"# \00", align 1
@version_string = dso_local global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.718, i32 0, i32 0), align 8
@.str.718 = private unnamed_addr constant [5 x i8] c"3.62\00", align 1
@vpaths = internal global %struct.vpath* null, align 8
@.str.721 = private unnamed_addr constant [9 x i8] c"$(VPATH)\00", align 1
@.str.1.722 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@general_vpath = internal global %struct.vpath* null, align 8
@.str.2.725 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3.730 = private unnamed_addr constant [23 x i8] c"\0A# VPATH Search Paths\0A\00", align 1
@.str.4.731 = private unnamed_addr constant [10 x i8] c"vpath %s \00", align 1
@.str.5.732 = private unnamed_addr constant [5 x i8] c"%s%c\00", align 1
@.str.6.733 = private unnamed_addr constant [27 x i8] c"# No `vpath' search paths.\00", align 1
@.str.7.734 = private unnamed_addr constant [29 x i8] c"\0A# %u `vpath' search paths.\0A\00", align 1
@.str.8.735 = private unnamed_addr constant [46 x i8] c"\0A# No general (`VPATH' variable) search path.\00", align 1
@.str.9.736 = private unnamed_addr constant [46 x i8] c"\0A# General (`VPATH' variable) search path:\0A# \00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ar_name(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = call i8* @strchr(i8* %6, i32 40) #9
  store i8* %7, i8** %4, align 8
  %8 = load i8*, i8** %3, align 8
  %9 = load i8*, i8** %3, align 8
  %10 = call i64 @strlen(i8* %9) #9
  %11 = getelementptr inbounds i8, i8* %8, i64 %10
  %12 = getelementptr inbounds i8, i8* %11, i64 -1
  store i8* %12, i8** %5, align 8
  %13 = load i8*, i8** %4, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %24, label %15

15:                                               ; preds = %1
  %16 = load i8*, i8** %4, align 8
  %17 = load i8*, i8** %3, align 8
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = load i8*, i8** %5, align 8
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = icmp ne i32 %22, 41
  br i1 %23, label %24, label %25

24:                                               ; preds = %19, %15, %1
  store i32 0, i32* %2, align 4
  br label %40

25:                                               ; preds = %19
  %26 = load i8*, i8** %4, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  %30 = icmp eq i32 %29, 40
  br i1 %30, label %31, label %39

31:                                               ; preds = %25
  %32 = load i8*, i8** %5, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 -1
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp eq i32 %35, 41
  br i1 %36, label %37, label %39

37:                                               ; preds = %31
  %38 = load i8*, i8** %3, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i8* %38)
  br label %39

39:                                               ; preds = %37, %31, %25
  store i32 1, i32* %2, align 4
  br label %40

40:                                               ; preds = %39, %24
  %41 = load i32, i32* %2, align 4
  ret i32 %41
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #1

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @ar_parse_name(i8* %0, i8** %1, i8** %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8** %1, i8*** %5, align 8
  store i8** %2, i8*** %6, align 8
  %9 = load i8*, i8** %4, align 8
  %10 = call i8* @strchr(i8* %9, i32 40) #9
  store i8* %10, i8** %7, align 8
  %11 = load i8*, i8** %4, align 8
  %12 = load i8*, i8** %4, align 8
  %13 = call i64 @strlen(i8* %12) #9
  %14 = getelementptr inbounds i8, i8* %11, i64 %13
  %15 = getelementptr inbounds i8, i8* %14, i64 -1
  store i8* %15, i8** %8, align 8
  %16 = load i8**, i8*** %5, align 8
  %17 = icmp ne i8** %16, null
  br i1 %17, label %18, label %27

18:                                               ; preds = %3
  %19 = load i8*, i8** %4, align 8
  %20 = load i8*, i8** %7, align 8
  %21 = load i8*, i8** %4, align 8
  %22 = ptrtoint i8* %20 to i64
  %23 = ptrtoint i8* %21 to i64
  %24 = sub i64 %22, %23
  %25 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %19, i64 %24)
  %26 = load i8**, i8*** %5, align 8
  store i8* %25, i8** %26, align 8
  br label %27

27:                                               ; preds = %18, %3
  %28 = load i8**, i8*** %6, align 8
  %29 = icmp ne i8** %28, null
  br i1 %29, label %30, label %41

30:                                               ; preds = %27
  %31 = load i8*, i8** %7, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 1
  %33 = load i8*, i8** %8, align 8
  %34 = load i8*, i8** %7, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 1
  %36 = ptrtoint i8* %33 to i64
  %37 = ptrtoint i8* %35 to i64
  %38 = sub i64 %36, %37
  %39 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %32, i64 %38)
  %40 = load i8**, i8*** %6, align 8
  store i8* %39, i8** %40, align 8
  br label %41

41:                                               ; preds = %30, %27
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @ar_member_date(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.file*, align 8
  store i8* %0, i8** %2, align 8
  store i32 0, i32* %4, align 4
  %8 = load i8*, i8** %2, align 8
  call void @ar_parse_name(i8* %8, i8** %3, i8** %5)
  %9 = load i8*, i8** %3, align 8
  %10 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @lookup_file to %struct.file* (i8*, ...)*)(i8* %9)
  store %struct.file* %10, %struct.file** %7, align 8
  %11 = load %struct.file*, %struct.file** %7, align 8
  %12 = icmp eq %struct.file* %11, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = load i8*, i8** %3, align 8
  %15 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* %14)
  store %struct.file* %15, %struct.file** %7, align 8
  store i32 1, i32* %4, align 4
  br label %16

16:                                               ; preds = %13, %1
  %17 = load %struct.file*, %struct.file** %7, align 8
  %18 = call i64 (%struct.file*, i32, ...) bitcast (i64 (%struct.file*, i32)* @f_mtime to i64 (%struct.file*, i32, ...)*)(%struct.file* %17, i32 0)
  %19 = load i8*, i8** %3, align 8
  %20 = load i8*, i8** %5, align 8
  %21 = ptrtoint i8* %20 to i64
  %22 = call i64 (i8*, i64 (...)*, i64, ...) bitcast (i64 (i8*, i64 (...)*, i64)* @ar_scan to i64 (i8*, i64 (...)*, i64, ...)*)(i8* %19, i64 (...)* bitcast (i64 (i32, i8*, i64, i64, i64, i64, i32, i32, i32, i8*)* @ar_member_date_1 to i64 (...)*), i64 %21)
  store i64 %22, i64* %6, align 8
  %23 = load i32, i32* %4, align 4
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %16
  %26 = load i8*, i8** %3, align 8
  call void @free(i8* %26) #10
  br label %27

27:                                               ; preds = %25, %16
  %28 = load i8*, i8** %5, align 8
  call void @free(i8* %28) #10
  %29 = load i64, i64* %6, align 8
  %30 = icmp sle i64 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  br label %34

32:                                               ; preds = %27
  %33 = load i64, i64* %6, align 8
  br label %34

34:                                               ; preds = %32, %31
  %35 = phi i64 [ -1, %31 ], [ %33, %32 ]
  ret i64 %35
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @ar_member_date_1(i32 %0, i8* %1, i64 %2, i64 %3, i64 %4, i64 %5, i32 %6, i32 %7, i32 %8, i8* %9) #0 {
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  store i32 %0, i32* %11, align 4
  store i8* %1, i8** %12, align 8
  store i64 %2, i64* %13, align 8
  store i64 %3, i64* %14, align 8
  store i64 %4, i64* %15, align 8
  store i64 %5, i64* %16, align 8
  store i32 %6, i32* %17, align 4
  store i32 %7, i32* %18, align 4
  store i32 %8, i32* %19, align 4
  store i8* %9, i8** %20, align 8
  %21 = load i8*, i8** %20, align 8
  %22 = load i8*, i8** %12, align 8
  %23 = call i32 (i8*, i8*, ...) bitcast (i32 (i8*, i8*)* @ar_name_equal to i32 (i8*, i8*, ...)*)(i8* %21, i8* %22)
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %10
  %26 = load i64, i64* %16, align 8
  br label %28

27:                                               ; preds = %10
  br label %28

28:                                               ; preds = %27, %25
  %29 = phi i64 [ %26, %25 ], [ 0, %27 ]
  ret i64 %29
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ar_touch(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.file*, align 8
  store i8* %0, i8** %2, align 8
  store i32 0, i32* %5, align 4
  %8 = load i8*, i8** %2, align 8
  call void @ar_parse_name(i8* %8, i8** %3, i8** %4)
  %9 = load i8*, i8** %3, align 8
  %10 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @lookup_file to %struct.file* (i8*, ...)*)(i8* %9)
  store %struct.file* %10, %struct.file** %7, align 8
  %11 = load %struct.file*, %struct.file** %7, align 8
  %12 = icmp eq %struct.file* %11, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = load i8*, i8** %3, align 8
  %15 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* %14)
  store %struct.file* %15, %struct.file** %7, align 8
  store i32 1, i32* %5, align 4
  br label %16

16:                                               ; preds = %13, %1
  %17 = load %struct.file*, %struct.file** %7, align 8
  %18 = call i64 (%struct.file*, i32, ...) bitcast (i64 (%struct.file*, i32)* @f_mtime to i64 (%struct.file*, i32, ...)*)(%struct.file* %17, i32 0)
  store i32 1, i32* %6, align 4
  %19 = load i8*, i8** %3, align 8
  %20 = load i8*, i8** %4, align 8
  %21 = call i32 (i8*, i8*, ...) bitcast (i32 (i8*, i8*)* @ar_member_touch to i32 (i8*, i8*, ...)*)(i8* %19, i8* %20)
  switch i32 %21, label %32 [
    i32 -1, label %22
    i32 -2, label %24
    i32 -3, label %26
    i32 1, label %28
    i32 0, label %31
  ]

22:                                               ; preds = %16
  %23 = load i8*, i8** %3, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* %23)
  br label %34

24:                                               ; preds = %16
  %25 = load i8*, i8** %3, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0), i8* %25)
  br label %34

26:                                               ; preds = %16
  %27 = load i8*, i8** %3, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*)* @perror_with_name to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8* %27)
  br label %34

28:                                               ; preds = %16
  %29 = load i8*, i8** %4, align 8
  %30 = load i8*, i8** %3, align 8
  call void (i8*, i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, i8*, ...)*)(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i64 0, i64 0), i8* %29, i8* %30)
  br label %34

31:                                               ; preds = %16
  store i32 0, i32* %6, align 4
  br label %34

32:                                               ; preds = %16
  %33 = load i8*, i8** %2, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i64 0, i64 0), i8* %33)
  br label %34

34:                                               ; preds = %32, %31, %28, %26, %24, %22
  %35 = load i32, i32* %5, align 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %34
  %38 = load i8*, i8** %3, align 8
  call void @free(i8* %38) #10
  br label %39

39:                                               ; preds = %37, %34
  %40 = load i8*, i8** %4, align 8
  call void @free(i8* %40) #10
  %41 = load i32, i32* %6, align 4
  ret i32 %41
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @ar_scan(i8* %0, i64 (...)* %1, i64 %2) #0 {
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64 (...)*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca [8 x i8], align 1
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.ar_hdr, align 1
  %14 = alloca [17 x i8], align 16
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  %17 = alloca i64, align 8
  %18 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  store i64 (...)* %1, i64 (...)** %6, align 8
  store i64 %2, i64* %7, align 8
  %19 = load i8*, i8** %5, align 8
  %20 = call i32 (i8*, i32, ...) @open(i8* %19, i32 0, i32 0)
  store i32 %20, i32* %8, align 4
  %21 = load i32, i32* %8, align 4
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %3
  store i64 -1, i64* %4, align 8
  br label %135

24:                                               ; preds = %3
  %25 = load i32, i32* %8, align 4
  %26 = getelementptr inbounds [8 x i8], [8 x i8]* %9, i64 0, i64 0
  %27 = call i64 @read(i32 %25, i8* %26, i64 8)
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %10, align 4
  %29 = load i32, i32* %10, align 4
  %30 = icmp ne i32 %29, 8
  br i1 %30, label %35, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds [8 x i8], [8 x i8]* %9, i64 0, i64 0
  %33 = call i32 @memcmp(i8* %32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i64 8) #9
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %31, %24
  %36 = load i32, i32* %8, align 4
  %37 = call i32 @close(i32 %36)
  store i64 -2, i64* %4, align 8
  br label %135

38:                                               ; preds = %31
  store i64 8, i64* %11, align 8
  br label %39

39:                                               ; preds = %131, %38
  %40 = load i32, i32* %8, align 4
  %41 = load i64, i64* %11, align 8
  %42 = call i64 @lseek(i32 %40, i64 %41, i32 0) #10
  %43 = icmp slt i64 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = load i32, i32* %8, align 4
  %46 = call i32 @close(i32 %45)
  store i64 -2, i64* %4, align 8
  br label %135

47:                                               ; preds = %39
  %48 = load i32, i32* %8, align 4
  %49 = bitcast %struct.ar_hdr* %13 to i8*
  %50 = call i64 @read(i32 %48, i8* %49, i64 60)
  %51 = trunc i64 %50 to i32
  store i32 %51, i32* %12, align 4
  %52 = load i32, i32* %12, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %47
  br label %132

55:                                               ; preds = %47
  %56 = load i32, i32* %12, align 4
  %57 = sext i32 %56 to i64
  %58 = icmp ne i64 %57, 60
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.ar_hdr, %struct.ar_hdr* %13, i32 0, i32 6
  %61 = getelementptr inbounds [2 x i8], [2 x i8]* %60, i64 0, i64 0
  %62 = call i32 @memcmp(i8* %61, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.7, i64 0, i64 0), i64 2) #9
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %59, %55
  %65 = load i32, i32* %8, align 4
  %66 = call i32 @close(i32 %65)
  store i64 -2, i64* %4, align 8
  br label %135

67:                                               ; preds = %59
  %68 = getelementptr inbounds [17 x i8], [17 x i8]* %14, i64 0, i64 0
  %69 = getelementptr inbounds %struct.ar_hdr, %struct.ar_hdr* %13, i32 0, i32 0
  %70 = getelementptr inbounds [16 x i8], [16 x i8]* %69, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %68, i8* align 1 %70, i64 16, i1 false)
  %71 = getelementptr inbounds [17 x i8], [17 x i8]* %14, i64 0, i64 0
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  store i8* %72, i8** %18, align 8
  br label %73

73:                                               ; preds = %85, %67
  %74 = load i8*, i8** %18, align 8
  %75 = getelementptr inbounds [17 x i8], [17 x i8]* %14, i64 0, i64 0
  %76 = icmp ugt i8* %74, %75
  br i1 %76, label %77, label %83

77:                                               ; preds = %73
  %78 = load i8*, i8** %18, align 8
  %79 = getelementptr inbounds i8, i8* %78, i32 -1
  store i8* %79, i8** %18, align 8
  %80 = load i8, i8* %79, align 1
  %81 = sext i8 %80 to i32
  %82 = icmp eq i32 %81, 32
  br label %83

83:                                               ; preds = %77, %73
  %84 = phi i1 [ false, %73 ], [ %82, %77 ]
  br i1 %84, label %85, label %87

85:                                               ; preds = %83
  %86 = load i8*, i8** %18, align 8
  store i8 0, i8* %86, align 1
  br label %73

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.ar_hdr, %struct.ar_hdr* %13, i32 0, i32 4
  %89 = getelementptr inbounds [8 x i8], [8 x i8]* %88, i64 0, i64 0
  %90 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %89, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.8, i64 0, i64 0), i32* %16) #10
  %91 = getelementptr inbounds %struct.ar_hdr, %struct.ar_hdr* %13, i32 0, i32 5
  %92 = getelementptr inbounds [10 x i8], [10 x i8]* %91, i64 0, i64 0
  %93 = call i64 @atol(i8* %92) #9
  store i64 %93, i64* %15, align 8
  %94 = load i64 (...)*, i64 (...)** %6, align 8
  %95 = load i32, i32* %8, align 4
  %96 = getelementptr inbounds [17 x i8], [17 x i8]* %14, i64 0, i64 0
  %97 = load i64, i64* %11, align 8
  %98 = load i64, i64* %11, align 8
  %99 = add i64 %98, 60
  %100 = load i64, i64* %15, align 8
  %101 = getelementptr inbounds %struct.ar_hdr, %struct.ar_hdr* %13, i32 0, i32 1
  %102 = getelementptr inbounds [12 x i8], [12 x i8]* %101, i64 0, i64 0
  %103 = call i64 @atol(i8* %102) #9
  %104 = getelementptr inbounds %struct.ar_hdr, %struct.ar_hdr* %13, i32 0, i32 2
  %105 = getelementptr inbounds [6 x i8], [6 x i8]* %104, i64 0, i64 0
  %106 = call i32 @atoi(i8* %105) #9
  %107 = getelementptr inbounds %struct.ar_hdr, %struct.ar_hdr* %13, i32 0, i32 3
  %108 = getelementptr inbounds [6 x i8], [6 x i8]* %107, i64 0, i64 0
  %109 = call i32 @atoi(i8* %108) #9
  %110 = load i32, i32* %16, align 4
  %111 = load i64, i64* %7, align 8
  %112 = bitcast i64 (...)* %94 to i64 (i32, i8*, i64, i64, i64, i64, i32, i32, i32, i64, ...)*
  %113 = call i64 (i32, i8*, i64, i64, i64, i64, i32, i32, i32, i64, ...) %112(i32 %95, i8* %96, i64 %97, i64 %99, i64 %100, i64 %103, i32 %106, i32 %109, i32 %110, i64 %111)
  store i64 %113, i64* %17, align 8
  %114 = load i64, i64* %17, align 8
  %115 = icmp ne i64 %114, 0
  br i1 %115, label %116, label %120

116:                                              ; preds = %87
  %117 = load i32, i32* %8, align 4
  %118 = call i32 @close(i32 %117)
  %119 = load i64, i64* %17, align 8
  store i64 %119, i64* %4, align 8
  br label %135

120:                                              ; preds = %87
  %121 = load i64, i64* %15, align 8
  %122 = add i64 60, %121
  %123 = load i64, i64* %11, align 8
  %124 = add i64 %123, %122
  store i64 %124, i64* %11, align 8
  %125 = load i64, i64* %11, align 8
  %126 = and i64 %125, 1
  %127 = icmp ne i64 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %120
  %129 = load i64, i64* %11, align 8
  %130 = add nsw i64 %129, 1
  store i64 %130, i64* %11, align 8
  br label %131

131:                                              ; preds = %128, %120
  br label %39

132:                                              ; preds = %54
  %133 = load i32, i32* %8, align 4
  %134 = call i32 @close(i32 %133)
  store i64 0, i64* %4, align 8
  br label %135

135:                                              ; preds = %132, %116, %64, %44, %35, %23
  %136 = load i64, i64* %4, align 8
  ret i64 %136
}

declare dso_local i32 @open(i8*, i32, ...) #3

declare dso_local i64 @read(i32, i8*, i64) #3

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #1

declare dso_local i32 @close(i32) #3

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind
declare dso_local i32 @__isoc99_sscanf(i8*, i8*, ...) #2

; Function Attrs: nounwind readonly
declare dso_local i64 @atol(i8*) #1

; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ar_name_equal(i8* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %9 = load i8*, i8** %4, align 8
  %10 = call i8* @strrchr(i8* %9, i32 47) #9
  store i8* %10, i8** %6, align 8
  %11 = load i8*, i8** %6, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = load i8*, i8** %6, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 1
  store i8* %15, i8** %4, align 8
  br label %16

16:                                               ; preds = %13, %2
  %17 = load i8*, i8** %4, align 8
  %18 = load i8*, i8** %5, align 8
  %19 = call i32 @strncmp(i8* %17, i8* %18, i64 15) #9
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %16
  store i32 1, i32* %3, align 4
  br label %69

22:                                               ; preds = %16
  %23 = load i8*, i8** %4, align 8
  %24 = load i8*, i8** %5, align 8
  %25 = call i32 @strncmp(i8* %23, i8* %24, i64 13) #9
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %68, label %27

27:                                               ; preds = %22
  %28 = load i8*, i8** %4, align 8
  %29 = call i64 @strlen(i8* %28) #9
  %30 = trunc i64 %29 to i32
  store i32 %30, i32* %7, align 4
  %31 = load i8*, i8** %5, align 8
  %32 = call i64 @strlen(i8* %31) #9
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %8, align 4
  %34 = load i32, i32* %8, align 4
  %35 = icmp eq i32 %34, 15
  br i1 %35, label %36, label %67

36:                                               ; preds = %27
  %37 = load i8*, i8** %5, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 13
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %40, 46
  br i1 %41, label %42, label %67

42:                                               ; preds = %36
  %43 = load i8*, i8** %5, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 14
  %45 = load i8, i8* %44, align 1
  %46 = sext i8 %45 to i32
  %47 = icmp eq i32 %46, 111
  br i1 %47, label %48, label %67

48:                                               ; preds = %42
  %49 = load i8*, i8** %4, align 8
  %50 = load i32, i32* %7, align 4
  %51 = sub i32 %50, 2
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %49, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = sext i8 %54 to i32
  %56 = icmp eq i32 %55, 46
  br i1 %56, label %57, label %67

57:                                               ; preds = %48
  %58 = load i8*, i8** %4, align 8
  %59 = load i32, i32* %7, align 4
  %60 = sub i32 %59, 1
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i8, i8* %58, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = sext i8 %63 to i32
  %65 = icmp eq i32 %64, 111
  br i1 %65, label %66, label %67

66:                                               ; preds = %57
  store i32 1, i32* %3, align 4
  br label %69

67:                                               ; preds = %57, %48, %42, %36, %27
  br label %68

68:                                               ; preds = %67, %22
  store i32 0, i32* %3, align 4
  br label %69

69:                                               ; preds = %68, %66, %21
  %70 = load i32, i32* %3, align 4
  ret i32 %70
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #1

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ar_member_touch(i8* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.ar_hdr, align 1
  %9 = alloca i32, align 4
  %10 = alloca %struct.stat, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %11 = load i8*, i8** %4, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = ptrtoint i8* %12 to i64
  %14 = call i64 @ar_scan(i8* %11, i64 (...)* bitcast (i64 (i32, i8*, i64, i64, i64, i64, i32, i32, i32, i8*)* @ar_member_pos to i64 (...)*), i64 %13)
  store i64 %14, i64* %6, align 8
  %15 = load i64, i64* %6, align 8
  %16 = icmp slt i64 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = load i64, i64* %6, align 8
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %3, align 4
  br label %97

20:                                               ; preds = %2
  %21 = load i64, i64* %6, align 8
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  store i32 1, i32* %3, align 4
  br label %97

24:                                               ; preds = %20
  %25 = load i8*, i8** %4, align 8
  %26 = call i32 (i8*, i32, ...) @open(i8* %25, i32 2, i32 438)
  store i32 %26, i32* %7, align 4
  %27 = load i32, i32* %7, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  store i32 -3, i32* %3, align 4
  br label %97

30:                                               ; preds = %24
  %31 = load i32, i32* %7, align 4
  %32 = load i64, i64* %6, align 8
  %33 = call i64 @lseek(i32 %31, i64 %32, i32 0) #10
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  br label %90

36:                                               ; preds = %30
  %37 = load i32, i32* %7, align 4
  %38 = bitcast %struct.ar_hdr* %8 to i8*
  %39 = call i64 @read(i32 %37, i8* %38, i64 60)
  %40 = icmp ne i64 60, %39
  br i1 %40, label %41, label %42

41:                                               ; preds = %36
  br label %90

42:                                               ; preds = %36
  %43 = load i32, i32* %7, align 4
  %44 = load i64, i64* %6, align 8
  %45 = call i64 @lseek(i32 %43, i64 %44, i32 0) #10
  %46 = icmp slt i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %42
  br label %90

48:                                               ; preds = %42
  %49 = load i32, i32* %7, align 4
  %50 = bitcast %struct.ar_hdr* %8 to i8*
  %51 = call i64 @write(i32 %49, i8* %50, i64 60)
  %52 = icmp ne i64 60, %51
  br i1 %52, label %53, label %54

53:                                               ; preds = %48
  br label %90

54:                                               ; preds = %48
  %55 = load i32, i32* %7, align 4
  %56 = call i32 @fstat(i32 %55, %struct.stat* %10) #10
  store i32 0, i32* %9, align 4
  br label %57

57:                                               ; preds = %66, %54
  %58 = load i32, i32* %9, align 4
  %59 = sext i32 %58 to i64
  %60 = icmp ult i64 %59, 12
  br i1 %60, label %61, label %69

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.ar_hdr, %struct.ar_hdr* %8, i32 0, i32 1
  %63 = load i32, i32* %9, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [12 x i8], [12 x i8]* %62, i64 0, i64 %64
  store i8 32, i8* %65, align 1
  br label %66

66:                                               ; preds = %61
  %67 = load i32, i32* %9, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %9, align 4
  br label %57

69:                                               ; preds = %57
  %70 = getelementptr inbounds %struct.ar_hdr, %struct.ar_hdr* %8, i32 0, i32 1
  %71 = getelementptr inbounds [12 x i8], [12 x i8]* %70, i64 0, i64 0
  %72 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 12
  %73 = getelementptr inbounds %struct.timespec, %struct.timespec* %72, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = call i32 (i8*, i8*, ...) @sprintf(i8* %71, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.13, i64 0, i64 0), i64 %74) #10
  %76 = load i32, i32* %7, align 4
  %77 = load i64, i64* %6, align 8
  %78 = call i64 @lseek(i32 %76, i64 %77, i32 0) #10
  %79 = icmp slt i64 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %69
  br label %90

81:                                               ; preds = %69
  %82 = load i32, i32* %7, align 4
  %83 = bitcast %struct.ar_hdr* %8 to i8*
  %84 = call i64 @write(i32 %82, i8* %83, i64 60)
  %85 = icmp ne i64 60, %84
  br i1 %85, label %86, label %87

86:                                               ; preds = %81
  br label %90

87:                                               ; preds = %81
  %88 = load i32, i32* %7, align 4
  %89 = call i32 @close(i32 %88)
  store i32 0, i32* %3, align 4
  br label %97

90:                                               ; preds = %86, %80, %53, %47, %41, %35
  %91 = call i32* @__errno_location() #11
  %92 = load i32, i32* %91, align 4
  store i32 %92, i32* %9, align 4
  %93 = load i32, i32* %7, align 4
  %94 = call i32 @close(i32 %93)
  %95 = load i32, i32* %9, align 4
  %96 = call i32* @__errno_location() #11
  store i32 %95, i32* %96, align 4
  store i32 -3, i32* %3, align 4
  br label %97

97:                                               ; preds = %90, %87, %29, %23, %17
  %98 = load i32, i32* %3, align 4
  ret i32 %98
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @ar_member_pos(i32 %0, i8* %1, i64 %2, i64 %3, i64 %4, i64 %5, i32 %6, i32 %7, i32 %8, i8* %9) #0 {
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  store i32 %0, i32* %12, align 4
  store i8* %1, i8** %13, align 8
  store i64 %2, i64* %14, align 8
  store i64 %3, i64* %15, align 8
  store i64 %4, i64* %16, align 8
  store i64 %5, i64* %17, align 8
  store i32 %6, i32* %18, align 4
  store i32 %7, i32* %19, align 4
  store i32 %8, i32* %20, align 4
  store i8* %9, i8** %21, align 8
  %22 = load i8*, i8** %21, align 8
  %23 = load i8*, i8** %13, align 8
  %24 = call i32 @ar_name_equal(i8* %22, i8* %23)
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %10
  store i64 0, i64* %11, align 8
  br label %29

27:                                               ; preds = %10
  %28 = load i64, i64* %14, align 8
  store i64 %28, i64* %11, align 8
  br label %29

29:                                               ; preds = %27, %26
  %30 = load i64, i64* %11, align 8
  ret i64 %30
}

declare dso_local i64 @write(i32, i8*, i64) #3

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #5

; Function Attrs: noinline nounwind uwtable
define dso_local void @chop_commands(%struct.commands* %0) #0 {
  %2 = alloca %struct.commands*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.commands* %0, %struct.commands** %2, align 8
  %12 = load %struct.commands*, %struct.commands** %2, align 8
  %13 = icmp ne %struct.commands* %12, null
  br i1 %13, label %14, label %188

14:                                               ; preds = %1
  %15 = load %struct.commands*, %struct.commands** %2, align 8
  %16 = getelementptr inbounds %struct.commands, %struct.commands* %15, i32 0, i32 4
  %17 = load i8**, i8*** %16, align 8
  %18 = icmp eq i8** %17, null
  br i1 %18, label %19, label %188

19:                                               ; preds = %14
  store i32 5, i32* %4, align 4
  %20 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 40)
  %21 = bitcast i8* %20 to i8**
  store i8** %21, i8*** %6, align 8
  store i32 0, i32* %5, align 4
  %22 = load %struct.commands*, %struct.commands** %2, align 8
  %23 = getelementptr inbounds %struct.commands, %struct.commands* %22, i32 0, i32 2
  %24 = load i8*, i8** %23, align 8
  store i8* %24, i8** %3, align 8
  br label %25

25:                                               ; preds = %117, %19
  %26 = load i8*, i8** %3, align 8
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %118

30:                                               ; preds = %25
  %31 = load i8*, i8** %3, align 8
  store i8* %31, i8** %7, align 8
  br label %32

32:                                               ; preds = %77, %30
  %33 = load i8*, i8** %7, align 8
  %34 = call i8* @strchr(i8* %33, i32 10) #9
  store i8* %34, i8** %7, align 8
  %35 = load i8*, i8** %7, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %42

37:                                               ; preds = %32
  %38 = load i8*, i8** %3, align 8
  %39 = load i8*, i8** %3, align 8
  %40 = call i64 @strlen(i8* %39) #9
  %41 = getelementptr inbounds i8, i8* %38, i64 %40
  store i8* %41, i8** %7, align 8
  br label %82

42:                                               ; preds = %32
  %43 = load i8*, i8** %7, align 8
  %44 = load i8*, i8** %3, align 8
  %45 = icmp ugt i8* %43, %44
  br i1 %45, label %46, label %81

46:                                               ; preds = %42
  %47 = load i8*, i8** %7, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 -1
  %49 = load i8, i8* %48, align 1
  %50 = sext i8 %49 to i32
  %51 = icmp eq i32 %50, 92
  br i1 %51, label %52, label %81

52:                                               ; preds = %46
  store i32 1, i32* %8, align 4
  %53 = load i8*, i8** %7, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 -2
  store i8* %54, i8** %9, align 8
  br label %55

55:                                               ; preds = %71, %52
  %56 = load i8*, i8** %9, align 8
  %57 = load i8*, i8** %3, align 8
  %58 = icmp uge i8* %56, %57
  br i1 %58, label %59, label %64

59:                                               ; preds = %55
  %60 = load i8*, i8** %9, align 8
  %61 = load i8, i8* %60, align 1
  %62 = sext i8 %61 to i32
  %63 = icmp eq i32 %62, 92
  br label %64

64:                                               ; preds = %59, %55
  %65 = phi i1 [ false, %55 ], [ %63, %59 ]
  br i1 %65, label %66, label %74

66:                                               ; preds = %64
  %67 = load i32, i32* %8, align 4
  %68 = icmp ne i32 %67, 0
  %69 = xor i1 %68, true
  %70 = zext i1 %69 to i32
  store i32 %70, i32* %8, align 4
  br label %71

71:                                               ; preds = %66
  %72 = load i8*, i8** %9, align 8
  %73 = getelementptr inbounds i8, i8* %72, i32 -1
  store i8* %73, i8** %9, align 8
  br label %55

74:                                               ; preds = %64
  %75 = load i32, i32* %8, align 4
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %74
  %78 = load i8*, i8** %7, align 8
  %79 = getelementptr inbounds i8, i8* %78, i32 1
  store i8* %79, i8** %7, align 8
  br label %32

80:                                               ; preds = %74
  br label %81

81:                                               ; preds = %80, %46, %42
  br label %82

82:                                               ; preds = %81, %37
  %83 = load i32, i32* %5, align 4
  %84 = load i32, i32* %4, align 4
  %85 = icmp eq i32 %83, %84
  br i1 %85, label %86, label %96

86:                                               ; preds = %82
  %87 = load i32, i32* %4, align 4
  %88 = add i32 %87, 2
  store i32 %88, i32* %4, align 4
  %89 = load i8**, i8*** %6, align 8
  %90 = bitcast i8** %89 to i8*
  %91 = load i32, i32* %4, align 4
  %92 = zext i32 %91 to i64
  %93 = mul i64 %92, 8
  %94 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i64, ...)*)(i8* %90, i64 %93)
  %95 = bitcast i8* %94 to i8**
  store i8** %95, i8*** %6, align 8
  br label %96

96:                                               ; preds = %86, %82
  %97 = load i8*, i8** %3, align 8
  %98 = load i8*, i8** %7, align 8
  %99 = load i8*, i8** %3, align 8
  %100 = ptrtoint i8* %98 to i64
  %101 = ptrtoint i8* %99 to i64
  %102 = sub i64 %100, %101
  %103 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %97, i64 %102)
  %104 = load i8**, i8*** %6, align 8
  %105 = load i32, i32* %5, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %5, align 4
  %107 = zext i32 %105 to i64
  %108 = getelementptr inbounds i8*, i8** %104, i64 %107
  store i8* %103, i8** %108, align 8
  %109 = load i8*, i8** %7, align 8
  store i8* %109, i8** %3, align 8
  %110 = load i8*, i8** %3, align 8
  %111 = load i8, i8* %110, align 1
  %112 = sext i8 %111 to i32
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %96
  %115 = load i8*, i8** %3, align 8
  %116 = getelementptr inbounds i8, i8* %115, i32 1
  store i8* %116, i8** %3, align 8
  br label %117

117:                                              ; preds = %114, %96
  br label %25

118:                                              ; preds = %25
  %119 = load i32, i32* %5, align 4
  %120 = load i32, i32* %4, align 4
  %121 = icmp ne i32 %119, %120
  br i1 %121, label %122, label %131

122:                                              ; preds = %118
  %123 = load i32, i32* %5, align 4
  store i32 %123, i32* %4, align 4
  %124 = load i8**, i8*** %6, align 8
  %125 = bitcast i8** %124 to i8*
  %126 = load i32, i32* %4, align 4
  %127 = zext i32 %126 to i64
  %128 = mul i64 %127, 8
  %129 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i64, ...)*)(i8* %125, i64 %128)
  %130 = bitcast i8* %129 to i8**
  store i8** %130, i8*** %6, align 8
  br label %131

131:                                              ; preds = %122, %118
  %132 = load i32, i32* %4, align 4
  %133 = load %struct.commands*, %struct.commands** %2, align 8
  %134 = getelementptr inbounds %struct.commands, %struct.commands* %133, i32 0, i32 3
  store i32 %132, i32* %134, align 8
  %135 = load i8**, i8*** %6, align 8
  %136 = load %struct.commands*, %struct.commands** %2, align 8
  %137 = getelementptr inbounds %struct.commands, %struct.commands* %136, i32 0, i32 4
  store i8** %135, i8*** %137, align 8
  %138 = load %struct.commands*, %struct.commands** %2, align 8
  %139 = getelementptr inbounds %struct.commands, %struct.commands* %138, i32 0, i32 6
  store i8 0, i8* %139, align 8
  %140 = load i32, i32* %4, align 4
  %141 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %140)
  %142 = load %struct.commands*, %struct.commands** %2, align 8
  %143 = getelementptr inbounds %struct.commands, %struct.commands* %142, i32 0, i32 5
  store i8* %141, i8** %143, align 8
  store i32 0, i32* %5, align 4
  br label %144

144:                                              ; preds = %184, %131
  %145 = load i32, i32* %5, align 4
  %146 = load i32, i32* %4, align 4
  %147 = icmp ult i32 %145, %146
  br i1 %147, label %148, label %187

148:                                              ; preds = %144
  %149 = load i8**, i8*** %6, align 8
  %150 = load i32, i32* %5, align 4
  %151 = zext i32 %150 to i64
  %152 = getelementptr inbounds i8*, i8** %149, i64 %151
  %153 = load i8*, i8** %152, align 8
  store i8* %153, i8** %3, align 8
  %154 = load i8*, i8** %3, align 8
  %155 = call i64 @strlen(i8* %154) #9
  %156 = trunc i64 %155 to i32
  store i32 %156, i32* %10, align 4
  %157 = load i8*, i8** %3, align 8
  %158 = load i32, i32* %10, align 4
  %159 = call i8* (i8*, i32, i8*, i32, ...) bitcast (i8* (i8*, i32, i8*, i32)* @sindex to i8* (i8*, i32, i8*, i32, ...)*)(i8* %157, i32 %158, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i32 7)
  %160 = icmp ne i8* %159, null
  br i1 %160, label %166, label %161

161:                                              ; preds = %148
  %162 = load i8*, i8** %3, align 8
  %163 = load i32, i32* %10, align 4
  %164 = call i8* (i8*, i32, i8*, i32, ...) bitcast (i8* (i8*, i32, i8*, i32)* @sindex to i8* (i8*, i32, i8*, i32, ...)*)(i8* %162, i32 %163, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.15, i64 0, i64 0), i32 7)
  %165 = icmp ne i8* %164, null
  br label %166

166:                                              ; preds = %161, %148
  %167 = phi i1 [ true, %148 ], [ %165, %161 ]
  %168 = zext i1 %167 to i32
  store i32 %168, i32* %11, align 4
  %169 = load i32, i32* %11, align 4
  %170 = trunc i32 %169 to i8
  %171 = load %struct.commands*, %struct.commands** %2, align 8
  %172 = getelementptr inbounds %struct.commands, %struct.commands* %171, i32 0, i32 5
  %173 = load i8*, i8** %172, align 8
  %174 = load i32, i32* %5, align 4
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds i8, i8* %173, i64 %175
  store i8 %170, i8* %176, align 1
  %177 = load i32, i32* %11, align 4
  %178 = load %struct.commands*, %struct.commands** %2, align 8
  %179 = getelementptr inbounds %struct.commands, %struct.commands* %178, i32 0, i32 6
  %180 = load i8, i8* %179, align 8
  %181 = sext i8 %180 to i32
  %182 = or i32 %181, %177
  %183 = trunc i32 %182 to i8
  store i8 %183, i8* %179, align 8
  br label %184

184:                                              ; preds = %166
  %185 = load i32, i32* %5, align 4
  %186 = add i32 %185, 1
  store i32 %186, i32* %5, align 4
  br label %144

187:                                              ; preds = %144
  br label %188

188:                                              ; preds = %187, %14, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @execute_file_commands(%struct.file* %0) #0 {
  %2 = alloca %struct.file*, align 8
  %3 = alloca i8*, align 8
  store %struct.file* %0, %struct.file** %2, align 8
  %4 = load %struct.file*, %struct.file** %2, align 8
  %5 = getelementptr inbounds %struct.file, %struct.file* %4, i32 0, i32 3
  %6 = load %struct.commands*, %struct.commands** %5, align 8
  %7 = getelementptr inbounds %struct.commands, %struct.commands* %6, i32 0, i32 2
  %8 = load i8*, i8** %7, align 8
  store i8* %8, i8** %3, align 8
  br label %9

9:                                                ; preds = %38, %1
  %10 = load i8*, i8** %3, align 8
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i32
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %41

14:                                               ; preds = %9
  %15 = call i16** @__ctype_b_loc() #11
  %16 = load i16*, i16** %15, align 8
  %17 = load i8*, i8** %3, align 8
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i16, i16* %16, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  %24 = and i32 %23, 8192
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %37, label %26

26:                                               ; preds = %14
  %27 = load i8*, i8** %3, align 8
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  %30 = icmp ne i32 %29, 45
  br i1 %30, label %31, label %37

31:                                               ; preds = %26
  %32 = load i8*, i8** %3, align 8
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = icmp ne i32 %34, 64
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  br label %41

37:                                               ; preds = %31, %26, %14
  br label %38

38:                                               ; preds = %37
  %39 = load i8*, i8** %3, align 8
  %40 = getelementptr inbounds i8, i8* %39, i32 1
  store i8* %40, i8** %3, align 8
  br label %9

41:                                               ; preds = %36, %9
  %42 = load i8*, i8** %3, align 8
  %43 = load i8, i8* %42, align 1
  %44 = sext i8 %43 to i32
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %41
  %47 = load %struct.file*, %struct.file** %2, align 8
  %48 = getelementptr inbounds %struct.file, %struct.file* %47, i32 0, i32 11
  store i16 0, i16* %48, align 8
  %49 = load %struct.file*, %struct.file** %2, align 8
  call void (%struct.file*, ...) bitcast (void (%struct.file*)* @notice_finished_file to void (%struct.file*, ...)*)(%struct.file* %49)
  br label %54

50:                                               ; preds = %41
  %51 = load %struct.file*, %struct.file** %2, align 8
  call void (%struct.file*, ...) bitcast (void (%struct.file*)* @initialize_file_variables to void (%struct.file*, ...)*)(%struct.file* %51)
  %52 = load %struct.file*, %struct.file** %2, align 8
  call void @set_file_variables(%struct.file* %52)
  %53 = load %struct.file*, %struct.file** %2, align 8
  call void (%struct.file*, ...) bitcast (void (%struct.file*)* @new_job to void (%struct.file*, ...)*)(%struct.file* %53)
  br label %54

54:                                               ; preds = %50, %46
  ret void
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #5

; Function Attrs: noinline nounwind uwtable
define internal void @set_file_variables(%struct.file* %0) #0 {
  %2 = alloca %struct.file*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.dep*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca %struct.dep*, align 8
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i8*, align 8
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  store %struct.file* %0, %struct.file** %2, align 8
  %33 = load %struct.file*, %struct.file** %2, align 8
  %34 = getelementptr inbounds %struct.file, %struct.file* %33, i32 0, i32 1
  %35 = load i8*, i8** %34, align 8
  %36 = call i32 (i8*, ...) bitcast (i32 (i8*)* @ar_name to i32 (i8*, ...)*)(i8* %35)
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %61

38:                                               ; preds = %1
  %39 = load %struct.file*, %struct.file** %2, align 8
  %40 = getelementptr inbounds %struct.file, %struct.file* %39, i32 0, i32 1
  %41 = load i8*, i8** %40, align 8
  %42 = call i8* @strchr(i8* %41, i32 40) #9
  store i8* %42, i8** %3, align 8
  %43 = load %struct.file*, %struct.file** %2, align 8
  %44 = getelementptr inbounds %struct.file, %struct.file* %43, i32 0, i32 1
  %45 = load i8*, i8** %44, align 8
  %46 = load i8*, i8** %3, align 8
  %47 = load %struct.file*, %struct.file** %2, align 8
  %48 = getelementptr inbounds %struct.file, %struct.file* %47, i32 0, i32 1
  %49 = load i8*, i8** %48, align 8
  %50 = ptrtoint i8* %46 to i64
  %51 = ptrtoint i8* %49 to i64
  %52 = sub i64 %50, %51
  %53 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %45, i64 %52)
  store i8* %53, i8** %4, align 8
  %54 = load i8*, i8** %3, align 8
  %55 = getelementptr inbounds i8, i8* %54, i32 1
  store i8* %55, i8** %3, align 8
  %56 = load i8*, i8** %3, align 8
  %57 = load i8*, i8** %3, align 8
  %58 = call i64 @strlen(i8* %57) #9
  %59 = sub i64 %58, 1
  %60 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %56, i64 %59)
  store i8* %60, i8** %5, align 8
  br label %70

61:                                               ; preds = %1
  %62 = load %struct.file*, %struct.file** %2, align 8
  %63 = getelementptr inbounds %struct.file, %struct.file* %62, i32 0, i32 1
  %64 = load i8*, i8** %63, align 8
  %65 = load %struct.file*, %struct.file** %2, align 8
  %66 = getelementptr inbounds %struct.file, %struct.file* %65, i32 0, i32 1
  %67 = load i8*, i8** %66, align 8
  %68 = call i64 @strlen(i8* %67) #9
  %69 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %64, i64 %68)
  store i8* %69, i8** %4, align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), i8** %5, align 8
  br label %70

70:                                               ; preds = %61, %38
  %71 = load i8*, i8** %4, align 8
  %72 = load %struct.file*, %struct.file** %2, align 8
  %73 = call %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*)* @define_variable_for_file to %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...)*)(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i32 1, i8* %71, i32 6, i32 0, %struct.file* %72)
  %74 = load i8*, i8** %5, align 8
  %75 = load %struct.file*, %struct.file** %2, align 8
  %76 = call %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*)* @define_variable_for_file to %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...)*)(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i32 1, i8* %74, i32 6, i32 0, %struct.file* %75)
  %77 = load %struct.file*, %struct.file** %2, align 8
  %78 = getelementptr inbounds %struct.file, %struct.file* %77, i32 0, i32 4
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %79, null
  br i1 %80, label %81, label %248

81:                                               ; preds = %70
  %82 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0))
  %83 = getelementptr inbounds %struct.file, %struct.file* %82, i32 0, i32 2
  %84 = load %struct.dep*, %struct.dep** %83, align 8
  store %struct.dep* %84, %struct.dep** %8, align 8
  br label %85

85:                                               ; preds = %237, %81
  %86 = load %struct.dep*, %struct.dep** %8, align 8
  %87 = icmp ne %struct.dep* %86, null
  br i1 %87, label %88, label %241

88:                                               ; preds = %85
  %89 = load %struct.file*, %struct.file** %2, align 8
  %90 = getelementptr inbounds %struct.file, %struct.file* %89, i32 0, i32 1
  %91 = load i8*, i8** %90, align 8
  %92 = call i64 @strlen(i8* %91) #9
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %9, align 4
  %94 = load %struct.dep*, %struct.dep** %8, align 8
  %95 = getelementptr inbounds %struct.dep, %struct.dep* %94, i32 0, i32 1
  %96 = load i8*, i8** %95, align 8
  %97 = icmp eq i8* %96, null
  br i1 %97, label %98, label %104

98:                                               ; preds = %88
  %99 = load %struct.dep*, %struct.dep** %8, align 8
  %100 = getelementptr inbounds %struct.dep, %struct.dep* %99, i32 0, i32 2
  %101 = load %struct.file*, %struct.file** %100, align 8
  %102 = getelementptr inbounds %struct.file, %struct.file* %101, i32 0, i32 1
  %103 = load i8*, i8** %102, align 8
  br label %108

104:                                              ; preds = %88
  %105 = load %struct.dep*, %struct.dep** %8, align 8
  %106 = getelementptr inbounds %struct.dep, %struct.dep* %105, i32 0, i32 1
  %107 = load i8*, i8** %106, align 8
  br label %108

108:                                              ; preds = %104, %98
  %109 = phi i8* [ %103, %98 ], [ %107, %104 ]
  %110 = call i64 @strlen(i8* %109) #9
  %111 = trunc i64 %110 to i32
  store i32 %111, i32* %10, align 4
  %112 = load i32, i32* %9, align 4
  %113 = load i32, i32* %10, align 4
  %114 = icmp ugt i32 %112, %113
  br i1 %114, label %115, label %236

115:                                              ; preds = %108
  %116 = load %struct.dep*, %struct.dep** %8, align 8
  %117 = getelementptr inbounds %struct.dep, %struct.dep* %116, i32 0, i32 1
  %118 = load i8*, i8** %117, align 8
  %119 = icmp eq i8* %118, null
  br i1 %119, label %120, label %126

120:                                              ; preds = %115
  %121 = load %struct.dep*, %struct.dep** %8, align 8
  %122 = getelementptr inbounds %struct.dep, %struct.dep* %121, i32 0, i32 2
  %123 = load %struct.file*, %struct.file** %122, align 8
  %124 = getelementptr inbounds %struct.file, %struct.file* %123, i32 0, i32 1
  %125 = load i8*, i8** %124, align 8
  br label %130

126:                                              ; preds = %115
  %127 = load %struct.dep*, %struct.dep** %8, align 8
  %128 = getelementptr inbounds %struct.dep, %struct.dep* %127, i32 0, i32 1
  %129 = load i8*, i8** %128, align 8
  br label %130

130:                                              ; preds = %126, %120
  %131 = phi i8* [ %125, %120 ], [ %129, %126 ]
  %132 = load %struct.file*, %struct.file** %2, align 8
  %133 = getelementptr inbounds %struct.file, %struct.file* %132, i32 0, i32 1
  %134 = load i8*, i8** %133, align 8
  %135 = load i32, i32* %9, align 4
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds i8, i8* %134, i64 %136
  %138 = load i32, i32* %10, align 4
  %139 = zext i32 %138 to i64
  %140 = sub i64 0, %139
  %141 = getelementptr inbounds i8, i8* %137, i64 %140
  %142 = icmp eq i8* %131, %141
  br i1 %142, label %226, label %143

143:                                              ; preds = %130
  %144 = load %struct.dep*, %struct.dep** %8, align 8
  %145 = getelementptr inbounds %struct.dep, %struct.dep* %144, i32 0, i32 1
  %146 = load i8*, i8** %145, align 8
  %147 = icmp eq i8* %146, null
  br i1 %147, label %148, label %154

148:                                              ; preds = %143
  %149 = load %struct.dep*, %struct.dep** %8, align 8
  %150 = getelementptr inbounds %struct.dep, %struct.dep* %149, i32 0, i32 2
  %151 = load %struct.file*, %struct.file** %150, align 8
  %152 = getelementptr inbounds %struct.file, %struct.file* %151, i32 0, i32 1
  %153 = load i8*, i8** %152, align 8
  br label %158

154:                                              ; preds = %143
  %155 = load %struct.dep*, %struct.dep** %8, align 8
  %156 = getelementptr inbounds %struct.dep, %struct.dep* %155, i32 0, i32 1
  %157 = load i8*, i8** %156, align 8
  br label %158

158:                                              ; preds = %154, %148
  %159 = phi i8* [ %153, %148 ], [ %157, %154 ]
  %160 = load i8, i8* %159, align 1
  %161 = sext i8 %160 to i32
  %162 = load %struct.file*, %struct.file** %2, align 8
  %163 = getelementptr inbounds %struct.file, %struct.file* %162, i32 0, i32 1
  %164 = load i8*, i8** %163, align 8
  %165 = load i32, i32* %9, align 4
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds i8, i8* %164, i64 %166
  %168 = load i32, i32* %10, align 4
  %169 = zext i32 %168 to i64
  %170 = sub i64 0, %169
  %171 = getelementptr inbounds i8, i8* %167, i64 %170
  %172 = load i8, i8* %171, align 1
  %173 = sext i8 %172 to i32
  %174 = icmp eq i32 %161, %173
  br i1 %174, label %175, label %236

175:                                              ; preds = %158
  %176 = load %struct.dep*, %struct.dep** %8, align 8
  %177 = getelementptr inbounds %struct.dep, %struct.dep* %176, i32 0, i32 1
  %178 = load i8*, i8** %177, align 8
  %179 = icmp eq i8* %178, null
  br i1 %179, label %180, label %186

180:                                              ; preds = %175
  %181 = load %struct.dep*, %struct.dep** %8, align 8
  %182 = getelementptr inbounds %struct.dep, %struct.dep* %181, i32 0, i32 2
  %183 = load %struct.file*, %struct.file** %182, align 8
  %184 = getelementptr inbounds %struct.file, %struct.file* %183, i32 0, i32 1
  %185 = load i8*, i8** %184, align 8
  br label %190

186:                                              ; preds = %175
  %187 = load %struct.dep*, %struct.dep** %8, align 8
  %188 = getelementptr inbounds %struct.dep, %struct.dep* %187, i32 0, i32 1
  %189 = load i8*, i8** %188, align 8
  br label %190

190:                                              ; preds = %186, %180
  %191 = phi i8* [ %185, %180 ], [ %189, %186 ]
  %192 = load i8, i8* %191, align 1
  %193 = sext i8 %192 to i32
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %226, label %195

195:                                              ; preds = %190
  %196 = load %struct.dep*, %struct.dep** %8, align 8
  %197 = getelementptr inbounds %struct.dep, %struct.dep* %196, i32 0, i32 1
  %198 = load i8*, i8** %197, align 8
  %199 = icmp eq i8* %198, null
  br i1 %199, label %200, label %206

200:                                              ; preds = %195
  %201 = load %struct.dep*, %struct.dep** %8, align 8
  %202 = getelementptr inbounds %struct.dep, %struct.dep* %201, i32 0, i32 2
  %203 = load %struct.file*, %struct.file** %202, align 8
  %204 = getelementptr inbounds %struct.file, %struct.file* %203, i32 0, i32 1
  %205 = load i8*, i8** %204, align 8
  br label %210

206:                                              ; preds = %195
  %207 = load %struct.dep*, %struct.dep** %8, align 8
  %208 = getelementptr inbounds %struct.dep, %struct.dep* %207, i32 0, i32 1
  %209 = load i8*, i8** %208, align 8
  br label %210

210:                                              ; preds = %206, %200
  %211 = phi i8* [ %205, %200 ], [ %209, %206 ]
  %212 = getelementptr inbounds i8, i8* %211, i64 1
  %213 = load %struct.file*, %struct.file** %2, align 8
  %214 = getelementptr inbounds %struct.file, %struct.file* %213, i32 0, i32 1
  %215 = load i8*, i8** %214, align 8
  %216 = load i32, i32* %9, align 4
  %217 = zext i32 %216 to i64
  %218 = getelementptr inbounds i8, i8* %215, i64 %217
  %219 = load i32, i32* %10, align 4
  %220 = zext i32 %219 to i64
  %221 = sub i64 0, %220
  %222 = getelementptr inbounds i8, i8* %218, i64 %221
  %223 = getelementptr inbounds i8, i8* %222, i64 1
  %224 = call i32 @strcmp(i8* %212, i8* %223) #9
  %225 = icmp ne i32 %224, 0
  br i1 %225, label %236, label %226

226:                                              ; preds = %210, %190, %130
  %227 = load %struct.file*, %struct.file** %2, align 8
  %228 = getelementptr inbounds %struct.file, %struct.file* %227, i32 0, i32 1
  %229 = load i8*, i8** %228, align 8
  %230 = load i32, i32* %9, align 4
  %231 = load i32, i32* %10, align 4
  %232 = sub i32 %230, %231
  %233 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i32, ...)*)(i8* %229, i32 %232)
  %234 = load %struct.file*, %struct.file** %2, align 8
  %235 = getelementptr inbounds %struct.file, %struct.file* %234, i32 0, i32 4
  store i8* %233, i8** %235, align 8
  br label %241

236:                                              ; preds = %210, %158, %108
  br label %237

237:                                              ; preds = %236
  %238 = load %struct.dep*, %struct.dep** %8, align 8
  %239 = getelementptr inbounds %struct.dep, %struct.dep* %238, i32 0, i32 0
  %240 = load %struct.dep*, %struct.dep** %239, align 8
  store %struct.dep* %240, %struct.dep** %8, align 8
  br label %85

241:                                              ; preds = %226, %85
  %242 = load %struct.dep*, %struct.dep** %8, align 8
  %243 = icmp eq %struct.dep* %242, null
  br i1 %243, label %244, label %247

244:                                              ; preds = %241
  %245 = load %struct.file*, %struct.file** %2, align 8
  %246 = getelementptr inbounds %struct.file, %struct.file* %245, i32 0, i32 4
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), i8** %246, align 8
  br label %247

247:                                              ; preds = %244, %241
  br label %248

248:                                              ; preds = %247, %70
  %249 = load %struct.file*, %struct.file** %2, align 8
  %250 = getelementptr inbounds %struct.file, %struct.file* %249, i32 0, i32 4
  %251 = load i8*, i8** %250, align 8
  store i8* %251, i8** %6, align 8
  %252 = load i8*, i8** %6, align 8
  %253 = load %struct.file*, %struct.file** %2, align 8
  %254 = call %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*)* @define_variable_for_file to %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...)*)(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14.16, i64 0, i64 0), i32 1, i8* %252, i32 6, i32 0, %struct.file* %253)
  %255 = load %struct.file*, %struct.file** %2, align 8
  %256 = getelementptr inbounds %struct.file, %struct.file* %255, i32 0, i32 2
  %257 = load %struct.dep*, %struct.dep** %256, align 8
  %258 = icmp ne %struct.dep* %257, null
  br i1 %258, label %259, label %282

259:                                              ; preds = %248
  %260 = load %struct.file*, %struct.file** %2, align 8
  %261 = getelementptr inbounds %struct.file, %struct.file* %260, i32 0, i32 2
  %262 = load %struct.dep*, %struct.dep** %261, align 8
  %263 = getelementptr inbounds %struct.dep, %struct.dep* %262, i32 0, i32 1
  %264 = load i8*, i8** %263, align 8
  %265 = icmp eq i8* %264, null
  br i1 %265, label %266, label %274

266:                                              ; preds = %259
  %267 = load %struct.file*, %struct.file** %2, align 8
  %268 = getelementptr inbounds %struct.file, %struct.file* %267, i32 0, i32 2
  %269 = load %struct.dep*, %struct.dep** %268, align 8
  %270 = getelementptr inbounds %struct.dep, %struct.dep* %269, i32 0, i32 2
  %271 = load %struct.file*, %struct.file** %270, align 8
  %272 = getelementptr inbounds %struct.file, %struct.file* %271, i32 0, i32 1
  %273 = load i8*, i8** %272, align 8
  br label %280

274:                                              ; preds = %259
  %275 = load %struct.file*, %struct.file** %2, align 8
  %276 = getelementptr inbounds %struct.file, %struct.file* %275, i32 0, i32 2
  %277 = load %struct.dep*, %struct.dep** %276, align 8
  %278 = getelementptr inbounds %struct.dep, %struct.dep* %277, i32 0, i32 1
  %279 = load i8*, i8** %278, align 8
  br label %280

280:                                              ; preds = %274, %266
  %281 = phi i8* [ %273, %266 ], [ %279, %274 ]
  br label %283

282:                                              ; preds = %248
  br label %283

283:                                              ; preds = %282, %280
  %284 = phi i8* [ %281, %280 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), %282 ]
  store i8* %284, i8** %7, align 8
  %285 = load %struct.file*, %struct.file** %2, align 8
  %286 = getelementptr inbounds %struct.file, %struct.file* %285, i32 0, i32 3
  %287 = load %struct.commands*, %struct.commands** %286, align 8
  %288 = load %struct.file*, %struct.file** @default_file, align 8
  %289 = getelementptr inbounds %struct.file, %struct.file* %288, i32 0, i32 3
  %290 = load %struct.commands*, %struct.commands** %289, align 8
  %291 = icmp eq %struct.commands* %287, %290
  br i1 %291, label %292, label %294

292:                                              ; preds = %283
  %293 = load i8*, i8** %4, align 8
  store i8* %293, i8** %7, align 8
  br label %294

294:                                              ; preds = %292, %283
  %295 = load i8*, i8** %7, align 8
  %296 = load %struct.file*, %struct.file** %2, align 8
  %297 = call %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*)* @define_variable_for_file to %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...)*)(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i32 1, i8* %295, i32 6, i32 0, %struct.file* %296)
  %298 = load i8*, i8** %4, align 8
  %299 = call i8* @strrchr(i8* %298, i32 47) #9
  store i8* %299, i8** %3, align 8
  %300 = load i8*, i8** %3, align 8
  %301 = icmp eq i8* %300, null
  br i1 %301, label %302, label %303

302:                                              ; preds = %294
  br label %319

303:                                              ; preds = %294
  %304 = load i8*, i8** %3, align 8
  %305 = load i8*, i8** %4, align 8
  %306 = icmp eq i8* %304, %305
  br i1 %306, label %307, label %308

307:                                              ; preds = %303
  br label %317

308:                                              ; preds = %303
  %309 = load i8*, i8** %4, align 8
  %310 = load i8*, i8** %3, align 8
  %311 = load i8*, i8** %4, align 8
  %312 = ptrtoint i8* %310 to i64
  %313 = ptrtoint i8* %311 to i64
  %314 = sub i64 %312, %313
  %315 = add nsw i64 %314, 1
  %316 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %309, i64 %315)
  br label %317

317:                                              ; preds = %308, %307
  %318 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), %307 ], [ %316, %308 ]
  br label %319

319:                                              ; preds = %317, %302
  %320 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0), %302 ], [ %318, %317 ]
  %321 = load %struct.file*, %struct.file** %2, align 8
  %322 = call %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*)* @define_variable_for_file to %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...)*)(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0), i32 2, i8* %320, i32 6, i32 0, %struct.file* %321)
  %323 = load i8*, i8** %3, align 8
  %324 = icmp ne i8* %323, null
  br i1 %324, label %325, label %328

325:                                              ; preds = %319
  %326 = load i8*, i8** %3, align 8
  %327 = getelementptr inbounds i8, i8* %326, i64 1
  br label %330

328:                                              ; preds = %319
  %329 = load i8*, i8** %4, align 8
  br label %330

330:                                              ; preds = %328, %325
  %331 = phi i8* [ %327, %325 ], [ %329, %328 ]
  %332 = load %struct.file*, %struct.file** %2, align 8
  %333 = call %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*)* @define_variable_for_file to %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...)*)(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i32 2, i8* %331, i32 6, i32 0, %struct.file* %332)
  %334 = load i8*, i8** %6, align 8
  %335 = call i8* @strrchr(i8* %334, i32 47) #9
  store i8* %335, i8** %3, align 8
  %336 = load i8*, i8** %3, align 8
  %337 = icmp eq i8* %336, null
  br i1 %337, label %338, label %339

338:                                              ; preds = %330
  br label %355

339:                                              ; preds = %330
  %340 = load i8*, i8** %3, align 8
  %341 = load i8*, i8** %6, align 8
  %342 = icmp eq i8* %340, %341
  br i1 %342, label %343, label %344

343:                                              ; preds = %339
  br label %353

344:                                              ; preds = %339
  %345 = load i8*, i8** %6, align 8
  %346 = load i8*, i8** %3, align 8
  %347 = load i8*, i8** %6, align 8
  %348 = ptrtoint i8* %346 to i64
  %349 = ptrtoint i8* %347 to i64
  %350 = sub i64 %348, %349
  %351 = add nsw i64 %350, 1
  %352 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %345, i64 %351)
  br label %353

353:                                              ; preds = %344, %343
  %354 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), %343 ], [ %352, %344 ]
  br label %355

355:                                              ; preds = %353, %338
  %356 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0), %338 ], [ %354, %353 ]
  %357 = load %struct.file*, %struct.file** %2, align 8
  %358 = call %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*)* @define_variable_for_file to %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...)*)(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i32 2, i8* %356, i32 6, i32 0, %struct.file* %357)
  %359 = load i8*, i8** %3, align 8
  %360 = icmp ne i8* %359, null
  br i1 %360, label %361, label %364

361:                                              ; preds = %355
  %362 = load i8*, i8** %3, align 8
  %363 = getelementptr inbounds i8, i8* %362, i64 1
  br label %366

364:                                              ; preds = %355
  %365 = load i8*, i8** %6, align 8
  br label %366

366:                                              ; preds = %364, %361
  %367 = phi i8* [ %363, %361 ], [ %365, %364 ]
  %368 = load %struct.file*, %struct.file** %2, align 8
  %369 = call %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*)* @define_variable_for_file to %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...)*)(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i32 2, i8* %367, i32 6, i32 0, %struct.file* %368)
  %370 = load i8*, i8** %7, align 8
  %371 = call i8* @strrchr(i8* %370, i32 47) #9
  store i8* %371, i8** %3, align 8
  %372 = load i8*, i8** %3, align 8
  %373 = icmp eq i8* %372, null
  br i1 %373, label %374, label %375

374:                                              ; preds = %366
  br label %391

375:                                              ; preds = %366
  %376 = load i8*, i8** %3, align 8
  %377 = load i8*, i8** %7, align 8
  %378 = icmp eq i8* %376, %377
  br i1 %378, label %379, label %380

379:                                              ; preds = %375
  br label %389

380:                                              ; preds = %375
  %381 = load i8*, i8** %7, align 8
  %382 = load i8*, i8** %3, align 8
  %383 = load i8*, i8** %7, align 8
  %384 = ptrtoint i8* %382 to i64
  %385 = ptrtoint i8* %383 to i64
  %386 = sub i64 %384, %385
  %387 = add nsw i64 %386, 1
  %388 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %381, i64 %387)
  br label %389

389:                                              ; preds = %380, %379
  %390 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), %379 ], [ %388, %380 ]
  br label %391

391:                                              ; preds = %389, %374
  %392 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0), %374 ], [ %390, %389 ]
  %393 = load %struct.file*, %struct.file** %2, align 8
  %394 = call %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*)* @define_variable_for_file to %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...)*)(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i32 2, i8* %392, i32 6, i32 0, %struct.file* %393)
  %395 = load i8*, i8** %3, align 8
  %396 = icmp ne i8* %395, null
  br i1 %396, label %397, label %400

397:                                              ; preds = %391
  %398 = load i8*, i8** %3, align 8
  %399 = getelementptr inbounds i8, i8* %398, i64 1
  br label %402

400:                                              ; preds = %391
  %401 = load i8*, i8** %7, align 8
  br label %402

402:                                              ; preds = %400, %397
  %403 = phi i8* [ %399, %397 ], [ %401, %400 ]
  %404 = load %struct.file*, %struct.file** %2, align 8
  %405 = call %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*)* @define_variable_for_file to %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...)*)(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0), i32 2, i8* %403, i32 6, i32 0, %struct.file* %404)
  %406 = load i8*, i8** %5, align 8
  %407 = call i8* @strrchr(i8* %406, i32 47) #9
  store i8* %407, i8** %3, align 8
  %408 = load i8*, i8** %3, align 8
  %409 = icmp eq i8* %408, null
  br i1 %409, label %410, label %411

410:                                              ; preds = %402
  br label %427

411:                                              ; preds = %402
  %412 = load i8*, i8** %3, align 8
  %413 = load i8*, i8** %5, align 8
  %414 = icmp eq i8* %412, %413
  br i1 %414, label %415, label %416

415:                                              ; preds = %411
  br label %425

416:                                              ; preds = %411
  %417 = load i8*, i8** %5, align 8
  %418 = load i8*, i8** %3, align 8
  %419 = load i8*, i8** %5, align 8
  %420 = ptrtoint i8* %418 to i64
  %421 = ptrtoint i8* %419 to i64
  %422 = sub i64 %420, %421
  %423 = add nsw i64 %422, 1
  %424 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %417, i64 %423)
  br label %425

425:                                              ; preds = %416, %415
  %426 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), %415 ], [ %424, %416 ]
  br label %427

427:                                              ; preds = %425, %410
  %428 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0), %410 ], [ %426, %425 ]
  %429 = load %struct.file*, %struct.file** %2, align 8
  %430 = call %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*)* @define_variable_for_file to %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...)*)(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), i32 2, i8* %428, i32 6, i32 0, %struct.file* %429)
  %431 = load i8*, i8** %3, align 8
  %432 = icmp ne i8* %431, null
  br i1 %432, label %433, label %436

433:                                              ; preds = %427
  %434 = load i8*, i8** %3, align 8
  %435 = getelementptr inbounds i8, i8* %434, i64 1
  br label %438

436:                                              ; preds = %427
  %437 = load i8*, i8** %5, align 8
  br label %438

438:                                              ; preds = %436, %433
  %439 = phi i8* [ %435, %433 ], [ %437, %436 ]
  %440 = load %struct.file*, %struct.file** %2, align 8
  %441 = call %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*)* @define_variable_for_file to %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...)*)(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 2, i8* %439, i32 6, i32 0, %struct.file* %440)
  store i32 0, i32* %12, align 4
  store i32 0, i32* %11, align 4
  %442 = load %struct.file*, %struct.file** %2, align 8
  %443 = getelementptr inbounds %struct.file, %struct.file* %442, i32 0, i32 2
  %444 = load %struct.dep*, %struct.dep** %443, align 8
  store %struct.dep* %444, %struct.dep** %25, align 8
  br label %445

445:                                              ; preds = %480, %438
  %446 = load %struct.dep*, %struct.dep** %25, align 8
  %447 = icmp ne %struct.dep* %446, null
  br i1 %447, label %448, label %484

448:                                              ; preds = %445
  %449 = load %struct.dep*, %struct.dep** %25, align 8
  %450 = getelementptr inbounds %struct.dep, %struct.dep* %449, i32 0, i32 1
  %451 = load i8*, i8** %450, align 8
  %452 = icmp eq i8* %451, null
  br i1 %452, label %453, label %459

453:                                              ; preds = %448
  %454 = load %struct.dep*, %struct.dep** %25, align 8
  %455 = getelementptr inbounds %struct.dep, %struct.dep* %454, i32 0, i32 2
  %456 = load %struct.file*, %struct.file** %455, align 8
  %457 = getelementptr inbounds %struct.file, %struct.file* %456, i32 0, i32 1
  %458 = load i8*, i8** %457, align 8
  br label %463

459:                                              ; preds = %448
  %460 = load %struct.dep*, %struct.dep** %25, align 8
  %461 = getelementptr inbounds %struct.dep, %struct.dep* %460, i32 0, i32 1
  %462 = load i8*, i8** %461, align 8
  br label %463

463:                                              ; preds = %459, %453
  %464 = phi i8* [ %458, %453 ], [ %462, %459 ]
  %465 = call i64 @strlen(i8* %464) #9
  %466 = add i64 %465, 1
  %467 = trunc i64 %466 to i32
  store i32 %467, i32* %27, align 4
  %468 = load i32, i32* %27, align 4
  %469 = load i32, i32* %11, align 4
  %470 = add i32 %469, %468
  store i32 %470, i32* %11, align 4
  %471 = load %struct.dep*, %struct.dep** %25, align 8
  %472 = getelementptr inbounds %struct.dep, %struct.dep* %471, i32 0, i32 3
  %473 = load i32, i32* %472, align 8
  %474 = icmp ne i32 %473, 0
  br i1 %474, label %475, label %479

475:                                              ; preds = %463
  %476 = load i32, i32* %27, align 4
  %477 = load i32, i32* %12, align 4
  %478 = add i32 %477, %476
  store i32 %478, i32* %12, align 4
  br label %479

479:                                              ; preds = %475, %463
  br label %480

480:                                              ; preds = %479
  %481 = load %struct.dep*, %struct.dep** %25, align 8
  %482 = getelementptr inbounds %struct.dep, %struct.dep* %481, i32 0, i32 0
  %483 = load %struct.dep*, %struct.dep** %482, align 8
  store %struct.dep* %483, %struct.dep** %25, align 8
  br label %445

484:                                              ; preds = %445
  %485 = load i32, i32* %11, align 4
  %486 = icmp eq i32 %485, 0
  br i1 %486, label %487, label %488

487:                                              ; preds = %484
  br label %490

488:                                              ; preds = %484
  %489 = load i32, i32* %11, align 4
  br label %490

490:                                              ; preds = %488, %487
  %491 = phi i32 [ 1, %487 ], [ %489, %488 ]
  store i32 %491, i32* %26, align 4
  %492 = load i32, i32* %26, align 4
  %493 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %492)
  store i8* %493, i8** %13, align 8
  store i8* %493, i8** %16, align 8
  %494 = load i32, i32* %26, align 4
  %495 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %494)
  store i8* %495, i8** %14, align 8
  store i8* %495, i8** %17, align 8
  %496 = load i32, i32* %26, align 4
  %497 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %496)
  store i8* %497, i8** %15, align 8
  store i8* %497, i8** %18, align 8
  %498 = load i32, i32* %12, align 4
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %501

500:                                              ; preds = %490
  br label %503

501:                                              ; preds = %490
  %502 = load i32, i32* %12, align 4
  br label %503

503:                                              ; preds = %501, %500
  %504 = phi i32 [ 1, %500 ], [ %502, %501 ]
  store i32 %504, i32* %26, align 4
  %505 = load i32, i32* %26, align 4
  %506 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %505)
  store i8* %506, i8** %19, align 8
  store i8* %506, i8** %22, align 8
  %507 = load i32, i32* %26, align 4
  %508 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %507)
  store i8* %508, i8** %20, align 8
  store i8* %508, i8** %23, align 8
  %509 = load i32, i32* %26, align 4
  %510 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %509)
  store i8* %510, i8** %21, align 8
  store i8* %510, i8** %24, align 8
  %511 = load %struct.file*, %struct.file** %2, align 8
  %512 = getelementptr inbounds %struct.file, %struct.file* %511, i32 0, i32 2
  %513 = load %struct.dep*, %struct.dep** %512, align 8
  store %struct.dep* %513, %struct.dep** %25, align 8
  br label %514

514:                                              ; preds = %642, %503
  %515 = load %struct.dep*, %struct.dep** %25, align 8
  %516 = icmp ne %struct.dep* %515, null
  br i1 %516, label %517, label %646

517:                                              ; preds = %514
  %518 = load %struct.dep*, %struct.dep** %25, align 8
  %519 = getelementptr inbounds %struct.dep, %struct.dep* %518, i32 0, i32 1
  %520 = load i8*, i8** %519, align 8
  %521 = icmp eq i8* %520, null
  br i1 %521, label %522, label %528

522:                                              ; preds = %517
  %523 = load %struct.dep*, %struct.dep** %25, align 8
  %524 = getelementptr inbounds %struct.dep, %struct.dep* %523, i32 0, i32 2
  %525 = load %struct.file*, %struct.file** %524, align 8
  %526 = getelementptr inbounds %struct.file, %struct.file* %525, i32 0, i32 1
  %527 = load i8*, i8** %526, align 8
  br label %532

528:                                              ; preds = %517
  %529 = load %struct.dep*, %struct.dep** %25, align 8
  %530 = getelementptr inbounds %struct.dep, %struct.dep* %529, i32 0, i32 1
  %531 = load i8*, i8** %530, align 8
  br label %532

532:                                              ; preds = %528, %522
  %533 = phi i8* [ %527, %522 ], [ %531, %528 ]
  store i8* %533, i8** %28, align 8
  %534 = load i8*, i8** %28, align 8
  %535 = call i64 @strlen(i8* %534) #9
  %536 = trunc i64 %535 to i32
  store i32 %536, i32* %26, align 4
  %537 = load i8*, i8** %16, align 8
  %538 = load i8*, i8** %28, align 8
  %539 = load i32, i32* %26, align 4
  %540 = zext i32 %539 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %537, i8* align 1 %538, i64 %540, i1 false)
  %541 = load i32, i32* %26, align 4
  %542 = load i8*, i8** %16, align 8
  %543 = zext i32 %541 to i64
  %544 = getelementptr inbounds i8, i8* %542, i64 %543
  store i8* %544, i8** %16, align 8
  %545 = load i8*, i8** %16, align 8
  %546 = getelementptr inbounds i8, i8* %545, i32 1
  store i8* %546, i8** %16, align 8
  store i8 32, i8* %545, align 1
  %547 = load i8*, i8** %28, align 8
  %548 = call i8* @strrchr(i8* %547, i32 47) #9
  store i8* %548, i8** %3, align 8
  %549 = load i8*, i8** %3, align 8
  %550 = icmp eq i8* %549, null
  br i1 %550, label %551, label %554

551:                                              ; preds = %532
  %552 = load i8*, i8** %28, align 8
  store i8* %552, i8** %30, align 8
  %553 = load i32, i32* %26, align 4
  store i32 %553, i32* %32, align 4
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0), i8** %29, align 8
  store i32 2, i32* %31, align 4
  br label %585

554:                                              ; preds = %532
  %555 = load i8*, i8** %3, align 8
  %556 = load i8*, i8** %28, align 8
  %557 = icmp eq i8* %555, %556
  br i1 %557, label %558, label %564

558:                                              ; preds = %554
  %559 = load i8*, i8** %28, align 8
  store i8* %559, i8** %29, align 8
  store i32 1, i32* %31, align 4
  %560 = load i8*, i8** %28, align 8
  %561 = getelementptr inbounds i8, i8* %560, i64 1
  store i8* %561, i8** %30, align 8
  %562 = load i32, i32* %26, align 4
  %563 = sub i32 %562, 1
  store i32 %563, i32* %32, align 4
  br label %584

564:                                              ; preds = %554
  %565 = load i8*, i8** %3, align 8
  %566 = getelementptr inbounds i8, i8* %565, i64 1
  store i8* %566, i8** %30, align 8
  %567 = load i32, i32* %26, align 4
  %568 = zext i32 %567 to i64
  %569 = load i8*, i8** %3, align 8
  %570 = getelementptr inbounds i8, i8* %569, i64 1
  %571 = load i8*, i8** %28, align 8
  %572 = ptrtoint i8* %570 to i64
  %573 = ptrtoint i8* %571 to i64
  %574 = sub i64 %572, %573
  %575 = sub nsw i64 %568, %574
  %576 = trunc i64 %575 to i32
  store i32 %576, i32* %32, align 4
  %577 = load i8*, i8** %28, align 8
  store i8* %577, i8** %29, align 8
  %578 = load i8*, i8** %3, align 8
  %579 = load i8*, i8** %28, align 8
  %580 = ptrtoint i8* %578 to i64
  %581 = ptrtoint i8* %579 to i64
  %582 = sub i64 %580, %581
  %583 = trunc i64 %582 to i32
  store i32 %583, i32* %31, align 4
  br label %584

584:                                              ; preds = %564, %558
  br label %585

585:                                              ; preds = %584, %551
  %586 = load i8*, i8** %17, align 8
  %587 = load i8*, i8** %29, align 8
  %588 = load i32, i32* %31, align 4
  %589 = zext i32 %588 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %586, i8* align 1 %587, i64 %589, i1 false)
  %590 = load i32, i32* %31, align 4
  %591 = load i8*, i8** %17, align 8
  %592 = zext i32 %590 to i64
  %593 = getelementptr inbounds i8, i8* %591, i64 %592
  store i8* %593, i8** %17, align 8
  %594 = load i8*, i8** %17, align 8
  %595 = getelementptr inbounds i8, i8* %594, i32 1
  store i8* %595, i8** %17, align 8
  store i8 32, i8* %594, align 1
  %596 = load i8*, i8** %18, align 8
  %597 = load i8*, i8** %30, align 8
  %598 = load i32, i32* %32, align 4
  %599 = zext i32 %598 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %596, i8* align 1 %597, i64 %599, i1 false)
  %600 = load i32, i32* %32, align 4
  %601 = load i8*, i8** %18, align 8
  %602 = zext i32 %600 to i64
  %603 = getelementptr inbounds i8, i8* %601, i64 %602
  store i8* %603, i8** %18, align 8
  %604 = load i8*, i8** %18, align 8
  %605 = getelementptr inbounds i8, i8* %604, i32 1
  store i8* %605, i8** %18, align 8
  store i8 32, i8* %604, align 1
  %606 = load %struct.dep*, %struct.dep** %25, align 8
  %607 = getelementptr inbounds %struct.dep, %struct.dep* %606, i32 0, i32 3
  %608 = load i32, i32* %607, align 8
  %609 = icmp ne i32 %608, 0
  br i1 %609, label %610, label %641

610:                                              ; preds = %585
  %611 = load i8*, i8** %22, align 8
  %612 = load i8*, i8** %28, align 8
  %613 = load i32, i32* %26, align 4
  %614 = zext i32 %613 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %611, i8* align 1 %612, i64 %614, i1 false)
  %615 = load i32, i32* %26, align 4
  %616 = load i8*, i8** %22, align 8
  %617 = zext i32 %615 to i64
  %618 = getelementptr inbounds i8, i8* %616, i64 %617
  store i8* %618, i8** %22, align 8
  %619 = load i8*, i8** %22, align 8
  %620 = getelementptr inbounds i8, i8* %619, i32 1
  store i8* %620, i8** %22, align 8
  store i8 32, i8* %619, align 1
  %621 = load i8*, i8** %23, align 8
  %622 = load i8*, i8** %29, align 8
  %623 = load i32, i32* %31, align 4
  %624 = zext i32 %623 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %621, i8* align 1 %622, i64 %624, i1 false)
  %625 = load i32, i32* %31, align 4
  %626 = load i8*, i8** %23, align 8
  %627 = zext i32 %625 to i64
  %628 = getelementptr inbounds i8, i8* %626, i64 %627
  store i8* %628, i8** %23, align 8
  %629 = load i8*, i8** %23, align 8
  %630 = getelementptr inbounds i8, i8* %629, i32 1
  store i8* %630, i8** %23, align 8
  store i8 32, i8* %629, align 1
  %631 = load i8*, i8** %24, align 8
  %632 = load i8*, i8** %30, align 8
  %633 = load i32, i32* %32, align 4
  %634 = zext i32 %633 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %631, i8* align 1 %632, i64 %634, i1 false)
  %635 = load i32, i32* %32, align 4
  %636 = load i8*, i8** %24, align 8
  %637 = zext i32 %635 to i64
  %638 = getelementptr inbounds i8, i8* %636, i64 %637
  store i8* %638, i8** %24, align 8
  %639 = load i8*, i8** %24, align 8
  %640 = getelementptr inbounds i8, i8* %639, i32 1
  store i8* %640, i8** %24, align 8
  store i8 32, i8* %639, align 1
  br label %641

641:                                              ; preds = %610, %585
  br label %642

642:                                              ; preds = %641
  %643 = load %struct.dep*, %struct.dep** %25, align 8
  %644 = getelementptr inbounds %struct.dep, %struct.dep* %643, i32 0, i32 0
  %645 = load %struct.dep*, %struct.dep** %644, align 8
  store %struct.dep* %645, %struct.dep** %25, align 8
  br label %514

646:                                              ; preds = %514
  %647 = load i8*, i8** %16, align 8
  %648 = load i8*, i8** %16, align 8
  %649 = load i8*, i8** %13, align 8
  %650 = icmp ugt i8* %648, %649
  %651 = zext i1 %650 to i64
  %652 = select i1 %650, i32 -1, i32 0
  %653 = sext i32 %652 to i64
  %654 = getelementptr inbounds i8, i8* %647, i64 %653
  store i8 0, i8* %654, align 1
  %655 = load i8*, i8** %13, align 8
  %656 = load %struct.file*, %struct.file** %2, align 8
  %657 = call %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*)* @define_variable_for_file to %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...)*)(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i64 0, i64 0), i32 1, i8* %655, i32 6, i32 0, %struct.file* %656)
  %658 = load i8*, i8** %17, align 8
  %659 = load i8*, i8** %17, align 8
  %660 = load i8*, i8** %14, align 8
  %661 = icmp ugt i8* %659, %660
  %662 = zext i1 %661 to i64
  %663 = select i1 %661, i32 -1, i32 0
  %664 = sext i32 %663 to i64
  %665 = getelementptr inbounds i8, i8* %658, i64 %664
  store i8 0, i8* %665, align 1
  %666 = load i8*, i8** %14, align 8
  %667 = load %struct.file*, %struct.file** %2, align 8
  %668 = call %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*)* @define_variable_for_file to %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...)*)(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i32 2, i8* %666, i32 6, i32 0, %struct.file* %667)
  %669 = load i8*, i8** %18, align 8
  %670 = load i8*, i8** %18, align 8
  %671 = load i8*, i8** %15, align 8
  %672 = icmp ugt i8* %670, %671
  %673 = zext i1 %672 to i64
  %674 = select i1 %672, i32 -1, i32 0
  %675 = sext i32 %674 to i64
  %676 = getelementptr inbounds i8, i8* %669, i64 %675
  store i8 0, i8* %676, align 1
  %677 = load i8*, i8** %15, align 8
  %678 = load %struct.file*, %struct.file** %2, align 8
  %679 = call %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*)* @define_variable_for_file to %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...)*)(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0), i32 2, i8* %677, i32 6, i32 0, %struct.file* %678)
  %680 = load i8*, i8** %22, align 8
  %681 = load i8*, i8** %22, align 8
  %682 = load i8*, i8** %19, align 8
  %683 = icmp ugt i8* %681, %682
  %684 = zext i1 %683 to i64
  %685 = select i1 %683, i32 -1, i32 0
  %686 = sext i32 %685 to i64
  %687 = getelementptr inbounds i8, i8* %680, i64 %686
  store i8 0, i8* %687, align 1
  %688 = load i8*, i8** %19, align 8
  %689 = load %struct.file*, %struct.file** %2, align 8
  %690 = call %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*)* @define_variable_for_file to %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...)*)(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i32 1, i8* %688, i32 6, i32 0, %struct.file* %689)
  %691 = load i8*, i8** %23, align 8
  %692 = load i8*, i8** %23, align 8
  %693 = load i8*, i8** %20, align 8
  %694 = icmp ugt i8* %692, %693
  %695 = zext i1 %694 to i64
  %696 = select i1 %694, i32 -1, i32 0
  %697 = sext i32 %696 to i64
  %698 = getelementptr inbounds i8, i8* %691, i64 %697
  store i8 0, i8* %698, align 1
  %699 = load i8*, i8** %20, align 8
  %700 = load %struct.file*, %struct.file** %2, align 8
  %701 = call %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*)* @define_variable_for_file to %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...)*)(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0), i32 2, i8* %699, i32 6, i32 0, %struct.file* %700)
  %702 = load i8*, i8** %24, align 8
  %703 = load i8*, i8** %24, align 8
  %704 = load i8*, i8** %21, align 8
  %705 = icmp ugt i8* %703, %704
  %706 = zext i1 %705 to i64
  %707 = select i1 %705, i32 -1, i32 0
  %708 = sext i32 %707 to i64
  %709 = getelementptr inbounds i8, i8* %702, i64 %708
  store i8 0, i8* %709, align 1
  %710 = load i8*, i8** %21, align 8
  %711 = load %struct.file*, %struct.file** %2, align 8
  %712 = call %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*)* @define_variable_for_file to %struct.variable* (i8*, i32, i8*, i32, i32, %struct.file*, ...)*)(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i32 2, i8* %710, i32 6, i32 0, %struct.file* %711)
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fatal_error_signal(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.child*, align 8
  %4 = alloca %struct.child*, align 8
  store i32 %0, i32* %2, align 4
  %5 = load i32, i32* %2, align 4
  %6 = call void (i32)* @signal(i32 %5, void (i32)* null) #10
  %7 = call i32 @sigsetmask(i32 0) #10
  %8 = load i32, i32* %2, align 4
  %9 = icmp eq i32 %8, 15
  br i1 %9, label %10, label %33

10:                                               ; preds = %1
  call void (i32, ...) bitcast (void (i32)* @push_signals_blocked_p to void (i32, ...)*)(i32 1)
  %11 = load %struct.child*, %struct.child** @children, align 8
  store %struct.child* %11, %struct.child** %3, align 8
  br label %12

12:                                               ; preds = %28, %10
  %13 = load %struct.child*, %struct.child** %3, align 8
  %14 = icmp ne %struct.child* %13, null
  br i1 %14, label %15, label %32

15:                                               ; preds = %12
  %16 = load %struct.child*, %struct.child** %3, align 8
  %17 = getelementptr inbounds %struct.child, %struct.child* %16, i32 0, i32 7
  %18 = load i8, i8* %17, align 4
  %19 = and i8 %18, 1
  %20 = zext i8 %19 to i32
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %15
  %23 = load %struct.child*, %struct.child** %3, align 8
  %24 = getelementptr inbounds %struct.child, %struct.child* %23, i32 0, i32 6
  %25 = load i32, i32* %24, align 8
  %26 = call i32 @kill(i32 %25, i32 15) #10
  br label %27

27:                                               ; preds = %22, %15
  br label %28

28:                                               ; preds = %27
  %29 = load %struct.child*, %struct.child** %3, align 8
  %30 = getelementptr inbounds %struct.child, %struct.child* %29, i32 0, i32 0
  %31 = load %struct.child*, %struct.child** %30, align 8
  store %struct.child* %31, %struct.child** %3, align 8
  br label %12

32:                                               ; preds = %12
  call void (...) bitcast (void ()* @pop_signals_blocked_p to void (...)*)()
  br label %33

33:                                               ; preds = %32, %1
  %34 = load i32, i32* %2, align 4
  %35 = sub nsw i32 %34, 1
  %36 = shl i32 1, %35
  %37 = and i32 16391, %36
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %74

39:                                               ; preds = %33
  call void (i32, ...) bitcast (void (i32)* @push_signals_blocked_p to void (i32, ...)*)(i32 1)
  %40 = load %struct.child*, %struct.child** @children, align 8
  store %struct.child* %40, %struct.child** %4, align 8
  br label %41

41:                                               ; preds = %58, %39
  %42 = load %struct.child*, %struct.child** %4, align 8
  %43 = icmp ne %struct.child* %42, null
  br i1 %43, label %44, label %62

44:                                               ; preds = %41
  %45 = load %struct.child*, %struct.child** %4, align 8
  %46 = getelementptr inbounds %struct.child, %struct.child* %45, i32 0, i32 7
  %47 = load i8, i8* %46, align 4
  %48 = and i8 %47, 1
  %49 = zext i8 %48 to i32
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %57

51:                                               ; preds = %44
  %52 = load %struct.child*, %struct.child** %4, align 8
  %53 = getelementptr inbounds %struct.child, %struct.child* %52, i32 0, i32 6
  %54 = load i32, i32* %53, align 8
  %55 = load i32, i32* %2, align 4
  %56 = call i32 (i32, i32, ...) bitcast (i32 (i32, i32)* @remote_kill to i32 (i32, i32, ...)*)(i32 %54, i32 %55)
  br label %57

57:                                               ; preds = %51, %44
  br label %58

58:                                               ; preds = %57
  %59 = load %struct.child*, %struct.child** %4, align 8
  %60 = getelementptr inbounds %struct.child, %struct.child* %59, i32 0, i32 0
  %61 = load %struct.child*, %struct.child** %60, align 8
  store %struct.child* %61, %struct.child** %4, align 8
  br label %41

62:                                               ; preds = %41
  %63 = load %struct.child*, %struct.child** @children, align 8
  store %struct.child* %63, %struct.child** %4, align 8
  br label %64

64:                                               ; preds = %69, %62
  %65 = load %struct.child*, %struct.child** %4, align 8
  %66 = icmp ne %struct.child* %65, null
  br i1 %66, label %67, label %73

67:                                               ; preds = %64
  %68 = load %struct.child*, %struct.child** %4, align 8
  call void @delete_child_targets(%struct.child* %68)
  br label %69

69:                                               ; preds = %67
  %70 = load %struct.child*, %struct.child** %4, align 8
  %71 = getelementptr inbounds %struct.child, %struct.child* %70, i32 0, i32 0
  %72 = load %struct.child*, %struct.child** %71, align 8
  store %struct.child* %72, %struct.child** %4, align 8
  br label %64

73:                                               ; preds = %64
  call void (...) bitcast (void ()* @pop_signals_blocked_p to void (...)*)()
  call void (i32, i32, ...) bitcast (void (i32, i32)* @wait_for_children to void (i32, i32, ...)*)(i32 0, i32 0)
  br label %75

74:                                               ; preds = %33
  call void (i32, i32, ...) bitcast (void (i32, i32)* @wait_for_children to void (i32, i32, ...)*)(i32 0, i32 1)
  br label %75

75:                                               ; preds = %74, %73
  call void (i32, ...) bitcast (void (i32)* @remove_intermediates to void (i32, ...)*)(i32 1)
  %76 = load i32, i32* %2, align 4
  %77 = icmp eq i32 %76, 3
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @exit(i32 1) #12
  unreachable

79:                                               ; preds = %75
  %80 = call i32 @getpid() #10
  %81 = load i32, i32* %2, align 4
  %82 = call i32 @kill(i32 %80, i32 %81) #10
  %83 = icmp slt i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %79
  call void (i8*, ...) bitcast (void (i8*)* @pfatal_with_name to void (i8*, ...)*)(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.17, i64 0, i64 0))
  br label %85

85:                                               ; preds = %84, %79
  ret i32 0
}

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #2

; Function Attrs: nounwind
declare dso_local i32 @sigsetmask(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @kill(i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @delete_child_targets(%struct.child* %0) #0 {
  %2 = alloca %struct.child*, align 8
  %3 = alloca %struct.stat, align 8
  %4 = alloca %struct.dep*, align 8
  store %struct.child* %0, %struct.child** %2, align 8
  %5 = load %struct.child*, %struct.child** %2, align 8
  %6 = getelementptr inbounds %struct.child, %struct.child* %5, i32 0, i32 7
  %7 = load i8, i8* %6, align 4
  %8 = lshr i8 %7, 3
  %9 = and i8 %8, 1
  %10 = zext i8 %9 to i32
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %1
  br label %145

13:                                               ; preds = %1
  %14 = load %struct.child*, %struct.child** %2, align 8
  %15 = getelementptr inbounds %struct.child, %struct.child* %14, i32 0, i32 1
  %16 = load %struct.file*, %struct.file** %15, align 8
  %17 = getelementptr inbounds %struct.file, %struct.file* %16, i32 0, i32 12
  %18 = load i16, i16* %17, align 2
  %19 = lshr i16 %18, 3
  %20 = and i16 %19, 1
  %21 = zext i16 %20 to i32
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %66, label %23

23:                                               ; preds = %13
  %24 = load %struct.child*, %struct.child** %2, align 8
  %25 = getelementptr inbounds %struct.child, %struct.child* %24, i32 0, i32 1
  %26 = load %struct.file*, %struct.file** %25, align 8
  %27 = getelementptr inbounds %struct.file, %struct.file* %26, i32 0, i32 1
  %28 = load i8*, i8** %27, align 8
  %29 = call i32 @stat(i8* %28, %struct.stat* %3) #10
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %66

31:                                               ; preds = %23
  %32 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 61440
  %35 = icmp eq i32 %34, 32768
  br i1 %35, label %36, label %66

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 12
  %38 = getelementptr inbounds %struct.timespec, %struct.timespec* %37, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = load %struct.child*, %struct.child** %2, align 8
  %41 = getelementptr inbounds %struct.child, %struct.child* %40, i32 0, i32 1
  %42 = load %struct.file*, %struct.file** %41, align 8
  %43 = getelementptr inbounds %struct.file, %struct.file* %42, i32 0, i32 6
  %44 = load i64, i64* %43, align 8
  %45 = icmp ne i64 %39, %44
  br i1 %45, label %46, label %66

46:                                               ; preds = %36
  %47 = load %struct.child*, %struct.child** %2, align 8
  %48 = getelementptr inbounds %struct.child, %struct.child* %47, i32 0, i32 1
  %49 = load %struct.file*, %struct.file** %48, align 8
  %50 = getelementptr inbounds %struct.file, %struct.file* %49, i32 0, i32 1
  %51 = load i8*, i8** %50, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3.18, i64 0, i64 0), i8* %51)
  %52 = load %struct.child*, %struct.child** %2, align 8
  %53 = getelementptr inbounds %struct.child, %struct.child* %52, i32 0, i32 1
  %54 = load %struct.file*, %struct.file** %53, align 8
  %55 = getelementptr inbounds %struct.file, %struct.file* %54, i32 0, i32 1
  %56 = load i8*, i8** %55, align 8
  %57 = call i32 @unlink(i8* %56) #10
  %58 = icmp slt i32 %57, 0
  br i1 %58, label %59, label %65

59:                                               ; preds = %46
  %60 = load %struct.child*, %struct.child** %2, align 8
  %61 = getelementptr inbounds %struct.child, %struct.child* %60, i32 0, i32 1
  %62 = load %struct.file*, %struct.file** %61, align 8
  %63 = getelementptr inbounds %struct.file, %struct.file* %62, i32 0, i32 1
  %64 = load i8*, i8** %63, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*)* @perror_with_name to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.19, i64 0, i64 0), i8* %64)
  br label %65

65:                                               ; preds = %59, %46
  br label %66

66:                                               ; preds = %65, %36, %31, %23, %13
  %67 = load %struct.child*, %struct.child** %2, align 8
  %68 = getelementptr inbounds %struct.child, %struct.child* %67, i32 0, i32 1
  %69 = load %struct.file*, %struct.file** %68, align 8
  %70 = getelementptr inbounds %struct.file, %struct.file* %69, i32 0, i32 5
  %71 = load %struct.dep*, %struct.dep** %70, align 8
  store %struct.dep* %71, %struct.dep** %4, align 8
  br label %72

72:                                               ; preds = %135, %66
  %73 = load %struct.dep*, %struct.dep** %4, align 8
  %74 = icmp ne %struct.dep* %73, null
  br i1 %74, label %75, label %139

75:                                               ; preds = %72
  %76 = load %struct.dep*, %struct.dep** %4, align 8
  %77 = getelementptr inbounds %struct.dep, %struct.dep* %76, i32 0, i32 2
  %78 = load %struct.file*, %struct.file** %77, align 8
  %79 = getelementptr inbounds %struct.file, %struct.file* %78, i32 0, i32 12
  %80 = load i16, i16* %79, align 2
  %81 = lshr i16 %80, 3
  %82 = and i16 %81, 1
  %83 = zext i16 %82 to i32
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %134, label %85

85:                                               ; preds = %75
  %86 = load %struct.dep*, %struct.dep** %4, align 8
  %87 = getelementptr inbounds %struct.dep, %struct.dep* %86, i32 0, i32 2
  %88 = load %struct.file*, %struct.file** %87, align 8
  %89 = getelementptr inbounds %struct.file, %struct.file* %88, i32 0, i32 1
  %90 = load i8*, i8** %89, align 8
  %91 = call i32 @stat(i8* %90, %struct.stat* %3) #10
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %133

93:                                               ; preds = %85
  %94 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3
  %95 = load i32, i32* %94, align 8
  %96 = and i32 %95, 61440
  %97 = icmp eq i32 %96, 32768
  br i1 %97, label %98, label %133

98:                                               ; preds = %93
  %99 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 12
  %100 = getelementptr inbounds %struct.timespec, %struct.timespec* %99, i32 0, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = load %struct.dep*, %struct.dep** %4, align 8
  %103 = getelementptr inbounds %struct.dep, %struct.dep* %102, i32 0, i32 2
  %104 = load %struct.file*, %struct.file** %103, align 8
  %105 = getelementptr inbounds %struct.file, %struct.file* %104, i32 0, i32 6
  %106 = load i64, i64* %105, align 8
  %107 = icmp ne i64 %101, %106
  br i1 %107, label %108, label %133

108:                                              ; preds = %98
  %109 = load %struct.child*, %struct.child** %2, align 8
  %110 = getelementptr inbounds %struct.child, %struct.child* %109, i32 0, i32 1
  %111 = load %struct.file*, %struct.file** %110, align 8
  %112 = getelementptr inbounds %struct.file, %struct.file* %111, i32 0, i32 1
  %113 = load i8*, i8** %112, align 8
  %114 = load %struct.dep*, %struct.dep** %4, align 8
  %115 = getelementptr inbounds %struct.dep, %struct.dep* %114, i32 0, i32 2
  %116 = load %struct.file*, %struct.file** %115, align 8
  %117 = getelementptr inbounds %struct.file, %struct.file* %116, i32 0, i32 1
  %118 = load i8*, i8** %117, align 8
  call void (i8*, i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, i8*, ...)*)(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.20, i64 0, i64 0), i8* %113, i8* %118)
  %119 = load %struct.dep*, %struct.dep** %4, align 8
  %120 = getelementptr inbounds %struct.dep, %struct.dep* %119, i32 0, i32 2
  %121 = load %struct.file*, %struct.file** %120, align 8
  %122 = getelementptr inbounds %struct.file, %struct.file* %121, i32 0, i32 1
  %123 = load i8*, i8** %122, align 8
  %124 = call i32 @unlink(i8* %123) #10
  %125 = icmp slt i32 %124, 0
  br i1 %125, label %126, label %132

126:                                              ; preds = %108
  %127 = load %struct.dep*, %struct.dep** %4, align 8
  %128 = getelementptr inbounds %struct.dep, %struct.dep* %127, i32 0, i32 2
  %129 = load %struct.file*, %struct.file** %128, align 8
  %130 = getelementptr inbounds %struct.file, %struct.file* %129, i32 0, i32 1
  %131 = load i8*, i8** %130, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*)* @perror_with_name to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.19, i64 0, i64 0), i8* %131)
  br label %132

132:                                              ; preds = %126, %108
  br label %133

133:                                              ; preds = %132, %98, %93, %85
  br label %134

134:                                              ; preds = %133, %75
  br label %135

135:                                              ; preds = %134
  %136 = load %struct.dep*, %struct.dep** %4, align 8
  %137 = getelementptr inbounds %struct.dep, %struct.dep* %136, i32 0, i32 0
  %138 = load %struct.dep*, %struct.dep** %137, align 8
  store %struct.dep* %138, %struct.dep** %4, align 8
  br label %72

139:                                              ; preds = %72
  %140 = load %struct.child*, %struct.child** %2, align 8
  %141 = getelementptr inbounds %struct.child, %struct.child* %140, i32 0, i32 7
  %142 = load i8, i8* %141, align 4
  %143 = and i8 %142, -9
  %144 = or i8 %143, 8
  store i8 %144, i8* %141, align 4
  br label %145

145:                                              ; preds = %139, %12
  ret void
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #6

; Function Attrs: nounwind
declare dso_local i32 @getpid() #2

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @print_commands(%struct.commands* %0) #0 {
  %2 = alloca %struct.commands*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store %struct.commands* %0, %struct.commands** %2, align 8
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %6 = call i32 @fputs(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6.21, i64 0, i64 0), %struct._IO_FILE* %5)
  %7 = load %struct.commands*, %struct.commands** %2, align 8
  %8 = getelementptr inbounds %struct.commands, %struct.commands* %7, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  %12 = call i32 @puts(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0))
  br label %21

13:                                               ; preds = %1
  %14 = load %struct.commands*, %struct.commands** %2, align 8
  %15 = getelementptr inbounds %struct.commands, %struct.commands* %14, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = load %struct.commands*, %struct.commands** %2, align 8
  %18 = getelementptr inbounds %struct.commands, %struct.commands* %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i8* %16, i32 %19)
  br label %21

21:                                               ; preds = %13, %11
  %22 = load %struct.commands*, %struct.commands** %2, align 8
  %23 = getelementptr inbounds %struct.commands, %struct.commands* %22, i32 0, i32 2
  %24 = load i8*, i8** %23, align 8
  store i8* %24, i8** %3, align 8
  br label %25

25:                                               ; preds = %56, %21
  %26 = load i8*, i8** %3, align 8
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %65

30:                                               ; preds = %25
  br label %31

31:                                               ; preds = %43, %30
  %32 = call i16** @__ctype_b_loc() #11
  %33 = load i16*, i16** %32, align 8
  %34 = load i8*, i8** %3, align 8
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i16, i16* %33, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = and i32 %40, 8192
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %31
  %44 = load i8*, i8** %3, align 8
  %45 = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %45, i8** %3, align 8
  br label %31

46:                                               ; preds = %31
  %47 = load i8*, i8** %3, align 8
  %48 = call i8* @strchr(i8* %47, i32 10) #9
  store i8* %48, i8** %4, align 8
  %49 = load i8*, i8** %4, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %56

51:                                               ; preds = %46
  %52 = load i8*, i8** %3, align 8
  %53 = load i8*, i8** %3, align 8
  %54 = call i64 @strlen(i8* %53) #9
  %55 = getelementptr inbounds i8, i8* %52, i64 %54
  store i8* %55, i8** %4, align 8
  br label %56

56:                                               ; preds = %51, %46
  %57 = load i8*, i8** %4, align 8
  %58 = load i8*, i8** %3, align 8
  %59 = ptrtoint i8* %57 to i64
  %60 = ptrtoint i8* %58 to i64
  %61 = sub i64 %59, %60
  %62 = load i8*, i8** %3, align 8
  %63 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i64 %61, i8* %62)
  %64 = load i8*, i8** %4, align 8
  store i8* %64, i8** %3, align 8
  br label %25

65:                                               ; preds = %25
  ret void
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

declare dso_local i32 @puts(i8*) #3

declare dso_local i32 @printf(i8*, ...) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @set_default_suffixes() #0 {
  %1 = alloca i8*, align 8
  %2 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0))
  store %struct.file* %2, %struct.file** @suffix_file, align 8
  %3 = load i32, i32* @no_builtin_rules_flag, align 4
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %0
  %6 = call %struct.variable* (i8*, i32, i8*, i32, i32, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32)* @define_variable to %struct.variable* (i8*, i32, i8*, i32, i32, ...)*)(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.33, i64 0, i64 0), i32 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.34, i64 0, i64 0), i32 0, i32 0)
  br label %14

7:                                                ; preds = %0
  store i8* getelementptr inbounds ([122 x i8], [122 x i8]* @default_suffixes, i64 0, i64 0), i8** %1, align 8
  %8 = call %struct.nameseq* (i8**, i32, i64, ...) bitcast (%struct.nameseq* (i8**, i32, i32)* @parse_file_seq to %struct.nameseq* (i8**, i32, i64, ...)*)(i8** %1, i32 0, i64 32)
  %9 = call %struct.nameseq* (%struct.nameseq*, i64, ...) bitcast (%struct.nameseq* (%struct.nameseq*, i32)* @multi_glob to %struct.nameseq* (%struct.nameseq*, i64, ...)*)(%struct.nameseq* %8, i64 32)
  %10 = bitcast %struct.nameseq* %9 to %struct.dep*
  %11 = load %struct.file*, %struct.file** @suffix_file, align 8
  %12 = getelementptr inbounds %struct.file, %struct.file* %11, i32 0, i32 2
  store %struct.dep* %10, %struct.dep** %12, align 8
  %13 = call %struct.variable* (i8*, i32, i8*, i32, i32, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32)* @define_variable to %struct.variable* (i8*, i32, i8*, i32, i32, ...)*)(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.33, i64 0, i64 0), i32 8, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @default_suffixes, i64 0, i64 0), i32 0, i32 0)
  br label %14

14:                                               ; preds = %7, %5
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @install_default_implicit_rules() #0 {
  %1 = alloca %struct.pspec*, align 8
  %2 = alloca i8**, align 8
  %3 = alloca %struct.file*, align 8
  %4 = load i32, i32* @no_builtin_rules_flag, align 4
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %0
  br label %67

7:                                                ; preds = %0
  store %struct.pspec* getelementptr inbounds ([3 x %struct.pspec], [3 x %struct.pspec]* @default_pattern_rules, i64 0, i64 0), %struct.pspec** %1, align 8
  br label %8

8:                                                ; preds = %15, %7
  %9 = load %struct.pspec*, %struct.pspec** %1, align 8
  %10 = getelementptr inbounds %struct.pspec, %struct.pspec* %9, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = load %struct.pspec*, %struct.pspec** %1, align 8
  call void (%struct.pspec*, i32, ...) bitcast (void (%struct.pspec*, i32)* @install_pattern_rule to void (%struct.pspec*, i32, ...)*)(%struct.pspec* %14, i32 0)
  br label %15

15:                                               ; preds = %13
  %16 = load %struct.pspec*, %struct.pspec** %1, align 8
  %17 = getelementptr inbounds %struct.pspec, %struct.pspec* %16, i32 1
  store %struct.pspec* %17, %struct.pspec** %1, align 8
  br label %8

18:                                               ; preds = %8
  store %struct.pspec* getelementptr inbounds ([5 x %struct.pspec], [5 x %struct.pspec]* @default_terminal_rules, i64 0, i64 0), %struct.pspec** %1, align 8
  br label %19

19:                                               ; preds = %26, %18
  %20 = load %struct.pspec*, %struct.pspec** %1, align 8
  %21 = getelementptr inbounds %struct.pspec, %struct.pspec* %20, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp ne i8* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %19
  %25 = load %struct.pspec*, %struct.pspec** %1, align 8
  call void (%struct.pspec*, i32, ...) bitcast (void (%struct.pspec*, i32)* @install_pattern_rule to void (%struct.pspec*, i32, ...)*)(%struct.pspec* %25, i32 1)
  br label %26

26:                                               ; preds = %24
  %27 = load %struct.pspec*, %struct.pspec** %1, align 8
  %28 = getelementptr inbounds %struct.pspec, %struct.pspec* %27, i32 1
  store %struct.pspec* %28, %struct.pspec** %1, align 8
  br label %19

29:                                               ; preds = %19
  store i8** getelementptr inbounds ([83 x i8*], [83 x i8*]* @default_suffix_rules, i64 0, i64 0), i8*** %2, align 8
  br label %30

30:                                               ; preds = %64, %29
  %31 = load i8**, i8*** %2, align 8
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %32, null
  br i1 %33, label %34, label %67

34:                                               ; preds = %30
  %35 = load i8**, i8*** %2, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 0
  %37 = load i8*, i8** %36, align 8
  %38 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* %37)
  store %struct.file* %38, %struct.file** %3, align 8
  %39 = load %struct.file*, %struct.file** %3, align 8
  %40 = getelementptr inbounds %struct.file, %struct.file* %39, i32 0, i32 3
  %41 = load %struct.commands*, %struct.commands** %40, align 8
  %42 = icmp eq %struct.commands* %41, null
  br i1 %42, label %43, label %63

43:                                               ; preds = %34
  %44 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 56)
  %45 = bitcast i8* %44 to %struct.commands*
  %46 = load %struct.file*, %struct.file** %3, align 8
  %47 = getelementptr inbounds %struct.file, %struct.file* %46, i32 0, i32 3
  store %struct.commands* %45, %struct.commands** %47, align 8
  %48 = load %struct.file*, %struct.file** %3, align 8
  %49 = getelementptr inbounds %struct.file, %struct.file* %48, i32 0, i32 3
  %50 = load %struct.commands*, %struct.commands** %49, align 8
  %51 = getelementptr inbounds %struct.commands, %struct.commands* %50, i32 0, i32 0
  store i8* null, i8** %51, align 8
  %52 = load i8**, i8*** %2, align 8
  %53 = getelementptr inbounds i8*, i8** %52, i64 1
  %54 = load i8*, i8** %53, align 8
  %55 = load %struct.file*, %struct.file** %3, align 8
  %56 = getelementptr inbounds %struct.file, %struct.file* %55, i32 0, i32 3
  %57 = load %struct.commands*, %struct.commands** %56, align 8
  %58 = getelementptr inbounds %struct.commands, %struct.commands* %57, i32 0, i32 2
  store i8* %54, i8** %58, align 8
  %59 = load %struct.file*, %struct.file** %3, align 8
  %60 = getelementptr inbounds %struct.file, %struct.file* %59, i32 0, i32 3
  %61 = load %struct.commands*, %struct.commands** %60, align 8
  %62 = getelementptr inbounds %struct.commands, %struct.commands* %61, i32 0, i32 4
  store i8** null, i8*** %62, align 8
  br label %63

63:                                               ; preds = %43, %34
  br label %64

64:                                               ; preds = %63
  %65 = load i8**, i8*** %2, align 8
  %66 = getelementptr inbounds i8*, i8** %65, i64 2
  store i8** %66, i8*** %2, align 8
  br label %30

67:                                               ; preds = %30, %6
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @define_default_variables() #0 {
  %1 = alloca i8**, align 8
  store i8** getelementptr inbounds ([108 x i8*], [108 x i8*]* @default_variables, i64 0, i64 0), i8*** %1, align 8
  br label %2

2:                                                ; preds = %18, %0
  %3 = load i8**, i8*** %1, align 8
  %4 = load i8*, i8** %3, align 8
  %5 = icmp ne i8* %4, null
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = load i8**, i8*** %1, align 8
  %8 = getelementptr inbounds i8*, i8** %7, i64 0
  %9 = load i8*, i8** %8, align 8
  %10 = load i8**, i8*** %1, align 8
  %11 = getelementptr inbounds i8*, i8** %10, i64 0
  %12 = load i8*, i8** %11, align 8
  %13 = call i64 @strlen(i8* %12) #9
  %14 = load i8**, i8*** %1, align 8
  %15 = getelementptr inbounds i8*, i8** %14, i64 1
  %16 = load i8*, i8** %15, align 8
  %17 = call %struct.variable* (i8*, i64, i8*, i32, i32, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32)* @define_variable to %struct.variable* (i8*, i64, i8*, i32, i32, ...)*)(i8* %9, i64 %13, i8* %16, i32 0, i32 1)
  br label %18

18:                                               ; preds = %6
  %19 = load i8**, i8*** %1, align 8
  %20 = getelementptr inbounds i8*, i8** %19, i64 2
  store i8** %20, i8*** %1, align 8
  br label %2

21:                                               ; preds = %2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @dir_file_exists_p(i8* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %struct.directory*, align 8
  %9 = alloca %struct.dirfile*, align 8
  %10 = alloca %struct.dirent*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %13 = load i8*, i8** %4, align 8
  %14 = call %struct.directory* @find_directory(i8* %13)
  store %struct.directory* %14, %struct.directory** %8, align 8
  %15 = load %struct.directory*, %struct.directory** %8, align 8
  %16 = getelementptr inbounds %struct.directory, %struct.directory* %15, i32 0, i32 2
  %17 = load %struct.dirfile**, %struct.dirfile*** %16, align 8
  %18 = icmp eq %struct.dirfile** %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %240

20:                                               ; preds = %2
  store i32 0, i32* %6, align 4
  %21 = load i8*, i8** %5, align 8
  %22 = icmp ne i8* %21, null
  br i1 %22, label %23, label %108

23:                                               ; preds = %20
  %24 = load i8*, i8** %5, align 8
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  store i32 1, i32* %3, align 4
  br label %240

29:                                               ; preds = %23
  %30 = load i8*, i8** %5, align 8
  store i8* %30, i8** %7, align 8
  br label %31

31:                                               ; preds = %47, %29
  %32 = load i8*, i8** %7, align 8
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %50

36:                                               ; preds = %31
  %37 = load i8*, i8** %7, align 8
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i32
  %40 = load i32, i32* %6, align 4
  %41 = add i32 %40, %39
  store i32 %41, i32* %6, align 4
  %42 = load i32, i32* %6, align 4
  %43 = shl i32 %42, 7
  %44 = load i32, i32* %6, align 4
  %45 = lshr i32 %44, 20
  %46 = add i32 %43, %45
  store i32 %46, i32* %6, align 4
  br label %47

47:                                               ; preds = %36
  %48 = load i8*, i8** %7, align 8
  %49 = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %49, i8** %7, align 8
  br label %31

50:                                               ; preds = %31
  %51 = load i32, i32* %6, align 4
  %52 = urem i32 %51, 1007
  store i32 %52, i32* %6, align 4
  %53 = load %struct.directory*, %struct.directory** %8, align 8
  %54 = getelementptr inbounds %struct.directory, %struct.directory* %53, i32 0, i32 2
  %55 = load %struct.dirfile**, %struct.dirfile*** %54, align 8
  %56 = load i32, i32* %6, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %struct.dirfile*, %struct.dirfile** %55, i64 %57
  %59 = load %struct.dirfile*, %struct.dirfile** %58, align 8
  store %struct.dirfile* %59, %struct.dirfile** %9, align 8
  br label %60

60:                                               ; preds = %103, %50
  %61 = load %struct.dirfile*, %struct.dirfile** %9, align 8
  %62 = icmp ne %struct.dirfile* %61, null
  br i1 %62, label %63, label %107

63:                                               ; preds = %60
  %64 = load %struct.dirfile*, %struct.dirfile** %9, align 8
  %65 = getelementptr inbounds %struct.dirfile, %struct.dirfile* %64, i32 0, i32 1
  %66 = load i8*, i8** %65, align 8
  %67 = load i8*, i8** %5, align 8
  %68 = icmp eq i8* %66, %67
  br i1 %68, label %95, label %69

69:                                               ; preds = %63
  %70 = load %struct.dirfile*, %struct.dirfile** %9, align 8
  %71 = getelementptr inbounds %struct.dirfile, %struct.dirfile* %70, i32 0, i32 1
  %72 = load i8*, i8** %71, align 8
  %73 = load i8, i8* %72, align 1
  %74 = sext i8 %73 to i32
  %75 = load i8*, i8** %5, align 8
  %76 = load i8, i8* %75, align 1
  %77 = sext i8 %76 to i32
  %78 = icmp eq i32 %74, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %69
  %80 = load %struct.dirfile*, %struct.dirfile** %9, align 8
  %81 = getelementptr inbounds %struct.dirfile, %struct.dirfile* %80, i32 0, i32 1
  %82 = load i8*, i8** %81, align 8
  %83 = load i8, i8* %82, align 1
  %84 = sext i8 %83 to i32
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %95, label %86

86:                                               ; preds = %79
  %87 = load %struct.dirfile*, %struct.dirfile** %9, align 8
  %88 = getelementptr inbounds %struct.dirfile, %struct.dirfile* %87, i32 0, i32 1
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds i8, i8* %89, i64 1
  %91 = load i8*, i8** %5, align 8
  %92 = getelementptr inbounds i8, i8* %91, i64 1
  %93 = call i32 @strcmp(i8* %90, i8* %92) #9
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %102, label %95

95:                                               ; preds = %86, %79, %63
  %96 = load %struct.dirfile*, %struct.dirfile** %9, align 8
  %97 = getelementptr inbounds %struct.dirfile, %struct.dirfile* %96, i32 0, i32 2
  %98 = load i8, i8* %97, align 8
  %99 = icmp ne i8 %98, 0
  %100 = xor i1 %99, true
  %101 = zext i1 %100 to i32
  store i32 %101, i32* %3, align 4
  br label %240

102:                                              ; preds = %86, %69
  br label %103

103:                                              ; preds = %102
  %104 = load %struct.dirfile*, %struct.dirfile** %9, align 8
  %105 = getelementptr inbounds %struct.dirfile, %struct.dirfile* %104, i32 0, i32 0
  %106 = load %struct.dirfile*, %struct.dirfile** %105, align 8
  store %struct.dirfile* %106, %struct.dirfile** %9, align 8
  br label %60

107:                                              ; preds = %60
  br label %108

108:                                              ; preds = %107, %20
  %109 = load %struct.directory*, %struct.directory** %8, align 8
  %110 = getelementptr inbounds %struct.directory, %struct.directory* %109, i32 0, i32 3
  %111 = load %struct.__dirstream*, %struct.__dirstream** %110, align 8
  %112 = icmp eq %struct.__dirstream* %111, null
  br i1 %112, label %113, label %114

113:                                              ; preds = %108
  store i32 0, i32* %3, align 4
  br label %240

114:                                              ; preds = %108
  br label %115

115:                                              ; preds = %226, %126, %114
  %116 = load %struct.directory*, %struct.directory** %8, align 8
  %117 = getelementptr inbounds %struct.directory, %struct.directory* %116, i32 0, i32 3
  %118 = load %struct.__dirstream*, %struct.__dirstream** %117, align 8
  %119 = call %struct.dirent* @readdir(%struct.__dirstream* %118)
  store %struct.dirent* %119, %struct.dirent** %10, align 8
  %120 = icmp ne %struct.dirent* %119, null
  br i1 %120, label %121, label %227

121:                                              ; preds = %115
  store i32 0, i32* %11, align 4
  %122 = load %struct.dirent*, %struct.dirent** %10, align 8
  %123 = getelementptr inbounds %struct.dirent, %struct.dirent* %122, i32 0, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = icmp ne i64 %124, 0
  br i1 %125, label %127, label %126

126:                                              ; preds = %121
  br label %115

127:                                              ; preds = %121
  store i32 0, i32* %12, align 4
  br label %128

128:                                              ; preds = %151, %127
  %129 = load i32, i32* %12, align 4
  %130 = zext i32 %129 to i64
  %131 = load %struct.dirent*, %struct.dirent** %10, align 8
  %132 = getelementptr inbounds %struct.dirent, %struct.dirent* %131, i32 0, i32 4
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* %132, i64 0, i64 0
  %134 = call i64 @strlen(i8* %133) #9
  %135 = icmp ult i64 %130, %134
  br i1 %135, label %136, label %154

136:                                              ; preds = %128
  %137 = load %struct.dirent*, %struct.dirent** %10, align 8
  %138 = getelementptr inbounds %struct.dirent, %struct.dirent* %137, i32 0, i32 4
  %139 = load i32, i32* %12, align 4
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds [256 x i8], [256 x i8]* %138, i64 0, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = sext i8 %142 to i32
  %144 = load i32, i32* %11, align 4
  %145 = add i32 %144, %143
  store i32 %145, i32* %11, align 4
  %146 = load i32, i32* %11, align 4
  %147 = shl i32 %146, 7
  %148 = load i32, i32* %11, align 4
  %149 = lshr i32 %148, 20
  %150 = add i32 %147, %149
  store i32 %150, i32* %11, align 4
  br label %151

151:                                              ; preds = %136
  %152 = load i32, i32* %12, align 4
  %153 = add i32 %152, 1
  store i32 %153, i32* %12, align 4
  br label %128

154:                                              ; preds = %128
  %155 = load i32, i32* %11, align 4
  %156 = urem i32 %155, 1007
  store i32 %156, i32* %11, align 4
  %157 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 24)
  %158 = bitcast i8* %157 to %struct.dirfile*
  store %struct.dirfile* %158, %struct.dirfile** %9, align 8
  %159 = load %struct.directory*, %struct.directory** %8, align 8
  %160 = getelementptr inbounds %struct.directory, %struct.directory* %159, i32 0, i32 2
  %161 = load %struct.dirfile**, %struct.dirfile*** %160, align 8
  %162 = load i32, i32* %11, align 4
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds %struct.dirfile*, %struct.dirfile** %161, i64 %163
  %165 = load %struct.dirfile*, %struct.dirfile** %164, align 8
  %166 = load %struct.dirfile*, %struct.dirfile** %9, align 8
  %167 = getelementptr inbounds %struct.dirfile, %struct.dirfile* %166, i32 0, i32 0
  store %struct.dirfile* %165, %struct.dirfile** %167, align 8
  %168 = load %struct.dirfile*, %struct.dirfile** %9, align 8
  %169 = load %struct.directory*, %struct.directory** %8, align 8
  %170 = getelementptr inbounds %struct.directory, %struct.directory* %169, i32 0, i32 2
  %171 = load %struct.dirfile**, %struct.dirfile*** %170, align 8
  %172 = load i32, i32* %11, align 4
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds %struct.dirfile*, %struct.dirfile** %171, i64 %173
  store %struct.dirfile* %168, %struct.dirfile** %174, align 8
  %175 = load %struct.dirent*, %struct.dirent** %10, align 8
  %176 = getelementptr inbounds %struct.dirent, %struct.dirent* %175, i32 0, i32 4
  %177 = getelementptr inbounds [256 x i8], [256 x i8]* %176, i64 0, i64 0
  %178 = load %struct.dirent*, %struct.dirent** %10, align 8
  %179 = getelementptr inbounds %struct.dirent, %struct.dirent* %178, i32 0, i32 4
  %180 = getelementptr inbounds [256 x i8], [256 x i8]* %179, i64 0, i64 0
  %181 = call i64 @strlen(i8* %180) #9
  %182 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %177, i64 %181)
  %183 = load %struct.dirfile*, %struct.dirfile** %9, align 8
  %184 = getelementptr inbounds %struct.dirfile, %struct.dirfile* %183, i32 0, i32 1
  store i8* %182, i8** %184, align 8
  %185 = load %struct.dirfile*, %struct.dirfile** %9, align 8
  %186 = getelementptr inbounds %struct.dirfile, %struct.dirfile* %185, i32 0, i32 2
  store i8 0, i8* %186, align 8
  %187 = load i8*, i8** %5, align 8
  %188 = icmp ne i8* %187, null
  br i1 %188, label %189, label %226

189:                                              ; preds = %154
  %190 = load i32, i32* %11, align 4
  %191 = load i32, i32* %6, align 4
  %192 = icmp eq i32 %190, %191
  br i1 %192, label %193, label %226

193:                                              ; preds = %189
  %194 = load %struct.dirent*, %struct.dirent** %10, align 8
  %195 = getelementptr inbounds %struct.dirent, %struct.dirent* %194, i32 0, i32 4
  %196 = getelementptr inbounds [256 x i8], [256 x i8]* %195, i64 0, i64 0
  %197 = load i8*, i8** %5, align 8
  %198 = icmp eq i8* %196, %197
  br i1 %198, label %225, label %199

199:                                              ; preds = %193
  %200 = load %struct.dirent*, %struct.dirent** %10, align 8
  %201 = getelementptr inbounds %struct.dirent, %struct.dirent* %200, i32 0, i32 4
  %202 = getelementptr inbounds [256 x i8], [256 x i8]* %201, i64 0, i64 0
  %203 = load i8, i8* %202, align 1
  %204 = sext i8 %203 to i32
  %205 = load i8*, i8** %5, align 8
  %206 = load i8, i8* %205, align 1
  %207 = sext i8 %206 to i32
  %208 = icmp eq i32 %204, %207
  br i1 %208, label %209, label %226

209:                                              ; preds = %199
  %210 = load %struct.dirent*, %struct.dirent** %10, align 8
  %211 = getelementptr inbounds %struct.dirent, %struct.dirent* %210, i32 0, i32 4
  %212 = getelementptr inbounds [256 x i8], [256 x i8]* %211, i64 0, i64 0
  %213 = load i8, i8* %212, align 1
  %214 = sext i8 %213 to i32
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %225, label %216

216:                                              ; preds = %209
  %217 = load %struct.dirent*, %struct.dirent** %10, align 8
  %218 = getelementptr inbounds %struct.dirent, %struct.dirent* %217, i32 0, i32 4
  %219 = getelementptr inbounds [256 x i8], [256 x i8]* %218, i64 0, i64 0
  %220 = getelementptr inbounds i8, i8* %219, i64 1
  %221 = load i8*, i8** %5, align 8
  %222 = getelementptr inbounds i8, i8* %221, i64 1
  %223 = call i32 @strcmp(i8* %220, i8* %222) #9
  %224 = icmp ne i32 %223, 0
  br i1 %224, label %226, label %225

225:                                              ; preds = %216, %209, %193
  store i32 1, i32* %3, align 4
  br label %240

226:                                              ; preds = %216, %199, %189, %154
  br label %115

227:                                              ; preds = %115
  %228 = load %struct.dirent*, %struct.dirent** %10, align 8
  %229 = icmp eq %struct.dirent* %228, null
  br i1 %229, label %230, label %239

230:                                              ; preds = %227
  %231 = load i32, i32* @open_directories, align 4
  %232 = add i32 %231, -1
  store i32 %232, i32* @open_directories, align 4
  %233 = load %struct.directory*, %struct.directory** %8, align 8
  %234 = getelementptr inbounds %struct.directory, %struct.directory* %233, i32 0, i32 3
  %235 = load %struct.__dirstream*, %struct.__dirstream** %234, align 8
  %236 = call i32 @closedir(%struct.__dirstream* %235)
  %237 = load %struct.directory*, %struct.directory** %8, align 8
  %238 = getelementptr inbounds %struct.directory, %struct.directory* %237, i32 0, i32 3
  store %struct.__dirstream* null, %struct.__dirstream** %238, align 8
  br label %239

239:                                              ; preds = %230, %227
  store i32 0, i32* %3, align 4
  br label %240

240:                                              ; preds = %239, %225, %113, %95, %28, %19
  %241 = load i32, i32* %3, align 4
  ret i32 %241
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.directory* @find_directory(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %struct.directory*, align 8
  store i8* %0, i8** %2, align 8
  store i32 0, i32* %3, align 4
  %6 = load i8*, i8** %2, align 8
  store i8* %6, i8** %4, align 8
  br label %7

7:                                                ; preds = %23, %1
  %8 = load i8*, i8** %4, align 8
  %9 = load i8, i8* %8, align 1
  %10 = sext i8 %9 to i32
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %7
  %13 = load i8*, i8** %4, align 8
  %14 = load i8, i8* %13, align 1
  %15 = sext i8 %14 to i32
  %16 = load i32, i32* %3, align 4
  %17 = add i32 %16, %15
  store i32 %17, i32* %3, align 4
  %18 = load i32, i32* %3, align 4
  %19 = shl i32 %18, 7
  %20 = load i32, i32* %3, align 4
  %21 = lshr i32 %20, 20
  %22 = add i32 %19, %21
  store i32 %22, i32* %3, align 4
  br label %23

23:                                               ; preds = %12
  %24 = load i8*, i8** %4, align 8
  %25 = getelementptr inbounds i8, i8* %24, i32 1
  store i8* %25, i8** %4, align 8
  br label %7

26:                                               ; preds = %7
  %27 = load i32, i32* %3, align 4
  %28 = urem i32 %27, 23
  store i32 %28, i32* %3, align 4
  %29 = load i32, i32* %3, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds [23 x %struct.directory*], [23 x %struct.directory*]* @directories, i64 0, i64 %30
  %32 = load %struct.directory*, %struct.directory** %31, align 8
  store %struct.directory* %32, %struct.directory** %5, align 8
  br label %33

33:                                               ; preds = %70, %26
  %34 = load %struct.directory*, %struct.directory** %5, align 8
  %35 = icmp ne %struct.directory* %34, null
  br i1 %35, label %36, label %74

36:                                               ; preds = %33
  %37 = load %struct.directory*, %struct.directory** %5, align 8
  %38 = getelementptr inbounds %struct.directory, %struct.directory* %37, i32 0, i32 1
  %39 = load i8*, i8** %38, align 8
  %40 = load i8*, i8** %2, align 8
  %41 = icmp eq i8* %39, %40
  br i1 %41, label %68, label %42

42:                                               ; preds = %36
  %43 = load %struct.directory*, %struct.directory** %5, align 8
  %44 = getelementptr inbounds %struct.directory, %struct.directory* %43, i32 0, i32 1
  %45 = load i8*, i8** %44, align 8
  %46 = load i8, i8* %45, align 1
  %47 = sext i8 %46 to i32
  %48 = load i8*, i8** %2, align 8
  %49 = load i8, i8* %48, align 1
  %50 = sext i8 %49 to i32
  %51 = icmp eq i32 %47, %50
  br i1 %51, label %52, label %69

52:                                               ; preds = %42
  %53 = load %struct.directory*, %struct.directory** %5, align 8
  %54 = getelementptr inbounds %struct.directory, %struct.directory* %53, i32 0, i32 1
  %55 = load i8*, i8** %54, align 8
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %68, label %59

59:                                               ; preds = %52
  %60 = load %struct.directory*, %struct.directory** %5, align 8
  %61 = getelementptr inbounds %struct.directory, %struct.directory* %60, i32 0, i32 1
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 1
  %64 = load i8*, i8** %2, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 1
  %66 = call i32 @strcmp(i8* %63, i8* %65) #9
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %69, label %68

68:                                               ; preds = %59, %52, %36
  br label %74

69:                                               ; preds = %59, %42
  br label %70

70:                                               ; preds = %69
  %71 = load %struct.directory*, %struct.directory** %5, align 8
  %72 = getelementptr inbounds %struct.directory, %struct.directory* %71, i32 0, i32 0
  %73 = load %struct.directory*, %struct.directory** %72, align 8
  store %struct.directory* %73, %struct.directory** %5, align 8
  br label %33

74:                                               ; preds = %68, %33
  %75 = load %struct.directory*, %struct.directory** %5, align 8
  %76 = icmp eq %struct.directory* %75, null
  br i1 %76, label %77, label %130

77:                                               ; preds = %74
  %78 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 32)
  %79 = bitcast i8* %78 to %struct.directory*
  store %struct.directory* %79, %struct.directory** %5, align 8
  %80 = load i32, i32* %3, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds [23 x %struct.directory*], [23 x %struct.directory*]* @directories, i64 0, i64 %81
  %83 = load %struct.directory*, %struct.directory** %82, align 8
  %84 = load %struct.directory*, %struct.directory** %5, align 8
  %85 = getelementptr inbounds %struct.directory, %struct.directory* %84, i32 0, i32 0
  store %struct.directory* %83, %struct.directory** %85, align 8
  %86 = load %struct.directory*, %struct.directory** %5, align 8
  %87 = load i32, i32* %3, align 4
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds [23 x %struct.directory*], [23 x %struct.directory*]* @directories, i64 0, i64 %88
  store %struct.directory* %86, %struct.directory** %89, align 8
  %90 = load i8*, i8** %2, align 8
  %91 = load i8*, i8** %4, align 8
  %92 = load i8*, i8** %2, align 8
  %93 = ptrtoint i8* %91 to i64
  %94 = ptrtoint i8* %92 to i64
  %95 = sub i64 %93, %94
  %96 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %90, i64 %95)
  %97 = load %struct.directory*, %struct.directory** %5, align 8
  %98 = getelementptr inbounds %struct.directory, %struct.directory* %97, i32 0, i32 1
  store i8* %96, i8** %98, align 8
  %99 = load i8*, i8** %2, align 8
  %100 = call %struct.__dirstream* @opendir(i8* %99)
  %101 = load %struct.directory*, %struct.directory** %5, align 8
  %102 = getelementptr inbounds %struct.directory, %struct.directory* %101, i32 0, i32 3
  store %struct.__dirstream* %100, %struct.__dirstream** %102, align 8
  %103 = load %struct.directory*, %struct.directory** %5, align 8
  %104 = getelementptr inbounds %struct.directory, %struct.directory* %103, i32 0, i32 3
  %105 = load %struct.__dirstream*, %struct.__dirstream** %104, align 8
  %106 = icmp eq %struct.__dirstream* %105, null
  br i1 %106, label %107, label %110

107:                                              ; preds = %77
  %108 = load %struct.directory*, %struct.directory** %5, align 8
  %109 = getelementptr inbounds %struct.directory, %struct.directory* %108, i32 0, i32 2
  store %struct.dirfile** null, %struct.dirfile*** %109, align 8
  br label %129

110:                                              ; preds = %77
  %111 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 24168)
  %112 = bitcast i8* %111 to %struct.dirfile**
  %113 = load %struct.directory*, %struct.directory** %5, align 8
  %114 = getelementptr inbounds %struct.directory, %struct.directory* %113, i32 0, i32 2
  store %struct.dirfile** %112, %struct.dirfile*** %114, align 8
  %115 = load %struct.directory*, %struct.directory** %5, align 8
  %116 = getelementptr inbounds %struct.directory, %struct.directory* %115, i32 0, i32 2
  %117 = load %struct.dirfile**, %struct.dirfile*** %116, align 8
  %118 = bitcast %struct.dirfile** %117 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %118, i8 0, i64 24168, i1 false)
  %119 = load i32, i32* @open_directories, align 4
  %120 = add i32 %119, 1
  store i32 %120, i32* @open_directories, align 4
  %121 = load i32, i32* @open_directories, align 4
  %122 = icmp eq i32 %121, 10
  br i1 %122, label %123, label %128

123:                                              ; preds = %110
  %124 = load %struct.directory*, %struct.directory** %5, align 8
  %125 = getelementptr inbounds %struct.directory, %struct.directory* %124, i32 0, i32 1
  %126 = load i8*, i8** %125, align 8
  %127 = call i32 @dir_file_exists_p(i8* %126, i8* null)
  br label %128

128:                                              ; preds = %123, %110
  br label %129

129:                                              ; preds = %128, %107
  br label %130

130:                                              ; preds = %129, %74
  %131 = load %struct.directory*, %struct.directory** %5, align 8
  ret %struct.directory* %131
}

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) #3

declare dso_local i32 @closedir(%struct.__dirstream*) #3

declare dso_local %struct.__dirstream* @opendir(i8*) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @file_exists_p(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = call i32 (i8*, ...) bitcast (i32 (i8*)* @ar_name to i32 (i8*, ...)*)(i8* %6)
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %1
  %10 = load i8*, i8** %3, align 8
  %11 = call i64 (i8*, ...) bitcast (i64 (i8*)* @ar_member_date to i64 (i8*, ...)*)(i8* %10)
  %12 = icmp ne i64 %11, -1
  %13 = zext i1 %12 to i32
  store i32 %13, i32* %2, align 4
  br label %48

14:                                               ; preds = %1
  %15 = load i8*, i8** %3, align 8
  %16 = call i8* @strrchr(i8* %15, i32 47) #9
  store i8* %16, i8** %4, align 8
  %17 = load i8*, i8** %4, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = load i8*, i8** %3, align 8
  %21 = call i32 @dir_file_exists_p(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0), i8* %20)
  store i32 %21, i32* %2, align 4
  br label %48

22:                                               ; preds = %14
  %23 = load i8*, i8** %4, align 8
  %24 = load i8*, i8** %3, align 8
  %25 = ptrtoint i8* %23 to i64
  %26 = ptrtoint i8* %24 to i64
  %27 = sub i64 %25, %26
  %28 = add nsw i64 %27, 1
  %29 = alloca i8, i64 %28, align 16
  store i8* %29, i8** %5, align 8
  %30 = load i8*, i8** %5, align 8
  %31 = load i8*, i8** %3, align 8
  %32 = load i8*, i8** %4, align 8
  %33 = load i8*, i8** %3, align 8
  %34 = ptrtoint i8* %32 to i64
  %35 = ptrtoint i8* %33 to i64
  %36 = sub i64 %34, %35
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 %36, i1 false)
  %37 = load i8*, i8** %5, align 8
  %38 = load i8*, i8** %4, align 8
  %39 = load i8*, i8** %3, align 8
  %40 = ptrtoint i8* %38 to i64
  %41 = ptrtoint i8* %39 to i64
  %42 = sub i64 %40, %41
  %43 = getelementptr inbounds i8, i8* %37, i64 %42
  store i8 0, i8* %43, align 1
  %44 = load i8*, i8** %5, align 8
  %45 = load i8*, i8** %4, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 1
  %47 = call i32 @dir_file_exists_p(i8* %44, i8* %46)
  store i32 %47, i32* %2, align 4
  br label %48

48:                                               ; preds = %22, %19, %9
  %49 = load i32, i32* %2, align 4
  ret i32 %49
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @file_impossible(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.directory*, align 8
  %7 = alloca %struct.dirfile*, align 8
  %8 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %9 = load i8*, i8** %2, align 8
  store i8* %9, i8** %4, align 8
  %10 = load i8*, i8** %4, align 8
  %11 = call i8* @strrchr(i8* %10, i32 47) #9
  store i8* %11, i8** %3, align 8
  %12 = load i8*, i8** %3, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %1
  %15 = call %struct.directory* @find_directory(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0))
  store %struct.directory* %15, %struct.directory** %6, align 8
  br label %42

16:                                               ; preds = %1
  %17 = load i8*, i8** %3, align 8
  %18 = load i8*, i8** %4, align 8
  %19 = ptrtoint i8* %17 to i64
  %20 = ptrtoint i8* %18 to i64
  %21 = sub i64 %19, %20
  %22 = add nsw i64 %21, 1
  %23 = alloca i8, i64 %22, align 16
  store i8* %23, i8** %8, align 8
  %24 = load i8*, i8** %8, align 8
  %25 = load i8*, i8** %4, align 8
  %26 = load i8*, i8** %3, align 8
  %27 = load i8*, i8** %4, align 8
  %28 = ptrtoint i8* %26 to i64
  %29 = ptrtoint i8* %27 to i64
  %30 = sub i64 %28, %29
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %25, i64 %30, i1 false)
  %31 = load i8*, i8** %8, align 8
  %32 = load i8*, i8** %3, align 8
  %33 = load i8*, i8** %4, align 8
  %34 = ptrtoint i8* %32 to i64
  %35 = ptrtoint i8* %33 to i64
  %36 = sub i64 %34, %35
  %37 = getelementptr inbounds i8, i8* %31, i64 %36
  store i8 0, i8* %37, align 1
  %38 = load i8*, i8** %8, align 8
  %39 = call %struct.directory* @find_directory(i8* %38)
  store %struct.directory* %39, %struct.directory** %6, align 8
  %40 = load i8*, i8** %3, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 1
  store i8* %41, i8** %4, align 8
  store i8* %41, i8** %2, align 8
  br label %42

42:                                               ; preds = %16, %14
  store i32 0, i32* %5, align 4
  br label %43

43:                                               ; preds = %59, %42
  %44 = load i8*, i8** %4, align 8
  %45 = load i8, i8* %44, align 1
  %46 = sext i8 %45 to i32
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %62

48:                                               ; preds = %43
  %49 = load i8*, i8** %4, align 8
  %50 = load i8, i8* %49, align 1
  %51 = sext i8 %50 to i32
  %52 = load i32, i32* %5, align 4
  %53 = add i32 %52, %51
  store i32 %53, i32* %5, align 4
  %54 = load i32, i32* %5, align 4
  %55 = shl i32 %54, 7
  %56 = load i32, i32* %5, align 4
  %57 = lshr i32 %56, 20
  %58 = add i32 %55, %57
  store i32 %58, i32* %5, align 4
  br label %59

59:                                               ; preds = %48
  %60 = load i8*, i8** %4, align 8
  %61 = getelementptr inbounds i8, i8* %60, i32 1
  store i8* %61, i8** %4, align 8
  br label %43

62:                                               ; preds = %43
  %63 = load i32, i32* %5, align 4
  %64 = urem i32 %63, 1007
  store i32 %64, i32* %5, align 4
  %65 = load %struct.directory*, %struct.directory** %6, align 8
  %66 = getelementptr inbounds %struct.directory, %struct.directory* %65, i32 0, i32 2
  %67 = load %struct.dirfile**, %struct.dirfile*** %66, align 8
  %68 = icmp eq %struct.dirfile** %67, null
  br i1 %68, label %69, label %78

69:                                               ; preds = %62
  %70 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 24168)
  %71 = bitcast i8* %70 to %struct.dirfile**
  %72 = load %struct.directory*, %struct.directory** %6, align 8
  %73 = getelementptr inbounds %struct.directory, %struct.directory* %72, i32 0, i32 2
  store %struct.dirfile** %71, %struct.dirfile*** %73, align 8
  %74 = load %struct.directory*, %struct.directory** %6, align 8
  %75 = getelementptr inbounds %struct.directory, %struct.directory* %74, i32 0, i32 2
  %76 = load %struct.dirfile**, %struct.dirfile*** %75, align 8
  %77 = bitcast %struct.dirfile** %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %77, i8 0, i64 24168, i1 false)
  br label %78

78:                                               ; preds = %69, %62
  %79 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 24)
  %80 = bitcast i8* %79 to %struct.dirfile*
  store %struct.dirfile* %80, %struct.dirfile** %7, align 8
  %81 = load %struct.directory*, %struct.directory** %6, align 8
  %82 = getelementptr inbounds %struct.directory, %struct.directory* %81, i32 0, i32 2
  %83 = load %struct.dirfile**, %struct.dirfile*** %82, align 8
  %84 = load i32, i32* %5, align 4
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %struct.dirfile*, %struct.dirfile** %83, i64 %85
  %87 = load %struct.dirfile*, %struct.dirfile** %86, align 8
  %88 = load %struct.dirfile*, %struct.dirfile** %7, align 8
  %89 = getelementptr inbounds %struct.dirfile, %struct.dirfile* %88, i32 0, i32 0
  store %struct.dirfile* %87, %struct.dirfile** %89, align 8
  %90 = load %struct.dirfile*, %struct.dirfile** %7, align 8
  %91 = load %struct.directory*, %struct.directory** %6, align 8
  %92 = getelementptr inbounds %struct.directory, %struct.directory* %91, i32 0, i32 2
  %93 = load %struct.dirfile**, %struct.dirfile*** %92, align 8
  %94 = load i32, i32* %5, align 4
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %struct.dirfile*, %struct.dirfile** %93, i64 %95
  store %struct.dirfile* %90, %struct.dirfile** %96, align 8
  %97 = load i8*, i8** %2, align 8
  %98 = load i8*, i8** %2, align 8
  %99 = call i64 @strlen(i8* %98) #9
  %100 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %97, i64 %99)
  %101 = load %struct.dirfile*, %struct.dirfile** %7, align 8
  %102 = getelementptr inbounds %struct.dirfile, %struct.dirfile* %101, i32 0, i32 1
  store i8* %100, i8** %102, align 8
  %103 = load %struct.dirfile*, %struct.dirfile** %7, align 8
  %104 = getelementptr inbounds %struct.dirfile, %struct.dirfile* %103, i32 0, i32 2
  store i8 1, i8* %104, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @file_impossible_p(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.directory*, align 8
  %8 = alloca %struct.dirfile*, align 8
  %9 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  %10 = load i8*, i8** %3, align 8
  store i8* %10, i8** %5, align 8
  %11 = load i8*, i8** %3, align 8
  %12 = call i8* @strrchr(i8* %11, i32 47) #9
  store i8* %12, i8** %4, align 8
  %13 = load i8*, i8** %4, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %1
  %16 = call %struct.directory* @find_directory(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0))
  store %struct.directory* %16, %struct.directory** %7, align 8
  br label %43

17:                                               ; preds = %1
  %18 = load i8*, i8** %4, align 8
  %19 = load i8*, i8** %3, align 8
  %20 = ptrtoint i8* %18 to i64
  %21 = ptrtoint i8* %19 to i64
  %22 = sub i64 %20, %21
  %23 = add nsw i64 %22, 1
  %24 = alloca i8, i64 %23, align 16
  store i8* %24, i8** %9, align 8
  %25 = load i8*, i8** %9, align 8
  %26 = load i8*, i8** %5, align 8
  %27 = load i8*, i8** %4, align 8
  %28 = load i8*, i8** %5, align 8
  %29 = ptrtoint i8* %27 to i64
  %30 = ptrtoint i8* %28 to i64
  %31 = sub i64 %29, %30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %26, i64 %31, i1 false)
  %32 = load i8*, i8** %9, align 8
  %33 = load i8*, i8** %4, align 8
  %34 = load i8*, i8** %5, align 8
  %35 = ptrtoint i8* %33 to i64
  %36 = ptrtoint i8* %34 to i64
  %37 = sub i64 %35, %36
  %38 = getelementptr inbounds i8, i8* %32, i64 %37
  store i8 0, i8* %38, align 1
  %39 = load i8*, i8** %9, align 8
  %40 = call %struct.directory* @find_directory(i8* %39)
  store %struct.directory* %40, %struct.directory** %7, align 8
  %41 = load i8*, i8** %4, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 1
  store i8* %42, i8** %5, align 8
  br label %43

43:                                               ; preds = %17, %15
  %44 = load %struct.directory*, %struct.directory** %7, align 8
  %45 = getelementptr inbounds %struct.directory, %struct.directory* %44, i32 0, i32 2
  %46 = load %struct.dirfile**, %struct.dirfile*** %45, align 8
  %47 = icmp eq %struct.dirfile** %46, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %43
  store i32 0, i32* %2, align 4
  br label %123

49:                                               ; preds = %43
  store i32 0, i32* %6, align 4
  br label %50

50:                                               ; preds = %66, %49
  %51 = load i8*, i8** %5, align 8
  %52 = load i8, i8* %51, align 1
  %53 = sext i8 %52 to i32
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %69

55:                                               ; preds = %50
  %56 = load i8*, i8** %5, align 8
  %57 = load i8, i8* %56, align 1
  %58 = sext i8 %57 to i32
  %59 = load i32, i32* %6, align 4
  %60 = add i32 %59, %58
  store i32 %60, i32* %6, align 4
  %61 = load i32, i32* %6, align 4
  %62 = shl i32 %61, 7
  %63 = load i32, i32* %6, align 4
  %64 = lshr i32 %63, 20
  %65 = add i32 %62, %64
  store i32 %65, i32* %6, align 4
  br label %66

66:                                               ; preds = %55
  %67 = load i8*, i8** %5, align 8
  %68 = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %68, i8** %5, align 8
  br label %50

69:                                               ; preds = %50
  %70 = load i32, i32* %6, align 4
  %71 = urem i32 %70, 1007
  store i32 %71, i32* %6, align 4
  %72 = load %struct.directory*, %struct.directory** %7, align 8
  %73 = getelementptr inbounds %struct.directory, %struct.directory* %72, i32 0, i32 2
  %74 = load %struct.dirfile**, %struct.dirfile*** %73, align 8
  %75 = load i32, i32* %6, align 4
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %struct.dirfile*, %struct.dirfile** %74, i64 %76
  %78 = load %struct.dirfile*, %struct.dirfile** %77, align 8
  store %struct.dirfile* %78, %struct.dirfile** %8, align 8
  br label %79

79:                                               ; preds = %118, %69
  %80 = load %struct.dirfile*, %struct.dirfile** %8, align 8
  %81 = icmp ne %struct.dirfile* %80, null
  br i1 %81, label %82, label %122

82:                                               ; preds = %79
  %83 = load i8*, i8** %3, align 8
  %84 = load %struct.dirfile*, %struct.dirfile** %8, align 8
  %85 = getelementptr inbounds %struct.dirfile, %struct.dirfile* %84, i32 0, i32 1
  %86 = load i8*, i8** %85, align 8
  %87 = icmp eq i8* %83, %86
  br i1 %87, label %112, label %88

88:                                               ; preds = %82
  %89 = load i8*, i8** %3, align 8
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = load %struct.dirfile*, %struct.dirfile** %8, align 8
  %93 = getelementptr inbounds %struct.dirfile, %struct.dirfile* %92, i32 0, i32 1
  %94 = load i8*, i8** %93, align 8
  %95 = load i8, i8* %94, align 1
  %96 = sext i8 %95 to i32
  %97 = icmp eq i32 %91, %96
  br i1 %97, label %98, label %117

98:                                               ; preds = %88
  %99 = load i8*, i8** %3, align 8
  %100 = load i8, i8* %99, align 1
  %101 = sext i8 %100 to i32
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %112, label %103

103:                                              ; preds = %98
  %104 = load i8*, i8** %3, align 8
  %105 = getelementptr inbounds i8, i8* %104, i64 1
  %106 = load %struct.dirfile*, %struct.dirfile** %8, align 8
  %107 = getelementptr inbounds %struct.dirfile, %struct.dirfile* %106, i32 0, i32 1
  %108 = load i8*, i8** %107, align 8
  %109 = getelementptr inbounds i8, i8* %108, i64 1
  %110 = call i32 @strcmp(i8* %105, i8* %109) #9
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %117, label %112

112:                                              ; preds = %103, %98, %82
  %113 = load %struct.dirfile*, %struct.dirfile** %8, align 8
  %114 = getelementptr inbounds %struct.dirfile, %struct.dirfile* %113, i32 0, i32 2
  %115 = load i8, i8* %114, align 8
  %116 = sext i8 %115 to i32
  store i32 %116, i32* %2, align 4
  br label %123

117:                                              ; preds = %103, %88
  br label %118

118:                                              ; preds = %117
  %119 = load %struct.dirfile*, %struct.dirfile** %8, align 8
  %120 = getelementptr inbounds %struct.dirfile, %struct.dirfile* %119, i32 0, i32 0
  %121 = load %struct.dirfile*, %struct.dirfile** %120, align 8
  store %struct.dirfile* %121, %struct.dirfile** %8, align 8
  br label %79

122:                                              ; preds = %79
  store i32 0, i32* %2, align 4
  br label %123

123:                                              ; preds = %122, %112, %48
  %124 = load i32, i32* %2, align 4
  ret i32 %124
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @dir_name(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call %struct.directory* @find_directory(i8* %3)
  %5 = getelementptr inbounds %struct.directory, %struct.directory* %4, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  ret i8* %6
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @print_dir_data_base() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.directory*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.dirfile*, align 8
  %10 = call i32 @puts(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.201, i64 0, i64 0))
  store i32 0, i32* %4, align 4
  store i32 0, i32* %3, align 4
  store i32 0, i32* %2, align 4
  store i32 0, i32* %1, align 4
  br label %11

11:                                               ; preds = %117, %0
  %12 = load i32, i32* %1, align 4
  %13 = icmp ult i32 %12, 23
  br i1 %13, label %14, label %120

14:                                               ; preds = %11
  %15 = load i32, i32* %1, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds [23 x %struct.directory*], [23 x %struct.directory*]* @directories, i64 0, i64 %16
  %18 = load %struct.directory*, %struct.directory** %17, align 8
  store %struct.directory* %18, %struct.directory** %5, align 8
  br label %19

19:                                               ; preds = %112, %14
  %20 = load %struct.directory*, %struct.directory** %5, align 8
  %21 = icmp ne %struct.directory* %20, null
  br i1 %21, label %22, label %116

22:                                               ; preds = %19
  %23 = load i32, i32* %2, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %2, align 4
  %25 = load %struct.directory*, %struct.directory** %5, align 8
  %26 = getelementptr inbounds %struct.directory, %struct.directory* %25, i32 0, i32 2
  %27 = load %struct.dirfile**, %struct.dirfile*** %26, align 8
  %28 = icmp eq %struct.dirfile** %27, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %22
  %30 = load %struct.directory*, %struct.directory** %5, align 8
  %31 = getelementptr inbounds %struct.directory, %struct.directory* %30, i32 0, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.202, i64 0, i64 0), i8* %32)
  br label %111

34:                                               ; preds = %22
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  br label %35

35:                                               ; preds = %66, %34
  %36 = load i32, i32* %8, align 4
  %37 = icmp ult i32 %36, 1007
  br i1 %37, label %38, label %69

38:                                               ; preds = %35
  %39 = load %struct.directory*, %struct.directory** %5, align 8
  %40 = getelementptr inbounds %struct.directory, %struct.directory* %39, i32 0, i32 2
  %41 = load %struct.dirfile**, %struct.dirfile*** %40, align 8
  %42 = load i32, i32* %8, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %struct.dirfile*, %struct.dirfile** %41, i64 %43
  %45 = load %struct.dirfile*, %struct.dirfile** %44, align 8
  store %struct.dirfile* %45, %struct.dirfile** %9, align 8
  br label %46

46:                                               ; preds = %61, %38
  %47 = load %struct.dirfile*, %struct.dirfile** %9, align 8
  %48 = icmp ne %struct.dirfile* %47, null
  br i1 %48, label %49, label %65

49:                                               ; preds = %46
  %50 = load %struct.dirfile*, %struct.dirfile** %9, align 8
  %51 = getelementptr inbounds %struct.dirfile, %struct.dirfile* %50, i32 0, i32 2
  %52 = load i8, i8* %51, align 8
  %53 = icmp ne i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %49
  %55 = load i32, i32* %7, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %7, align 4
  br label %60

57:                                               ; preds = %49
  %58 = load i32, i32* %6, align 4
  %59 = add i32 %58, 1
  store i32 %59, i32* %6, align 4
  br label %60

60:                                               ; preds = %57, %54
  br label %61

61:                                               ; preds = %60
  %62 = load %struct.dirfile*, %struct.dirfile** %9, align 8
  %63 = getelementptr inbounds %struct.dirfile, %struct.dirfile* %62, i32 0, i32 0
  %64 = load %struct.dirfile*, %struct.dirfile** %63, align 8
  store %struct.dirfile* %64, %struct.dirfile** %9, align 8
  br label %46

65:                                               ; preds = %46
  br label %66

66:                                               ; preds = %65
  %67 = load i32, i32* %8, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %8, align 4
  br label %35

69:                                               ; preds = %35
  %70 = load %struct.directory*, %struct.directory** %5, align 8
  %71 = getelementptr inbounds %struct.directory, %struct.directory* %70, i32 0, i32 1
  %72 = load i8*, i8** %71, align 8
  %73 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3.203, i64 0, i64 0), i8* %72)
  %74 = load i32, i32* %6, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %69
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %78 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.204, i64 0, i64 0), %struct._IO_FILE* %77)
  br label %82

79:                                               ; preds = %69
  %80 = load i32, i32* %6, align 4
  %81 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.205, i64 0, i64 0), i32 %80)
  br label %82

82:                                               ; preds = %79, %76
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %84 = call i32 @fputs(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.206, i64 0, i64 0), %struct._IO_FILE* %83)
  %85 = load i32, i32* %7, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %82
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %89 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.207, i64 0, i64 0), %struct._IO_FILE* %88)
  br label %93

90:                                               ; preds = %82
  %91 = load i32, i32* %7, align 4
  %92 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.205, i64 0, i64 0), i32 %91)
  br label %93

93:                                               ; preds = %90, %87
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %95 = call i32 @fputs(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8.208, i64 0, i64 0), %struct._IO_FILE* %94)
  %96 = load %struct.directory*, %struct.directory** %5, align 8
  %97 = getelementptr inbounds %struct.directory, %struct.directory* %96, i32 0, i32 3
  %98 = load %struct.__dirstream*, %struct.__dirstream** %97, align 8
  %99 = icmp eq %struct.__dirstream* %98, null
  br i1 %99, label %100, label %102

100:                                              ; preds = %93
  %101 = call i32 @puts(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0))
  br label %104

102:                                              ; preds = %93
  %103 = call i32 @puts(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9.209, i64 0, i64 0))
  br label %104

104:                                              ; preds = %102, %100
  %105 = load i32, i32* %6, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, %105
  store i32 %107, i32* %3, align 4
  %108 = load i32, i32* %7, align 4
  %109 = load i32, i32* %4, align 4
  %110 = add i32 %109, %108
  store i32 %110, i32* %4, align 4
  br label %111

111:                                              ; preds = %104, %29
  br label %112

112:                                              ; preds = %111
  %113 = load %struct.directory*, %struct.directory** %5, align 8
  %114 = getelementptr inbounds %struct.directory, %struct.directory* %113, i32 0, i32 0
  %115 = load %struct.directory*, %struct.directory** %114, align 8
  store %struct.directory* %115, %struct.directory** %5, align 8
  br label %19

116:                                              ; preds = %19
  br label %117

117:                                              ; preds = %116
  %118 = load i32, i32* %1, align 4
  %119 = add i32 %118, 1
  store i32 %119, i32* %1, align 4
  br label %11

120:                                              ; preds = %11
  %121 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %122 = call i32 @fputs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10.210, i64 0, i64 0), %struct._IO_FILE* %121)
  %123 = load i32, i32* %3, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %120
  %126 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %127 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.204, i64 0, i64 0), %struct._IO_FILE* %126)
  br label %131

128:                                              ; preds = %120
  %129 = load i32, i32* %3, align 4
  %130 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.205, i64 0, i64 0), i32 %129)
  br label %131

131:                                              ; preds = %128, %125
  %132 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %133 = call i32 @fputs(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.206, i64 0, i64 0), %struct._IO_FILE* %132)
  %134 = load i32, i32* %4, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %131
  %137 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %138 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.207, i64 0, i64 0), %struct._IO_FILE* %137)
  br label %142

139:                                              ; preds = %131
  %140 = load i32, i32* %4, align 4
  %141 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.205, i64 0, i64 0), i32 %140)
  br label %142

142:                                              ; preds = %139, %136
  %143 = load i32, i32* %2, align 4
  %144 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11.211, i64 0, i64 0), i32 %143)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @variable_expand(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct.variable*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca [5 x i8], align 1
  store i8* %0, i8** %3, align 8
  %24 = load i8*, i8** %3, align 8
  store i8* %24, i8** %5, align 8
  %25 = call i8* (...) bitcast (i8* ()* @initialize_variable_output to i8* (...)*)()
  store i8* %25, i8** %6, align 8
  br label %26

26:                                               ; preds = %441, %1
  %27 = load i8*, i8** %5, align 8
  %28 = call i8* @strchr(i8* %27, i32 36) #9
  store i8* %28, i8** %7, align 8
  %29 = load i8*, i8** %6, align 8
  %30 = load i8*, i8** %5, align 8
  %31 = load i8*, i8** %7, align 8
  %32 = icmp ne i8* %31, null
  br i1 %32, label %33, label %39

33:                                               ; preds = %26
  %34 = load i8*, i8** %7, align 8
  %35 = load i8*, i8** %5, align 8
  %36 = ptrtoint i8* %34 to i64
  %37 = ptrtoint i8* %35 to i64
  %38 = sub i64 %36, %37
  br label %43

39:                                               ; preds = %26
  %40 = load i8*, i8** %5, align 8
  %41 = call i64 @strlen(i8* %40) #9
  %42 = add i64 %41, 1
  br label %43

43:                                               ; preds = %39, %33
  %44 = phi i64 [ %38, %33 ], [ %42, %39 ]
  %45 = call i8* (i8*, i8*, i64, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i64, ...)*)(i8* %29, i8* %30, i64 %44)
  store i8* %45, i8** %6, align 8
  %46 = load i8*, i8** %7, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %43
  br label %442

49:                                               ; preds = %43
  %50 = load i8*, i8** %7, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 1
  store i8* %51, i8** %5, align 8
  %52 = load i8*, i8** %5, align 8
  %53 = load i8, i8* %52, align 1
  %54 = sext i8 %53 to i32
  switch i32 %54, label %402 [
    i32 36, label %55
    i32 40, label %59
    i32 123, label %59
    i32 0, label %401
  ]

55:                                               ; preds = %49
  %56 = load i8*, i8** %6, align 8
  %57 = load i8*, i8** %5, align 8
  %58 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %56, i8* %57, i32 1)
  store i8* %58, i8** %6, align 8
  br label %432

59:                                               ; preds = %49, %49
  %60 = load i8*, i8** %5, align 8
  %61 = load i8, i8* %60, align 1
  store i8 %61, i8* %8, align 1
  %62 = load i8, i8* %8, align 1
  %63 = sext i8 %62 to i32
  %64 = icmp eq i32 %63, 40
  %65 = zext i1 %64 to i64
  %66 = select i1 %64, i32 41, i32 125
  %67 = trunc i32 %66 to i8
  store i8 %67, i8* %9, align 1
  %68 = load i8*, i8** %5, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 1
  store i8* %69, i8** %10, align 8
  %70 = load i8*, i8** %6, align 8
  store i8* %70, i8** %11, align 8
  %71 = load i8*, i8** %5, align 8
  store i8* %71, i8** %12, align 8
  %72 = call i32 (i8**, i8**, ...) bitcast (i32 (i8**, i8**)* @handle_function to i32 (i8**, i8**, ...)*)(i8** %11, i8** %12)
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %59
  %75 = load i8*, i8** %11, align 8
  store i8* %75, i8** %6, align 8
  %76 = load i8*, i8** %12, align 8
  store i8* %76, i8** %5, align 8
  br label %432

77:                                               ; preds = %59
  %78 = load i8*, i8** %10, align 8
  %79 = load i8, i8* %9, align 1
  %80 = sext i8 %79 to i32
  %81 = call i8* @strchr(i8* %78, i32 %80) #9
  store i8* %81, i8** %7, align 8
  %82 = load i8*, i8** %7, align 8
  %83 = icmp ne i8* %82, null
  br i1 %83, label %84, label %88

84:                                               ; preds = %77
  %85 = load i8*, i8** %10, align 8
  %86 = load i8*, i8** %7, align 8
  %87 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @lindex to i8* (i8*, i8*, i32, ...)*)(i8* %85, i8* %86, i32 36)
  store i8* %87, i8** %7, align 8
  br label %88

88:                                               ; preds = %84, %77
  %89 = load i8*, i8** %7, align 8
  %90 = icmp ne i8* %89, null
  br i1 %90, label %91, label %146

91:                                               ; preds = %88
  store i32 0, i32* %14, align 4
  %92 = load i8*, i8** %10, align 8
  store i8* %92, i8** %5, align 8
  br label %93

93:                                               ; preds = %122, %91
  %94 = load i8*, i8** %5, align 8
  %95 = load i8, i8* %94, align 1
  %96 = sext i8 %95 to i32
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %125

98:                                               ; preds = %93
  %99 = load i8*, i8** %5, align 8
  %100 = load i8, i8* %99, align 1
  %101 = sext i8 %100 to i32
  %102 = load i8, i8* %8, align 1
  %103 = sext i8 %102 to i32
  %104 = icmp eq i32 %101, %103
  br i1 %104, label %105, label %108

105:                                              ; preds = %98
  %106 = load i32, i32* %14, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %14, align 4
  br label %121

108:                                              ; preds = %98
  %109 = load i8*, i8** %5, align 8
  %110 = load i8, i8* %109, align 1
  %111 = sext i8 %110 to i32
  %112 = load i8, i8* %9, align 1
  %113 = sext i8 %112 to i32
  %114 = icmp eq i32 %111, %113
  br i1 %114, label %115, label %120

115:                                              ; preds = %108
  %116 = load i32, i32* %14, align 4
  %117 = add nsw i32 %116, -1
  store i32 %117, i32* %14, align 4
  %118 = icmp slt i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %115
  br label %125

120:                                              ; preds = %115, %108
  br label %121

121:                                              ; preds = %120, %105
  br label %122

122:                                              ; preds = %121
  %123 = load i8*, i8** %5, align 8
  %124 = getelementptr inbounds i8, i8* %123, i32 1
  store i8* %124, i8** %5, align 8
  br label %93

125:                                              ; preds = %119, %93
  %126 = load i32, i32* %14, align 4
  %127 = icmp slt i32 %126, 0
  br i1 %127, label %128, label %145

128:                                              ; preds = %125
  %129 = load i8*, i8** %10, align 8
  %130 = load i8*, i8** %5, align 8
  %131 = call i8* @expand_argument(i8* %129, i8* %130)
  store i8* %131, i8** %15, align 8
  %132 = load i8, i8* %8, align 1
  store i8 %132, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @variable_expand.start, i64 0, i64 1), align 1
  %133 = load i8, i8* %9, align 1
  store i8 %133, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @variable_expand.end, i64 0, i64 0), align 1
  %134 = load i8*, i8** %15, align 8
  %135 = call i8* (i8*, i8*, i8*, ...) bitcast (i8* (i8*, i8*, i8*)* @concat to i8* (i8*, i8*, i8*, ...)*)(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @variable_expand.start, i64 0, i64 0), i8* %134, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @variable_expand.end, i64 0, i64 0))
  store i8* %135, i8** %7, align 8
  %136 = load i8*, i8** %15, align 8
  call void @free(i8* %136) #10
  %137 = load i8*, i8** %7, align 8
  %138 = call i8* @allocated_variable_expand(i8* %137)
  store i8* %138, i8** %15, align 8
  %139 = load i8*, i8** %6, align 8
  %140 = load i8*, i8** %15, align 8
  %141 = load i8*, i8** %15, align 8
  %142 = call i64 @strlen(i8* %141) #9
  %143 = call i8* (i8*, i8*, i64, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i64, ...)*)(i8* %139, i8* %140, i64 %142)
  store i8* %143, i8** %6, align 8
  %144 = load i8*, i8** %15, align 8
  call void @free(i8* %144) #10
  br label %432

145:                                              ; preds = %125
  br label %146

146:                                              ; preds = %145, %88
  %147 = load i8*, i8** %10, align 8
  %148 = call i8* @strchr(i8* %147, i32 58) #9
  store i8* %148, i8** %5, align 8
  %149 = load i8*, i8** %5, align 8
  %150 = icmp ne i8* %149, null
  br i1 %150, label %151, label %340

151:                                              ; preds = %146
  %152 = load i8*, i8** %10, align 8
  %153 = load i8*, i8** %5, align 8
  %154 = load i8, i8* %9, align 1
  %155 = sext i8 %154 to i32
  %156 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @lindex to i8* (i8*, i8*, i32, ...)*)(i8* %152, i8* %153, i32 %155)
  %157 = icmp eq i8* %156, null
  br i1 %157, label %158, label %340

158:                                              ; preds = %151
  %159 = load i8*, i8** %10, align 8
  %160 = load i8*, i8** %5, align 8
  %161 = load i8*, i8** %10, align 8
  %162 = ptrtoint i8* %160 to i64
  %163 = ptrtoint i8* %161 to i64
  %164 = sub i64 %162, %163
  %165 = call %struct.variable* (i8*, i64, ...) bitcast (%struct.variable* (i8*, i32)* @lookup_variable to %struct.variable* (i8*, i64, ...)*)(i8* %159, i64 %164)
  store %struct.variable* %165, %struct.variable** %4, align 8
  %166 = load i8*, i8** %5, align 8
  %167 = getelementptr inbounds i8, i8* %166, i64 1
  store i8* %167, i8** %17, align 8
  store i32 0, i32* %16, align 4
  %168 = load i8*, i8** %17, align 8
  store i8* %168, i8** %5, align 8
  br label %169

169:                                              ; preds = %206, %158
  %170 = load i8*, i8** %5, align 8
  %171 = load i8, i8* %170, align 1
  %172 = sext i8 %171 to i32
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %174, label %209

174:                                              ; preds = %169
  %175 = load i8*, i8** %5, align 8
  %176 = load i8, i8* %175, align 1
  %177 = sext i8 %176 to i32
  %178 = load i8, i8* %8, align 1
  %179 = sext i8 %178 to i32
  %180 = icmp eq i32 %177, %179
  br i1 %180, label %181, label %184

181:                                              ; preds = %174
  %182 = load i32, i32* %16, align 4
  %183 = add nsw i32 %182, 1
  store i32 %183, i32* %16, align 4
  br label %205

184:                                              ; preds = %174
  %185 = load i8*, i8** %5, align 8
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = load i8, i8* %9, align 1
  %189 = sext i8 %188 to i32
  %190 = icmp eq i32 %187, %189
  br i1 %190, label %191, label %194

191:                                              ; preds = %184
  %192 = load i32, i32* %16, align 4
  %193 = add nsw i32 %192, -1
  store i32 %193, i32* %16, align 4
  br label %204

194:                                              ; preds = %184
  %195 = load i8*, i8** %5, align 8
  %196 = load i8, i8* %195, align 1
  %197 = sext i8 %196 to i32
  %198 = icmp eq i32 %197, 61
  br i1 %198, label %199, label %203

199:                                              ; preds = %194
  %200 = load i32, i32* %16, align 4
  %201 = icmp sle i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  br label %209

203:                                              ; preds = %199, %194
  br label %204

204:                                              ; preds = %203, %191
  br label %205

205:                                              ; preds = %204, %181
  br label %206

206:                                              ; preds = %205
  %207 = load i8*, i8** %5, align 8
  %208 = getelementptr inbounds i8, i8* %207, i32 1
  store i8* %208, i8** %5, align 8
  br label %169

209:                                              ; preds = %202, %169
  %210 = load i32, i32* %16, align 4
  %211 = icmp sgt i32 %210, 0
  br i1 %211, label %212, label %214

212:                                              ; preds = %209
  %213 = call i8* (...) bitcast (i8* ()* @initialize_variable_output to i8* (...)*)()
  store i8* %213, i8** %2, align 8
  br label %446

214:                                              ; preds = %209
  %215 = load i8*, i8** %5, align 8
  %216 = load i8*, i8** %17, align 8
  %217 = ptrtoint i8* %215 to i64
  %218 = ptrtoint i8* %216 to i64
  %219 = sub i64 %217, %218
  %220 = trunc i64 %219 to i32
  store i32 %220, i32* %19, align 4
  %221 = load i8*, i8** %5, align 8
  %222 = getelementptr inbounds i8, i8* %221, i64 1
  store i8* %222, i8** %18, align 8
  store i32 0, i32* %16, align 4
  %223 = load i8*, i8** %18, align 8
  store i8* %223, i8** %5, align 8
  br label %224

224:                                              ; preds = %253, %214
  %225 = load i8*, i8** %5, align 8
  %226 = load i8, i8* %225, align 1
  %227 = sext i8 %226 to i32
  %228 = icmp ne i32 %227, 0
  br i1 %228, label %229, label %256

229:                                              ; preds = %224
  %230 = load i8*, i8** %5, align 8
  %231 = load i8, i8* %230, align 1
  %232 = sext i8 %231 to i32
  %233 = load i8, i8* %8, align 1
  %234 = sext i8 %233 to i32
  %235 = icmp eq i32 %232, %234
  br i1 %235, label %236, label %239

236:                                              ; preds = %229
  %237 = load i32, i32* %16, align 4
  %238 = add nsw i32 %237, 1
  store i32 %238, i32* %16, align 4
  br label %252

239:                                              ; preds = %229
  %240 = load i8*, i8** %5, align 8
  %241 = load i8, i8* %240, align 1
  %242 = sext i8 %241 to i32
  %243 = load i8, i8* %9, align 1
  %244 = sext i8 %243 to i32
  %245 = icmp eq i32 %242, %244
  br i1 %245, label %246, label %251

246:                                              ; preds = %239
  %247 = load i32, i32* %16, align 4
  %248 = add nsw i32 %247, -1
  store i32 %248, i32* %16, align 4
  %249 = icmp slt i32 %248, 0
  br i1 %249, label %250, label %251

250:                                              ; preds = %246
  br label %256

251:                                              ; preds = %246, %239
  br label %252

252:                                              ; preds = %251, %236
  br label %253

253:                                              ; preds = %252
  %254 = load i8*, i8** %5, align 8
  %255 = getelementptr inbounds i8, i8* %254, i32 1
  store i8* %255, i8** %5, align 8
  br label %224

256:                                              ; preds = %250, %224
  %257 = load i32, i32* %16, align 4
  %258 = icmp sgt i32 %257, 0
  br i1 %258, label %259, label %261

259:                                              ; preds = %256
  %260 = call i8* (...) bitcast (i8* ()* @initialize_variable_output to i8* (...)*)()
  store i8* %260, i8** %2, align 8
  br label %446

261:                                              ; preds = %256
  %262 = load i8*, i8** %5, align 8
  store i8* %262, i8** %13, align 8
  %263 = load i8*, i8** %5, align 8
  %264 = load i8*, i8** %18, align 8
  %265 = ptrtoint i8* %263 to i64
  %266 = ptrtoint i8* %264 to i64
  %267 = sub i64 %265, %266
  %268 = trunc i64 %267 to i32
  store i32 %268, i32* %20, align 4
  %269 = load %struct.variable*, %struct.variable** %4, align 8
  %270 = icmp ne %struct.variable* %269, null
  br i1 %270, label %271, label %339

271:                                              ; preds = %261
  %272 = load %struct.variable*, %struct.variable** %4, align 8
  %273 = getelementptr inbounds %struct.variable, %struct.variable* %272, i32 0, i32 2
  %274 = load i8*, i8** %273, align 8
  %275 = load i8, i8* %274, align 1
  %276 = sext i8 %275 to i32
  %277 = icmp ne i32 %276, 0
  br i1 %277, label %278, label %339

278:                                              ; preds = %271
  %279 = load %struct.variable*, %struct.variable** %4, align 8
  %280 = getelementptr inbounds %struct.variable, %struct.variable* %279, i32 0, i32 3
  %281 = load i8, i8* %280, align 8
  %282 = lshr i8 %281, 3
  %283 = and i8 %282, 1
  %284 = zext i8 %283 to i32
  %285 = icmp ne i32 %284, 0
  br i1 %285, label %286, label %289

286:                                              ; preds = %278
  %287 = load %struct.variable*, %struct.variable** %4, align 8
  %288 = call i8* @recursively_expand(%struct.variable* %287)
  br label %293

289:                                              ; preds = %278
  %290 = load %struct.variable*, %struct.variable** %4, align 8
  %291 = getelementptr inbounds %struct.variable, %struct.variable* %290, i32 0, i32 2
  %292 = load i8*, i8** %291, align 8
  br label %293

293:                                              ; preds = %289, %286
  %294 = phi i8* [ %288, %286 ], [ %292, %289 ]
  store i8* %294, i8** %21, align 8
  %295 = load i8*, i8** %17, align 8
  %296 = load i8*, i8** %17, align 8
  %297 = load i32, i32* %19, align 4
  %298 = zext i32 %297 to i64
  %299 = getelementptr inbounds i8, i8* %296, i64 %298
  %300 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @lindex to i8* (i8*, i8*, i32, ...)*)(i8* %295, i8* %299, i32 37)
  %301 = icmp ne i8* %300, null
  br i1 %301, label %302, label %320

302:                                              ; preds = %293
  %303 = load i8*, i8** %17, align 8
  %304 = load i32, i32* %19, align 4
  %305 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i32, ...)*)(i8* %303, i32 %304)
  store i8* %305, i8** %5, align 8
  %306 = load i8*, i8** %18, align 8
  %307 = load i32, i32* %20, align 4
  %308 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i32, ...)*)(i8* %306, i32 %307)
  store i8* %308, i8** %7, align 8
  %309 = load i8*, i8** %6, align 8
  %310 = load i8*, i8** %21, align 8
  %311 = load i8*, i8** %5, align 8
  %312 = load i8*, i8** %7, align 8
  %313 = load i8*, i8** %5, align 8
  %314 = call i8* @strchr(i8* %313, i32 37) #9
  %315 = load i8*, i8** %7, align 8
  %316 = call i8* @strchr(i8* %315, i32 37) #9
  %317 = call i8* (i8*, i8*, i8*, i8*, i8*, i8*, ...) bitcast (i8* (i8*, i8*, i8*, i8*, i8*, i8*)* @patsubst_expand to i8* (i8*, i8*, i8*, i8*, i8*, i8*, ...)*)(i8* %309, i8* %310, i8* %311, i8* %312, i8* %314, i8* %316)
  store i8* %317, i8** %6, align 8
  %318 = load i8*, i8** %5, align 8
  call void @free(i8* %318) #10
  %319 = load i8*, i8** %7, align 8
  call void @free(i8* %319) #10
  br label %328

320:                                              ; preds = %293
  %321 = load i8*, i8** %6, align 8
  %322 = load i8*, i8** %21, align 8
  %323 = load i8*, i8** %17, align 8
  %324 = load i8*, i8** %18, align 8
  %325 = load i32, i32* %19, align 4
  %326 = load i32, i32* %20, align 4
  %327 = call i8* (i8*, i8*, i8*, i8*, i32, i32, i32, i32, ...) bitcast (i8* (i8*, i8*, i8*, i8*, i32, i32, i32, i32)* @subst_expand to i8* (i8*, i8*, i8*, i8*, i32, i32, i32, i32, ...)*)(i8* %321, i8* %322, i8* %323, i8* %324, i32 %325, i32 %326, i32 0, i32 1)
  store i8* %327, i8** %6, align 8
  br label %328

328:                                              ; preds = %320, %302
  %329 = load %struct.variable*, %struct.variable** %4, align 8
  %330 = getelementptr inbounds %struct.variable, %struct.variable* %329, i32 0, i32 3
  %331 = load i8, i8* %330, align 8
  %332 = lshr i8 %331, 3
  %333 = and i8 %332, 1
  %334 = zext i8 %333 to i32
  %335 = icmp ne i32 %334, 0
  br i1 %335, label %336, label %338

336:                                              ; preds = %328
  %337 = load i8*, i8** %21, align 8
  call void @free(i8* %337) #10
  br label %338

338:                                              ; preds = %336, %328
  br label %339

339:                                              ; preds = %338, %271, %261
  br label %399

340:                                              ; preds = %151, %146
  %341 = load i8*, i8** %10, align 8
  %342 = load i8, i8* %9, align 1
  %343 = sext i8 %342 to i32
  %344 = call i8* @strchr(i8* %341, i32 %343) #9
  store i8* %344, i8** %13, align 8
  %345 = load i8*, i8** %13, align 8
  %346 = icmp eq i8* %345, null
  br i1 %346, label %347, label %349

347:                                              ; preds = %340
  %348 = call i8* (...) bitcast (i8* ()* @initialize_variable_output to i8* (...)*)()
  store i8* %348, i8** %2, align 8
  br label %446

349:                                              ; preds = %340
  %350 = load i8*, i8** %10, align 8
  %351 = load i8*, i8** %13, align 8
  %352 = load i8*, i8** %10, align 8
  %353 = ptrtoint i8* %351 to i64
  %354 = ptrtoint i8* %352 to i64
  %355 = sub i64 %353, %354
  %356 = call %struct.variable* (i8*, i64, ...) bitcast (%struct.variable* (i8*, i32)* @lookup_variable to %struct.variable* (i8*, i64, ...)*)(i8* %350, i64 %355)
  store %struct.variable* %356, %struct.variable** %4, align 8
  %357 = load %struct.variable*, %struct.variable** %4, align 8
  %358 = icmp ne %struct.variable* %357, null
  br i1 %358, label %359, label %398

359:                                              ; preds = %349
  %360 = load %struct.variable*, %struct.variable** %4, align 8
  %361 = getelementptr inbounds %struct.variable, %struct.variable* %360, i32 0, i32 2
  %362 = load i8*, i8** %361, align 8
  %363 = load i8, i8* %362, align 1
  %364 = sext i8 %363 to i32
  %365 = icmp ne i32 %364, 0
  br i1 %365, label %366, label %398

366:                                              ; preds = %359
  %367 = load %struct.variable*, %struct.variable** %4, align 8
  %368 = getelementptr inbounds %struct.variable, %struct.variable* %367, i32 0, i32 3
  %369 = load i8, i8* %368, align 8
  %370 = lshr i8 %369, 3
  %371 = and i8 %370, 1
  %372 = zext i8 %371 to i32
  %373 = icmp ne i32 %372, 0
  br i1 %373, label %374, label %377

374:                                              ; preds = %366
  %375 = load %struct.variable*, %struct.variable** %4, align 8
  %376 = call i8* @recursively_expand(%struct.variable* %375)
  br label %381

377:                                              ; preds = %366
  %378 = load %struct.variable*, %struct.variable** %4, align 8
  %379 = getelementptr inbounds %struct.variable, %struct.variable* %378, i32 0, i32 2
  %380 = load i8*, i8** %379, align 8
  br label %381

381:                                              ; preds = %377, %374
  %382 = phi i8* [ %376, %374 ], [ %380, %377 ]
  store i8* %382, i8** %22, align 8
  %383 = load i8*, i8** %6, align 8
  %384 = load i8*, i8** %22, align 8
  %385 = load i8*, i8** %22, align 8
  %386 = call i64 @strlen(i8* %385) #9
  %387 = call i8* (i8*, i8*, i64, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i64, ...)*)(i8* %383, i8* %384, i64 %386)
  store i8* %387, i8** %6, align 8
  %388 = load %struct.variable*, %struct.variable** %4, align 8
  %389 = getelementptr inbounds %struct.variable, %struct.variable* %388, i32 0, i32 3
  %390 = load i8, i8* %389, align 8
  %391 = lshr i8 %390, 3
  %392 = and i8 %391, 1
  %393 = zext i8 %392 to i32
  %394 = icmp ne i32 %393, 0
  br i1 %394, label %395, label %397

395:                                              ; preds = %381
  %396 = load i8*, i8** %22, align 8
  call void @free(i8* %396) #10
  br label %397

397:                                              ; preds = %395, %381
  br label %398

398:                                              ; preds = %397, %359, %349
  br label %399

399:                                              ; preds = %398, %339
  %400 = load i8*, i8** %13, align 8
  store i8* %400, i8** %5, align 8
  br label %432

401:                                              ; preds = %49
  br label %432

402:                                              ; preds = %49
  %403 = call i16** @__ctype_b_loc() #11
  %404 = load i16*, i16** %403, align 8
  %405 = load i8*, i8** %5, align 8
  %406 = getelementptr inbounds i8, i8* %405, i64 -1
  %407 = load i8, i8* %406, align 1
  %408 = sext i8 %407 to i32
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds i16, i16* %404, i64 %409
  %411 = load i16, i16* %410, align 2
  %412 = zext i16 %411 to i32
  %413 = and i32 %412, 1
  %414 = icmp ne i32 %413, 0
  br i1 %414, label %415, label %416

415:                                              ; preds = %402
  br label %432

416:                                              ; preds = %402
  %417 = getelementptr inbounds [5 x i8], [5 x i8]* %23, i64 0, i64 0
  store i8 36, i8* %417, align 1
  %418 = getelementptr inbounds [5 x i8], [5 x i8]* %23, i64 0, i64 1
  store i8 40, i8* %418, align 1
  %419 = load i8*, i8** %5, align 8
  %420 = load i8, i8* %419, align 1
  %421 = getelementptr inbounds [5 x i8], [5 x i8]* %23, i64 0, i64 2
  store i8 %420, i8* %421, align 1
  %422 = getelementptr inbounds [5 x i8], [5 x i8]* %23, i64 0, i64 3
  store i8 41, i8* %422, align 1
  %423 = getelementptr inbounds [5 x i8], [5 x i8]* %23, i64 0, i64 4
  store i8 0, i8* %423, align 1
  %424 = getelementptr inbounds [5 x i8], [5 x i8]* %23, i64 0, i64 0
  %425 = call i8* @allocated_variable_expand(i8* %424)
  store i8* %425, i8** %7, align 8
  %426 = load i8*, i8** %6, align 8
  %427 = load i8*, i8** %7, align 8
  %428 = load i8*, i8** %7, align 8
  %429 = call i64 @strlen(i8* %428) #9
  %430 = call i8* (i8*, i8*, i64, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i64, ...)*)(i8* %426, i8* %427, i64 %429)
  store i8* %430, i8** %6, align 8
  %431 = load i8*, i8** %7, align 8
  call void @free(i8* %431) #10
  br label %432

432:                                              ; preds = %416, %415, %401, %399, %128, %74, %55
  %433 = load i8*, i8** %5, align 8
  %434 = load i8, i8* %433, align 1
  %435 = sext i8 %434 to i32
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %437, label %438

437:                                              ; preds = %432
  br label %442

438:                                              ; preds = %432
  %439 = load i8*, i8** %5, align 8
  %440 = getelementptr inbounds i8, i8* %439, i32 1
  store i8* %440, i8** %5, align 8
  br label %441

441:                                              ; preds = %438
  br label %26

442:                                              ; preds = %437, %48
  %443 = load i8*, i8** %6, align 8
  %444 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %443, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.212, i64 0, i64 0), i32 1)
  %445 = call i8* (...) bitcast (i8* ()* @initialize_variable_output to i8* (...)*)()
  store i8* %445, i8** %2, align 8
  br label %446

446:                                              ; preds = %442, %347, %259, %212
  %447 = load i8*, i8** %2, align 8
  ret i8* %447
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @expand_argument(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = load i8*, i8** %4, align 8
  %9 = load i8*, i8** %3, align 8
  %10 = ptrtoint i8* %8 to i64
  %11 = ptrtoint i8* %9 to i64
  %12 = sub i64 %10, %11
  %13 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %7, i64 %12)
  store i8* %13, i8** %5, align 8
  %14 = load i8*, i8** %5, align 8
  %15 = call i8* @allocated_variable_expand(i8* %14)
  store i8* %15, i8** %6, align 8
  %16 = load i8*, i8** %5, align 8
  call void @free(i8* %16) #10
  %17 = load i8*, i8** %6, align 8
  ret i8* %17
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @allocated_variable_expand(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i8* @allocated_variable_expand_for_file(i8* %3, %struct.file* null)
  ret i8* %4
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @recursively_expand(%struct.variable* %0) #0 {
  %2 = alloca %struct.variable*, align 8
  %3 = alloca i8*, align 8
  store %struct.variable* %0, %struct.variable** %2, align 8
  %4 = load %struct.variable*, %struct.variable** %2, align 8
  %5 = getelementptr inbounds %struct.variable, %struct.variable* %4, i32 0, i32 3
  %6 = load i8, i8* %5, align 8
  %7 = lshr i8 %6, 4
  %8 = and i8 %7, 1
  %9 = zext i8 %8 to i32
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %26

11:                                               ; preds = %1
  %12 = load i8*, i8** @reading_filename, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %11
  %15 = load %struct.variable*, %struct.variable** %2, align 8
  %16 = getelementptr inbounds %struct.variable, %struct.variable* %15, i32 0, i32 1
  %17 = load i8*, i8** %16, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1.213, i64 0, i64 0), i8* %17)
  br label %25

18:                                               ; preds = %11
  %19 = load i8*, i8** @reading_filename, align 8
  %20 = load i32*, i32** @reading_lineno_ptr, align 8
  %21 = load i32, i32* %20, align 4
  %22 = load %struct.variable*, %struct.variable** %2, align 8
  %23 = getelementptr inbounds %struct.variable, %struct.variable* %22, i32 0, i32 1
  %24 = load i8*, i8** %23, align 8
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, i8*, ...)*)(i8* %19, i32 %21, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1.213, i64 0, i64 0), i8* %24)
  br label %25

25:                                               ; preds = %18, %14
  br label %26

26:                                               ; preds = %25, %1
  %27 = load %struct.variable*, %struct.variable** %2, align 8
  %28 = getelementptr inbounds %struct.variable, %struct.variable* %27, i32 0, i32 3
  %29 = load i8, i8* %28, align 8
  %30 = and i8 %29, -17
  %31 = or i8 %30, 16
  store i8 %31, i8* %28, align 8
  %32 = load %struct.variable*, %struct.variable** %2, align 8
  %33 = getelementptr inbounds %struct.variable, %struct.variable* %32, i32 0, i32 2
  %34 = load i8*, i8** %33, align 8
  %35 = call i8* @allocated_variable_expand(i8* %34)
  store i8* %35, i8** %3, align 8
  %36 = load %struct.variable*, %struct.variable** %2, align 8
  %37 = getelementptr inbounds %struct.variable, %struct.variable* %36, i32 0, i32 3
  %38 = load i8, i8* %37, align 8
  %39 = and i8 %38, -17
  store i8 %39, i8* %37, align 8
  %40 = load i8*, i8** %3, align 8
  ret i8* %40
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @allocated_variable_expand_for_file(i8* %0, %struct.file* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.file*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store %struct.file* %1, %struct.file** %4, align 8
  %7 = call i8* (...) bitcast (i8* ()* @save_variable_output to i8* (...)*)()
  store i8* %7, i8** %5, align 8
  %8 = load i8*, i8** %3, align 8
  %9 = load %struct.file*, %struct.file** %4, align 8
  %10 = call i8* @variable_expand_for_file(i8* %8, %struct.file* %9)
  store i8* %10, i8** %6, align 8
  %11 = load i8*, i8** %6, align 8
  %12 = load i8*, i8** %6, align 8
  %13 = call i64 @strlen(i8* %12) #9
  %14 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %11, i64 %13)
  store i8* %14, i8** %6, align 8
  %15 = load i8*, i8** %5, align 8
  call void (i8*, ...) bitcast (void (i8*)* @restore_variable_output to void (i8*, ...)*)(i8* %15)
  %16 = load i8*, i8** %6, align 8
  ret i8* %16
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @variable_expand_for_file(i8* %0, %struct.file* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.file*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.variable_set_list*, align 8
  store i8* %0, i8** %4, align 8
  store %struct.file* %1, %struct.file** %5, align 8
  %8 = load %struct.file*, %struct.file** %5, align 8
  %9 = icmp eq %struct.file* %8, null
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = load i8*, i8** %4, align 8
  %12 = call i8* @variable_expand(i8* %11)
  store i8* %12, i8** %3, align 8
  br label %31

13:                                               ; preds = %2
  %14 = load %struct.variable_set_list*, %struct.variable_set_list** @current_variable_set_list, align 8
  store %struct.variable_set_list* %14, %struct.variable_set_list** %7, align 8
  %15 = load %struct.file*, %struct.file** %5, align 8
  %16 = getelementptr inbounds %struct.file, %struct.file* %15, i32 0, i32 9
  %17 = load %struct.variable_set_list*, %struct.variable_set_list** %16, align 8
  store %struct.variable_set_list* %17, %struct.variable_set_list** @current_variable_set_list, align 8
  %18 = load %struct.file*, %struct.file** %5, align 8
  %19 = getelementptr inbounds %struct.file, %struct.file* %18, i32 0, i32 3
  %20 = load %struct.commands*, %struct.commands** %19, align 8
  %21 = getelementptr inbounds %struct.commands, %struct.commands* %20, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  store i8* %22, i8** @reading_filename, align 8
  %23 = load %struct.file*, %struct.file** %5, align 8
  %24 = getelementptr inbounds %struct.file, %struct.file* %23, i32 0, i32 3
  %25 = load %struct.commands*, %struct.commands** %24, align 8
  %26 = getelementptr inbounds %struct.commands, %struct.commands* %25, i32 0, i32 1
  store i32* %26, i32** @reading_lineno_ptr, align 8
  %27 = load i8*, i8** %4, align 8
  %28 = call i8* @variable_expand(i8* %27)
  store i8* %28, i8** %6, align 8
  %29 = load %struct.variable_set_list*, %struct.variable_set_list** %7, align 8
  store %struct.variable_set_list* %29, %struct.variable_set_list** @current_variable_set_list, align 8
  store i8* null, i8** @reading_filename, align 8
  store i32* null, i32** @reading_lineno_ptr, align 8
  %30 = load i8*, i8** %6, align 8
  store i8* %30, i8** %3, align 8
  br label %31

31:                                               ; preds = %13, %10
  %32 = load i8*, i8** %3, align 8
  ret i8* %32
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.file* @lookup_file(i8* %0) #0 {
  %2 = alloca %struct.file*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct.file*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = load i8, i8* %7, align 1
  %9 = sext i8 %8 to i32
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %1
  call void @abort() #12
  unreachable

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %33, %12
  %14 = load i8*, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 0
  %16 = load i8, i8* %15, align 1
  %17 = sext i8 %16 to i32
  %18 = icmp eq i32 %17, 46
  br i1 %18, label %19, label %31

19:                                               ; preds = %13
  %20 = load i8*, i8** %3, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  %24 = icmp eq i32 %23, 47
  br i1 %24, label %25, label %31

25:                                               ; preds = %19
  %26 = load i8*, i8** %3, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 2
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  %30 = icmp ne i32 %29, 0
  br label %31

31:                                               ; preds = %25, %19, %13
  %32 = phi i1 [ false, %19 ], [ false, %13 ], [ %30, %25 ]
  br i1 %32, label %33, label %36

33:                                               ; preds = %31
  %34 = load i8*, i8** %3, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 2
  store i8* %35, i8** %3, align 8
  br label %13

36:                                               ; preds = %31
  store i32 0, i32* %6, align 4
  %37 = load i8*, i8** %3, align 8
  store i8* %37, i8** %5, align 8
  br label %38

38:                                               ; preds = %54, %36
  %39 = load i8*, i8** %5, align 8
  %40 = load i8, i8* %39, align 1
  %41 = sext i8 %40 to i32
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = load i8*, i8** %5, align 8
  %45 = load i8, i8* %44, align 1
  %46 = sext i8 %45 to i32
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, %46
  store i32 %48, i32* %6, align 4
  %49 = load i32, i32* %6, align 4
  %50 = shl i32 %49, 7
  %51 = load i32, i32* %6, align 4
  %52 = lshr i32 %51, 20
  %53 = add i32 %50, %52
  store i32 %53, i32* %6, align 4
  br label %54

54:                                               ; preds = %43
  %55 = load i8*, i8** %5, align 8
  %56 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %56, i8** %5, align 8
  br label %38

57:                                               ; preds = %38
  %58 = load i32, i32* %6, align 4
  %59 = urem i32 %58, 1007
  store i32 %59, i32* %6, align 4
  %60 = load i32, i32* %6, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds [1007 x %struct.file*], [1007 x %struct.file*]* @files, i64 0, i64 %61
  %63 = load %struct.file*, %struct.file** %62, align 8
  store %struct.file* %63, %struct.file** %4, align 8
  br label %64

64:                                               ; preds = %102, %57
  %65 = load %struct.file*, %struct.file** %4, align 8
  %66 = icmp ne %struct.file* %65, null
  br i1 %66, label %67, label %106

67:                                               ; preds = %64
  %68 = load %struct.file*, %struct.file** %4, align 8
  %69 = getelementptr inbounds %struct.file, %struct.file* %68, i32 0, i32 1
  %70 = load i8*, i8** %69, align 8
  %71 = load i8*, i8** %3, align 8
  %72 = icmp eq i8* %70, %71
  br i1 %72, label %99, label %73

73:                                               ; preds = %67
  %74 = load %struct.file*, %struct.file** %4, align 8
  %75 = getelementptr inbounds %struct.file, %struct.file* %74, i32 0, i32 1
  %76 = load i8*, i8** %75, align 8
  %77 = load i8, i8* %76, align 1
  %78 = sext i8 %77 to i32
  %79 = load i8*, i8** %3, align 8
  %80 = load i8, i8* %79, align 1
  %81 = sext i8 %80 to i32
  %82 = icmp eq i32 %78, %81
  br i1 %82, label %83, label %101

83:                                               ; preds = %73
  %84 = load %struct.file*, %struct.file** %4, align 8
  %85 = getelementptr inbounds %struct.file, %struct.file* %84, i32 0, i32 1
  %86 = load i8*, i8** %85, align 8
  %87 = load i8, i8* %86, align 1
  %88 = sext i8 %87 to i32
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %99, label %90

90:                                               ; preds = %83
  %91 = load %struct.file*, %struct.file** %4, align 8
  %92 = getelementptr inbounds %struct.file, %struct.file* %91, i32 0, i32 1
  %93 = load i8*, i8** %92, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 1
  %95 = load i8*, i8** %3, align 8
  %96 = getelementptr inbounds i8, i8* %95, i64 1
  %97 = call i32 @strcmp(i8* %94, i8* %96) #9
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %90, %83, %67
  %100 = load %struct.file*, %struct.file** %4, align 8
  store %struct.file* %100, %struct.file** %2, align 8
  br label %107

101:                                              ; preds = %90, %73
  br label %102

102:                                              ; preds = %101
  %103 = load %struct.file*, %struct.file** %4, align 8
  %104 = getelementptr inbounds %struct.file, %struct.file* %103, i32 0, i32 0
  %105 = load %struct.file*, %struct.file** %104, align 8
  store %struct.file* %105, %struct.file** %4, align 8
  br label %64

106:                                              ; preds = %64
  store %struct.file* null, %struct.file** %2, align 8
  br label %107

107:                                              ; preds = %106, %99
  %108 = load %struct.file*, %struct.file** %2, align 8
  ret %struct.file* %108
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #6

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.file* @enter_file(i8* %0) #0 {
  %2 = alloca %struct.file*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct.file*, align 8
  %5 = alloca %struct.file*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %8 = load i8*, i8** %3, align 8
  %9 = load i8, i8* %8, align 1
  %10 = sext i8 %9 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %1
  call void @abort() #12
  unreachable

13:                                               ; preds = %1
  br label %14

14:                                               ; preds = %34, %13
  %15 = load i8*, i8** %3, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = load i8, i8* %16, align 1
  %18 = sext i8 %17 to i32
  %19 = icmp eq i32 %18, 46
  br i1 %19, label %20, label %32

20:                                               ; preds = %14
  %21 = load i8*, i8** %3, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp eq i32 %24, 47
  br i1 %25, label %26, label %32

26:                                               ; preds = %20
  %27 = load i8*, i8** %3, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 2
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = icmp ne i32 %30, 0
  br label %32

32:                                               ; preds = %26, %20, %14
  %33 = phi i1 [ false, %20 ], [ false, %14 ], [ %31, %26 ]
  br i1 %33, label %34, label %37

34:                                               ; preds = %32
  %35 = load i8*, i8** %3, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 2
  store i8* %36, i8** %3, align 8
  br label %14

37:                                               ; preds = %32
  store i32 0, i32* %7, align 4
  %38 = load i8*, i8** %3, align 8
  store i8* %38, i8** %6, align 8
  br label %39

39:                                               ; preds = %55, %37
  %40 = load i8*, i8** %6, align 8
  %41 = load i8, i8* %40, align 1
  %42 = sext i8 %41 to i32
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %58

44:                                               ; preds = %39
  %45 = load i8*, i8** %6, align 8
  %46 = load i8, i8* %45, align 1
  %47 = sext i8 %46 to i32
  %48 = load i32, i32* %7, align 4
  %49 = add i32 %48, %47
  store i32 %49, i32* %7, align 4
  %50 = load i32, i32* %7, align 4
  %51 = shl i32 %50, 7
  %52 = load i32, i32* %7, align 4
  %53 = lshr i32 %52, 20
  %54 = add i32 %51, %53
  store i32 %54, i32* %7, align 4
  br label %55

55:                                               ; preds = %44
  %56 = load i8*, i8** %6, align 8
  %57 = getelementptr inbounds i8, i8* %56, i32 1
  store i8* %57, i8** %6, align 8
  br label %39

58:                                               ; preds = %39
  %59 = load i32, i32* %7, align 4
  %60 = urem i32 %59, 1007
  store i32 %60, i32* %7, align 4
  %61 = load i32, i32* %7, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds [1007 x %struct.file*], [1007 x %struct.file*]* @files, i64 0, i64 %62
  %64 = load %struct.file*, %struct.file** %63, align 8
  store %struct.file* %64, %struct.file** %4, align 8
  br label %65

65:                                               ; preds = %102, %58
  %66 = load %struct.file*, %struct.file** %4, align 8
  %67 = icmp ne %struct.file* %66, null
  br i1 %67, label %68, label %106

68:                                               ; preds = %65
  %69 = load %struct.file*, %struct.file** %4, align 8
  %70 = getelementptr inbounds %struct.file, %struct.file* %69, i32 0, i32 1
  %71 = load i8*, i8** %70, align 8
  %72 = load i8*, i8** %3, align 8
  %73 = icmp eq i8* %71, %72
  br i1 %73, label %100, label %74

74:                                               ; preds = %68
  %75 = load %struct.file*, %struct.file** %4, align 8
  %76 = getelementptr inbounds %struct.file, %struct.file* %75, i32 0, i32 1
  %77 = load i8*, i8** %76, align 8
  %78 = load i8, i8* %77, align 1
  %79 = sext i8 %78 to i32
  %80 = load i8*, i8** %3, align 8
  %81 = load i8, i8* %80, align 1
  %82 = sext i8 %81 to i32
  %83 = icmp eq i32 %79, %82
  br i1 %83, label %84, label %101

84:                                               ; preds = %74
  %85 = load %struct.file*, %struct.file** %4, align 8
  %86 = getelementptr inbounds %struct.file, %struct.file* %85, i32 0, i32 1
  %87 = load i8*, i8** %86, align 8
  %88 = load i8, i8* %87, align 1
  %89 = sext i8 %88 to i32
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %100, label %91

91:                                               ; preds = %84
  %92 = load %struct.file*, %struct.file** %4, align 8
  %93 = getelementptr inbounds %struct.file, %struct.file* %92, i32 0, i32 1
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 1
  %96 = load i8*, i8** %3, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 1
  %98 = call i32 @strcmp(i8* %95, i8* %97) #9
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %101, label %100

100:                                              ; preds = %91, %84, %68
  br label %106

101:                                              ; preds = %91, %74
  br label %102

102:                                              ; preds = %101
  %103 = load %struct.file*, %struct.file** %4, align 8
  %104 = getelementptr inbounds %struct.file, %struct.file* %103, i32 0, i32 0
  %105 = load %struct.file*, %struct.file** %104, align 8
  store %struct.file* %105, %struct.file** %4, align 8
  br label %65

106:                                              ; preds = %100, %65
  %107 = load %struct.file*, %struct.file** %4, align 8
  %108 = icmp ne %struct.file* %107, null
  br i1 %108, label %109, label %119

109:                                              ; preds = %106
  %110 = load %struct.file*, %struct.file** %4, align 8
  %111 = getelementptr inbounds %struct.file, %struct.file* %110, i32 0, i32 12
  %112 = load i16, i16* %111, align 2
  %113 = lshr i16 %112, 2
  %114 = and i16 %113, 1
  %115 = zext i16 %114 to i32
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %109
  %118 = load %struct.file*, %struct.file** %4, align 8
  store %struct.file* %118, %struct.file** %2, align 8
  br label %158

119:                                              ; preds = %109, %106
  %120 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 96)
  %121 = bitcast i8* %120 to %struct.file*
  store %struct.file* %121, %struct.file** %5, align 8
  %122 = load %struct.file*, %struct.file** %5, align 8
  %123 = bitcast %struct.file* %122 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %123, i8 0, i64 96, i1 false)
  %124 = load i8*, i8** %3, align 8
  %125 = load %struct.file*, %struct.file** %5, align 8
  %126 = getelementptr inbounds %struct.file, %struct.file* %125, i32 0, i32 1
  store i8* %124, i8** %126, align 8
  %127 = load %struct.file*, %struct.file** %5, align 8
  %128 = getelementptr inbounds %struct.file, %struct.file* %127, i32 0, i32 11
  store i16 -1, i16* %128, align 8
  %129 = load %struct.file*, %struct.file** %4, align 8
  %130 = icmp eq %struct.file* %129, null
  br i1 %130, label %131, label %142

131:                                              ; preds = %119
  %132 = load i32, i32* %7, align 4
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds [1007 x %struct.file*], [1007 x %struct.file*]* @files, i64 0, i64 %133
  %135 = load %struct.file*, %struct.file** %134, align 8
  %136 = load %struct.file*, %struct.file** %5, align 8
  %137 = getelementptr inbounds %struct.file, %struct.file* %136, i32 0, i32 0
  store %struct.file* %135, %struct.file** %137, align 8
  %138 = load %struct.file*, %struct.file** %5, align 8
  %139 = load i32, i32* %7, align 4
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds [1007 x %struct.file*], [1007 x %struct.file*]* @files, i64 0, i64 %140
  store %struct.file* %138, %struct.file** %141, align 8
  br label %156

142:                                              ; preds = %119
  br label %143

143:                                              ; preds = %148, %142
  %144 = load %struct.file*, %struct.file** %4, align 8
  %145 = getelementptr inbounds %struct.file, %struct.file* %144, i32 0, i32 7
  %146 = load %struct.file*, %struct.file** %145, align 8
  %147 = icmp ne %struct.file* %146, null
  br i1 %147, label %148, label %152

148:                                              ; preds = %143
  %149 = load %struct.file*, %struct.file** %4, align 8
  %150 = getelementptr inbounds %struct.file, %struct.file* %149, i32 0, i32 7
  %151 = load %struct.file*, %struct.file** %150, align 8
  store %struct.file* %151, %struct.file** %4, align 8
  br label %143

152:                                              ; preds = %143
  %153 = load %struct.file*, %struct.file** %5, align 8
  %154 = load %struct.file*, %struct.file** %4, align 8
  %155 = getelementptr inbounds %struct.file, %struct.file* %154, i32 0, i32 7
  store %struct.file* %153, %struct.file** %155, align 8
  br label %156

156:                                              ; preds = %152, %131
  %157 = load %struct.file*, %struct.file** %5, align 8
  store %struct.file* %157, %struct.file** %2, align 8
  br label %158

158:                                              ; preds = %156, %117
  %159 = load %struct.file*, %struct.file** %2, align 8
  ret %struct.file* %159
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rename_file(%struct.file* %0, i8* %1) #0 {
  %3 = alloca %struct.file*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca %struct.file*, align 8
  %10 = alloca %struct.file*, align 8
  %11 = alloca %struct.file*, align 8
  %12 = alloca %struct.dep*, align 8
  store %struct.file* %0, %struct.file** %3, align 8
  store i8* %1, i8** %4, align 8
  %13 = load %struct.file*, %struct.file** %3, align 8
  %14 = getelementptr inbounds %struct.file, %struct.file* %13, i32 0, i32 1
  %15 = load i8*, i8** %14, align 8
  store i8* %15, i8** %5, align 8
  store i32 0, i32* %6, align 4
  %16 = load i8*, i8** %5, align 8
  store i8* %16, i8** %8, align 8
  br label %17

17:                                               ; preds = %33, %2
  %18 = load i8*, i8** %8, align 8
  %19 = load i8, i8* %18, align 1
  %20 = sext i8 %19 to i32
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %36

22:                                               ; preds = %17
  %23 = load i8*, i8** %8, align 8
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i32
  %26 = load i32, i32* %6, align 4
  %27 = add i32 %26, %25
  store i32 %27, i32* %6, align 4
  %28 = load i32, i32* %6, align 4
  %29 = shl i32 %28, 7
  %30 = load i32, i32* %6, align 4
  %31 = lshr i32 %30, 20
  %32 = add i32 %29, %31
  store i32 %32, i32* %6, align 4
  br label %33

33:                                               ; preds = %22
  %34 = load i8*, i8** %8, align 8
  %35 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %35, i8** %8, align 8
  br label %17

36:                                               ; preds = %17
  %37 = load i32, i32* %6, align 4
  %38 = urem i32 %37, 1007
  store i32 %38, i32* %6, align 4
  store i32 0, i32* %7, align 4
  %39 = load i8*, i8** %4, align 8
  store i8* %39, i8** %8, align 8
  br label %40

40:                                               ; preds = %56, %36
  %41 = load i8*, i8** %8, align 8
  %42 = load i8, i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %59

45:                                               ; preds = %40
  %46 = load i8*, i8** %8, align 8
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i32
  %49 = load i32, i32* %7, align 4
  %50 = add i32 %49, %48
  store i32 %50, i32* %7, align 4
  %51 = load i32, i32* %7, align 4
  %52 = shl i32 %51, 7
  %53 = load i32, i32* %7, align 4
  %54 = lshr i32 %53, 20
  %55 = add i32 %52, %54
  store i32 %55, i32* %7, align 4
  br label %56

56:                                               ; preds = %45
  %57 = load i8*, i8** %8, align 8
  %58 = getelementptr inbounds i8, i8* %57, i32 1
  store i8* %58, i8** %8, align 8
  br label %40

59:                                               ; preds = %40
  %60 = load i32, i32* %7, align 4
  %61 = urem i32 %60, 1007
  store i32 %61, i32* %7, align 4
  %62 = load i32, i32* %7, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds [1007 x %struct.file*], [1007 x %struct.file*]* @files, i64 0, i64 %63
  %65 = load %struct.file*, %struct.file** %64, align 8
  store %struct.file* %65, %struct.file** %10, align 8
  br label %66

66:                                               ; preds = %103, %59
  %67 = load %struct.file*, %struct.file** %10, align 8
  %68 = icmp ne %struct.file* %67, null
  br i1 %68, label %69, label %107

69:                                               ; preds = %66
  %70 = load %struct.file*, %struct.file** %10, align 8
  %71 = getelementptr inbounds %struct.file, %struct.file* %70, i32 0, i32 1
  %72 = load i8*, i8** %71, align 8
  %73 = load i8*, i8** %4, align 8
  %74 = icmp eq i8* %72, %73
  br i1 %74, label %101, label %75

75:                                               ; preds = %69
  %76 = load %struct.file*, %struct.file** %10, align 8
  %77 = getelementptr inbounds %struct.file, %struct.file* %76, i32 0, i32 1
  %78 = load i8*, i8** %77, align 8
  %79 = load i8, i8* %78, align 1
  %80 = sext i8 %79 to i32
  %81 = load i8*, i8** %4, align 8
  %82 = load i8, i8* %81, align 1
  %83 = sext i8 %82 to i32
  %84 = icmp eq i32 %80, %83
  br i1 %84, label %85, label %102

85:                                               ; preds = %75
  %86 = load %struct.file*, %struct.file** %10, align 8
  %87 = getelementptr inbounds %struct.file, %struct.file* %86, i32 0, i32 1
  %88 = load i8*, i8** %87, align 8
  %89 = load i8, i8* %88, align 1
  %90 = sext i8 %89 to i32
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %101, label %92

92:                                               ; preds = %85
  %93 = load %struct.file*, %struct.file** %10, align 8
  %94 = getelementptr inbounds %struct.file, %struct.file* %93, i32 0, i32 1
  %95 = load i8*, i8** %94, align 8
  %96 = getelementptr inbounds i8, i8* %95, i64 1
  %97 = load i8*, i8** %4, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 1
  %99 = call i32 @strcmp(i8* %96, i8* %98) #9
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %102, label %101

101:                                              ; preds = %92, %85, %69
  br label %107

102:                                              ; preds = %92, %75
  br label %103

103:                                              ; preds = %102
  %104 = load %struct.file*, %struct.file** %10, align 8
  %105 = getelementptr inbounds %struct.file, %struct.file* %104, i32 0, i32 0
  %106 = load %struct.file*, %struct.file** %105, align 8
  store %struct.file* %106, %struct.file** %10, align 8
  br label %66

107:                                              ; preds = %101, %66
  %108 = load i32, i32* %7, align 4
  %109 = load i32, i32* %6, align 4
  %110 = icmp ne i32 %108, %109
  br i1 %110, label %114, label %111

111:                                              ; preds = %107
  %112 = load %struct.file*, %struct.file** %10, align 8
  %113 = icmp ne %struct.file* %112, null
  br i1 %113, label %114, label %146

114:                                              ; preds = %111, %107
  store %struct.file* null, %struct.file** %11, align 8
  %115 = load i32, i32* %6, align 4
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds [1007 x %struct.file*], [1007 x %struct.file*]* @files, i64 0, i64 %116
  %118 = load %struct.file*, %struct.file** %117, align 8
  store %struct.file* %118, %struct.file** %9, align 8
  br label %119

119:                                              ; preds = %125, %114
  %120 = load %struct.file*, %struct.file** %9, align 8
  %121 = load %struct.file*, %struct.file** %3, align 8
  %122 = icmp ne %struct.file* %120, %121
  br i1 %122, label %123, label %129

123:                                              ; preds = %119
  %124 = load %struct.file*, %struct.file** %9, align 8
  store %struct.file* %124, %struct.file** %11, align 8
  br label %125

125:                                              ; preds = %123
  %126 = load %struct.file*, %struct.file** %9, align 8
  %127 = getelementptr inbounds %struct.file, %struct.file* %126, i32 0, i32 0
  %128 = load %struct.file*, %struct.file** %127, align 8
  store %struct.file* %128, %struct.file** %9, align 8
  br label %119

129:                                              ; preds = %119
  %130 = load %struct.file*, %struct.file** %11, align 8
  %131 = icmp eq %struct.file* %130, null
  br i1 %131, label %132, label %139

132:                                              ; preds = %129
  %133 = load %struct.file*, %struct.file** %9, align 8
  %134 = getelementptr inbounds %struct.file, %struct.file* %133, i32 0, i32 0
  %135 = load %struct.file*, %struct.file** %134, align 8
  %136 = load i32, i32* %6, align 4
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds [1007 x %struct.file*], [1007 x %struct.file*]* @files, i64 0, i64 %137
  store %struct.file* %135, %struct.file** %138, align 8
  br label %145

139:                                              ; preds = %129
  %140 = load %struct.file*, %struct.file** %9, align 8
  %141 = getelementptr inbounds %struct.file, %struct.file* %140, i32 0, i32 0
  %142 = load %struct.file*, %struct.file** %141, align 8
  %143 = load %struct.file*, %struct.file** %11, align 8
  %144 = getelementptr inbounds %struct.file, %struct.file* %143, i32 0, i32 0
  store %struct.file* %142, %struct.file** %144, align 8
  br label %145

145:                                              ; preds = %139, %132
  br label %146

146:                                              ; preds = %145, %111
  %147 = load %struct.file*, %struct.file** %3, align 8
  store %struct.file* %147, %struct.file** %9, align 8
  br label %148

148:                                              ; preds = %155, %146
  %149 = load %struct.file*, %struct.file** %9, align 8
  %150 = icmp ne %struct.file* %149, null
  br i1 %150, label %151, label %159

151:                                              ; preds = %148
  %152 = load i8*, i8** %4, align 8
  %153 = load %struct.file*, %struct.file** %9, align 8
  %154 = getelementptr inbounds %struct.file, %struct.file* %153, i32 0, i32 1
  store i8* %152, i8** %154, align 8
  br label %155

155:                                              ; preds = %151
  %156 = load %struct.file*, %struct.file** %9, align 8
  %157 = getelementptr inbounds %struct.file, %struct.file* %156, i32 0, i32 7
  %158 = load %struct.file*, %struct.file** %157, align 8
  store %struct.file* %158, %struct.file** %9, align 8
  br label %148

159:                                              ; preds = %148
  %160 = load %struct.file*, %struct.file** %10, align 8
  %161 = icmp eq %struct.file* %160, null
  br i1 %161, label %162, label %178

162:                                              ; preds = %159
  %163 = load i32, i32* %7, align 4
  %164 = load i32, i32* %6, align 4
  %165 = icmp ne i32 %163, %164
  br i1 %165, label %166, label %177

166:                                              ; preds = %162
  %167 = load i32, i32* %7, align 4
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds [1007 x %struct.file*], [1007 x %struct.file*]* @files, i64 0, i64 %168
  %170 = load %struct.file*, %struct.file** %169, align 8
  %171 = load %struct.file*, %struct.file** %3, align 8
  %172 = getelementptr inbounds %struct.file, %struct.file* %171, i32 0, i32 0
  store %struct.file* %170, %struct.file** %172, align 8
  %173 = load %struct.file*, %struct.file** %3, align 8
  %174 = load i32, i32* %7, align 4
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds [1007 x %struct.file*], [1007 x %struct.file*]* @files, i64 0, i64 %175
  store %struct.file* %173, %struct.file** %176, align 8
  br label %177

177:                                              ; preds = %166, %162
  br label %482

178:                                              ; preds = %159
  %179 = load %struct.file*, %struct.file** %3, align 8
  %180 = getelementptr inbounds %struct.file, %struct.file* %179, i32 0, i32 3
  %181 = load %struct.commands*, %struct.commands** %180, align 8
  %182 = icmp ne %struct.commands* %181, null
  br i1 %182, label %183, label %250

183:                                              ; preds = %178
  %184 = load %struct.file*, %struct.file** %10, align 8
  %185 = getelementptr inbounds %struct.file, %struct.file* %184, i32 0, i32 3
  %186 = load %struct.commands*, %struct.commands** %185, align 8
  %187 = icmp eq %struct.commands* %186, null
  br i1 %187, label %188, label %194

188:                                              ; preds = %183
  %189 = load %struct.file*, %struct.file** %3, align 8
  %190 = getelementptr inbounds %struct.file, %struct.file* %189, i32 0, i32 3
  %191 = load %struct.commands*, %struct.commands** %190, align 8
  %192 = load %struct.file*, %struct.file** %10, align 8
  %193 = getelementptr inbounds %struct.file, %struct.file* %192, i32 0, i32 3
  store %struct.commands* %191, %struct.commands** %193, align 8
  br label %249

194:                                              ; preds = %183
  %195 = load %struct.file*, %struct.file** %3, align 8
  %196 = getelementptr inbounds %struct.file, %struct.file* %195, i32 0, i32 3
  %197 = load %struct.commands*, %struct.commands** %196, align 8
  %198 = load %struct.file*, %struct.file** %10, align 8
  %199 = getelementptr inbounds %struct.file, %struct.file* %198, i32 0, i32 3
  %200 = load %struct.commands*, %struct.commands** %199, align 8
  %201 = icmp ne %struct.commands* %197, %200
  br i1 %201, label %202, label %248

202:                                              ; preds = %194
  %203 = load %struct.file*, %struct.file** %3, align 8
  %204 = getelementptr inbounds %struct.file, %struct.file* %203, i32 0, i32 3
  %205 = load %struct.commands*, %struct.commands** %204, align 8
  %206 = getelementptr inbounds %struct.commands, %struct.commands* %205, i32 0, i32 0
  %207 = load i8*, i8** %206, align 8
  %208 = load %struct.file*, %struct.file** %3, align 8
  %209 = getelementptr inbounds %struct.file, %struct.file* %208, i32 0, i32 3
  %210 = load %struct.commands*, %struct.commands** %209, align 8
  %211 = getelementptr inbounds %struct.commands, %struct.commands* %210, i32 0, i32 1
  %212 = load i32, i32* %211, align 8
  %213 = load i8*, i8** %5, align 8
  %214 = load %struct.file*, %struct.file** %10, align 8
  %215 = getelementptr inbounds %struct.file, %struct.file* %214, i32 0, i32 3
  %216 = load %struct.commands*, %struct.commands** %215, align 8
  %217 = getelementptr inbounds %struct.commands, %struct.commands* %216, i32 0, i32 0
  %218 = load i8*, i8** %217, align 8
  %219 = load %struct.file*, %struct.file** %10, align 8
  %220 = getelementptr inbounds %struct.file, %struct.file* %219, i32 0, i32 3
  %221 = load %struct.commands*, %struct.commands** %220, align 8
  %222 = getelementptr inbounds %struct.commands, %struct.commands* %221, i32 0, i32 1
  %223 = load i32, i32* %222, align 8
  call void (i8*, i32, i8*, i8*, i8*, i32, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_error to void (i8*, i32, i8*, i8*, i8*, i32, ...)*)(i8* %207, i32 %212, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.218, i64 0, i64 0), i8* %213, i8* %218, i32 %223)
  %224 = load %struct.file*, %struct.file** %3, align 8
  %225 = getelementptr inbounds %struct.file, %struct.file* %224, i32 0, i32 3
  %226 = load %struct.commands*, %struct.commands** %225, align 8
  %227 = getelementptr inbounds %struct.commands, %struct.commands* %226, i32 0, i32 0
  %228 = load i8*, i8** %227, align 8
  %229 = load %struct.file*, %struct.file** %3, align 8
  %230 = getelementptr inbounds %struct.file, %struct.file* %229, i32 0, i32 3
  %231 = load %struct.commands*, %struct.commands** %230, align 8
  %232 = getelementptr inbounds %struct.commands, %struct.commands* %231, i32 0, i32 1
  %233 = load i32, i32* %232, align 8
  %234 = load i8*, i8** %5, align 8
  %235 = load i8*, i8** %4, align 8
  call void (i8*, i32, i8*, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_error to void (i8*, i32, i8*, i8*, i8*, ...)*)(i8* %228, i32 %233, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1.219, i64 0, i64 0), i8* %234, i8* %235)
  %236 = load %struct.file*, %struct.file** %3, align 8
  %237 = getelementptr inbounds %struct.file, %struct.file* %236, i32 0, i32 3
  %238 = load %struct.commands*, %struct.commands** %237, align 8
  %239 = getelementptr inbounds %struct.commands, %struct.commands* %238, i32 0, i32 0
  %240 = load i8*, i8** %239, align 8
  %241 = load %struct.file*, %struct.file** %3, align 8
  %242 = getelementptr inbounds %struct.file, %struct.file* %241, i32 0, i32 3
  %243 = load %struct.commands*, %struct.commands** %242, align 8
  %244 = getelementptr inbounds %struct.commands, %struct.commands* %243, i32 0, i32 1
  %245 = load i32, i32* %244, align 8
  %246 = load i8*, i8** %4, align 8
  %247 = load i8*, i8** %5, align 8
  call void (i8*, i32, i8*, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_error to void (i8*, i32, i8*, i8*, i8*, ...)*)(i8* %240, i32 %245, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.2.220, i64 0, i64 0), i8* %246, i8* %247)
  br label %248

248:                                              ; preds = %202, %194
  br label %249

249:                                              ; preds = %248, %188
  br label %250

250:                                              ; preds = %249, %178
  %251 = load %struct.file*, %struct.file** %10, align 8
  %252 = getelementptr inbounds %struct.file, %struct.file* %251, i32 0, i32 2
  %253 = load %struct.dep*, %struct.dep** %252, align 8
  store %struct.dep* %253, %struct.dep** %12, align 8
  %254 = load %struct.dep*, %struct.dep** %12, align 8
  %255 = icmp eq %struct.dep* %254, null
  br i1 %255, label %256, label %262

256:                                              ; preds = %250
  %257 = load %struct.file*, %struct.file** %3, align 8
  %258 = getelementptr inbounds %struct.file, %struct.file* %257, i32 0, i32 2
  %259 = load %struct.dep*, %struct.dep** %258, align 8
  %260 = load %struct.file*, %struct.file** %10, align 8
  %261 = getelementptr inbounds %struct.file, %struct.file* %260, i32 0, i32 2
  store %struct.dep* %259, %struct.dep** %261, align 8
  br label %281

262:                                              ; preds = %250
  br label %263

263:                                              ; preds = %268, %262
  %264 = load %struct.dep*, %struct.dep** %12, align 8
  %265 = getelementptr inbounds %struct.dep, %struct.dep* %264, i32 0, i32 0
  %266 = load %struct.dep*, %struct.dep** %265, align 8
  %267 = icmp ne %struct.dep* %266, null
  br i1 %267, label %268, label %272

268:                                              ; preds = %263
  %269 = load %struct.dep*, %struct.dep** %12, align 8
  %270 = getelementptr inbounds %struct.dep, %struct.dep* %269, i32 0, i32 0
  %271 = load %struct.dep*, %struct.dep** %270, align 8
  store %struct.dep* %271, %struct.dep** %12, align 8
  br label %263

272:                                              ; preds = %263
  %273 = load %struct.file*, %struct.file** %3, align 8
  %274 = getelementptr inbounds %struct.file, %struct.file* %273, i32 0, i32 2
  %275 = load %struct.dep*, %struct.dep** %274, align 8
  %276 = load %struct.dep*, %struct.dep** %12, align 8
  %277 = getelementptr inbounds %struct.dep, %struct.dep* %276, i32 0, i32 0
  store %struct.dep* %275, %struct.dep** %277, align 8
  %278 = load %struct.file*, %struct.file** %10, align 8
  %279 = getelementptr inbounds %struct.file, %struct.file* %278, i32 0, i32 2
  %280 = load %struct.dep*, %struct.dep** %279, align 8
  call void (%struct.dep*, ...) bitcast (void (%struct.dep*)* @uniquize_deps to void (%struct.dep*, ...)*)(%struct.dep* %280)
  br label %281

281:                                              ; preds = %272, %256
  %282 = load %struct.file*, %struct.file** %10, align 8
  %283 = getelementptr inbounds %struct.file, %struct.file* %282, i32 0, i32 9
  %284 = load %struct.file*, %struct.file** %3, align 8
  %285 = getelementptr inbounds %struct.file, %struct.file* %284, i32 0, i32 9
  %286 = load %struct.variable_set_list*, %struct.variable_set_list** %285, align 8
  call void (%struct.variable_set_list**, %struct.variable_set_list*, ...) bitcast (void (%struct.variable_set_list**, %struct.variable_set_list*)* @merge_variable_set_lists to void (%struct.variable_set_list**, %struct.variable_set_list*, ...)*)(%struct.variable_set_list** %283, %struct.variable_set_list* %286)
  %287 = load %struct.file*, %struct.file** %10, align 8
  %288 = getelementptr inbounds %struct.file, %struct.file* %287, i32 0, i32 12
  %289 = load i16, i16* %288, align 2
  %290 = lshr i16 %289, 2
  %291 = and i16 %290, 1
  %292 = zext i16 %291 to i32
  %293 = icmp ne i32 %292, 0
  br i1 %293, label %294, label %305

294:                                              ; preds = %281
  %295 = load %struct.file*, %struct.file** %3, align 8
  %296 = getelementptr inbounds %struct.file, %struct.file* %295, i32 0, i32 12
  %297 = load i16, i16* %296, align 2
  %298 = lshr i16 %297, 2
  %299 = and i16 %298, 1
  %300 = zext i16 %299 to i32
  %301 = icmp ne i32 %300, 0
  br i1 %301, label %305, label %302

302:                                              ; preds = %294
  %303 = load i8*, i8** %5, align 8
  %304 = load i8*, i8** %4, align 8
  call void (i8*, i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, i8*, i8*, ...)*)(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.3.221, i64 0, i64 0), i8* %303, i8* %304)
  br label %305

305:                                              ; preds = %302, %294, %281
  %306 = load %struct.file*, %struct.file** %10, align 8
  %307 = getelementptr inbounds %struct.file, %struct.file* %306, i32 0, i32 12
  %308 = load i16, i16* %307, align 2
  %309 = lshr i16 %308, 2
  %310 = and i16 %309, 1
  %311 = zext i16 %310 to i32
  %312 = icmp ne i32 %311, 0
  br i1 %312, label %324, label %313

313:                                              ; preds = %305
  %314 = load %struct.file*, %struct.file** %3, align 8
  %315 = getelementptr inbounds %struct.file, %struct.file* %314, i32 0, i32 12
  %316 = load i16, i16* %315, align 2
  %317 = lshr i16 %316, 2
  %318 = and i16 %317, 1
  %319 = zext i16 %318 to i32
  %320 = icmp ne i32 %319, 0
  br i1 %320, label %321, label %324

321:                                              ; preds = %313
  %322 = load i8*, i8** %5, align 8
  %323 = load i8*, i8** %4, align 8
  call void (i8*, i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, i8*, i8*, ...)*)(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.4.222, i64 0, i64 0), i8* %322, i8* %323)
  br label %324

324:                                              ; preds = %321, %313, %305
  %325 = load %struct.file*, %struct.file** %3, align 8
  %326 = getelementptr inbounds %struct.file, %struct.file* %325, i32 0, i32 6
  %327 = load i64, i64* %326, align 8
  %328 = load %struct.file*, %struct.file** %10, align 8
  %329 = getelementptr inbounds %struct.file, %struct.file* %328, i32 0, i32 6
  %330 = load i64, i64* %329, align 8
  %331 = icmp sgt i64 %327, %330
  br i1 %331, label %332, label %338

332:                                              ; preds = %324
  %333 = load %struct.file*, %struct.file** %3, align 8
  %334 = getelementptr inbounds %struct.file, %struct.file* %333, i32 0, i32 6
  %335 = load i64, i64* %334, align 8
  %336 = load %struct.file*, %struct.file** %10, align 8
  %337 = getelementptr inbounds %struct.file, %struct.file* %336, i32 0, i32 6
  store i64 %335, i64* %337, align 8
  br label %338

338:                                              ; preds = %332, %324
  %339 = load %struct.file*, %struct.file** %3, align 8
  %340 = getelementptr inbounds %struct.file, %struct.file* %339, i32 0, i32 12
  %341 = load i16, i16* %340, align 2
  %342 = lshr i16 %341, 3
  %343 = and i16 %342, 1
  %344 = zext i16 %343 to i32
  %345 = load %struct.file*, %struct.file** %10, align 8
  %346 = getelementptr inbounds %struct.file, %struct.file* %345, i32 0, i32 12
  %347 = load i16, i16* %346, align 2
  %348 = lshr i16 %347, 3
  %349 = and i16 %348, 1
  %350 = zext i16 %349 to i32
  %351 = or i32 %350, %344
  %352 = trunc i32 %351 to i16
  %353 = load i16, i16* %346, align 2
  %354 = and i16 %352, 1
  %355 = shl i16 %354, 3
  %356 = and i16 %353, -9
  %357 = or i16 %356, %355
  store i16 %357, i16* %346, align 2
  %358 = zext i16 %354 to i32
  %359 = load %struct.file*, %struct.file** %3, align 8
  %360 = getelementptr inbounds %struct.file, %struct.file* %359, i32 0, i32 12
  %361 = load i16, i16* %360, align 2
  %362 = lshr i16 %361, 4
  %363 = and i16 %362, 1
  %364 = zext i16 %363 to i32
  %365 = load %struct.file*, %struct.file** %10, align 8
  %366 = getelementptr inbounds %struct.file, %struct.file* %365, i32 0, i32 12
  %367 = load i16, i16* %366, align 2
  %368 = lshr i16 %367, 4
  %369 = and i16 %368, 1
  %370 = zext i16 %369 to i32
  %371 = or i32 %370, %364
  %372 = trunc i32 %371 to i16
  %373 = load i16, i16* %366, align 2
  %374 = and i16 %372, 1
  %375 = shl i16 %374, 4
  %376 = and i16 %373, -17
  %377 = or i16 %376, %375
  store i16 %377, i16* %366, align 2
  %378 = zext i16 %374 to i32
  %379 = load %struct.file*, %struct.file** %3, align 8
  %380 = getelementptr inbounds %struct.file, %struct.file* %379, i32 0, i32 12
  %381 = load i16, i16* %380, align 2
  %382 = lshr i16 %381, 5
  %383 = and i16 %382, 1
  %384 = zext i16 %383 to i32
  %385 = load %struct.file*, %struct.file** %10, align 8
  %386 = getelementptr inbounds %struct.file, %struct.file* %385, i32 0, i32 12
  %387 = load i16, i16* %386, align 2
  %388 = lshr i16 %387, 5
  %389 = and i16 %388, 1
  %390 = zext i16 %389 to i32
  %391 = or i32 %390, %384
  %392 = trunc i32 %391 to i16
  %393 = load i16, i16* %386, align 2
  %394 = and i16 %392, 1
  %395 = shl i16 %394, 5
  %396 = and i16 %393, -33
  %397 = or i16 %396, %395
  store i16 %397, i16* %386, align 2
  %398 = zext i16 %394 to i32
  %399 = load %struct.file*, %struct.file** %3, align 8
  %400 = getelementptr inbounds %struct.file, %struct.file* %399, i32 0, i32 12
  %401 = load i16, i16* %400, align 2
  %402 = lshr i16 %401, 6
  %403 = and i16 %402, 1
  %404 = zext i16 %403 to i32
  %405 = load %struct.file*, %struct.file** %10, align 8
  %406 = getelementptr inbounds %struct.file, %struct.file* %405, i32 0, i32 12
  %407 = load i16, i16* %406, align 2
  %408 = lshr i16 %407, 6
  %409 = and i16 %408, 1
  %410 = zext i16 %409 to i32
  %411 = or i32 %410, %404
  %412 = trunc i32 %411 to i16
  %413 = load i16, i16* %406, align 2
  %414 = and i16 %412, 1
  %415 = shl i16 %414, 6
  %416 = and i16 %413, -65
  %417 = or i16 %416, %415
  store i16 %417, i16* %406, align 2
  %418 = zext i16 %414 to i32
  %419 = load %struct.file*, %struct.file** %3, align 8
  %420 = getelementptr inbounds %struct.file, %struct.file* %419, i32 0, i32 12
  %421 = load i16, i16* %420, align 2
  %422 = lshr i16 %421, 7
  %423 = and i16 %422, 1
  %424 = zext i16 %423 to i32
  %425 = load %struct.file*, %struct.file** %10, align 8
  %426 = getelementptr inbounds %struct.file, %struct.file* %425, i32 0, i32 12
  %427 = load i16, i16* %426, align 2
  %428 = lshr i16 %427, 7
  %429 = and i16 %428, 1
  %430 = zext i16 %429 to i32
  %431 = or i32 %430, %424
  %432 = trunc i32 %431 to i16
  %433 = load i16, i16* %426, align 2
  %434 = and i16 %432, 1
  %435 = shl i16 %434, 7
  %436 = and i16 %433, -129
  %437 = or i16 %436, %435
  store i16 %437, i16* %426, align 2
  %438 = zext i16 %434 to i32
  %439 = load %struct.file*, %struct.file** %3, align 8
  %440 = getelementptr inbounds %struct.file, %struct.file* %439, i32 0, i32 12
  %441 = load i16, i16* %440, align 2
  %442 = lshr i16 %441, 8
  %443 = and i16 %442, 1
  %444 = zext i16 %443 to i32
  %445 = load %struct.file*, %struct.file** %10, align 8
  %446 = getelementptr inbounds %struct.file, %struct.file* %445, i32 0, i32 12
  %447 = load i16, i16* %446, align 2
  %448 = lshr i16 %447, 8
  %449 = and i16 %448, 1
  %450 = zext i16 %449 to i32
  %451 = or i32 %450, %444
  %452 = trunc i32 %451 to i16
  %453 = load i16, i16* %446, align 2
  %454 = and i16 %452, 1
  %455 = shl i16 %454, 8
  %456 = and i16 %453, -257
  %457 = or i16 %456, %455
  store i16 %457, i16* %446, align 2
  %458 = zext i16 %454 to i32
  %459 = load %struct.file*, %struct.file** %3, align 8
  %460 = getelementptr inbounds %struct.file, %struct.file* %459, i32 0, i32 12
  %461 = load i16, i16* %460, align 2
  %462 = lshr i16 %461, 9
  %463 = and i16 %462, 1
  %464 = zext i16 %463 to i32
  %465 = load %struct.file*, %struct.file** %10, align 8
  %466 = getelementptr inbounds %struct.file, %struct.file* %465, i32 0, i32 12
  %467 = load i16, i16* %466, align 2
  %468 = lshr i16 %467, 9
  %469 = and i16 %468, 1
  %470 = zext i16 %469 to i32
  %471 = or i32 %470, %464
  %472 = trunc i32 %471 to i16
  %473 = load i16, i16* %466, align 2
  %474 = and i16 %472, 1
  %475 = shl i16 %474, 9
  %476 = and i16 %473, -513
  %477 = or i16 %476, %475
  store i16 %477, i16* %466, align 2
  %478 = zext i16 %474 to i32
  %479 = load %struct.file*, %struct.file** %10, align 8
  %480 = load %struct.file*, %struct.file** %3, align 8
  %481 = getelementptr inbounds %struct.file, %struct.file* %480, i32 0, i32 8
  store %struct.file* %479, %struct.file** %481, align 8
  br label %482

482:                                              ; preds = %338, %177
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @remove_intermediates(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.file*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %7 = load i32, i32* %2, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = load i32, i32* @just_print_flag, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %9
  br label %132

13:                                               ; preds = %9, %1
  store i8 0, i8* %5, align 1
  store i32 0, i32* %3, align 4
  br label %14

14:                                               ; preds = %118, %13
  %15 = load i32, i32* %3, align 4
  %16 = icmp slt i32 %15, 1007
  br i1 %16, label %17, label %121

17:                                               ; preds = %14
  %18 = load i32, i32* %3, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [1007 x %struct.file*], [1007 x %struct.file*]* @files, i64 0, i64 %19
  %21 = load %struct.file*, %struct.file** %20, align 8
  store %struct.file* %21, %struct.file** %4, align 8
  br label %22

22:                                               ; preds = %113, %17
  %23 = load %struct.file*, %struct.file** %4, align 8
  %24 = icmp ne %struct.file* %23, null
  br i1 %24, label %25, label %117

25:                                               ; preds = %22
  %26 = load %struct.file*, %struct.file** %4, align 8
  %27 = getelementptr inbounds %struct.file, %struct.file* %26, i32 0, i32 12
  %28 = load i16, i16* %27, align 2
  %29 = lshr i16 %28, 10
  %30 = and i16 %29, 1
  %31 = zext i16 %30 to i32
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %112

33:                                               ; preds = %25
  %34 = load %struct.file*, %struct.file** %4, align 8
  %35 = getelementptr inbounds %struct.file, %struct.file* %34, i32 0, i32 12
  %36 = load i16, i16* %35, align 2
  %37 = lshr i16 %36, 11
  %38 = and i16 %37, 1
  %39 = zext i16 %38 to i32
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %33
  %42 = load %struct.file*, %struct.file** %4, align 8
  %43 = getelementptr inbounds %struct.file, %struct.file* %42, i32 0, i32 12
  %44 = load i16, i16* %43, align 2
  %45 = lshr i16 %44, 3
  %46 = and i16 %45, 1
  %47 = zext i16 %46 to i32
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %112, label %49

49:                                               ; preds = %41, %33
  %50 = load i32, i32* @just_print_flag, align 4
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  store i32 0, i32* %6, align 4
  br label %66

53:                                               ; preds = %49
  %54 = load %struct.file*, %struct.file** %4, align 8
  %55 = getelementptr inbounds %struct.file, %struct.file* %54, i32 0, i32 1
  %56 = load i8*, i8** %55, align 8
  %57 = call i32 @unlink(i8* %56) #10
  store i32 %57, i32* %6, align 4
  %58 = load i32, i32* %6, align 4
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %60, label %65

60:                                               ; preds = %53
  %61 = call i32* @__errno_location() #11
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 2
  br i1 %63, label %64, label %65

64:                                               ; preds = %60
  br label %113

65:                                               ; preds = %60, %53
  br label %66

66:                                               ; preds = %65, %52
  %67 = load %struct.file*, %struct.file** %4, align 8
  %68 = getelementptr inbounds %struct.file, %struct.file* %67, i32 0, i32 12
  %69 = load i16, i16* %68, align 2
  %70 = lshr i16 %69, 11
  %71 = and i16 %70, 1
  %72 = zext i16 %71 to i32
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %111, label %74

74:                                               ; preds = %66
  %75 = load i32, i32* %2, align 4
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %74
  %78 = load %struct.file*, %struct.file** %4, align 8
  %79 = getelementptr inbounds %struct.file, %struct.file* %78, i32 0, i32 1
  %80 = load i8*, i8** %79, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5.225, i64 0, i64 0), i8* %80)
  br label %103

81:                                               ; preds = %74
  %82 = load i32, i32* @silent_flag, align 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %102, label %84

84:                                               ; preds = %81
  %85 = load i32, i32* @just_print_flag, align 4
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %102, label %87

87:                                               ; preds = %84
  %88 = load i8, i8* %5, align 1
  %89 = icmp ne i8 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %87
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %92 = call i32 @fputs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6.226, i64 0, i64 0), %struct._IO_FILE* %91)
  store i8 1, i8* %5, align 1
  br label %93

93:                                               ; preds = %90, %87
  %94 = call i32 @putchar(i32 32)
  %95 = load %struct.file*, %struct.file** %4, align 8
  %96 = getelementptr inbounds %struct.file, %struct.file* %95, i32 0, i32 1
  %97 = load i8*, i8** %96, align 8
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %99 = call i32 @fputs(i8* %97, %struct._IO_FILE* %98)
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %101 = call i32 @fflush(%struct._IO_FILE* %100)
  br label %102

102:                                              ; preds = %93, %84, %81
  br label %103

103:                                              ; preds = %102, %77
  %104 = load i32, i32* %6, align 4
  %105 = icmp slt i32 %104, 0
  br i1 %105, label %106, label %110

106:                                              ; preds = %103
  %107 = load %struct.file*, %struct.file** %4, align 8
  %108 = getelementptr inbounds %struct.file, %struct.file* %107, i32 0, i32 1
  %109 = load i8*, i8** %108, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*)* @perror_with_name to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.227, i64 0, i64 0), i8* %109)
  br label %110

110:                                              ; preds = %106, %103
  br label %111

111:                                              ; preds = %110, %66
  br label %112

112:                                              ; preds = %111, %41, %25
  br label %113

113:                                              ; preds = %112, %64
  %114 = load %struct.file*, %struct.file** %4, align 8
  %115 = getelementptr inbounds %struct.file, %struct.file* %114, i32 0, i32 0
  %116 = load %struct.file*, %struct.file** %115, align 8
  store %struct.file* %116, %struct.file** %4, align 8
  br label %22

117:                                              ; preds = %22
  br label %118

118:                                              ; preds = %117
  %119 = load i32, i32* %3, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %3, align 4
  br label %14

121:                                              ; preds = %14
  %122 = load i8, i8* %5, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %125, label %132

125:                                              ; preds = %121
  %126 = load i32, i32* %2, align 4
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %132, label %128

128:                                              ; preds = %125
  %129 = call i32 @putchar(i32 10)
  %130 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %131 = call i32 @fflush(%struct._IO_FILE* %130)
  br label %132

132:                                              ; preds = %128, %125, %121, %12
  ret void
}

declare dso_local i32 @putchar(i32) #3

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @snap_deps() #0 {
  %1 = alloca %struct.file*, align 8
  %2 = alloca %struct.file*, align 8
  %3 = alloca %struct.dep*, align 8
  %4 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  br label %5

5:                                                ; preds = %74, %0
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 1007
  br i1 %7, label %8, label %77

8:                                                ; preds = %5
  %9 = load i32, i32* %4, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [1007 x %struct.file*], [1007 x %struct.file*]* @files, i64 0, i64 %10
  %12 = load %struct.file*, %struct.file** %11, align 8
  store %struct.file* %12, %struct.file** %1, align 8
  br label %13

13:                                               ; preds = %69, %8
  %14 = load %struct.file*, %struct.file** %1, align 8
  %15 = icmp ne %struct.file* %14, null
  br i1 %15, label %16, label %73

16:                                               ; preds = %13
  %17 = load %struct.file*, %struct.file** %1, align 8
  store %struct.file* %17, %struct.file** %2, align 8
  br label %18

18:                                               ; preds = %64, %16
  %19 = load %struct.file*, %struct.file** %2, align 8
  %20 = icmp ne %struct.file* %19, null
  br i1 %20, label %21, label %68

21:                                               ; preds = %18
  %22 = load %struct.file*, %struct.file** %2, align 8
  %23 = getelementptr inbounds %struct.file, %struct.file* %22, i32 0, i32 2
  %24 = load %struct.dep*, %struct.dep** %23, align 8
  store %struct.dep* %24, %struct.dep** %3, align 8
  br label %25

25:                                               ; preds = %59, %21
  %26 = load %struct.dep*, %struct.dep** %3, align 8
  %27 = icmp ne %struct.dep* %26, null
  br i1 %27, label %28, label %63

28:                                               ; preds = %25
  %29 = load %struct.dep*, %struct.dep** %3, align 8
  %30 = getelementptr inbounds %struct.dep, %struct.dep* %29, i32 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = icmp ne i8* %31, null
  br i1 %32, label %33, label %58

33:                                               ; preds = %28
  %34 = load %struct.dep*, %struct.dep** %3, align 8
  %35 = getelementptr inbounds %struct.dep, %struct.dep* %34, i32 0, i32 1
  %36 = load i8*, i8** %35, align 8
  %37 = call %struct.file* @lookup_file(i8* %36)
  %38 = load %struct.dep*, %struct.dep** %3, align 8
  %39 = getelementptr inbounds %struct.dep, %struct.dep* %38, i32 0, i32 2
  store %struct.file* %37, %struct.file** %39, align 8
  %40 = load %struct.dep*, %struct.dep** %3, align 8
  %41 = getelementptr inbounds %struct.dep, %struct.dep* %40, i32 0, i32 2
  %42 = load %struct.file*, %struct.file** %41, align 8
  %43 = icmp eq %struct.file* %42, null
  br i1 %43, label %44, label %51

44:                                               ; preds = %33
  %45 = load %struct.dep*, %struct.dep** %3, align 8
  %46 = getelementptr inbounds %struct.dep, %struct.dep* %45, i32 0, i32 1
  %47 = load i8*, i8** %46, align 8
  %48 = call %struct.file* @enter_file(i8* %47)
  %49 = load %struct.dep*, %struct.dep** %3, align 8
  %50 = getelementptr inbounds %struct.dep, %struct.dep* %49, i32 0, i32 2
  store %struct.file* %48, %struct.file** %50, align 8
  br label %55

51:                                               ; preds = %33
  %52 = load %struct.dep*, %struct.dep** %3, align 8
  %53 = getelementptr inbounds %struct.dep, %struct.dep* %52, i32 0, i32 1
  %54 = load i8*, i8** %53, align 8
  call void @free(i8* %54) #10
  br label %55

55:                                               ; preds = %51, %44
  %56 = load %struct.dep*, %struct.dep** %3, align 8
  %57 = getelementptr inbounds %struct.dep, %struct.dep* %56, i32 0, i32 1
  store i8* null, i8** %57, align 8
  br label %58

58:                                               ; preds = %55, %28
  br label %59

59:                                               ; preds = %58
  %60 = load %struct.dep*, %struct.dep** %3, align 8
  %61 = getelementptr inbounds %struct.dep, %struct.dep* %60, i32 0, i32 0
  %62 = load %struct.dep*, %struct.dep** %61, align 8
  store %struct.dep* %62, %struct.dep** %3, align 8
  br label %25

63:                                               ; preds = %25
  br label %64

64:                                               ; preds = %63
  %65 = load %struct.file*, %struct.file** %2, align 8
  %66 = getelementptr inbounds %struct.file, %struct.file* %65, i32 0, i32 7
  %67 = load %struct.file*, %struct.file** %66, align 8
  store %struct.file* %67, %struct.file** %2, align 8
  br label %18

68:                                               ; preds = %18
  br label %69

69:                                               ; preds = %68
  %70 = load %struct.file*, %struct.file** %1, align 8
  %71 = getelementptr inbounds %struct.file, %struct.file* %70, i32 0, i32 0
  %72 = load %struct.file*, %struct.file** %71, align 8
  store %struct.file* %72, %struct.file** %1, align 8
  br label %13

73:                                               ; preds = %13
  br label %74

74:                                               ; preds = %73
  %75 = load i32, i32* %4, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %4, align 4
  br label %5

77:                                               ; preds = %5
  %78 = call %struct.file* @lookup_file(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.228, i64 0, i64 0))
  store %struct.file* %78, %struct.file** %1, align 8
  br label %79

79:                                               ; preds = %112, %77
  %80 = load %struct.file*, %struct.file** %1, align 8
  %81 = icmp ne %struct.file* %80, null
  br i1 %81, label %82, label %116

82:                                               ; preds = %79
  %83 = load %struct.file*, %struct.file** %1, align 8
  %84 = getelementptr inbounds %struct.file, %struct.file* %83, i32 0, i32 2
  %85 = load %struct.dep*, %struct.dep** %84, align 8
  store %struct.dep* %85, %struct.dep** %3, align 8
  br label %86

86:                                               ; preds = %107, %82
  %87 = load %struct.dep*, %struct.dep** %3, align 8
  %88 = icmp ne %struct.dep* %87, null
  br i1 %88, label %89, label %111

89:                                               ; preds = %86
  %90 = load %struct.dep*, %struct.dep** %3, align 8
  %91 = getelementptr inbounds %struct.dep, %struct.dep* %90, i32 0, i32 2
  %92 = load %struct.file*, %struct.file** %91, align 8
  store %struct.file* %92, %struct.file** %2, align 8
  br label %93

93:                                               ; preds = %102, %89
  %94 = load %struct.file*, %struct.file** %2, align 8
  %95 = icmp ne %struct.file* %94, null
  br i1 %95, label %96, label %106

96:                                               ; preds = %93
  %97 = load %struct.file*, %struct.file** %2, align 8
  %98 = getelementptr inbounds %struct.file, %struct.file* %97, i32 0, i32 12
  %99 = load i16, i16* %98, align 2
  %100 = and i16 %99, -9
  %101 = or i16 %100, 8
  store i16 %101, i16* %98, align 2
  br label %102

102:                                              ; preds = %96
  %103 = load %struct.file*, %struct.file** %2, align 8
  %104 = getelementptr inbounds %struct.file, %struct.file* %103, i32 0, i32 7
  %105 = load %struct.file*, %struct.file** %104, align 8
  store %struct.file* %105, %struct.file** %2, align 8
  br label %93

106:                                              ; preds = %93
  br label %107

107:                                              ; preds = %106
  %108 = load %struct.dep*, %struct.dep** %3, align 8
  %109 = getelementptr inbounds %struct.dep, %struct.dep* %108, i32 0, i32 0
  %110 = load %struct.dep*, %struct.dep** %109, align 8
  store %struct.dep* %110, %struct.dep** %3, align 8
  br label %86

111:                                              ; preds = %86
  br label %112

112:                                              ; preds = %111
  %113 = load %struct.file*, %struct.file** %1, align 8
  %114 = getelementptr inbounds %struct.file, %struct.file* %113, i32 0, i32 7
  %115 = load %struct.file*, %struct.file** %114, align 8
  store %struct.file* %115, %struct.file** %1, align 8
  br label %79

116:                                              ; preds = %79
  %117 = call %struct.file* @lookup_file(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.229, i64 0, i64 0))
  store %struct.file* %117, %struct.file** %1, align 8
  br label %118

118:                                              ; preds = %153, %116
  %119 = load %struct.file*, %struct.file** %1, align 8
  %120 = icmp ne %struct.file* %119, null
  br i1 %120, label %121, label %157

121:                                              ; preds = %118
  %122 = load %struct.file*, %struct.file** %1, align 8
  %123 = getelementptr inbounds %struct.file, %struct.file* %122, i32 0, i32 2
  %124 = load %struct.dep*, %struct.dep** %123, align 8
  store %struct.dep* %124, %struct.dep** %3, align 8
  br label %125

125:                                              ; preds = %148, %121
  %126 = load %struct.dep*, %struct.dep** %3, align 8
  %127 = icmp ne %struct.dep* %126, null
  br i1 %127, label %128, label %152

128:                                              ; preds = %125
  %129 = load %struct.dep*, %struct.dep** %3, align 8
  %130 = getelementptr inbounds %struct.dep, %struct.dep* %129, i32 0, i32 2
  %131 = load %struct.file*, %struct.file** %130, align 8
  store %struct.file* %131, %struct.file** %2, align 8
  br label %132

132:                                              ; preds = %143, %128
  %133 = load %struct.file*, %struct.file** %2, align 8
  %134 = icmp ne %struct.file* %133, null
  br i1 %134, label %135, label %147

135:                                              ; preds = %132
  %136 = load %struct.file*, %struct.file** %2, align 8
  %137 = getelementptr inbounds %struct.file, %struct.file* %136, i32 0, i32 12
  %138 = load i16, i16* %137, align 2
  %139 = and i16 %138, -513
  %140 = or i16 %139, 512
  store i16 %140, i16* %137, align 2
  %141 = load %struct.file*, %struct.file** %2, align 8
  %142 = getelementptr inbounds %struct.file, %struct.file* %141, i32 0, i32 6
  store i64 -1, i64* %142, align 8
  br label %143

143:                                              ; preds = %135
  %144 = load %struct.file*, %struct.file** %2, align 8
  %145 = getelementptr inbounds %struct.file, %struct.file* %144, i32 0, i32 7
  %146 = load %struct.file*, %struct.file** %145, align 8
  store %struct.file* %146, %struct.file** %2, align 8
  br label %132

147:                                              ; preds = %132
  br label %148

148:                                              ; preds = %147
  %149 = load %struct.dep*, %struct.dep** %3, align 8
  %150 = getelementptr inbounds %struct.dep, %struct.dep* %149, i32 0, i32 0
  %151 = load %struct.dep*, %struct.dep** %150, align 8
  store %struct.dep* %151, %struct.dep** %3, align 8
  br label %125

152:                                              ; preds = %125
  br label %153

153:                                              ; preds = %152
  %154 = load %struct.file*, %struct.file** %1, align 8
  %155 = getelementptr inbounds %struct.file, %struct.file* %154, i32 0, i32 7
  %156 = load %struct.file*, %struct.file** %155, align 8
  store %struct.file* %156, %struct.file** %1, align 8
  br label %118

157:                                              ; preds = %118
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @print_file_data_base() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.file*, align 8
  %5 = alloca %struct.dep*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.file*, align 8
  %8 = call i32 @puts(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10.230, i64 0, i64 0))
  store i32 0, i32* %2, align 4
  store i32 0, i32* %3, align 4
  store i32 0, i32* %1, align 4
  br label %9

9:                                                ; preds = %291, %0
  %10 = load i32, i32* %1, align 4
  %11 = icmp ult i32 %10, 1007
  br i1 %11, label %12, label %294

12:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  %13 = load i32, i32* %1, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds [1007 x %struct.file*], [1007 x %struct.file*]* @files, i64 0, i64 %14
  %16 = load %struct.file*, %struct.file** %15, align 8
  store %struct.file* %16, %struct.file** %4, align 8
  br label %17

17:                                               ; preds = %277, %12
  %18 = load %struct.file*, %struct.file** %4, align 8
  %19 = icmp ne %struct.file* %18, null
  br i1 %19, label %20, label %281

20:                                               ; preds = %17
  %21 = load i32, i32* %6, align 4
  %22 = add i32 %21, 1
  store i32 %22, i32* %6, align 4
  %23 = load %struct.file*, %struct.file** %4, align 8
  store %struct.file* %23, %struct.file** %7, align 8
  br label %24

24:                                               ; preds = %272, %20
  %25 = load %struct.file*, %struct.file** %7, align 8
  %26 = icmp ne %struct.file* %25, null
  br i1 %26, label %27, label %276

27:                                               ; preds = %24
  %28 = call i32 @putchar(i32 10)
  %29 = load %struct.file*, %struct.file** %7, align 8
  %30 = getelementptr inbounds %struct.file, %struct.file* %29, i32 0, i32 12
  %31 = load i16, i16* %30, align 2
  %32 = lshr i16 %31, 7
  %33 = and i16 %32, 1
  %34 = zext i16 %33 to i32
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %27
  %37 = call i32 @puts(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11.231, i64 0, i64 0))
  br label %38

38:                                               ; preds = %36, %27
  %39 = load %struct.file*, %struct.file** %7, align 8
  %40 = getelementptr inbounds %struct.file, %struct.file* %39, i32 0, i32 1
  %41 = load i8*, i8** %40, align 8
  %42 = load %struct.file*, %struct.file** %7, align 8
  %43 = getelementptr inbounds %struct.file, %struct.file* %42, i32 0, i32 12
  %44 = load i16, i16* %43, align 2
  %45 = lshr i16 %44, 2
  %46 = and i16 %45, 1
  %47 = zext i16 %46 to i32
  %48 = icmp ne i32 %47, 0
  %49 = zext i1 %48 to i64
  %50 = select i1 %48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13.232, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14.233, i64 0, i64 0)
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12.234, i64 0, i64 0), i8* %41, i8* %50)
  %52 = load %struct.file*, %struct.file** %7, align 8
  %53 = getelementptr inbounds %struct.file, %struct.file* %52, i32 0, i32 2
  %54 = load %struct.dep*, %struct.dep** %53, align 8
  store %struct.dep* %54, %struct.dep** %5, align 8
  br label %55

55:                                               ; preds = %76, %38
  %56 = load %struct.dep*, %struct.dep** %5, align 8
  %57 = icmp ne %struct.dep* %56, null
  br i1 %57, label %58, label %80

58:                                               ; preds = %55
  %59 = load %struct.dep*, %struct.dep** %5, align 8
  %60 = getelementptr inbounds %struct.dep, %struct.dep* %59, i32 0, i32 1
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %58
  %64 = load %struct.dep*, %struct.dep** %5, align 8
  %65 = getelementptr inbounds %struct.dep, %struct.dep* %64, i32 0, i32 2
  %66 = load %struct.file*, %struct.file** %65, align 8
  %67 = getelementptr inbounds %struct.file, %struct.file* %66, i32 0, i32 1
  %68 = load i8*, i8** %67, align 8
  br label %73

69:                                               ; preds = %58
  %70 = load %struct.dep*, %struct.dep** %5, align 8
  %71 = getelementptr inbounds %struct.dep, %struct.dep* %70, i32 0, i32 1
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %69, %63
  %74 = phi i8* [ %68, %63 ], [ %72, %69 ]
  %75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.235, i64 0, i64 0), i8* %74)
  br label %76

76:                                               ; preds = %73
  %77 = load %struct.dep*, %struct.dep** %5, align 8
  %78 = getelementptr inbounds %struct.dep, %struct.dep* %77, i32 0, i32 0
  %79 = load %struct.dep*, %struct.dep** %78, align 8
  store %struct.dep* %79, %struct.dep** %5, align 8
  br label %55

80:                                               ; preds = %55
  %81 = call i32 @putchar(i32 10)
  %82 = load %struct.file*, %struct.file** %7, align 8
  %83 = getelementptr inbounds %struct.file, %struct.file* %82, i32 0, i32 12
  %84 = load i16, i16* %83, align 2
  %85 = lshr i16 %84, 3
  %86 = and i16 %85, 1
  %87 = zext i16 %86 to i32
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %80
  %90 = call i32 @puts(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16.236, i64 0, i64 0))
  br label %91

91:                                               ; preds = %89, %80
  %92 = load %struct.file*, %struct.file** %7, align 8
  %93 = getelementptr inbounds %struct.file, %struct.file* %92, i32 0, i32 12
  %94 = load i16, i16* %93, align 2
  %95 = lshr i16 %94, 9
  %96 = and i16 %95, 1
  %97 = zext i16 %96 to i32
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %91
  %100 = call i32 @puts(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.17.237, i64 0, i64 0))
  br label %101

101:                                              ; preds = %99, %91
  %102 = load %struct.file*, %struct.file** %7, align 8
  %103 = getelementptr inbounds %struct.file, %struct.file* %102, i32 0, i32 12
  %104 = load i16, i16* %103, align 2
  %105 = lshr i16 %104, 8
  %106 = and i16 %105, 1
  %107 = zext i16 %106 to i32
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %101
  %110 = call i32 @puts(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18.238, i64 0, i64 0))
  br label %111

111:                                              ; preds = %109, %101
  %112 = load %struct.file*, %struct.file** %7, align 8
  %113 = getelementptr inbounds %struct.file, %struct.file* %112, i32 0, i32 12
  %114 = load i16, i16* %113, align 2
  %115 = lshr i16 %114, 11
  %116 = and i16 %115, 1
  %117 = zext i16 %116 to i32
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %111
  %120 = call i32 @puts(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.19.239, i64 0, i64 0))
  br label %121

121:                                              ; preds = %119, %111
  %122 = load %struct.file*, %struct.file** %7, align 8
  %123 = getelementptr inbounds %struct.file, %struct.file* %122, i32 0, i32 12
  %124 = load i16, i16* %123, align 2
  %125 = lshr i16 %124, 4
  %126 = and i16 %125, 1
  %127 = zext i16 %126 to i32
  %128 = icmp ne i32 %127, 0
  %129 = zext i1 %128 to i64
  %130 = select i1 %128, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14.233, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21.240, i64 0, i64 0)
  %131 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.20.241, i64 0, i64 0), i8* %130)
  %132 = load %struct.file*, %struct.file** %7, align 8
  %133 = getelementptr inbounds %struct.file, %struct.file* %132, i32 0, i32 4
  %134 = load i8*, i8** %133, align 8
  %135 = icmp ne i8* %134, null
  br i1 %135, label %136, label %141

136:                                              ; preds = %121
  %137 = load %struct.file*, %struct.file** %7, align 8
  %138 = getelementptr inbounds %struct.file, %struct.file* %137, i32 0, i32 4
  %139 = load i8*, i8** %138, align 8
  %140 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22.242, i64 0, i64 0), i8* %139)
  br label %141

141:                                              ; preds = %136, %121
  %142 = load %struct.file*, %struct.file** %7, align 8
  %143 = getelementptr inbounds %struct.file, %struct.file* %142, i32 0, i32 12
  %144 = load i16, i16* %143, align 2
  %145 = lshr i16 %144, 10
  %146 = and i16 %145, 1
  %147 = zext i16 %146 to i32
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %141
  %150 = call i32 @puts(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23.243, i64 0, i64 0))
  br label %151

151:                                              ; preds = %149, %141
  %152 = load %struct.file*, %struct.file** %7, align 8
  %153 = getelementptr inbounds %struct.file, %struct.file* %152, i32 0, i32 5
  %154 = load %struct.dep*, %struct.dep** %153, align 8
  %155 = icmp ne %struct.dep* %154, null
  br i1 %155, label %156, label %189

156:                                              ; preds = %151
  %157 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %158 = call i32 @fputs(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24.244, i64 0, i64 0), %struct._IO_FILE* %157)
  %159 = load %struct.file*, %struct.file** %7, align 8
  %160 = getelementptr inbounds %struct.file, %struct.file* %159, i32 0, i32 5
  %161 = load %struct.dep*, %struct.dep** %160, align 8
  store %struct.dep* %161, %struct.dep** %5, align 8
  br label %162

162:                                              ; preds = %183, %156
  %163 = load %struct.dep*, %struct.dep** %5, align 8
  %164 = icmp ne %struct.dep* %163, null
  br i1 %164, label %165, label %187

165:                                              ; preds = %162
  %166 = load %struct.dep*, %struct.dep** %5, align 8
  %167 = getelementptr inbounds %struct.dep, %struct.dep* %166, i32 0, i32 1
  %168 = load i8*, i8** %167, align 8
  %169 = icmp eq i8* %168, null
  br i1 %169, label %170, label %176

170:                                              ; preds = %165
  %171 = load %struct.dep*, %struct.dep** %5, align 8
  %172 = getelementptr inbounds %struct.dep, %struct.dep* %171, i32 0, i32 2
  %173 = load %struct.file*, %struct.file** %172, align 8
  %174 = getelementptr inbounds %struct.file, %struct.file* %173, i32 0, i32 1
  %175 = load i8*, i8** %174, align 8
  br label %180

176:                                              ; preds = %165
  %177 = load %struct.dep*, %struct.dep** %5, align 8
  %178 = getelementptr inbounds %struct.dep, %struct.dep* %177, i32 0, i32 1
  %179 = load i8*, i8** %178, align 8
  br label %180

180:                                              ; preds = %176, %170
  %181 = phi i8* [ %175, %170 ], [ %179, %176 ]
  %182 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.235, i64 0, i64 0), i8* %181)
  br label %183

183:                                              ; preds = %180
  %184 = load %struct.dep*, %struct.dep** %5, align 8
  %185 = getelementptr inbounds %struct.dep, %struct.dep* %184, i32 0, i32 0
  %186 = load %struct.dep*, %struct.dep** %185, align 8
  store %struct.dep* %186, %struct.dep** %5, align 8
  br label %162

187:                                              ; preds = %162
  %188 = call i32 @putchar(i32 10)
  br label %189

189:                                              ; preds = %187, %151
  %190 = load %struct.file*, %struct.file** %7, align 8
  %191 = getelementptr inbounds %struct.file, %struct.file* %190, i32 0, i32 6
  %192 = load i64, i64* %191, align 8
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %189
  %195 = call i32 @puts(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25.245, i64 0, i64 0))
  br label %212

196:                                              ; preds = %189
  %197 = load %struct.file*, %struct.file** %7, align 8
  %198 = getelementptr inbounds %struct.file, %struct.file* %197, i32 0, i32 6
  %199 = load i64, i64* %198, align 8
  %200 = icmp eq i64 %199, -1
  br i1 %200, label %201, label %203

201:                                              ; preds = %196
  %202 = call i32 @puts(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26.246, i64 0, i64 0))
  br label %211

203:                                              ; preds = %196
  %204 = load %struct.file*, %struct.file** %7, align 8
  %205 = getelementptr inbounds %struct.file, %struct.file* %204, i32 0, i32 6
  %206 = call i32 (i64*, ...) bitcast (i32 (...)* @ctime to i32 (i64*, ...)*)(i64* %205)
  %207 = load %struct.file*, %struct.file** %7, align 8
  %208 = getelementptr inbounds %struct.file, %struct.file* %207, i32 0, i32 6
  %209 = load i64, i64* %208, align 8
  %210 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27.247, i64 0, i64 0), i32 %206, i64 %209)
  br label %211

211:                                              ; preds = %203, %201
  br label %212

212:                                              ; preds = %211, %194
  %213 = load %struct.file*, %struct.file** %7, align 8
  %214 = getelementptr inbounds %struct.file, %struct.file* %213, i32 0, i32 12
  %215 = load i16, i16* %214, align 2
  %216 = lshr i16 %215, 6
  %217 = and i16 %216, 1
  %218 = zext i16 %217 to i32
  %219 = icmp ne i32 %218, 0
  %220 = zext i1 %219 to i64
  %221 = select i1 %219, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14.233, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21.240, i64 0, i64 0)
  %222 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28.248, i64 0, i64 0), i8* %221)
  %223 = load %struct.file*, %struct.file** %7, align 8
  %224 = getelementptr inbounds %struct.file, %struct.file* %223, i32 0, i32 12
  %225 = load i16, i16* %224, align 2
  %226 = and i16 %225, 3
  %227 = zext i16 %226 to i32
  switch i32 %227, label %249 [
    i32 2, label %228
    i32 1, label %230
    i32 0, label %232
    i32 3, label %232
  ]

228:                                              ; preds = %212
  %229 = call i32 @puts(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29.249, i64 0, i64 0))
  br label %255

230:                                              ; preds = %212
  %231 = call i32 @puts(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.30.250, i64 0, i64 0))
  br label %255

232:                                              ; preds = %212, %212
  %233 = load %struct.file*, %struct.file** %7, align 8
  %234 = getelementptr inbounds %struct.file, %struct.file* %233, i32 0, i32 11
  %235 = load i16, i16* %234, align 8
  %236 = sext i16 %235 to i32
  switch i32 %236, label %242 [
    i32 -1, label %237
    i32 0, label %238
    i32 1, label %240
  ]

237:                                              ; preds = %232
  br label %248

238:                                              ; preds = %232
  %239 = call i32 @puts(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.31.251, i64 0, i64 0))
  br label %248

240:                                              ; preds = %232
  %241 = call i32 @puts(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.32.252, i64 0, i64 0))
  br label %248

242:                                              ; preds = %232
  %243 = call i32 @puts(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.33.253, i64 0, i64 0))
  %244 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %245 = call i32 @fflush(%struct._IO_FILE* %244)
  %246 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %247 = call i32 @fflush(%struct._IO_FILE* %246)
  call void @abort() #12
  unreachable

248:                                              ; preds = %240, %238, %237
  br label %255

249:                                              ; preds = %212
  %250 = call i32 @puts(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.34.254, i64 0, i64 0))
  %251 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %252 = call i32 @fflush(%struct._IO_FILE* %251)
  %253 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %254 = call i32 @fflush(%struct._IO_FILE* %253)
  call void @abort() #12
  unreachable

255:                                              ; preds = %248, %230, %228
  %256 = load %struct.file*, %struct.file** %7, align 8
  %257 = getelementptr inbounds %struct.file, %struct.file* %256, i32 0, i32 9
  %258 = load %struct.variable_set_list*, %struct.variable_set_list** %257, align 8
  %259 = icmp ne %struct.variable_set_list* %258, null
  br i1 %259, label %260, label %262

260:                                              ; preds = %255
  %261 = load %struct.file*, %struct.file** %4, align 8
  call void (%struct.file*, ...) bitcast (void (%struct.file*)* @print_file_variables to void (%struct.file*, ...)*)(%struct.file* %261)
  br label %262

262:                                              ; preds = %260, %255
  %263 = load %struct.file*, %struct.file** %7, align 8
  %264 = getelementptr inbounds %struct.file, %struct.file* %263, i32 0, i32 3
  %265 = load %struct.commands*, %struct.commands** %264, align 8
  %266 = icmp ne %struct.commands* %265, null
  br i1 %266, label %267, label %271

267:                                              ; preds = %262
  %268 = load %struct.file*, %struct.file** %7, align 8
  %269 = getelementptr inbounds %struct.file, %struct.file* %268, i32 0, i32 3
  %270 = load %struct.commands*, %struct.commands** %269, align 8
  call void (%struct.commands*, ...) bitcast (void (%struct.commands*)* @print_commands to void (%struct.commands*, ...)*)(%struct.commands* %270)
  br label %271

271:                                              ; preds = %267, %262
  br label %272

272:                                              ; preds = %271
  %273 = load %struct.file*, %struct.file** %7, align 8
  %274 = getelementptr inbounds %struct.file, %struct.file* %273, i32 0, i32 7
  %275 = load %struct.file*, %struct.file** %274, align 8
  store %struct.file* %275, %struct.file** %7, align 8
  br label %24

276:                                              ; preds = %24
  br label %277

277:                                              ; preds = %276
  %278 = load %struct.file*, %struct.file** %4, align 8
  %279 = getelementptr inbounds %struct.file, %struct.file* %278, i32 0, i32 0
  %280 = load %struct.file*, %struct.file** %279, align 8
  store %struct.file* %280, %struct.file** %4, align 8
  br label %17

281:                                              ; preds = %17
  %282 = load i32, i32* %6, align 4
  %283 = load i32, i32* %2, align 4
  %284 = add i32 %283, %282
  store i32 %284, i32* %2, align 4
  %285 = load i32, i32* %6, align 4
  %286 = load i32, i32* %3, align 4
  %287 = icmp ugt i32 %285, %286
  br i1 %287, label %288, label %290

288:                                              ; preds = %281
  %289 = load i32, i32* %6, align 4
  store i32 %289, i32* %3, align 4
  br label %290

290:                                              ; preds = %288, %281
  br label %291

291:                                              ; preds = %290
  %292 = load i32, i32* %1, align 4
  %293 = add i32 %292, 1
  store i32 %293, i32* %1, align 4
  br label %9

294:                                              ; preds = %9
  %295 = load i32, i32* %2, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %299

297:                                              ; preds = %294
  %298 = call i32 @puts(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35.255, i64 0, i64 0))
  br label %308

299:                                              ; preds = %294
  %300 = load i32, i32* %2, align 4
  %301 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.36.256, i64 0, i64 0), i32 %300, i32 1007)
  %302 = load i32, i32* %2, align 4
  %303 = uitofp i32 %302 to double
  %304 = fdiv double 1.007000e+03, %303
  %305 = fmul double %304, 1.000000e+02
  %306 = load i32, i32* %3, align 4
  %307 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.37.257, i64 0, i64 0), double %305, i32 %306)
  br label %308

308:                                              ; preds = %299, %297
  ret void
}

declare dso_local i32 @ctime(...) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @subst_expand(i8* %0, i8* %1, i8* %2, i8* %3, i32 %4, i32 %5, i32 %6, i32 %7) #0 {
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  store i8* %0, i8** %10, align 8
  store i8* %1, i8** %11, align 8
  store i8* %2, i8** %12, align 8
  store i8* %3, i8** %13, align 8
  store i32 %4, i32* %14, align 4
  store i32 %5, i32* %15, align 4
  store i32 %6, i32* %16, align 4
  store i32 %7, i32* %17, align 4
  %20 = load i8*, i8** %11, align 8
  store i8* %20, i8** %18, align 8
  %21 = load i32, i32* %14, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %44

23:                                               ; preds = %8
  %24 = load i32, i32* %16, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %23
  %27 = load i32, i32* %17, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %44, label %29

29:                                               ; preds = %26
  %30 = load i8*, i8** %10, align 8
  %31 = load i8*, i8** %18, align 8
  %32 = load i8*, i8** %18, align 8
  %33 = call i64 @strlen(i8* %32) #9
  %34 = call i8* (i8*, i8*, i64, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i64, ...)*)(i8* %30, i8* %31, i64 %33)
  store i8* %34, i8** %10, align 8
  %35 = load i32, i32* %15, align 4
  %36 = icmp ugt i32 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %29
  %38 = load i8*, i8** %10, align 8
  %39 = load i8*, i8** %13, align 8
  %40 = load i32, i32* %15, align 4
  %41 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %38, i8* %39, i32 %40)
  store i8* %41, i8** %10, align 8
  br label %42

42:                                               ; preds = %37, %29
  %43 = load i8*, i8** %10, align 8
  store i8* %43, i8** %9, align 8
  br label %165

44:                                               ; preds = %26, %23, %8
  br label %45

45:                                               ; preds = %147, %44
  %46 = load i8*, i8** %18, align 8
  %47 = load i8*, i8** %12, align 8
  %48 = load i32, i32* %14, align 4
  %49 = call i8* (i8*, i32, i8*, i32, ...) bitcast (i8* (i8*, i32, i8*, i32)* @sindex to i8* (i8*, i32, i8*, i32, ...)*)(i8* %46, i32 0, i8* %47, i32 %48)
  store i8* %49, i8** %19, align 8
  %50 = icmp ne i8* %49, null
  br i1 %50, label %51, label %152

51:                                               ; preds = %45
  %52 = load i8*, i8** %19, align 8
  %53 = load i8*, i8** %18, align 8
  %54 = icmp ugt i8* %52, %53
  br i1 %54, label %55, label %64

55:                                               ; preds = %51
  %56 = load i8*, i8** %10, align 8
  %57 = load i8*, i8** %18, align 8
  %58 = load i8*, i8** %19, align 8
  %59 = load i8*, i8** %18, align 8
  %60 = ptrtoint i8* %58 to i64
  %61 = ptrtoint i8* %59 to i64
  %62 = sub i64 %60, %61
  %63 = call i8* (i8*, i8*, i64, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i64, ...)*)(i8* %56, i8* %57, i64 %62)
  store i8* %63, i8** %10, align 8
  br label %64

64:                                               ; preds = %55, %51
  %65 = load i32, i32* %16, align 4
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %67, label %107

67:                                               ; preds = %64
  %68 = load i8*, i8** %19, align 8
  %69 = load i8*, i8** %18, align 8
  %70 = icmp ugt i8* %68, %69
  br i1 %70, label %71, label %84

71:                                               ; preds = %67
  %72 = call i16** @__ctype_b_loc() #11
  %73 = load i16*, i16** %72, align 8
  %74 = load i8*, i8** %19, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 -1
  %76 = load i8, i8* %75, align 1
  %77 = sext i8 %76 to i32
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i16, i16* %73, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = zext i16 %80 to i32
  %82 = and i32 %81, 1
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %133

84:                                               ; preds = %71, %67
  %85 = load i8*, i8** %19, align 8
  %86 = load i32, i32* %14, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %85, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = sext i8 %89 to i32
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %107

92:                                               ; preds = %84
  %93 = call i16** @__ctype_b_loc() #11
  %94 = load i16*, i16** %93, align 8
  %95 = load i8*, i8** %19, align 8
  %96 = load i32, i32* %14, align 4
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %95, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = sext i8 %99 to i32
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i16, i16* %94, i64 %101
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i32
  %105 = and i32 %104, 1
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %107, label %133

107:                                              ; preds = %92, %84, %64
  %108 = load i32, i32* %17, align 4
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %110, label %138

110:                                              ; preds = %107
  %111 = load i8*, i8** %19, align 8
  %112 = load i32, i32* %14, align 4
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* %111, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = sext i8 %115 to i32
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %118, label %138

118:                                              ; preds = %110
  %119 = call i16** @__ctype_b_loc() #11
  %120 = load i16*, i16** %119, align 8
  %121 = load i8*, i8** %19, align 8
  %122 = load i32, i32* %14, align 4
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* %121, i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = sext i8 %125 to i32
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i16, i16* %120, i64 %127
  %129 = load i16, i16* %128, align 2
  %130 = zext i16 %129 to i32
  %131 = and i32 %130, 1
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %138, label %133

133:                                              ; preds = %118, %92, %71
  %134 = load i8*, i8** %10, align 8
  %135 = load i8*, i8** %12, align 8
  %136 = load i32, i32* %14, align 4
  %137 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %134, i8* %135, i32 %136)
  store i8* %137, i8** %10, align 8
  br label %147

138:                                              ; preds = %118, %110, %107
  %139 = load i32, i32* %15, align 4
  %140 = icmp ugt i32 %139, 0
  br i1 %140, label %141, label %146

141:                                              ; preds = %138
  %142 = load i8*, i8** %10, align 8
  %143 = load i8*, i8** %13, align 8
  %144 = load i32, i32* %15, align 4
  %145 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %142, i8* %143, i32 %144)
  store i8* %145, i8** %10, align 8
  br label %146

146:                                              ; preds = %141, %138
  br label %147

147:                                              ; preds = %146, %133
  %148 = load i8*, i8** %19, align 8
  %149 = load i32, i32* %14, align 4
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds i8, i8* %148, i64 %150
  store i8* %151, i8** %18, align 8
  br label %45

152:                                              ; preds = %45
  %153 = load i8*, i8** %18, align 8
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %157, label %163

157:                                              ; preds = %152
  %158 = load i8*, i8** %10, align 8
  %159 = load i8*, i8** %18, align 8
  %160 = load i8*, i8** %18, align 8
  %161 = call i64 @strlen(i8* %160) #9
  %162 = call i8* (i8*, i8*, i64, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i64, ...)*)(i8* %158, i8* %159, i64 %161)
  store i8* %162, i8** %10, align 8
  br label %163

163:                                              ; preds = %157, %152
  %164 = load i8*, i8** %10, align 8
  store i8* %164, i8** %9, align 8
  br label %165

165:                                              ; preds = %163, %42
  %166 = load i8*, i8** %9, align 8
  ret i8* %166
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @patsubst_expand(i8* %0, i8* %1, i8* %2, i8* %3, i8* %4, i8* %5) #0 {
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store i8* %0, i8** %8, align 8
  store i8* %1, i8** %9, align 8
  store i8* %2, i8** %10, align 8
  store i8* %3, i8** %11, align 8
  store i8* %4, i8** %12, align 8
  store i8* %5, i8** %13, align 8
  store i32 0, i32* %20, align 4
  %22 = load i8*, i8** %13, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %6
  %25 = load i8*, i8** %11, align 8
  %26 = call i8* (i8*, ...) bitcast (i8* (i8*)* @find_percent to i8* (i8*, ...)*)(i8* %25)
  store i8* %26, i8** %13, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = load i8*, i8** %13, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %30, label %41

30:                                               ; preds = %27
  %31 = load i8*, i8** %13, align 8
  %32 = load i8*, i8** %11, align 8
  %33 = ptrtoint i8* %31 to i64
  %34 = ptrtoint i8* %32 to i64
  %35 = sub i64 %33, %34
  %36 = trunc i64 %35 to i32
  store i32 %36, i32* %16, align 4
  %37 = load i8*, i8** %13, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 1
  %39 = call i64 @strlen(i8* %38) #9
  %40 = trunc i64 %39 to i32
  store i32 %40, i32* %17, align 4
  br label %45

41:                                               ; preds = %27
  %42 = load i8*, i8** %11, align 8
  %43 = call i64 @strlen(i8* %42) #9
  %44 = trunc i64 %43 to i32
  store i32 %44, i32* %16, align 4
  br label %45

45:                                               ; preds = %41, %30
  %46 = load i8*, i8** %12, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %48, label %51

48:                                               ; preds = %45
  %49 = load i8*, i8** %10, align 8
  %50 = call i8* (i8*, ...) bitcast (i8* (i8*)* @find_percent to i8* (i8*, ...)*)(i8* %49)
  store i8* %50, i8** %12, align 8
  br label %51

51:                                               ; preds = %48, %45
  %52 = load i8*, i8** %12, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %66

54:                                               ; preds = %51
  %55 = load i8*, i8** %8, align 8
  %56 = load i8*, i8** %9, align 8
  %57 = load i8*, i8** %10, align 8
  %58 = load i8*, i8** %11, align 8
  %59 = load i8*, i8** %10, align 8
  %60 = call i64 @strlen(i8* %59) #9
  %61 = trunc i64 %60 to i32
  %62 = load i8*, i8** %11, align 8
  %63 = call i64 @strlen(i8* %62) #9
  %64 = trunc i64 %63 to i32
  %65 = call i8* @subst_expand(i8* %55, i8* %56, i8* %57, i8* %58, i32 %61, i32 %64, i32 1, i32 0)
  store i8* %65, i8** %7, align 8
  br label %234

66:                                               ; preds = %51
  %67 = load i8*, i8** %12, align 8
  %68 = load i8*, i8** %10, align 8
  %69 = ptrtoint i8* %67 to i64
  %70 = ptrtoint i8* %68 to i64
  %71 = sub i64 %69, %70
  %72 = trunc i64 %71 to i32
  store i32 %72, i32* %14, align 4
  %73 = load i8*, i8** %12, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 1
  %75 = call i64 @strlen(i8* %74) #9
  %76 = trunc i64 %75 to i32
  store i32 %76, i32* %15, align 4
  br label %77

77:                                               ; preds = %225, %66
  %78 = call i8* (i8**, i32*, ...) bitcast (i8* (i8**, i32*)* @find_next_token to i8* (i8**, i32*, ...)*)(i8** %9, i32* %19)
  store i8* %78, i8** %18, align 8
  %79 = icmp ne i8* %78, null
  br i1 %79, label %80, label %226

80:                                               ; preds = %77
  store i32 0, i32* %21, align 4
  %81 = load i32, i32* %19, align 4
  %82 = load i32, i32* %14, align 4
  %83 = load i32, i32* %15, align 4
  %84 = add nsw i32 %82, %83
  %85 = icmp ult i32 %81, %84
  br i1 %85, label %86, label %87

86:                                               ; preds = %80
  store i32 1, i32* %21, align 4
  br label %87

87:                                               ; preds = %86, %80
  %88 = load i32, i32* %21, align 4
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %125, label %90

90:                                               ; preds = %87
  %91 = load i32, i32* %14, align 4
  %92 = icmp sgt i32 %91, 0
  br i1 %92, label %93, label %125

93:                                               ; preds = %90
  %94 = load i8*, i8** %18, align 8
  %95 = load i8, i8* %94, align 1
  %96 = sext i8 %95 to i32
  %97 = load i8*, i8** %10, align 8
  %98 = load i8, i8* %97, align 1
  %99 = sext i8 %98 to i32
  %100 = icmp ne i32 %96, %99
  br i1 %100, label %124, label %101

101:                                              ; preds = %93
  %102 = load i8*, i8** %18, align 8
  %103 = load i32, i32* %14, align 4
  %104 = sub nsw i32 %103, 1
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i8, i8* %102, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = sext i8 %107 to i32
  %109 = load i8*, i8** %12, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 -1
  %111 = load i8, i8* %110, align 1
  %112 = sext i8 %111 to i32
  %113 = icmp ne i32 %108, %112
  br i1 %113, label %124, label %114

114:                                              ; preds = %101
  %115 = load i8*, i8** %18, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 1
  %117 = load i8*, i8** %10, align 8
  %118 = getelementptr inbounds i8, i8* %117, i64 1
  %119 = load i32, i32* %14, align 4
  %120 = sub nsw i32 %119, 1
  %121 = sext i32 %120 to i64
  %122 = call i32 @strncmp(i8* %116, i8* %118, i64 %121) #9
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %114, %101, %93
  store i32 1, i32* %21, align 4
  br label %125

125:                                              ; preds = %124, %114, %90, %87
  %126 = load i32, i32* %21, align 4
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %175, label %128

128:                                              ; preds = %125
  %129 = load i32, i32* %15, align 4
  %130 = icmp sgt i32 %129, 0
  br i1 %130, label %131, label %175

131:                                              ; preds = %128
  %132 = load i8*, i8** %18, align 8
  %133 = load i32, i32* %19, align 4
  %134 = sub i32 %133, 1
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds i8, i8* %132, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = sext i8 %137 to i32
  %139 = load i8*, i8** %12, align 8
  %140 = load i32, i32* %15, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds i8, i8* %139, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = sext i8 %143 to i32
  %145 = icmp ne i32 %138, %144
  br i1 %145, label %174, label %146

146:                                              ; preds = %131
  %147 = load i8*, i8** %18, align 8
  %148 = load i32, i32* %19, align 4
  %149 = load i32, i32* %15, align 4
  %150 = sub i32 %148, %149
  %151 = zext i32 %150 to i64
  %152 = getelementptr inbounds i8, i8* %147, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = sext i8 %153 to i32
  %155 = load i8*, i8** %12, align 8
  %156 = getelementptr inbounds i8, i8* %155, i64 1
  %157 = load i8, i8* %156, align 1
  %158 = sext i8 %157 to i32
  %159 = icmp ne i32 %154, %158
  br i1 %159, label %174, label %160

160:                                              ; preds = %146
  %161 = load i8*, i8** %18, align 8
  %162 = load i32, i32* %19, align 4
  %163 = load i32, i32* %15, align 4
  %164 = sub i32 %162, %163
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds i8, i8* %161, i64 %165
  %167 = load i8*, i8** %12, align 8
  %168 = getelementptr inbounds i8, i8* %167, i64 1
  %169 = load i32, i32* %15, align 4
  %170 = sub nsw i32 %169, 1
  %171 = sext i32 %170 to i64
  %172 = call i32 @strncmp(i8* %166, i8* %168, i64 %171) #9
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %160, %146, %131
  store i32 1, i32* %21, align 4
  br label %175

175:                                              ; preds = %174, %160, %128, %125
  %176 = load i32, i32* %21, align 4
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %178, label %183

178:                                              ; preds = %175
  %179 = load i8*, i8** %8, align 8
  %180 = load i8*, i8** %18, align 8
  %181 = load i32, i32* %19, align 4
  %182 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %179, i8* %180, i32 %181)
  store i8* %182, i8** %8, align 8
  br label %208

183:                                              ; preds = %175
  %184 = load i8*, i8** %8, align 8
  %185 = load i8*, i8** %11, align 8
  %186 = load i32, i32* %16, align 4
  %187 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %184, i8* %185, i32 %186)
  store i8* %187, i8** %8, align 8
  %188 = load i8*, i8** %13, align 8
  %189 = icmp ne i8* %188, null
  br i1 %189, label %190, label %207

190:                                              ; preds = %183
  %191 = load i8*, i8** %8, align 8
  %192 = load i8*, i8** %18, align 8
  %193 = load i32, i32* %14, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds i8, i8* %192, i64 %194
  %196 = load i32, i32* %19, align 4
  %197 = load i32, i32* %14, align 4
  %198 = load i32, i32* %15, align 4
  %199 = add nsw i32 %197, %198
  %200 = sub i32 %196, %199
  %201 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %191, i8* %195, i32 %200)
  store i8* %201, i8** %8, align 8
  %202 = load i8*, i8** %8, align 8
  %203 = load i8*, i8** %13, align 8
  %204 = getelementptr inbounds i8, i8* %203, i64 1
  %205 = load i32, i32* %17, align 4
  %206 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %202, i8* %204, i32 %205)
  store i8* %206, i8** %8, align 8
  br label %207

207:                                              ; preds = %190, %183
  br label %208

208:                                              ; preds = %207, %178
  %209 = load i32, i32* %21, align 4
  %210 = icmp ne i32 %209, 0
  br i1 %210, label %222, label %211

211:                                              ; preds = %208
  %212 = load i32, i32* %16, align 4
  %213 = icmp sgt i32 %212, 0
  br i1 %213, label %222, label %214

214:                                              ; preds = %211
  %215 = load i8*, i8** %13, align 8
  %216 = icmp ne i8* %215, null
  br i1 %216, label %217, label %225

217:                                              ; preds = %214
  %218 = load i32, i32* %19, align 4
  %219 = load i32, i32* %17, align 4
  %220 = add i32 %218, %219
  %221 = icmp ugt i32 %220, 0
  br i1 %221, label %222, label %225

222:                                              ; preds = %217, %211, %208
  %223 = load i8*, i8** %8, align 8
  %224 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %223, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.262, i64 0, i64 0), i32 1)
  store i8* %224, i8** %8, align 8
  store i32 1, i32* %20, align 4
  br label %225

225:                                              ; preds = %222, %217, %214
  br label %77

226:                                              ; preds = %77
  %227 = load i32, i32* %20, align 4
  %228 = icmp ne i32 %227, 0
  br i1 %228, label %229, label %232

229:                                              ; preds = %226
  %230 = load i8*, i8** %8, align 8
  %231 = getelementptr inbounds i8, i8* %230, i32 -1
  store i8* %231, i8** %8, align 8
  br label %232

232:                                              ; preds = %229, %226
  %233 = load i8*, i8** %8, align 8
  store i8* %233, i8** %7, align 8
  br label %234

234:                                              ; preds = %232, %54
  %235 = load i8*, i8** %7, align 8
  ret i8* %235
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @pattern_matches(i8* %0, i8* %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  %11 = load i8*, i8** %6, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %63

13:                                               ; preds = %3
  %14 = load i8*, i8** %5, align 8
  %15 = call i64 @strlen(i8* %14) #9
  %16 = add i64 %15, 1
  %17 = trunc i64 %16 to i32
  store i32 %17, i32* %9, align 4
  %18 = load i32, i32* %9, align 4
  %19 = zext i32 %18 to i64
  %20 = alloca i8, i64 %19, align 16
  store i8* %20, i8** %10, align 8
  %21 = load i8*, i8** %10, align 8
  %22 = load i8*, i8** %5, align 8
  %23 = load i32, i32* %9, align 4
  %24 = zext i32 %23 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 %22, i64 %24, i1 false)
  %25 = load i8*, i8** %10, align 8
  store i8* %25, i8** %5, align 8
  %26 = load i8*, i8** %5, align 8
  %27 = call i8* (i8*, ...) bitcast (i8* (i8*)* @find_percent to i8* (i8*, ...)*)(i8* %26)
  store i8* %27, i8** %6, align 8
  %28 = load i8*, i8** %6, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %62

30:                                               ; preds = %13
  %31 = load i8*, i8** %5, align 8
  %32 = load i8*, i8** %7, align 8
  %33 = icmp eq i8* %31, %32
  br i1 %33, label %59, label %34

34:                                               ; preds = %30
  %35 = load i8*, i8** %5, align 8
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = load i8*, i8** %7, align 8
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %37, %40
  br i1 %41, label %42, label %57

42:                                               ; preds = %34
  %43 = load i8*, i8** %5, align 8
  %44 = load i8, i8* %43, align 1
  %45 = sext i8 %44 to i32
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = load i8*, i8** %5, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 1
  %50 = load i8*, i8** %7, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 1
  %52 = call i32 @strcmp(i8* %49, i8* %51) #9
  %53 = icmp ne i32 %52, 0
  %54 = xor i1 %53, true
  br label %55

55:                                               ; preds = %47, %42
  %56 = phi i1 [ true, %42 ], [ %54, %47 ]
  br label %57

57:                                               ; preds = %55, %34
  %58 = phi i1 [ false, %34 ], [ %56, %55 ]
  br label %59

59:                                               ; preds = %57, %30
  %60 = phi i1 [ true, %30 ], [ %58, %57 ]
  %61 = zext i1 %60 to i32
  store i32 %61, i32* %4, align 4
  br label %104

62:                                               ; preds = %13
  br label %63

63:                                               ; preds = %62, %3
  %64 = load i8*, i8** %6, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 1
  %66 = call i64 @strlen(i8* %65) #9
  %67 = trunc i64 %66 to i32
  store i32 %67, i32* %8, align 4
  %68 = load i8*, i8** %7, align 8
  %69 = call i64 @strlen(i8* %68) #9
  %70 = load i8*, i8** %6, align 8
  %71 = load i8*, i8** %5, align 8
  %72 = ptrtoint i8* %70 to i64
  %73 = ptrtoint i8* %71 to i64
  %74 = sub i64 %72, %73
  %75 = load i32, i32* %8, align 4
  %76 = zext i32 %75 to i64
  %77 = add nsw i64 %74, %76
  %78 = icmp ult i64 %69, %77
  br i1 %78, label %89, label %79

79:                                               ; preds = %63
  %80 = load i8*, i8** %5, align 8
  %81 = load i8*, i8** %7, align 8
  %82 = load i8*, i8** %6, align 8
  %83 = load i8*, i8** %5, align 8
  %84 = ptrtoint i8* %82 to i64
  %85 = ptrtoint i8* %83 to i64
  %86 = sub i64 %84, %85
  %87 = call i32 @strncmp(i8* %80, i8* %81, i64 %86) #9
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %79, %63
  store i32 0, i32* %4, align 4
  br label %104

90:                                               ; preds = %79
  %91 = load i8*, i8** %6, align 8
  %92 = getelementptr inbounds i8, i8* %91, i64 1
  %93 = load i8*, i8** %7, align 8
  %94 = load i8*, i8** %7, align 8
  %95 = call i64 @strlen(i8* %94) #9
  %96 = load i32, i32* %8, align 4
  %97 = zext i32 %96 to i64
  %98 = sub i64 %95, %97
  %99 = getelementptr inbounds i8, i8* %93, i64 %98
  %100 = call i32 @strcmp(i8* %92, i8* %99) #9
  %101 = icmp ne i32 %100, 0
  %102 = xor i1 %101, true
  %103 = zext i1 %102 to i32
  store i32 %103, i32* %4, align 4
  br label %104

104:                                              ; preds = %90, %89, %59
  %105 = load i32, i32* %4, align 4
  ret i32 %105
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @handle_function(i8** %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  store i8** %0, i8*** %4, align 8
  store i8** %1, i8*** %5, align 8
  %15 = load i8**, i8*** %5, align 8
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 1
  store i8* %17, i8** %8, align 8
  %18 = load i8*, i8** %8, align 8
  %19 = load i8*, i8** %8, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 11
  %21 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @lindex to i8* (i8*, i8*, i32, ...)*)(i8* %18, i8* %20, i32 0)
  store i8* %21, i8** %9, align 8
  %22 = load i8*, i8** %9, align 8
  %23 = icmp ne i8* %22, null
  br i1 %23, label %24, label %30

24:                                               ; preds = %2
  %25 = load i8*, i8** %9, align 8
  %26 = load i8*, i8** %8, align 8
  %27 = ptrtoint i8* %25 to i64
  %28 = ptrtoint i8* %26 to i64
  %29 = sub i64 %27, %28
  br label %31

30:                                               ; preds = %2
  br label %31

31:                                               ; preds = %30, %24
  %32 = phi i64 [ %29, %24 ], [ 11, %30 ]
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %7, align 4
  store i32 0, i32* %6, align 4
  br label %34

34:                                               ; preds = %87, %31
  %35 = load i32, i32* %6, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds [22 x %struct.anon], [22 x %struct.anon]* @function_table, i64 0, i64 %36
  %38 = getelementptr inbounds %struct.anon, %struct.anon* %37, i32 0, i32 0
  %39 = load i8*, i8** %38, align 16
  %40 = icmp ne i8* %39, null
  br i1 %40, label %41, label %90

41:                                               ; preds = %34
  %42 = load i32, i32* %7, align 4
  %43 = load i32, i32* %6, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds [22 x %struct.anon], [22 x %struct.anon]* @function_table, i64 0, i64 %44
  %46 = getelementptr inbounds %struct.anon, %struct.anon* %45, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp ult i32 %42, %47
  br i1 %48, label %49, label %50

49:                                               ; preds = %41
  br label %87

50:                                               ; preds = %41
  %51 = load i8*, i8** %8, align 8
  %52 = load i32, i32* %6, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds [22 x %struct.anon], [22 x %struct.anon]* @function_table, i64 0, i64 %53
  %55 = getelementptr inbounds %struct.anon, %struct.anon* %54, i32 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %51, i64 %57
  store i8* %58, i8** %9, align 8
  %59 = call i16** @__ctype_b_loc() #11
  %60 = load i16*, i16** %59, align 8
  %61 = load i8*, i8** %9, align 8
  %62 = load i8, i8* %61, align 1
  %63 = sext i8 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i16, i16* %60, i64 %64
  %66 = load i16, i16* %65, align 2
  %67 = zext i16 %66 to i32
  %68 = and i32 %67, 1
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %86

70:                                               ; preds = %50
  %71 = load i32, i32* %6, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds [22 x %struct.anon], [22 x %struct.anon]* @function_table, i64 0, i64 %72
  %74 = getelementptr inbounds %struct.anon, %struct.anon* %73, i32 0, i32 0
  %75 = load i8*, i8** %74, align 16
  %76 = load i8*, i8** %8, align 8
  %77 = load i32, i32* %6, align 4
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds [22 x %struct.anon], [22 x %struct.anon]* @function_table, i64 0, i64 %78
  %80 = getelementptr inbounds %struct.anon, %struct.anon* %79, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = zext i32 %81 to i64
  %83 = call i32 @strncmp(i8* %75, i8* %76, i64 %82) #9
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %86, label %85

85:                                               ; preds = %70
  br label %90

86:                                               ; preds = %70, %50
  br label %87

87:                                               ; preds = %86, %49
  %88 = load i32, i32* %6, align 4
  %89 = add i32 %88, 1
  store i32 %89, i32* %6, align 4
  br label %34

90:                                               ; preds = %85, %34
  %91 = load i32, i32* %6, align 4
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds [22 x %struct.anon], [22 x %struct.anon]* @function_table, i64 0, i64 %92
  %94 = getelementptr inbounds %struct.anon, %struct.anon* %93, i32 0, i32 0
  %95 = load i8*, i8** %94, align 16
  %96 = icmp ne i8* %95, null
  br i1 %96, label %97, label %156

97:                                               ; preds = %90
  %98 = load i8*, i8** %8, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 -1
  %100 = load i8, i8* %99, align 1
  store i8 %100, i8* %10, align 1
  %101 = load i8, i8* %10, align 1
  %102 = sext i8 %101 to i32
  %103 = icmp eq i32 %102, 40
  %104 = zext i1 %103 to i64
  %105 = select i1 %103, i32 41, i32 125
  %106 = trunc i32 %105 to i8
  store i8 %106, i8* %11, align 1
  store i32 0, i32* %12, align 4
  %107 = load i8*, i8** %9, align 8
  %108 = call i8* (i8*, ...) bitcast (i8* (i8*)* @next_token to i8* (i8*, ...)*)(i8* %107)
  store i8* %108, i8** %14, align 8
  %109 = load i8*, i8** %14, align 8
  store i8* %109, i8** %13, align 8
  br label %110

110:                                              ; preds = %139, %97
  %111 = load i8*, i8** %14, align 8
  %112 = load i8, i8* %111, align 1
  %113 = sext i8 %112 to i32
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %115, label %142

115:                                              ; preds = %110
  %116 = load i8*, i8** %14, align 8
  %117 = load i8, i8* %116, align 1
  %118 = sext i8 %117 to i32
  %119 = load i8, i8* %10, align 1
  %120 = sext i8 %119 to i32
  %121 = icmp eq i32 %118, %120
  br i1 %121, label %122, label %125

122:                                              ; preds = %115
  %123 = load i32, i32* %12, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %12, align 4
  br label %138

125:                                              ; preds = %115
  %126 = load i8*, i8** %14, align 8
  %127 = load i8, i8* %126, align 1
  %128 = sext i8 %127 to i32
  %129 = load i8, i8* %11, align 1
  %130 = sext i8 %129 to i32
  %131 = icmp eq i32 %128, %130
  br i1 %131, label %132, label %137

132:                                              ; preds = %125
  %133 = load i32, i32* %12, align 4
  %134 = add nsw i32 %133, -1
  store i32 %134, i32* %12, align 4
  %135 = icmp slt i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %132
  br label %142

137:                                              ; preds = %132, %125
  br label %138

138:                                              ; preds = %137, %122
  br label %139

139:                                              ; preds = %138
  %140 = load i8*, i8** %14, align 8
  %141 = getelementptr inbounds i8, i8* %140, i32 1
  store i8* %141, i8** %14, align 8
  br label %110

142:                                              ; preds = %136, %110
  %143 = load i8**, i8*** %4, align 8
  %144 = load i8*, i8** %143, align 8
  %145 = load i32, i32* %6, align 4
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds [22 x %struct.anon], [22 x %struct.anon]* @function_table, i64 0, i64 %146
  %148 = getelementptr inbounds %struct.anon, %struct.anon* %147, i32 0, i32 2
  %149 = load i32, i32* %148, align 4
  %150 = load i8*, i8** %13, align 8
  %151 = load i8*, i8** %14, align 8
  %152 = call i8* @expand_function(i8* %144, i32 %149, i8* %150, i8* %151)
  %153 = load i8**, i8*** %4, align 8
  store i8* %152, i8** %153, align 8
  %154 = load i8*, i8** %14, align 8
  %155 = load i8**, i8*** %5, align 8
  store i8* %154, i8** %155, align 8
  store i32 1, i32* %3, align 4
  br label %157

156:                                              ; preds = %90
  store i32 0, i32* %3, align 4
  br label %157

157:                                              ; preds = %156, %142
  %158 = load i32, i32* %3, align 4
  ret i32 %158
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @expand_function(i8* %0, i32 %1, i8* %2, i8* %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i8**, align 8
  %19 = alloca i8*, align 8
  %20 = alloca [2 x i32], align 4
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %struct.variable*, align 8
  %26 = alloca i8**, align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i8*, align 8
  %30 = alloca i8*, align 8
  %31 = alloca i8*, align 8
  %32 = alloca %struct.variable*, align 8
  %33 = alloca i8*, align 8
  %34 = alloca i8, align 1
  %35 = alloca %struct.word*, align 8
  %36 = alloca %struct.word*, align 8
  %37 = alloca %struct.word*, align 8
  %38 = alloca %struct.word*, align 8
  %39 = alloca i8*, align 8
  %40 = alloca i8, align 1
  %41 = alloca i8*, align 8
  %42 = alloca i8*, align 8
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca [20 x i8], align 16
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store i8* %2, i8** %7, align 8
  store i8* %3, i8** %8, align 8
  store i32 0, i32* %14, align 4
  %46 = load i8*, i8** %8, align 8
  %47 = load i8, i8* %46, align 1
  store i8 %47, i8* %16, align 1
  %48 = load i8*, i8** %8, align 8
  %49 = load i8, i8* %48, align 1
  %50 = sext i8 %49 to i32
  %51 = icmp eq i32 %50, 41
  %52 = zext i1 %51 to i64
  %53 = select i1 %51, i32 40, i32 123
  %54 = trunc i32 %53 to i8
  store i8 %54, i8* %17, align 1
  %55 = load i32, i32* %6, align 4
  switch i32 %55, label %56 [
    i32 20, label %57
    i32 19, label %207
    i32 18, label %252
    i32 17, label %362
    i32 15, label %534
    i32 16, label %534
    i32 14, label %773
    i32 13, label %903
    i32 12, label %1012
    i32 7, label %1035
    i32 0, label %1047
    i32 8, label %1183
    i32 9, label %1198
    i32 10, label %1325
    i32 11, label %1346
    i32 1, label %1424
    i32 2, label %1424
    i32 3, label %1533
    i32 6, label %1533
    i32 4, label %1606
    i32 5, label %1606
  ]

56:                                               ; preds = %4
  call void @abort() #12
  unreachable

57:                                               ; preds = %4
  %58 = load i8*, i8** %7, align 8
  %59 = load i8*, i8** %8, align 8
  %60 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %58, i8* %59)
  store i8* %60, i8** %7, align 8
  %61 = load i8*, i8** %7, align 8
  %62 = call i8** (i8*, i8*, %struct.file*, ...) bitcast (i8** (i8*, i8**, %struct.file*)* @construct_command_argv to i8** (i8*, i8*, %struct.file*, ...)*)(i8* %61, i8* null, %struct.file* null)
  store i8** %62, i8*** %18, align 8
  %63 = load i8**, i8*** %18, align 8
  %64 = icmp eq i8** %63, null
  br i1 %64, label %65, label %66

65:                                               ; preds = %57
  br label %1687

66:                                               ; preds = %57
  %67 = load i8*, i8** @reading_filename, align 8
  %68 = icmp ne i8* %67, null
  br i1 %68, label %69, label %79

69:                                               ; preds = %66
  %70 = load i8*, i8** @reading_filename, align 8
  %71 = call i64 @strlen(i8* %70) #9
  %72 = add i64 %71, 100
  %73 = alloca i8, i64 %72, align 16
  store i8* %73, i8** %19, align 8
  %74 = load i8*, i8** %19, align 8
  %75 = load i8*, i8** @reading_filename, align 8
  %76 = load i32*, i32** @reading_lineno_ptr, align 8
  %77 = load i32, i32* %76, align 4
  %78 = call i32 (i8*, i8*, ...) @sprintf(i8* %74, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22.265, i64 0, i64 0), i8* %75, i32 %77) #10
  br label %80

79:                                               ; preds = %66
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23.266, i64 0, i64 0), i8** %19, align 8
  br label %80

80:                                               ; preds = %79, %69
  %81 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i64 0, i64 0
  %82 = call i32 @pipe(i32* %81) #10
  %83 = icmp slt i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = load i8*, i8** %19, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*)* @perror_with_name to void (i8*, i8*, ...)*)(i8* %85, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.267, i64 0, i64 0))
  br label %1687

86:                                               ; preds = %80
  call void (i32, ...) bitcast (void (i32)* @push_signals_blocked_p to void (i32, ...)*)(i32 1)
  %87 = call i32 @fork() #10
  store i32 %87, i32* %21, align 4
  %88 = load i32, i32* %21, align 4
  %89 = icmp slt i32 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %86
  %91 = load i8*, i8** %19, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*)* @perror_with_name to void (i8*, i8*, ...)*)(i8* %91, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.268, i64 0, i64 0))
  br label %205

92:                                               ; preds = %86
  %93 = load i32, i32* %21, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %100

95:                                               ; preds = %92
  %96 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i64 0, i64 1
  %97 = load i32, i32* %96, align 4
  %98 = load i8**, i8*** %18, align 8
  %99 = load i8**, i8*** @environ, align 8
  call void (i32, i32, i8**, i8**, ...) bitcast (void (i32, i32, i8**, i8**)* @child_execute_job to void (i32, i32, i8**, i8**, ...)*)(i32 0, i32 %97, i8** %98, i8** %99)
  br label %204

100:                                              ; preds = %92
  %101 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 201)
  store i8* %101, i8** %22, align 8
  store i32 200, i32* %23, align 4
  %102 = load i32, i32* %21, align 4
  store i32 %102, i32* @shell_function_pid, align 4
  store i32 0, i32* @shell_function_completed, align 4
  %103 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i64 0, i64 1
  %104 = load i32, i32* %103, align 4
  %105 = call i32 @close(i32 %104)
  store i32 0, i32* %12, align 4
  br label %106

106:                                              ; preds = %145, %100
  %107 = load i32, i32* %12, align 4
  %108 = load i32, i32* %23, align 4
  %109 = icmp eq i32 %107, %108
  br i1 %109, label %110, label %117

110:                                              ; preds = %106
  %111 = load i32, i32* %23, align 4
  %112 = add i32 %111, 512
  store i32 %112, i32* %23, align 4
  %113 = load i8*, i8** %22, align 8
  %114 = load i32, i32* %23, align 4
  %115 = add i32 %114, 1
  %116 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i32, ...)*)(i8* %113, i32 %115)
  store i8* %116, i8** %22, align 8
  br label %117

117:                                              ; preds = %110, %106
  %118 = call i32* @__errno_location() #11
  store i32 0, i32* %118, align 4
  %119 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i64 0, i64 0
  %120 = load i32, i32* %119, align 4
  %121 = load i8*, i8** %22, align 8
  %122 = load i32, i32* %12, align 4
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* %121, i64 %123
  %125 = load i32, i32* %23, align 4
  %126 = load i32, i32* %12, align 4
  %127 = sub i32 %125, %126
  %128 = zext i32 %127 to i64
  %129 = call i64 @read(i32 %120, i8* %124, i64 %128)
  %130 = trunc i64 %129 to i32
  store i32 %130, i32* %24, align 4
  %131 = load i32, i32* %24, align 4
  %132 = icmp sgt i32 %131, 0
  br i1 %132, label %133, label %137

133:                                              ; preds = %117
  %134 = load i32, i32* %24, align 4
  %135 = load i32, i32* %12, align 4
  %136 = add i32 %135, %134
  store i32 %136, i32* %12, align 4
  br label %137

137:                                              ; preds = %133, %117
  br label %138

138:                                              ; preds = %137
  %139 = load i32, i32* %24, align 4
  %140 = icmp sgt i32 %139, 0
  br i1 %140, label %145, label %141

141:                                              ; preds = %138
  %142 = call i32* @__errno_location() #11
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, 4
  br label %145

145:                                              ; preds = %141, %138
  %146 = phi i1 [ true, %138 ], [ %144, %141 ]
  br i1 %146, label %106, label %147

147:                                              ; preds = %145
  %148 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i64 0, i64 0
  %149 = load i32, i32* %148, align 4
  %150 = call i32 @close(i32 %149)
  br label %151

151:                                              ; preds = %154, %147
  %152 = load i32, i32* @shell_function_completed, align 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void (i32, i32, ...) bitcast (void (i32, i32)* @wait_for_children to void (i32, i32, ...)*)(i32 1, i32 0)
  br label %151

155:                                              ; preds = %151
  store i32 0, i32* @shell_function_pid, align 4
  %156 = load i32, i32* @shell_function_completed, align 4
  %157 = icmp eq i32 %156, -1
  br i1 %157, label %158, label %164

158:                                              ; preds = %155
  %159 = load i8*, i8** %22, align 8
  %160 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %161 = call i32 @fputs(i8* %159, %struct._IO_FILE* %160)
  %162 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %163 = call i32 @fflush(%struct._IO_FILE* %162)
  br label %197

164:                                              ; preds = %155
  %165 = load i32, i32* %12, align 4
  %166 = icmp ugt i32 %165, 0
  br i1 %166, label %167, label %196

167:                                              ; preds = %164
  %168 = load i8*, i8** %22, align 8
  %169 = load i32, i32* %12, align 4
  %170 = sub i32 %169, 1
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds i8, i8* %168, i64 %171
  %173 = load i8, i8* %172, align 1
  %174 = sext i8 %173 to i32
  %175 = icmp eq i32 %174, 10
  br i1 %175, label %176, label %182

176:                                              ; preds = %167
  %177 = load i8*, i8** %22, align 8
  %178 = load i32, i32* %12, align 4
  %179 = add i32 %178, -1
  store i32 %179, i32* %12, align 4
  %180 = zext i32 %179 to i64
  %181 = getelementptr inbounds i8, i8* %177, i64 %180
  store i8 0, i8* %181, align 1
  br label %182

182:                                              ; preds = %176, %167
  %183 = load i8*, i8** %22, align 8
  store i8* %183, i8** %9, align 8
  br label %184

184:                                              ; preds = %188, %182
  %185 = load i8*, i8** %9, align 8
  %186 = call i8* @strchr(i8* %185, i32 10) #9
  store i8* %186, i8** %9, align 8
  %187 = icmp ne i8* %186, null
  br i1 %187, label %188, label %191

188:                                              ; preds = %184
  %189 = load i8*, i8** %9, align 8
  %190 = getelementptr inbounds i8, i8* %189, i32 1
  store i8* %190, i8** %9, align 8
  store i8 32, i8* %189, align 1
  br label %184

191:                                              ; preds = %184
  %192 = load i8*, i8** %5, align 8
  %193 = load i8*, i8** %22, align 8
  %194 = load i32, i32* %12, align 4
  %195 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %192, i8* %193, i32 %194)
  store i8* %195, i8** %5, align 8
  br label %196

196:                                              ; preds = %191, %164
  br label %197

197:                                              ; preds = %196, %158
  %198 = load i8**, i8*** %18, align 8
  %199 = getelementptr inbounds i8*, i8** %198, i64 0
  %200 = load i8*, i8** %199, align 8
  call void @free(i8* %200) #10
  %201 = load i8**, i8*** %18, align 8
  %202 = bitcast i8** %201 to i8*
  call void @free(i8* %202) #10
  %203 = load i8*, i8** %22, align 8
  call void @free(i8* %203) #10
  br label %204

204:                                              ; preds = %197, %95
  br label %205

205:                                              ; preds = %204, %90
  call void (...) bitcast (void ()* @pop_signals_blocked_p to void (...)*)()
  %206 = load i8*, i8** %7, align 8
  call void @free(i8* %206) #10
  br label %1687

207:                                              ; preds = %4
  %208 = load i8*, i8** %7, align 8
  %209 = load i8*, i8** %8, align 8
  %210 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %208, i8* %209)
  store i8* %210, i8** %7, align 8
  %211 = load i8*, i8** %7, align 8
  %212 = load i8*, i8** %7, align 8
  %213 = call i64 @strlen(i8* %212) #9
  %214 = call %struct.variable* (i8*, i64, ...) bitcast (%struct.variable* (i8*, i32)* @lookup_variable to %struct.variable* (i8*, i64, ...)*)(i8* %211, i64 %213)
  store %struct.variable* %214, %struct.variable** %25, align 8
  %215 = load %struct.variable*, %struct.variable** %25, align 8
  %216 = icmp eq %struct.variable* %215, null
  br i1 %216, label %217, label %220

217:                                              ; preds = %207
  %218 = load i8*, i8** %5, align 8
  %219 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %218, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26.269, i64 0, i64 0), i32 9)
  store i8* %219, i8** %5, align 8
  br label %250

220:                                              ; preds = %207
  %221 = load %struct.variable*, %struct.variable** %25, align 8
  %222 = getelementptr inbounds %struct.variable, %struct.variable* %221, i32 0, i32 3
  %223 = load i8, i8* %222, align 8
  %224 = and i8 %223, 7
  %225 = zext i8 %224 to i32
  switch i32 %225, label %226 [
    i32 7, label %227
    i32 0, label %228
    i32 1, label %231
    i32 2, label %234
    i32 3, label %237
    i32 4, label %240
    i32 5, label %243
    i32 6, label %246
  ]

226:                                              ; preds = %220
  br label %227

227:                                              ; preds = %226, %220
  call void @abort() #12
  unreachable

228:                                              ; preds = %220
  %229 = load i8*, i8** %5, align 8
  %230 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %229, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27.270, i64 0, i64 0), i32 7)
  store i8* %230, i8** %5, align 8
  br label %249

231:                                              ; preds = %220
  %232 = load i8*, i8** %5, align 8
  %233 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %232, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28.271, i64 0, i64 0), i32 11)
  store i8* %233, i8** %5, align 8
  br label %249

234:                                              ; preds = %220
  %235 = load i8*, i8** %5, align 8
  %236 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %235, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29.272, i64 0, i64 0), i32 4)
  store i8* %236, i8** %5, align 8
  br label %249

237:                                              ; preds = %220
  %238 = load i8*, i8** %5, align 8
  %239 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %238, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.30.273, i64 0, i64 0), i32 20)
  store i8* %239, i8** %5, align 8
  br label %249

240:                                              ; preds = %220
  %241 = load i8*, i8** %5, align 8
  %242 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %241, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31.274, i64 0, i64 0), i32 12)
  store i8* %242, i8** %5, align 8
  br label %249

243:                                              ; preds = %220
  %244 = load i8*, i8** %5, align 8
  %245 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %244, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32.275, i64 0, i64 0), i32 8)
  store i8* %245, i8** %5, align 8
  br label %249

246:                                              ; preds = %220
  %247 = load i8*, i8** %5, align 8
  %248 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %247, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33.276, i64 0, i64 0), i32 9)
  store i8* %248, i8** %5, align 8
  br label %249

249:                                              ; preds = %246, %243, %240, %237, %234, %231, %228
  br label %250

250:                                              ; preds = %249, %217
  %251 = load i8*, i8** %7, align 8
  call void @free(i8* %251) #10
  br label %1687

252:                                              ; preds = %4
  %253 = load i8*, i8** %7, align 8
  %254 = load i8*, i8** %8, align 8
  %255 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %253, i8* %254)
  store i8* %255, i8** %7, align 8
  %256 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 80)
  %257 = bitcast i8* %256 to i8**
  store i8** %257, i8*** %26, align 8
  store i32 10, i32* %27, align 4
  store i32 0, i32* %28, align 4
  %258 = load i8*, i8** %7, align 8
  store i8* %258, i8** %29, align 8
  br label %259

259:                                              ; preds = %277, %252
  %260 = call i8* (i8**, i32*, ...) bitcast (i8* (i8**, i32*)* @find_next_token to i8* (i8**, i32*, ...)*)(i8** %29, i32* %13)
  store i8* %260, i8** %9, align 8
  %261 = icmp ne i8* %260, null
  br i1 %261, label %262, label %286

262:                                              ; preds = %259
  %263 = load i32, i32* %28, align 4
  %264 = load i32, i32* %27, align 4
  %265 = sub i32 %264, 1
  %266 = icmp uge i32 %263, %265
  br i1 %266, label %267, label %277

267:                                              ; preds = %262
  %268 = load i32, i32* %27, align 4
  %269 = add i32 %268, 5
  store i32 %269, i32* %27, align 4
  %270 = load i8**, i8*** %26, align 8
  %271 = bitcast i8** %270 to i8*
  %272 = load i32, i32* %27, align 4
  %273 = zext i32 %272 to i64
  %274 = mul i64 %273, 8
  %275 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i64, ...)*)(i8* %271, i64 %274)
  %276 = bitcast i8* %275 to i8**
  store i8** %276, i8*** %26, align 8
  br label %277

277:                                              ; preds = %267, %262
  %278 = load i8*, i8** %9, align 8
  %279 = load i32, i32* %13, align 4
  %280 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i32, ...)*)(i8* %278, i32 %279)
  %281 = load i8**, i8*** %26, align 8
  %282 = load i32, i32* %28, align 4
  %283 = add i32 %282, 1
  store i32 %283, i32* %28, align 4
  %284 = zext i32 %282 to i64
  %285 = getelementptr inbounds i8*, i8** %281, i64 %284
  store i8* %280, i8** %285, align 8
  br label %259

286:                                              ; preds = %259
  %287 = load i32, i32* %28, align 4
  %288 = icmp ugt i32 %287, 0
  br i1 %288, label %289, label %358

289:                                              ; preds = %286
  %290 = load i8**, i8*** %26, align 8
  %291 = bitcast i8** %290 to i8*
  %292 = load i32, i32* %28, align 4
  %293 = zext i32 %292 to i64
  call void @qsort(i8* %291, i64 %293, i64 8, i32 (i8*, i8*)* bitcast (i32 (i8**, i8**)* @alpha_compare to i32 (i8*, i8*)*))
  store i32 0, i32* %12, align 4
  br label %294

294:                                              ; preds = %352, %289
  %295 = load i32, i32* %12, align 4
  %296 = load i32, i32* %28, align 4
  %297 = icmp ult i32 %295, %296
  br i1 %297, label %298, label %355

298:                                              ; preds = %294
  %299 = load i8**, i8*** %26, align 8
  %300 = load i32, i32* %12, align 4
  %301 = zext i32 %300 to i64
  %302 = getelementptr inbounds i8*, i8** %299, i64 %301
  %303 = load i8*, i8** %302, align 8
  %304 = call i64 @strlen(i8* %303) #9
  %305 = trunc i64 %304 to i32
  store i32 %305, i32* %13, align 4
  %306 = load i32, i32* %12, align 4
  %307 = load i32, i32* %28, align 4
  %308 = sub i32 %307, 1
  %309 = icmp eq i32 %306, %308
  br i1 %309, label %335, label %310

310:                                              ; preds = %298
  %311 = load i8**, i8*** %26, align 8
  %312 = load i32, i32* %12, align 4
  %313 = add i32 %312, 1
  %314 = zext i32 %313 to i64
  %315 = getelementptr inbounds i8*, i8** %311, i64 %314
  %316 = load i8*, i8** %315, align 8
  %317 = call i64 @strlen(i8* %316) #9
  %318 = load i32, i32* %13, align 4
  %319 = zext i32 %318 to i64
  %320 = icmp ne i64 %317, %319
  br i1 %320, label %335, label %321

321:                                              ; preds = %310
  %322 = load i8**, i8*** %26, align 8
  %323 = load i32, i32* %12, align 4
  %324 = zext i32 %323 to i64
  %325 = getelementptr inbounds i8*, i8** %322, i64 %324
  %326 = load i8*, i8** %325, align 8
  %327 = load i8**, i8*** %26, align 8
  %328 = load i32, i32* %12, align 4
  %329 = add i32 %328, 1
  %330 = zext i32 %329 to i64
  %331 = getelementptr inbounds i8*, i8** %327, i64 %330
  %332 = load i8*, i8** %331, align 8
  %333 = call i32 @strcmp(i8* %326, i8* %332) #9
  %334 = icmp ne i32 %333, 0
  br i1 %334, label %335, label %346

335:                                              ; preds = %321, %310, %298
  %336 = load i8*, i8** %5, align 8
  %337 = load i8**, i8*** %26, align 8
  %338 = load i32, i32* %12, align 4
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds i8*, i8** %337, i64 %339
  %341 = load i8*, i8** %340, align 8
  %342 = load i32, i32* %13, align 4
  %343 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %336, i8* %341, i32 %342)
  store i8* %343, i8** %5, align 8
  %344 = load i8*, i8** %5, align 8
  %345 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %344, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.262, i64 0, i64 0), i32 1)
  store i8* %345, i8** %5, align 8
  br label %346

346:                                              ; preds = %335, %321
  %347 = load i8**, i8*** %26, align 8
  %348 = load i32, i32* %12, align 4
  %349 = zext i32 %348 to i64
  %350 = getelementptr inbounds i8*, i8** %347, i64 %349
  %351 = load i8*, i8** %350, align 8
  call void @free(i8* %351) #10
  br label %352

352:                                              ; preds = %346
  %353 = load i32, i32* %12, align 4
  %354 = add i32 %353, 1
  store i32 %354, i32* %12, align 4
  br label %294

355:                                              ; preds = %294
  %356 = load i8*, i8** %5, align 8
  %357 = getelementptr inbounds i8, i8* %356, i32 -1
  store i8* %357, i8** %5, align 8
  br label %358

358:                                              ; preds = %355, %286
  %359 = load i8**, i8*** %26, align 8
  %360 = bitcast i8** %359 to i8*
  call void @free(i8* %360) #10
  %361 = load i8*, i8** %7, align 8
  call void @free(i8* %361) #10
  br label %1687

362:                                              ; preds = %4
  store i32 0, i32* %15, align 4
  %363 = load i8*, i8** %7, align 8
  store i8* %363, i8** %9, align 8
  br label %364

364:                                              ; preds = %400, %362
  %365 = load i8*, i8** %9, align 8
  %366 = load i8*, i8** %8, align 8
  %367 = icmp ult i8* %365, %366
  br i1 %367, label %368, label %403

368:                                              ; preds = %364
  %369 = load i8*, i8** %9, align 8
  %370 = load i8, i8* %369, align 1
  %371 = sext i8 %370 to i32
  %372 = load i8, i8* %17, align 1
  %373 = sext i8 %372 to i32
  %374 = icmp eq i32 %371, %373
  br i1 %374, label %375, label %378

375:                                              ; preds = %368
  %376 = load i32, i32* %15, align 4
  %377 = add nsw i32 %376, 1
  store i32 %377, i32* %15, align 4
  br label %399

378:                                              ; preds = %368
  %379 = load i8*, i8** %9, align 8
  %380 = load i8, i8* %379, align 1
  %381 = sext i8 %380 to i32
  %382 = load i8, i8* %16, align 1
  %383 = sext i8 %382 to i32
  %384 = icmp eq i32 %381, %383
  br i1 %384, label %385, label %388

385:                                              ; preds = %378
  %386 = load i32, i32* %15, align 4
  %387 = add nsw i32 %386, -1
  store i32 %387, i32* %15, align 4
  br label %398

388:                                              ; preds = %378
  %389 = load i8*, i8** %9, align 8
  %390 = load i8, i8* %389, align 1
  %391 = sext i8 %390 to i32
  %392 = icmp eq i32 %391, 44
  br i1 %392, label %393, label %397

393:                                              ; preds = %388
  %394 = load i32, i32* %15, align 4
  %395 = icmp sle i32 %394, 0
  br i1 %395, label %396, label %397

396:                                              ; preds = %393
  br label %403

397:                                              ; preds = %393, %388
  br label %398

398:                                              ; preds = %397, %385
  br label %399

399:                                              ; preds = %398, %375
  br label %400

400:                                              ; preds = %399
  %401 = load i8*, i8** %9, align 8
  %402 = getelementptr inbounds i8, i8* %401, i32 1
  store i8* %402, i8** %9, align 8
  br label %364

403:                                              ; preds = %396, %364
  %404 = load i8*, i8** %9, align 8
  %405 = load i8*, i8** %8, align 8
  %406 = icmp eq i8* %404, %405
  br i1 %406, label %407, label %416

407:                                              ; preds = %403
  %408 = load i8*, i8** @reading_filename, align 8
  %409 = icmp ne i8* %408, null
  br i1 %409, label %410, label %414

410:                                              ; preds = %407
  %411 = load i8*, i8** @reading_filename, align 8
  %412 = load i32*, i32** @reading_lineno_ptr, align 8
  %413 = load i32, i32* %412, align 4
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, i8*, ...)*)(i8* %411, i32 %413, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.278, i64 0, i64 0))
  br label %415

414:                                              ; preds = %407
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.278, i64 0, i64 0))
  br label %415

415:                                              ; preds = %414, %410
  br label %416

416:                                              ; preds = %415, %403
  %417 = load i8*, i8** %7, align 8
  %418 = load i8*, i8** %9, align 8
  %419 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %417, i8* %418)
  store i8* %419, i8** %30, align 8
  %420 = load i8*, i8** %9, align 8
  %421 = getelementptr inbounds i8, i8* %420, i64 1
  store i8* %421, i8** %10, align 8
  store i32 0, i32* %15, align 4
  %422 = load i8*, i8** %10, align 8
  store i8* %422, i8** %9, align 8
  br label %423

423:                                              ; preds = %459, %416
  %424 = load i8*, i8** %9, align 8
  %425 = load i8*, i8** %8, align 8
  %426 = icmp ult i8* %424, %425
  br i1 %426, label %427, label %462

427:                                              ; preds = %423
  %428 = load i8*, i8** %9, align 8
  %429 = load i8, i8* %428, align 1
  %430 = sext i8 %429 to i32
  %431 = load i8, i8* %17, align 1
  %432 = sext i8 %431 to i32
  %433 = icmp eq i32 %430, %432
  br i1 %433, label %434, label %437

434:                                              ; preds = %427
  %435 = load i32, i32* %15, align 4
  %436 = add nsw i32 %435, 1
  store i32 %436, i32* %15, align 4
  br label %458

437:                                              ; preds = %427
  %438 = load i8*, i8** %9, align 8
  %439 = load i8, i8* %438, align 1
  %440 = sext i8 %439 to i32
  %441 = load i8, i8* %16, align 1
  %442 = sext i8 %441 to i32
  %443 = icmp eq i32 %440, %442
  br i1 %443, label %444, label %447

444:                                              ; preds = %437
  %445 = load i32, i32* %15, align 4
  %446 = add nsw i32 %445, -1
  store i32 %446, i32* %15, align 4
  br label %457

447:                                              ; preds = %437
  %448 = load i8*, i8** %9, align 8
  %449 = load i8, i8* %448, align 1
  %450 = sext i8 %449 to i32
  %451 = icmp eq i32 %450, 44
  br i1 %451, label %452, label %456

452:                                              ; preds = %447
  %453 = load i32, i32* %15, align 4
  %454 = icmp sle i32 %453, 0
  br i1 %454, label %455, label %456

455:                                              ; preds = %452
  br label %462

456:                                              ; preds = %452, %447
  br label %457

457:                                              ; preds = %456, %444
  br label %458

458:                                              ; preds = %457, %434
  br label %459

459:                                              ; preds = %458
  %460 = load i8*, i8** %9, align 8
  %461 = getelementptr inbounds i8, i8* %460, i32 1
  store i8* %461, i8** %9, align 8
  br label %423

462:                                              ; preds = %455, %423
  %463 = load i8*, i8** %9, align 8
  %464 = load i8*, i8** %8, align 8
  %465 = icmp eq i8* %463, %464
  br i1 %465, label %466, label %475

466:                                              ; preds = %462
  %467 = load i8*, i8** @reading_filename, align 8
  %468 = icmp ne i8* %467, null
  br i1 %468, label %469, label %473

469:                                              ; preds = %466
  %470 = load i8*, i8** @reading_filename, align 8
  %471 = load i32*, i32** @reading_lineno_ptr, align 8
  %472 = load i32, i32* %471, align 4
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, i8*, ...)*)(i8* %470, i32 %472, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.278, i64 0, i64 0))
  br label %474

473:                                              ; preds = %466
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.278, i64 0, i64 0))
  br label %474

474:                                              ; preds = %473, %469
  br label %475

475:                                              ; preds = %474, %462
  %476 = load i8*, i8** %10, align 8
  %477 = load i8*, i8** %9, align 8
  %478 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %476, i8* %477)
  store i8* %478, i8** %31, align 8
  %479 = load i8*, i8** %9, align 8
  %480 = getelementptr inbounds i8, i8* %479, i32 1
  store i8* %480, i8** %9, align 8
  %481 = load i8*, i8** %9, align 8
  %482 = load i8*, i8** %8, align 8
  %483 = load i8*, i8** %9, align 8
  %484 = ptrtoint i8* %482 to i64
  %485 = ptrtoint i8* %483 to i64
  %486 = sub i64 %484, %485
  %487 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %481, i64 %486)
  store i8* %487, i8** %7, align 8
  call void (...) bitcast (void ()* @push_new_variable_scope to void (...)*)()
  %488 = load i8*, i8** %30, align 8
  %489 = load i8*, i8** %30, align 8
  %490 = call i64 @strlen(i8* %489) #9
  %491 = call %struct.variable* (i8*, i64, i8*, i32, i32, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32)* @define_variable to %struct.variable* (i8*, i64, i8*, i32, i32, ...)*)(i8* %488, i64 %490, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23.266, i64 0, i64 0), i32 6, i32 0)
  store %struct.variable* %491, %struct.variable** %32, align 8
  %492 = load i8*, i8** %31, align 8
  store i8* %492, i8** %11, align 8
  br label %493

493:                                              ; preds = %496, %475
  %494 = call i8* (i8**, i32*, ...) bitcast (i8* (i8**, i32*)* @find_next_token to i8* (i8**, i32*, ...)*)(i8** %11, i32* %13)
  store i8* %494, i8** %9, align 8
  %495 = icmp ne i8* %494, null
  br i1 %495, label %496, label %524

496:                                              ; preds = %493
  %497 = load i8*, i8** %9, align 8
  %498 = load i32, i32* %13, align 4
  %499 = zext i32 %498 to i64
  %500 = getelementptr inbounds i8, i8* %497, i64 %499
  %501 = load i8, i8* %500, align 1
  store i8 %501, i8* %34, align 1
  %502 = load i8*, i8** %9, align 8
  %503 = load i32, i32* %13, align 4
  %504 = zext i32 %503 to i64
  %505 = getelementptr inbounds i8, i8* %502, i64 %504
  store i8 0, i8* %505, align 1
  %506 = load i8*, i8** %9, align 8
  %507 = load %struct.variable*, %struct.variable** %32, align 8
  %508 = getelementptr inbounds %struct.variable, %struct.variable* %507, i32 0, i32 2
  store i8* %506, i8** %508, align 8
  %509 = load i8*, i8** %7, align 8
  %510 = call i8* (i8*, ...) bitcast (i8* (i8*)* @allocated_variable_expand to i8* (i8*, ...)*)(i8* %509)
  store i8* %510, i8** %33, align 8
  %511 = load i8, i8* %34, align 1
  %512 = load i8*, i8** %9, align 8
  %513 = load i32, i32* %13, align 4
  %514 = zext i32 %513 to i64
  %515 = getelementptr inbounds i8, i8* %512, i64 %514
  store i8 %511, i8* %515, align 1
  %516 = load i8*, i8** %5, align 8
  %517 = load i8*, i8** %33, align 8
  %518 = load i8*, i8** %33, align 8
  %519 = call i64 @strlen(i8* %518) #9
  %520 = call i8* (i8*, i8*, i64, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i64, ...)*)(i8* %516, i8* %517, i64 %519)
  store i8* %520, i8** %5, align 8
  %521 = load i8*, i8** %5, align 8
  %522 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %521, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.262, i64 0, i64 0), i32 1)
  store i8* %522, i8** %5, align 8
  store i32 1, i32* %14, align 4
  %523 = load i8*, i8** %33, align 8
  call void @free(i8* %523) #10
  br label %493

524:                                              ; preds = %493
  %525 = load i32, i32* %14, align 4
  %526 = icmp ne i32 %525, 0
  br i1 %526, label %527, label %530

527:                                              ; preds = %524
  %528 = load i8*, i8** %5, align 8
  %529 = getelementptr inbounds i8, i8* %528, i32 -1
  store i8* %529, i8** %5, align 8
  br label %530

530:                                              ; preds = %527, %524
  call void (...) bitcast (void ()* @pop_variable_scope to void (...)*)()
  %531 = load i8*, i8** %30, align 8
  call void @free(i8* %531) #10
  %532 = load i8*, i8** %31, align 8
  call void @free(i8* %532) #10
  %533 = load i8*, i8** %7, align 8
  call void @free(i8* %533) #10
  br label %1687

534:                                              ; preds = %4, %4
  store i32 0, i32* %15, align 4
  %535 = load i8*, i8** %7, align 8
  store i8* %535, i8** %9, align 8
  br label %536

536:                                              ; preds = %572, %534
  %537 = load i8*, i8** %9, align 8
  %538 = load i8*, i8** %8, align 8
  %539 = icmp ult i8* %537, %538
  br i1 %539, label %540, label %575

540:                                              ; preds = %536
  %541 = load i8*, i8** %9, align 8
  %542 = load i8, i8* %541, align 1
  %543 = sext i8 %542 to i32
  %544 = load i8, i8* %17, align 1
  %545 = sext i8 %544 to i32
  %546 = icmp eq i32 %543, %545
  br i1 %546, label %547, label %550

547:                                              ; preds = %540
  %548 = load i32, i32* %15, align 4
  %549 = add nsw i32 %548, 1
  store i32 %549, i32* %15, align 4
  br label %571

550:                                              ; preds = %540
  %551 = load i8*, i8** %9, align 8
  %552 = load i8, i8* %551, align 1
  %553 = sext i8 %552 to i32
  %554 = load i8, i8* %16, align 1
  %555 = sext i8 %554 to i32
  %556 = icmp eq i32 %553, %555
  br i1 %556, label %557, label %560

557:                                              ; preds = %550
  %558 = load i32, i32* %15, align 4
  %559 = add nsw i32 %558, -1
  store i32 %559, i32* %15, align 4
  br label %570

560:                                              ; preds = %550
  %561 = load i8*, i8** %9, align 8
  %562 = load i8, i8* %561, align 1
  %563 = sext i8 %562 to i32
  %564 = icmp eq i32 %563, 44
  br i1 %564, label %565, label %569

565:                                              ; preds = %560
  %566 = load i32, i32* %15, align 4
  %567 = icmp sle i32 %566, 0
  br i1 %567, label %568, label %569

568:                                              ; preds = %565
  br label %575

569:                                              ; preds = %565, %560
  br label %570

570:                                              ; preds = %569, %557
  br label %571

571:                                              ; preds = %570, %547
  br label %572

572:                                              ; preds = %571
  %573 = load i8*, i8** %9, align 8
  %574 = getelementptr inbounds i8, i8* %573, i32 1
  store i8* %574, i8** %9, align 8
  br label %536

575:                                              ; preds = %568, %536
  %576 = load i8*, i8** %9, align 8
  %577 = load i8*, i8** %8, align 8
  %578 = icmp eq i8* %576, %577
  br i1 %578, label %579, label %596

579:                                              ; preds = %575
  %580 = load i8*, i8** @reading_filename, align 8
  %581 = icmp ne i8* %580, null
  br i1 %581, label %582, label %590

582:                                              ; preds = %579
  %583 = load i8*, i8** @reading_filename, align 8
  %584 = load i32*, i32** @reading_lineno_ptr, align 8
  %585 = load i32, i32* %584, align 4
  %586 = load i32, i32* %6, align 4
  %587 = icmp eq i32 %586, 15
  %588 = zext i1 %587 to i64
  %589 = select i1 %587, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16.279, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17.280, i64 0, i64 0)
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, i8*, ...)*)(i8* %583, i32 %585, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* %589)
  br label %595

590:                                              ; preds = %579
  %591 = load i32, i32* %6, align 4
  %592 = icmp eq i32 %591, 15
  %593 = zext i1 %592 to i64
  %594 = select i1 %592, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16.279, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17.280, i64 0, i64 0)
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* %594)
  br label %595

595:                                              ; preds = %590, %582
  br label %596

596:                                              ; preds = %595, %575
  %597 = load i8*, i8** %7, align 8
  %598 = load i8*, i8** %9, align 8
  %599 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %597, i8* %598)
  store i8* %599, i8** %10, align 8
  %600 = load i8*, i8** %9, align 8
  %601 = getelementptr inbounds i8, i8* %600, i64 1
  %602 = load i8*, i8** %8, align 8
  %603 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %601, i8* %602)
  store i8* %603, i8** %7, align 8
  store %struct.word* null, %struct.word** %36, align 8
  store %struct.word* null, %struct.word** %35, align 8
  %604 = load i8*, i8** %7, align 8
  store i8* %604, i8** %11, align 8
  br label %605

605:                                              ; preds = %628, %596
  %606 = call i8* (i8**, i32*, ...) bitcast (i8* (i8**, i32*)* @find_next_token to i8* (i8**, i32*, ...)*)(i8** %11, i32* %13)
  store i8* %606, i8** %9, align 8
  %607 = icmp ne i8* %606, null
  br i1 %607, label %608, label %638

608:                                              ; preds = %605
  %609 = alloca i8, i64 24, align 16
  %610 = bitcast i8* %609 to %struct.word*
  store %struct.word* %610, %struct.word** %38, align 8
  %611 = load %struct.word*, %struct.word** %35, align 8
  %612 = icmp eq %struct.word* %611, null
  br i1 %612, label %613, label %615

613:                                              ; preds = %608
  %614 = load %struct.word*, %struct.word** %38, align 8
  store %struct.word* %614, %struct.word** %35, align 8
  br label %619

615:                                              ; preds = %608
  %616 = load %struct.word*, %struct.word** %38, align 8
  %617 = load %struct.word*, %struct.word** %36, align 8
  %618 = getelementptr inbounds %struct.word, %struct.word* %617, i32 0, i32 0
  store %struct.word* %616, %struct.word** %618, align 8
  br label %619

619:                                              ; preds = %615, %613
  %620 = load %struct.word*, %struct.word** %38, align 8
  store %struct.word* %620, %struct.word** %36, align 8
  %621 = load i8*, i8** %11, align 8
  %622 = load i8, i8* %621, align 1
  %623 = sext i8 %622 to i32
  %624 = icmp ne i32 %623, 0
  br i1 %624, label %625, label %628

625:                                              ; preds = %619
  %626 = load i8*, i8** %11, align 8
  %627 = getelementptr inbounds i8, i8* %626, i32 1
  store i8* %627, i8** %11, align 8
  br label %628

628:                                              ; preds = %625, %619
  %629 = load i8*, i8** %9, align 8
  %630 = load i32, i32* %13, align 4
  %631 = zext i32 %630 to i64
  %632 = getelementptr inbounds i8, i8* %629, i64 %631
  store i8 0, i8* %632, align 1
  %633 = load i8*, i8** %9, align 8
  %634 = load %struct.word*, %struct.word** %38, align 8
  %635 = getelementptr inbounds %struct.word, %struct.word* %634, i32 0, i32 1
  store i8* %633, i8** %635, align 8
  %636 = load %struct.word*, %struct.word** %38, align 8
  %637 = getelementptr inbounds %struct.word, %struct.word* %636, i32 0, i32 2
  store i32 0, i32* %637, align 8
  br label %605

638:                                              ; preds = %605
  %639 = load %struct.word*, %struct.word** %35, align 8
  %640 = icmp ne %struct.word* %639, null
  br i1 %640, label %641, label %770

641:                                              ; preds = %638
  %642 = load %struct.word*, %struct.word** %36, align 8
  %643 = getelementptr inbounds %struct.word, %struct.word* %642, i32 0, i32 0
  store %struct.word* null, %struct.word** %643, align 8
  %644 = load i8*, i8** %10, align 8
  store i8* %644, i8** %11, align 8
  br label %645

645:                                              ; preds = %722, %641
  %646 = call i8* (i8**, i32*, ...) bitcast (i8* (i8**, i32*)* @find_next_token to i8* (i8**, i32*, ...)*)(i8** %11, i32* %13)
  store i8* %646, i8** %9, align 8
  %647 = icmp ne i8* %646, null
  br i1 %647, label %648, label %728

648:                                              ; preds = %645
  %649 = load i8*, i8** %9, align 8
  %650 = load i32, i32* %13, align 4
  %651 = zext i32 %650 to i64
  %652 = getelementptr inbounds i8, i8* %649, i64 %651
  %653 = load i8, i8* %652, align 1
  store i8 %653, i8* %40, align 1
  %654 = load i8*, i8** %9, align 8
  %655 = load i32, i32* %13, align 4
  %656 = zext i32 %655 to i64
  %657 = getelementptr inbounds i8, i8* %654, i64 %656
  store i8 0, i8* %657, align 1
  %658 = load i8*, i8** %9, align 8
  %659 = call i8* (i8*, ...) bitcast (i8* (i8*)* @find_percent to i8* (i8*, ...)*)(i8* %658)
  store i8* %659, i8** %39, align 8
  %660 = load %struct.word*, %struct.word** %35, align 8
  store %struct.word* %660, %struct.word** %37, align 8
  br label %661

661:                                              ; preds = %718, %648
  %662 = load %struct.word*, %struct.word** %37, align 8
  %663 = icmp ne %struct.word* %662, null
  br i1 %663, label %664, label %722

664:                                              ; preds = %661
  %665 = load i8*, i8** %39, align 8
  %666 = icmp eq i8* %665, null
  br i1 %666, label %667, label %705

667:                                              ; preds = %664
  %668 = load i8*, i8** %9, align 8
  %669 = load %struct.word*, %struct.word** %37, align 8
  %670 = getelementptr inbounds %struct.word, %struct.word* %669, i32 0, i32 1
  %671 = load i8*, i8** %670, align 8
  %672 = icmp eq i8* %668, %671
  br i1 %672, label %702, label %673

673:                                              ; preds = %667
  %674 = load i8*, i8** %9, align 8
  %675 = load i8, i8* %674, align 1
  %676 = sext i8 %675 to i32
  %677 = load %struct.word*, %struct.word** %37, align 8
  %678 = getelementptr inbounds %struct.word, %struct.word* %677, i32 0, i32 1
  %679 = load i8*, i8** %678, align 8
  %680 = load i8, i8* %679, align 1
  %681 = sext i8 %680 to i32
  %682 = icmp eq i32 %676, %681
  br i1 %682, label %683, label %700

683:                                              ; preds = %673
  %684 = load i8*, i8** %9, align 8
  %685 = load i8, i8* %684, align 1
  %686 = sext i8 %685 to i32
  %687 = icmp eq i32 %686, 0
  br i1 %687, label %698, label %688

688:                                              ; preds = %683
  %689 = load i8*, i8** %9, align 8
  %690 = getelementptr inbounds i8, i8* %689, i64 1
  %691 = load %struct.word*, %struct.word** %37, align 8
  %692 = getelementptr inbounds %struct.word, %struct.word* %691, i32 0, i32 1
  %693 = load i8*, i8** %692, align 8
  %694 = getelementptr inbounds i8, i8* %693, i64 1
  %695 = call i32 @strcmp(i8* %690, i8* %694) #9
  %696 = icmp ne i32 %695, 0
  %697 = xor i1 %696, true
  br label %698

698:                                              ; preds = %688, %683
  %699 = phi i1 [ true, %683 ], [ %697, %688 ]
  br label %700

700:                                              ; preds = %698, %673
  %701 = phi i1 [ false, %673 ], [ %699, %698 ]
  br label %702

702:                                              ; preds = %700, %667
  %703 = phi i1 [ true, %667 ], [ %701, %700 ]
  %704 = zext i1 %703 to i32
  br label %712

705:                                              ; preds = %664
  %706 = load i8*, i8** %9, align 8
  %707 = load i8*, i8** %39, align 8
  %708 = load %struct.word*, %struct.word** %37, align 8
  %709 = getelementptr inbounds %struct.word, %struct.word* %708, i32 0, i32 1
  %710 = load i8*, i8** %709, align 8
  %711 = call i32 @pattern_matches(i8* %706, i8* %707, i8* %710)
  br label %712

712:                                              ; preds = %705, %702
  %713 = phi i32 [ %704, %702 ], [ %711, %705 ]
  %714 = load %struct.word*, %struct.word** %37, align 8
  %715 = getelementptr inbounds %struct.word, %struct.word* %714, i32 0, i32 2
  %716 = load i32, i32* %715, align 8
  %717 = or i32 %716, %713
  store i32 %717, i32* %715, align 8
  br label %718

718:                                              ; preds = %712
  %719 = load %struct.word*, %struct.word** %37, align 8
  %720 = getelementptr inbounds %struct.word, %struct.word* %719, i32 0, i32 0
  %721 = load %struct.word*, %struct.word** %720, align 8
  store %struct.word* %721, %struct.word** %37, align 8
  br label %661

722:                                              ; preds = %661
  %723 = load i8, i8* %40, align 1
  %724 = load i8*, i8** %9, align 8
  %725 = load i32, i32* %13, align 4
  %726 = zext i32 %725 to i64
  %727 = getelementptr inbounds i8, i8* %724, i64 %726
  store i8 %723, i8* %727, align 1
  br label %645

728:                                              ; preds = %645
  %729 = load %struct.word*, %struct.word** %35, align 8
  store %struct.word* %729, %struct.word** %37, align 8
  br label %730

730:                                              ; preds = %759, %728
  %731 = load %struct.word*, %struct.word** %37, align 8
  %732 = icmp ne %struct.word* %731, null
  br i1 %732, label %733, label %763

733:                                              ; preds = %730
  %734 = load i32, i32* %6, align 4
  %735 = icmp eq i32 %734, 15
  br i1 %735, label %736, label %741

736:                                              ; preds = %733
  %737 = load %struct.word*, %struct.word** %37, align 8
  %738 = getelementptr inbounds %struct.word, %struct.word* %737, i32 0, i32 2
  %739 = load i32, i32* %738, align 8
  %740 = icmp ne i32 %739, 0
  br i1 %740, label %746, label %758

741:                                              ; preds = %733
  %742 = load %struct.word*, %struct.word** %37, align 8
  %743 = getelementptr inbounds %struct.word, %struct.word* %742, i32 0, i32 2
  %744 = load i32, i32* %743, align 8
  %745 = icmp ne i32 %744, 0
  br i1 %745, label %758, label %746

746:                                              ; preds = %741, %736
  %747 = load i8*, i8** %5, align 8
  %748 = load %struct.word*, %struct.word** %37, align 8
  %749 = getelementptr inbounds %struct.word, %struct.word* %748, i32 0, i32 1
  %750 = load i8*, i8** %749, align 8
  %751 = load %struct.word*, %struct.word** %37, align 8
  %752 = getelementptr inbounds %struct.word, %struct.word* %751, i32 0, i32 1
  %753 = load i8*, i8** %752, align 8
  %754 = call i64 @strlen(i8* %753) #9
  %755 = call i8* (i8*, i8*, i64, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i64, ...)*)(i8* %747, i8* %750, i64 %754)
  store i8* %755, i8** %5, align 8
  %756 = load i8*, i8** %5, align 8
  %757 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %756, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.262, i64 0, i64 0), i32 1)
  store i8* %757, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %758

758:                                              ; preds = %746, %741, %736
  br label %759

759:                                              ; preds = %758
  %760 = load %struct.word*, %struct.word** %37, align 8
  %761 = getelementptr inbounds %struct.word, %struct.word* %760, i32 0, i32 0
  %762 = load %struct.word*, %struct.word** %761, align 8
  store %struct.word* %762, %struct.word** %37, align 8
  br label %730

763:                                              ; preds = %730
  %764 = load i32, i32* %14, align 4
  %765 = icmp ne i32 %764, 0
  br i1 %765, label %766, label %769

766:                                              ; preds = %763
  %767 = load i8*, i8** %5, align 8
  %768 = getelementptr inbounds i8, i8* %767, i32 -1
  store i8* %768, i8** %5, align 8
  br label %769

769:                                              ; preds = %766, %763
  br label %770

770:                                              ; preds = %769, %638
  %771 = load i8*, i8** %10, align 8
  call void @free(i8* %771) #10
  %772 = load i8*, i8** %7, align 8
  call void @free(i8* %772) #10
  br label %1687

773:                                              ; preds = %4
  store i32 0, i32* %15, align 4
  %774 = load i8*, i8** %7, align 8
  store i8* %774, i8** %9, align 8
  br label %775

775:                                              ; preds = %811, %773
  %776 = load i8*, i8** %9, align 8
  %777 = load i8*, i8** %8, align 8
  %778 = icmp ult i8* %776, %777
  br i1 %778, label %779, label %814

779:                                              ; preds = %775
  %780 = load i8*, i8** %9, align 8
  %781 = load i8, i8* %780, align 1
  %782 = sext i8 %781 to i32
  %783 = load i8, i8* %17, align 1
  %784 = sext i8 %783 to i32
  %785 = icmp eq i32 %782, %784
  br i1 %785, label %786, label %789

786:                                              ; preds = %779
  %787 = load i32, i32* %15, align 4
  %788 = add nsw i32 %787, 1
  store i32 %788, i32* %15, align 4
  br label %810

789:                                              ; preds = %779
  %790 = load i8*, i8** %9, align 8
  %791 = load i8, i8* %790, align 1
  %792 = sext i8 %791 to i32
  %793 = load i8, i8* %16, align 1
  %794 = sext i8 %793 to i32
  %795 = icmp eq i32 %792, %794
  br i1 %795, label %796, label %799

796:                                              ; preds = %789
  %797 = load i32, i32* %15, align 4
  %798 = add nsw i32 %797, -1
  store i32 %798, i32* %15, align 4
  br label %809

799:                                              ; preds = %789
  %800 = load i8*, i8** %9, align 8
  %801 = load i8, i8* %800, align 1
  %802 = sext i8 %801 to i32
  %803 = icmp eq i32 %802, 44
  br i1 %803, label %804, label %808

804:                                              ; preds = %799
  %805 = load i32, i32* %15, align 4
  %806 = icmp sle i32 %805, 0
  br i1 %806, label %807, label %808

807:                                              ; preds = %804
  br label %814

808:                                              ; preds = %804, %799
  br label %809

809:                                              ; preds = %808, %796
  br label %810

810:                                              ; preds = %809, %786
  br label %811

811:                                              ; preds = %810
  %812 = load i8*, i8** %9, align 8
  %813 = getelementptr inbounds i8, i8* %812, i32 1
  store i8* %813, i8** %9, align 8
  br label %775

814:                                              ; preds = %807, %775
  %815 = load i8*, i8** %9, align 8
  %816 = load i8*, i8** %8, align 8
  %817 = icmp eq i8* %815, %816
  br i1 %817, label %818, label %827

818:                                              ; preds = %814
  %819 = load i8*, i8** @reading_filename, align 8
  %820 = icmp ne i8* %819, null
  br i1 %820, label %821, label %825

821:                                              ; preds = %818
  %822 = load i8*, i8** @reading_filename, align 8
  %823 = load i32*, i32** @reading_lineno_ptr, align 8
  %824 = load i32, i32* %823, align 4
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, i8*, ...)*)(i8* %822, i32 %824, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15.281, i64 0, i64 0))
  br label %826

825:                                              ; preds = %818
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15.281, i64 0, i64 0))
  br label %826

826:                                              ; preds = %825, %821
  br label %827

827:                                              ; preds = %826, %814
  %828 = load i8*, i8** %9, align 8
  store i8* %828, i8** %10, align 8
  store i32 0, i32* %15, align 4
  %829 = load i8*, i8** %9, align 8
  %830 = getelementptr inbounds i8, i8* %829, i32 1
  store i8* %830, i8** %9, align 8
  br label %831

831:                                              ; preds = %867, %827
  %832 = load i8*, i8** %9, align 8
  %833 = load i8*, i8** %8, align 8
  %834 = icmp ult i8* %832, %833
  br i1 %834, label %835, label %870

835:                                              ; preds = %831
  %836 = load i8*, i8** %9, align 8
  %837 = load i8, i8* %836, align 1
  %838 = sext i8 %837 to i32
  %839 = load i8, i8* %17, align 1
  %840 = sext i8 %839 to i32
  %841 = icmp eq i32 %838, %840
  br i1 %841, label %842, label %845

842:                                              ; preds = %835
  %843 = load i32, i32* %15, align 4
  %844 = add nsw i32 %843, 1
  store i32 %844, i32* %15, align 4
  br label %866

845:                                              ; preds = %835
  %846 = load i8*, i8** %9, align 8
  %847 = load i8, i8* %846, align 1
  %848 = sext i8 %847 to i32
  %849 = load i8, i8* %16, align 1
  %850 = sext i8 %849 to i32
  %851 = icmp eq i32 %848, %850
  br i1 %851, label %852, label %855

852:                                              ; preds = %845
  %853 = load i32, i32* %15, align 4
  %854 = add nsw i32 %853, -1
  store i32 %854, i32* %15, align 4
  br label %865

855:                                              ; preds = %845
  %856 = load i8*, i8** %9, align 8
  %857 = load i8, i8* %856, align 1
  %858 = sext i8 %857 to i32
  %859 = icmp eq i32 %858, 44
  br i1 %859, label %860, label %864

860:                                              ; preds = %855
  %861 = load i32, i32* %15, align 4
  %862 = icmp sle i32 %861, 0
  br i1 %862, label %863, label %864

863:                                              ; preds = %860
  br label %870

864:                                              ; preds = %860, %855
  br label %865

865:                                              ; preds = %864, %852
  br label %866

866:                                              ; preds = %865, %842
  br label %867

867:                                              ; preds = %866
  %868 = load i8*, i8** %9, align 8
  %869 = getelementptr inbounds i8, i8* %868, i32 1
  store i8* %869, i8** %9, align 8
  br label %831

870:                                              ; preds = %863, %831
  %871 = load i8*, i8** %9, align 8
  %872 = load i8*, i8** %8, align 8
  %873 = icmp eq i8* %871, %872
  br i1 %873, label %874, label %883

874:                                              ; preds = %870
  %875 = load i8*, i8** @reading_filename, align 8
  %876 = icmp ne i8* %875, null
  br i1 %876, label %877, label %881

877:                                              ; preds = %874
  %878 = load i8*, i8** @reading_filename, align 8
  %879 = load i32*, i32** @reading_lineno_ptr, align 8
  %880 = load i32, i32* %879, align 4
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, i8*, ...)*)(i8* %878, i32 %880, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15.281, i64 0, i64 0))
  br label %882

881:                                              ; preds = %874
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15.281, i64 0, i64 0))
  br label %882

882:                                              ; preds = %881, %877
  br label %883

883:                                              ; preds = %882, %870
  %884 = load i8*, i8** %7, align 8
  %885 = load i8*, i8** %10, align 8
  %886 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %884, i8* %885)
  store i8* %886, i8** %7, align 8
  %887 = load i8*, i8** %10, align 8
  %888 = getelementptr inbounds i8, i8* %887, i64 1
  %889 = load i8*, i8** %9, align 8
  %890 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %888, i8* %889)
  store i8* %890, i8** %11, align 8
  %891 = load i8*, i8** %9, align 8
  %892 = getelementptr inbounds i8, i8* %891, i64 1
  %893 = load i8*, i8** %8, align 8
  %894 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %892, i8* %893)
  store i8* %894, i8** %10, align 8
  %895 = load i8*, i8** %5, align 8
  %896 = load i8*, i8** %10, align 8
  %897 = load i8*, i8** %7, align 8
  %898 = load i8*, i8** %11, align 8
  %899 = call i8* @patsubst_expand(i8* %895, i8* %896, i8* %897, i8* %898, i8* null, i8* null)
  store i8* %899, i8** %5, align 8
  %900 = load i8*, i8** %7, align 8
  call void @free(i8* %900) #10
  %901 = load i8*, i8** %11, align 8
  call void @free(i8* %901) #10
  %902 = load i8*, i8** %10, align 8
  call void @free(i8* %902) #10
  br label %1687

903:                                              ; preds = %4
  store i32 0, i32* %15, align 4
  %904 = load i8*, i8** %7, align 8
  store i8* %904, i8** %9, align 8
  br label %905

905:                                              ; preds = %941, %903
  %906 = load i8*, i8** %9, align 8
  %907 = load i8*, i8** %8, align 8
  %908 = icmp ult i8* %906, %907
  br i1 %908, label %909, label %944

909:                                              ; preds = %905
  %910 = load i8*, i8** %9, align 8
  %911 = load i8, i8* %910, align 1
  %912 = sext i8 %911 to i32
  %913 = load i8, i8* %17, align 1
  %914 = sext i8 %913 to i32
  %915 = icmp eq i32 %912, %914
  br i1 %915, label %916, label %919

916:                                              ; preds = %909
  %917 = load i32, i32* %15, align 4
  %918 = add nsw i32 %917, 1
  store i32 %918, i32* %15, align 4
  br label %940

919:                                              ; preds = %909
  %920 = load i8*, i8** %9, align 8
  %921 = load i8, i8* %920, align 1
  %922 = sext i8 %921 to i32
  %923 = load i8, i8* %16, align 1
  %924 = sext i8 %923 to i32
  %925 = icmp eq i32 %922, %924
  br i1 %925, label %926, label %929

926:                                              ; preds = %919
  %927 = load i32, i32* %15, align 4
  %928 = add nsw i32 %927, -1
  store i32 %928, i32* %15, align 4
  br label %939

929:                                              ; preds = %919
  %930 = load i8*, i8** %9, align 8
  %931 = load i8, i8* %930, align 1
  %932 = sext i8 %931 to i32
  %933 = icmp eq i32 %932, 44
  br i1 %933, label %934, label %938

934:                                              ; preds = %929
  %935 = load i32, i32* %15, align 4
  %936 = icmp sle i32 %935, 0
  br i1 %936, label %937, label %938

937:                                              ; preds = %934
  br label %944

938:                                              ; preds = %934, %929
  br label %939

939:                                              ; preds = %938, %926
  br label %940

940:                                              ; preds = %939, %916
  br label %941

941:                                              ; preds = %940
  %942 = load i8*, i8** %9, align 8
  %943 = getelementptr inbounds i8, i8* %942, i32 1
  store i8* %943, i8** %9, align 8
  br label %905

944:                                              ; preds = %937, %905
  %945 = load i8*, i8** %9, align 8
  %946 = load i8*, i8** %8, align 8
  %947 = icmp eq i8* %945, %946
  br i1 %947, label %948, label %957

948:                                              ; preds = %944
  %949 = load i8*, i8** @reading_filename, align 8
  %950 = icmp ne i8* %949, null
  br i1 %950, label %951, label %955

951:                                              ; preds = %948
  %952 = load i8*, i8** @reading_filename, align 8
  %953 = load i32*, i32** @reading_lineno_ptr, align 8
  %954 = load i32, i32* %953, align 4
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, i8*, ...)*)(i8* %952, i32 %954, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14.282, i64 0, i64 0))
  br label %956

955:                                              ; preds = %948
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14.282, i64 0, i64 0))
  br label %956

956:                                              ; preds = %955, %951
  br label %957

957:                                              ; preds = %956, %944
  %958 = load i8*, i8** %7, align 8
  %959 = load i8*, i8** %9, align 8
  %960 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %958, i8* %959)
  store i8* %960, i8** %7, align 8
  %961 = load i8*, i8** %9, align 8
  %962 = getelementptr inbounds i8, i8* %961, i64 1
  %963 = load i8*, i8** %8, align 8
  %964 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %962, i8* %963)
  store i8* %964, i8** %9, align 8
  %965 = load i8*, i8** %7, align 8
  store i8* %965, i8** %10, align 8
  %966 = load i8*, i8** %9, align 8
  store i8* %966, i8** %11, align 8
  br label %967

967:                                              ; preds = %1001, %957
  %968 = call i8* (i8**, i32*, ...) bitcast (i8* (i8**, i32*)* @find_next_token to i8* (i8**, i32*, ...)*)(i8** %10, i32* %43)
  store i8* %968, i8** %41, align 8
  %969 = load i8*, i8** %41, align 8
  %970 = icmp ne i8* %969, null
  br i1 %970, label %971, label %976

971:                                              ; preds = %967
  %972 = load i8*, i8** %5, align 8
  %973 = load i8*, i8** %41, align 8
  %974 = load i32, i32* %43, align 4
  %975 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %972, i8* %973, i32 %974)
  store i8* %975, i8** %5, align 8
  br label %976

976:                                              ; preds = %971, %967
  %977 = call i8* (i8**, i32*, ...) bitcast (i8* (i8**, i32*)* @find_next_token to i8* (i8**, i32*, ...)*)(i8** %11, i32* %44)
  store i8* %977, i8** %42, align 8
  %978 = load i8*, i8** %42, align 8
  %979 = icmp ne i8* %978, null
  br i1 %979, label %980, label %985

980:                                              ; preds = %976
  %981 = load i8*, i8** %5, align 8
  %982 = load i8*, i8** %42, align 8
  %983 = load i32, i32* %44, align 4
  %984 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %981, i8* %982, i32 %983)
  store i8* %984, i8** %5, align 8
  br label %985

985:                                              ; preds = %980, %976
  %986 = load i8*, i8** %41, align 8
  %987 = icmp ne i8* %986, null
  br i1 %987, label %991, label %988

988:                                              ; preds = %985
  %989 = load i8*, i8** %42, align 8
  %990 = icmp ne i8* %989, null
  br i1 %990, label %991, label %994

991:                                              ; preds = %988, %985
  %992 = load i8*, i8** %5, align 8
  %993 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %992, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.262, i64 0, i64 0), i32 1)
  store i8* %993, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %994

994:                                              ; preds = %991, %988
  br label %995

995:                                              ; preds = %994
  %996 = load i8*, i8** %41, align 8
  %997 = icmp ne i8* %996, null
  br i1 %997, label %1001, label %998

998:                                              ; preds = %995
  %999 = load i8*, i8** %42, align 8
  %1000 = icmp ne i8* %999, null
  br label %1001

1001:                                             ; preds = %998, %995
  %1002 = phi i1 [ true, %995 ], [ %1000, %998 ]
  br i1 %1002, label %967, label %1003

1003:                                             ; preds = %1001
  %1004 = load i32, i32* %14, align 4
  %1005 = icmp ne i32 %1004, 0
  br i1 %1005, label %1006, label %1009

1006:                                             ; preds = %1003
  %1007 = load i8*, i8** %5, align 8
  %1008 = getelementptr inbounds i8, i8* %1007, i32 -1
  store i8* %1008, i8** %5, align 8
  br label %1009

1009:                                             ; preds = %1006, %1003
  %1010 = load i8*, i8** %7, align 8
  call void @free(i8* %1010) #10
  %1011 = load i8*, i8** %9, align 8
  call void @free(i8* %1011) #10
  br label %1687

1012:                                             ; preds = %4
  %1013 = load i8*, i8** %7, align 8
  %1014 = load i8*, i8** %8, align 8
  %1015 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %1013, i8* %1014)
  store i8* %1015, i8** %7, align 8
  %1016 = load i8*, i8** %7, align 8
  store i8* %1016, i8** %10, align 8
  br label %1017

1017:                                             ; preds = %1020, %1012
  %1018 = call i8* (i8**, i32*, ...) bitcast (i8* (i8**, i32*)* @find_next_token to i8* (i8**, i32*, ...)*)(i8** %10, i32* %12)
  store i8* %1018, i8** %9, align 8
  %1019 = icmp ne i8* %1018, null
  br i1 %1019, label %1020, label %1027

1020:                                             ; preds = %1017
  %1021 = load i8*, i8** %5, align 8
  %1022 = load i8*, i8** %9, align 8
  %1023 = load i32, i32* %12, align 4
  %1024 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %1021, i8* %1022, i32 %1023)
  store i8* %1024, i8** %5, align 8
  %1025 = load i8*, i8** %5, align 8
  %1026 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %1025, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.262, i64 0, i64 0), i32 1)
  store i8* %1026, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %1017

1027:                                             ; preds = %1017
  %1028 = load i32, i32* %14, align 4
  %1029 = icmp ne i32 %1028, 0
  br i1 %1029, label %1030, label %1033

1030:                                             ; preds = %1027
  %1031 = load i8*, i8** %5, align 8
  %1032 = getelementptr inbounds i8, i8* %1031, i32 -1
  store i8* %1032, i8** %5, align 8
  br label %1033

1033:                                             ; preds = %1030, %1027
  %1034 = load i8*, i8** %7, align 8
  call void @free(i8* %1034) #10
  br label %1687

1035:                                             ; preds = %4
  %1036 = load i8*, i8** %7, align 8
  %1037 = load i8*, i8** %8, align 8
  %1038 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %1036, i8* %1037)
  store i8* %1038, i8** %7, align 8
  %1039 = load i8*, i8** %7, align 8
  %1040 = call i8* @string_glob(i8* %1039)
  store i8* %1040, i8** %9, align 8
  %1041 = load i8*, i8** %5, align 8
  %1042 = load i8*, i8** %9, align 8
  %1043 = load i8*, i8** %9, align 8
  %1044 = call i64 @strlen(i8* %1043) #9
  %1045 = call i8* (i8*, i8*, i64, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i64, ...)*)(i8* %1041, i8* %1042, i64 %1044)
  store i8* %1045, i8** %5, align 8
  %1046 = load i8*, i8** %7, align 8
  call void @free(i8* %1046) #10
  br label %1687

1047:                                             ; preds = %4
  store i32 0, i32* %15, align 4
  %1048 = load i8*, i8** %7, align 8
  store i8* %1048, i8** %9, align 8
  br label %1049

1049:                                             ; preds = %1085, %1047
  %1050 = load i8*, i8** %9, align 8
  %1051 = load i8*, i8** %8, align 8
  %1052 = icmp ult i8* %1050, %1051
  br i1 %1052, label %1053, label %1088

1053:                                             ; preds = %1049
  %1054 = load i8*, i8** %9, align 8
  %1055 = load i8, i8* %1054, align 1
  %1056 = sext i8 %1055 to i32
  %1057 = load i8, i8* %17, align 1
  %1058 = sext i8 %1057 to i32
  %1059 = icmp eq i32 %1056, %1058
  br i1 %1059, label %1060, label %1063

1060:                                             ; preds = %1053
  %1061 = load i32, i32* %15, align 4
  %1062 = add nsw i32 %1061, 1
  store i32 %1062, i32* %15, align 4
  br label %1084

1063:                                             ; preds = %1053
  %1064 = load i8*, i8** %9, align 8
  %1065 = load i8, i8* %1064, align 1
  %1066 = sext i8 %1065 to i32
  %1067 = load i8, i8* %16, align 1
  %1068 = sext i8 %1067 to i32
  %1069 = icmp eq i32 %1066, %1068
  br i1 %1069, label %1070, label %1073

1070:                                             ; preds = %1063
  %1071 = load i32, i32* %15, align 4
  %1072 = add nsw i32 %1071, -1
  store i32 %1072, i32* %15, align 4
  br label %1083

1073:                                             ; preds = %1063
  %1074 = load i8*, i8** %9, align 8
  %1075 = load i8, i8* %1074, align 1
  %1076 = sext i8 %1075 to i32
  %1077 = icmp eq i32 %1076, 44
  br i1 %1077, label %1078, label %1082

1078:                                             ; preds = %1073
  %1079 = load i32, i32* %15, align 4
  %1080 = icmp sle i32 %1079, 0
  br i1 %1080, label %1081, label %1082

1081:                                             ; preds = %1078
  br label %1088

1082:                                             ; preds = %1078, %1073
  br label %1083

1083:                                             ; preds = %1082, %1070
  br label %1084

1084:                                             ; preds = %1083, %1060
  br label %1085

1085:                                             ; preds = %1084
  %1086 = load i8*, i8** %9, align 8
  %1087 = getelementptr inbounds i8, i8* %1086, i32 1
  store i8* %1087, i8** %9, align 8
  br label %1049

1088:                                             ; preds = %1081, %1049
  %1089 = load i8*, i8** %9, align 8
  %1090 = load i8*, i8** %8, align 8
  %1091 = icmp eq i8* %1089, %1090
  br i1 %1091, label %1092, label %1101

1092:                                             ; preds = %1088
  %1093 = load i8*, i8** @reading_filename, align 8
  %1094 = icmp ne i8* %1093, null
  br i1 %1094, label %1095, label %1099

1095:                                             ; preds = %1092
  %1096 = load i8*, i8** @reading_filename, align 8
  %1097 = load i32*, i32** @reading_lineno_ptr, align 8
  %1098 = load i32, i32* %1097, align 4
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, i8*, ...)*)(i8* %1096, i32 %1098, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.283, i64 0, i64 0))
  br label %1100

1099:                                             ; preds = %1092
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.283, i64 0, i64 0))
  br label %1100

1100:                                             ; preds = %1099, %1095
  br label %1101

1101:                                             ; preds = %1100, %1088
  %1102 = load i8*, i8** %9, align 8
  store i8* %1102, i8** %10, align 8
  store i32 0, i32* %15, align 4
  %1103 = load i8*, i8** %9, align 8
  %1104 = getelementptr inbounds i8, i8* %1103, i32 1
  store i8* %1104, i8** %9, align 8
  br label %1105

1105:                                             ; preds = %1141, %1101
  %1106 = load i8*, i8** %9, align 8
  %1107 = load i8*, i8** %8, align 8
  %1108 = icmp ult i8* %1106, %1107
  br i1 %1108, label %1109, label %1144

1109:                                             ; preds = %1105
  %1110 = load i8*, i8** %9, align 8
  %1111 = load i8, i8* %1110, align 1
  %1112 = sext i8 %1111 to i32
  %1113 = load i8, i8* %17, align 1
  %1114 = sext i8 %1113 to i32
  %1115 = icmp eq i32 %1112, %1114
  br i1 %1115, label %1116, label %1119

1116:                                             ; preds = %1109
  %1117 = load i32, i32* %15, align 4
  %1118 = add nsw i32 %1117, 1
  store i32 %1118, i32* %15, align 4
  br label %1140

1119:                                             ; preds = %1109
  %1120 = load i8*, i8** %9, align 8
  %1121 = load i8, i8* %1120, align 1
  %1122 = sext i8 %1121 to i32
  %1123 = load i8, i8* %16, align 1
  %1124 = sext i8 %1123 to i32
  %1125 = icmp eq i32 %1122, %1124
  br i1 %1125, label %1126, label %1129

1126:                                             ; preds = %1119
  %1127 = load i32, i32* %15, align 4
  %1128 = add nsw i32 %1127, -1
  store i32 %1128, i32* %15, align 4
  br label %1139

1129:                                             ; preds = %1119
  %1130 = load i8*, i8** %9, align 8
  %1131 = load i8, i8* %1130, align 1
  %1132 = sext i8 %1131 to i32
  %1133 = icmp eq i32 %1132, 44
  br i1 %1133, label %1134, label %1138

1134:                                             ; preds = %1129
  %1135 = load i32, i32* %15, align 4
  %1136 = icmp sle i32 %1135, 0
  br i1 %1136, label %1137, label %1138

1137:                                             ; preds = %1134
  br label %1144

1138:                                             ; preds = %1134, %1129
  br label %1139

1139:                                             ; preds = %1138, %1126
  br label %1140

1140:                                             ; preds = %1139, %1116
  br label %1141

1141:                                             ; preds = %1140
  %1142 = load i8*, i8** %9, align 8
  %1143 = getelementptr inbounds i8, i8* %1142, i32 1
  store i8* %1143, i8** %9, align 8
  br label %1105

1144:                                             ; preds = %1137, %1105
  %1145 = load i8*, i8** %9, align 8
  %1146 = load i8*, i8** %8, align 8
  %1147 = icmp eq i8* %1145, %1146
  br i1 %1147, label %1148, label %1157

1148:                                             ; preds = %1144
  %1149 = load i8*, i8** @reading_filename, align 8
  %1150 = icmp ne i8* %1149, null
  br i1 %1150, label %1151, label %1155

1151:                                             ; preds = %1148
  %1152 = load i8*, i8** @reading_filename, align 8
  %1153 = load i32*, i32** @reading_lineno_ptr, align 8
  %1154 = load i32, i32* %1153, align 4
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, i8*, ...)*)(i8* %1152, i32 %1154, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.283, i64 0, i64 0))
  br label %1156

1155:                                             ; preds = %1148
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.283, i64 0, i64 0))
  br label %1156

1156:                                             ; preds = %1155, %1151
  br label %1157

1157:                                             ; preds = %1156, %1144
  %1158 = load i8*, i8** %7, align 8
  %1159 = load i8*, i8** %10, align 8
  %1160 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %1158, i8* %1159)
  store i8* %1160, i8** %7, align 8
  %1161 = load i8*, i8** %10, align 8
  %1162 = getelementptr inbounds i8, i8* %1161, i64 1
  %1163 = load i8*, i8** %9, align 8
  %1164 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %1162, i8* %1163)
  store i8* %1164, i8** %11, align 8
  %1165 = load i8*, i8** %9, align 8
  %1166 = getelementptr inbounds i8, i8* %1165, i64 1
  %1167 = load i8*, i8** %8, align 8
  %1168 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %1166, i8* %1167)
  store i8* %1168, i8** %10, align 8
  %1169 = load i8*, i8** %5, align 8
  %1170 = load i8*, i8** %10, align 8
  %1171 = load i8*, i8** %7, align 8
  %1172 = load i8*, i8** %11, align 8
  %1173 = load i8*, i8** %7, align 8
  %1174 = call i64 @strlen(i8* %1173) #9
  %1175 = trunc i64 %1174 to i32
  %1176 = load i8*, i8** %11, align 8
  %1177 = call i64 @strlen(i8* %1176) #9
  %1178 = trunc i64 %1177 to i32
  %1179 = call i8* @subst_expand(i8* %1169, i8* %1170, i8* %1171, i8* %1172, i32 %1175, i32 %1178, i32 0, i32 0)
  store i8* %1179, i8** %5, align 8
  %1180 = load i8*, i8** %7, align 8
  call void @free(i8* %1180) #10
  %1181 = load i8*, i8** %11, align 8
  call void @free(i8* %1181) #10
  %1182 = load i8*, i8** %10, align 8
  call void @free(i8* %1182) #10
  br label %1687

1183:                                             ; preds = %4
  %1184 = load i8*, i8** %7, align 8
  %1185 = load i8*, i8** %8, align 8
  %1186 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %1184, i8* %1185)
  store i8* %1186, i8** %7, align 8
  %1187 = load i8*, i8** %7, align 8
  store i8* %1187, i8** %10, align 8
  %1188 = call i8* (i8**, i32*, ...) bitcast (i8* (i8**, i32*)* @find_next_token to i8* (i8**, i32*, ...)*)(i8** %10, i32* %12)
  store i8* %1188, i8** %9, align 8
  %1189 = load i8*, i8** %9, align 8
  %1190 = icmp ne i8* %1189, null
  br i1 %1190, label %1191, label %1196

1191:                                             ; preds = %1183
  %1192 = load i8*, i8** %5, align 8
  %1193 = load i8*, i8** %9, align 8
  %1194 = load i32, i32* %12, align 4
  %1195 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %1192, i8* %1193, i32 %1194)
  store i8* %1195, i8** %5, align 8
  br label %1196

1196:                                             ; preds = %1191, %1183
  %1197 = load i8*, i8** %7, align 8
  call void @free(i8* %1197) #10
  br label %1687

1198:                                             ; preds = %4
  store i32 0, i32* %15, align 4
  %1199 = load i8*, i8** %7, align 8
  store i8* %1199, i8** %9, align 8
  br label %1200

1200:                                             ; preds = %1236, %1198
  %1201 = load i8*, i8** %9, align 8
  %1202 = load i8*, i8** %8, align 8
  %1203 = icmp ult i8* %1201, %1202
  br i1 %1203, label %1204, label %1239

1204:                                             ; preds = %1200
  %1205 = load i8*, i8** %9, align 8
  %1206 = load i8, i8* %1205, align 1
  %1207 = sext i8 %1206 to i32
  %1208 = load i8, i8* %17, align 1
  %1209 = sext i8 %1208 to i32
  %1210 = icmp eq i32 %1207, %1209
  br i1 %1210, label %1211, label %1214

1211:                                             ; preds = %1204
  %1212 = load i32, i32* %15, align 4
  %1213 = add nsw i32 %1212, 1
  store i32 %1213, i32* %15, align 4
  br label %1235

1214:                                             ; preds = %1204
  %1215 = load i8*, i8** %9, align 8
  %1216 = load i8, i8* %1215, align 1
  %1217 = sext i8 %1216 to i32
  %1218 = load i8, i8* %16, align 1
  %1219 = sext i8 %1218 to i32
  %1220 = icmp eq i32 %1217, %1219
  br i1 %1220, label %1221, label %1224

1221:                                             ; preds = %1214
  %1222 = load i32, i32* %15, align 4
  %1223 = add nsw i32 %1222, -1
  store i32 %1223, i32* %15, align 4
  br label %1234

1224:                                             ; preds = %1214
  %1225 = load i8*, i8** %9, align 8
  %1226 = load i8, i8* %1225, align 1
  %1227 = sext i8 %1226 to i32
  %1228 = icmp eq i32 %1227, 44
  br i1 %1228, label %1229, label %1233

1229:                                             ; preds = %1224
  %1230 = load i32, i32* %15, align 4
  %1231 = icmp sle i32 %1230, 0
  br i1 %1231, label %1232, label %1233

1232:                                             ; preds = %1229
  br label %1239

1233:                                             ; preds = %1229, %1224
  br label %1234

1234:                                             ; preds = %1233, %1221
  br label %1235

1235:                                             ; preds = %1234, %1211
  br label %1236

1236:                                             ; preds = %1235
  %1237 = load i8*, i8** %9, align 8
  %1238 = getelementptr inbounds i8, i8* %1237, i32 1
  store i8* %1238, i8** %9, align 8
  br label %1200

1239:                                             ; preds = %1232, %1200
  %1240 = load i8*, i8** %9, align 8
  %1241 = load i8*, i8** %8, align 8
  %1242 = icmp eq i8* %1240, %1241
  br i1 %1242, label %1243, label %1252

1243:                                             ; preds = %1239
  %1244 = load i8*, i8** @reading_filename, align 8
  %1245 = icmp ne i8* %1244, null
  br i1 %1245, label %1246, label %1250

1246:                                             ; preds = %1243
  %1247 = load i8*, i8** @reading_filename, align 8
  %1248 = load i32*, i32** @reading_lineno_ptr, align 8
  %1249 = load i32, i32* %1248, align 4
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, i8*, ...)*)(i8* %1247, i32 %1249, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.284, i64 0, i64 0))
  br label %1251

1250:                                             ; preds = %1243
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.284, i64 0, i64 0))
  br label %1251

1251:                                             ; preds = %1250, %1246
  br label %1252

1252:                                             ; preds = %1251, %1239
  %1253 = load i8*, i8** %7, align 8
  %1254 = load i8*, i8** %9, align 8
  %1255 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %1253, i8* %1254)
  store i8* %1255, i8** %7, align 8
  %1256 = load i8*, i8** %9, align 8
  %1257 = getelementptr inbounds i8, i8* %1256, i64 1
  %1258 = load i8*, i8** %8, align 8
  %1259 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %1257, i8* %1258)
  store i8* %1259, i8** %11, align 8
  %1260 = load i8*, i8** %7, align 8
  store i8* %1260, i8** %10, align 8
  br label %1261

1261:                                             ; preds = %1286, %1252
  %1262 = load i8*, i8** %10, align 8
  %1263 = load i8, i8* %1262, align 1
  %1264 = sext i8 %1263 to i32
  %1265 = icmp ne i32 %1264, 0
  br i1 %1265, label %1266, label %1289

1266:                                             ; preds = %1261
  %1267 = load i8*, i8** %10, align 8
  %1268 = load i8, i8* %1267, align 1
  %1269 = sext i8 %1268 to i32
  %1270 = icmp slt i32 %1269, 48
  br i1 %1270, label %1276, label %1271

1271:                                             ; preds = %1266
  %1272 = load i8*, i8** %10, align 8
  %1273 = load i8, i8* %1272, align 1
  %1274 = sext i8 %1273 to i32
  %1275 = icmp sgt i32 %1274, 57
  br i1 %1275, label %1276, label %1285

1276:                                             ; preds = %1271, %1266
  %1277 = load i8*, i8** @reading_filename, align 8
  %1278 = icmp ne i8* %1277, null
  br i1 %1278, label %1279, label %1283

1279:                                             ; preds = %1276
  %1280 = load i8*, i8** @reading_filename, align 8
  %1281 = load i32*, i32** @reading_lineno_ptr, align 8
  %1282 = load i32, i32* %1281, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, ...)*)(i8* %1280, i32 %1282, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.35.285, i64 0, i64 0))
  br label %1284

1283:                                             ; preds = %1276
  call void (i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.35.285, i64 0, i64 0))
  br label %1284

1284:                                             ; preds = %1283, %1279
  br label %1285

1285:                                             ; preds = %1284, %1271
  br label %1286

1286:                                             ; preds = %1285
  %1287 = load i8*, i8** %10, align 8
  %1288 = getelementptr inbounds i8, i8* %1287, i32 1
  store i8* %1288, i8** %10, align 8
  br label %1261

1289:                                             ; preds = %1261
  %1290 = load i8*, i8** %7, align 8
  %1291 = call i32 @atoi(i8* %1290) #9
  store i32 %1291, i32* %12, align 4
  %1292 = load i32, i32* %12, align 4
  %1293 = icmp eq i32 %1292, 0
  br i1 %1293, label %1294, label %1303

1294:                                             ; preds = %1289
  %1295 = load i8*, i8** @reading_filename, align 8
  %1296 = icmp ne i8* %1295, null
  br i1 %1296, label %1297, label %1301

1297:                                             ; preds = %1294
  %1298 = load i8*, i8** @reading_filename, align 8
  %1299 = load i32*, i32** @reading_lineno_ptr, align 8
  %1300 = load i32, i32* %1299, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, ...)*)(i8* %1298, i32 %1300, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.36.286, i64 0, i64 0))
  br label %1302

1301:                                             ; preds = %1294
  call void (i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.36.286, i64 0, i64 0))
  br label %1302

1302:                                             ; preds = %1301, %1297
  br label %1303

1303:                                             ; preds = %1302, %1289
  %1304 = load i8*, i8** %11, align 8
  store i8* %1304, i8** %10, align 8
  br label %1305

1305:                                             ; preds = %1313, %1303
  %1306 = call i8* (i8**, i32*, ...) bitcast (i8* (i8**, i32*)* @find_next_token to i8* (i8**, i32*, ...)*)(i8** %10, i32* %13)
  store i8* %1306, i8** %9, align 8
  %1307 = icmp ne i8* %1306, null
  br i1 %1307, label %1308, label %1314

1308:                                             ; preds = %1305
  %1309 = load i32, i32* %12, align 4
  %1310 = add i32 %1309, -1
  store i32 %1310, i32* %12, align 4
  %1311 = icmp eq i32 %1310, 0
  br i1 %1311, label %1312, label %1313

1312:                                             ; preds = %1308
  br label %1314

1313:                                             ; preds = %1308
  br label %1305

1314:                                             ; preds = %1312, %1305
  %1315 = load i32, i32* %12, align 4
  %1316 = icmp eq i32 %1315, 0
  br i1 %1316, label %1317, label %1322

1317:                                             ; preds = %1314
  %1318 = load i8*, i8** %5, align 8
  %1319 = load i8*, i8** %9, align 8
  %1320 = load i32, i32* %13, align 4
  %1321 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %1318, i8* %1319, i32 %1320)
  store i8* %1321, i8** %5, align 8
  br label %1322

1322:                                             ; preds = %1317, %1314
  %1323 = load i8*, i8** %7, align 8
  call void @free(i8* %1323) #10
  %1324 = load i8*, i8** %11, align 8
  call void @free(i8* %1324) #10
  br label %1687

1325:                                             ; preds = %4
  %1326 = load i8*, i8** %7, align 8
  %1327 = load i8*, i8** %8, align 8
  %1328 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %1326, i8* %1327)
  store i8* %1328, i8** %7, align 8
  store i32 0, i32* %12, align 4
  %1329 = load i8*, i8** %7, align 8
  store i8* %1329, i8** %10, align 8
  br label %1330

1330:                                             ; preds = %1333, %1325
  %1331 = call i8* (i8**, i32*, ...) bitcast (i8* (i8**, i32*)* @find_next_token to i8* (i8**, i32*, ...)*)(i8** %10, i32* null)
  %1332 = icmp ne i8* %1331, null
  br i1 %1332, label %1333, label %1336

1333:                                             ; preds = %1330
  %1334 = load i32, i32* %12, align 4
  %1335 = add i32 %1334, 1
  store i32 %1335, i32* %12, align 4
  br label %1330

1336:                                             ; preds = %1330
  %1337 = getelementptr inbounds [20 x i8], [20 x i8]* %45, i64 0, i64 0
  %1338 = load i32, i32* %12, align 4
  %1339 = call i32 (i8*, i8*, ...) @sprintf(i8* %1337, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37.287, i64 0, i64 0), i32 %1338) #10
  %1340 = load i8*, i8** %5, align 8
  %1341 = getelementptr inbounds [20 x i8], [20 x i8]* %45, i64 0, i64 0
  %1342 = getelementptr inbounds [20 x i8], [20 x i8]* %45, i64 0, i64 0
  %1343 = call i64 @strlen(i8* %1342) #9
  %1344 = call i8* (i8*, i8*, i64, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i64, ...)*)(i8* %1340, i8* %1341, i64 %1343)
  store i8* %1344, i8** %5, align 8
  %1345 = load i8*, i8** %7, align 8
  call void @free(i8* %1345) #10
  br label %1687

1346:                                             ; preds = %4
  store i32 0, i32* %15, align 4
  %1347 = load i8*, i8** %7, align 8
  store i8* %1347, i8** %9, align 8
  br label %1348

1348:                                             ; preds = %1384, %1346
  %1349 = load i8*, i8** %9, align 8
  %1350 = load i8*, i8** %8, align 8
  %1351 = icmp ult i8* %1349, %1350
  br i1 %1351, label %1352, label %1387

1352:                                             ; preds = %1348
  %1353 = load i8*, i8** %9, align 8
  %1354 = load i8, i8* %1353, align 1
  %1355 = sext i8 %1354 to i32
  %1356 = load i8, i8* %17, align 1
  %1357 = sext i8 %1356 to i32
  %1358 = icmp eq i32 %1355, %1357
  br i1 %1358, label %1359, label %1362

1359:                                             ; preds = %1352
  %1360 = load i32, i32* %15, align 4
  %1361 = add nsw i32 %1360, 1
  store i32 %1361, i32* %15, align 4
  br label %1383

1362:                                             ; preds = %1352
  %1363 = load i8*, i8** %9, align 8
  %1364 = load i8, i8* %1363, align 1
  %1365 = sext i8 %1364 to i32
  %1366 = load i8, i8* %16, align 1
  %1367 = sext i8 %1366 to i32
  %1368 = icmp eq i32 %1365, %1367
  br i1 %1368, label %1369, label %1372

1369:                                             ; preds = %1362
  %1370 = load i32, i32* %15, align 4
  %1371 = add nsw i32 %1370, -1
  store i32 %1371, i32* %15, align 4
  br label %1382

1372:                                             ; preds = %1362
  %1373 = load i8*, i8** %9, align 8
  %1374 = load i8, i8* %1373, align 1
  %1375 = sext i8 %1374 to i32
  %1376 = icmp eq i32 %1375, 44
  br i1 %1376, label %1377, label %1381

1377:                                             ; preds = %1372
  %1378 = load i32, i32* %15, align 4
  %1379 = icmp sle i32 %1378, 0
  br i1 %1379, label %1380, label %1381

1380:                                             ; preds = %1377
  br label %1387

1381:                                             ; preds = %1377, %1372
  br label %1382

1382:                                             ; preds = %1381, %1369
  br label %1383

1383:                                             ; preds = %1382, %1359
  br label %1384

1384:                                             ; preds = %1383
  %1385 = load i8*, i8** %9, align 8
  %1386 = getelementptr inbounds i8, i8* %1385, i32 1
  store i8* %1386, i8** %9, align 8
  br label %1348

1387:                                             ; preds = %1380, %1348
  %1388 = load i8*, i8** %9, align 8
  %1389 = load i8*, i8** %8, align 8
  %1390 = icmp eq i8* %1388, %1389
  br i1 %1390, label %1391, label %1400

1391:                                             ; preds = %1387
  %1392 = load i8*, i8** @reading_filename, align 8
  %1393 = icmp ne i8* %1392, null
  br i1 %1393, label %1394, label %1398

1394:                                             ; preds = %1391
  %1395 = load i8*, i8** @reading_filename, align 8
  %1396 = load i32*, i32** @reading_lineno_ptr, align 8
  %1397 = load i32, i32* %1396, align 4
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, i8*, ...)*)(i8* %1395, i32 %1397, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12.288, i64 0, i64 0))
  br label %1399

1398:                                             ; preds = %1391
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12.288, i64 0, i64 0))
  br label %1399

1399:                                             ; preds = %1398, %1394
  br label %1400

1400:                                             ; preds = %1399, %1387
  %1401 = load i8*, i8** %7, align 8
  %1402 = load i8*, i8** %9, align 8
  %1403 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %1401, i8* %1402)
  store i8* %1403, i8** %7, align 8
  %1404 = load i8*, i8** %9, align 8
  %1405 = getelementptr inbounds i8, i8* %1404, i64 1
  %1406 = load i8*, i8** %8, align 8
  %1407 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %1405, i8* %1406)
  store i8* %1407, i8** %9, align 8
  %1408 = load i8*, i8** %7, align 8
  %1409 = call i64 @strlen(i8* %1408) #9
  %1410 = trunc i64 %1409 to i32
  store i32 %1410, i32* %12, align 4
  %1411 = load i8*, i8** %9, align 8
  %1412 = load i8*, i8** %7, align 8
  %1413 = load i32, i32* %12, align 4
  %1414 = call i8* (i8*, i32, i8*, i32, ...) bitcast (i8* (i8*, i32, i8*, i32)* @sindex to i8* (i8*, i32, i8*, i32, ...)*)(i8* %1411, i32 0, i8* %1412, i32 %1413)
  %1415 = icmp ne i8* %1414, null
  br i1 %1415, label %1416, label %1421

1416:                                             ; preds = %1400
  %1417 = load i8*, i8** %5, align 8
  %1418 = load i8*, i8** %7, align 8
  %1419 = load i32, i32* %12, align 4
  %1420 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %1417, i8* %1418, i32 %1419)
  store i8* %1420, i8** %5, align 8
  br label %1421

1421:                                             ; preds = %1416, %1400
  %1422 = load i8*, i8** %9, align 8
  call void @free(i8* %1422) #10
  %1423 = load i8*, i8** %7, align 8
  call void @free(i8* %1423) #10
  br label %1687

1424:                                             ; preds = %4, %4
  store i32 0, i32* %15, align 4
  %1425 = load i8*, i8** %7, align 8
  store i8* %1425, i8** %9, align 8
  br label %1426

1426:                                             ; preds = %1462, %1424
  %1427 = load i8*, i8** %9, align 8
  %1428 = load i8*, i8** %8, align 8
  %1429 = icmp ult i8* %1427, %1428
  br i1 %1429, label %1430, label %1465

1430:                                             ; preds = %1426
  %1431 = load i8*, i8** %9, align 8
  %1432 = load i8, i8* %1431, align 1
  %1433 = sext i8 %1432 to i32
  %1434 = load i8, i8* %17, align 1
  %1435 = sext i8 %1434 to i32
  %1436 = icmp eq i32 %1433, %1435
  br i1 %1436, label %1437, label %1440

1437:                                             ; preds = %1430
  %1438 = load i32, i32* %15, align 4
  %1439 = add nsw i32 %1438, 1
  store i32 %1439, i32* %15, align 4
  br label %1461

1440:                                             ; preds = %1430
  %1441 = load i8*, i8** %9, align 8
  %1442 = load i8, i8* %1441, align 1
  %1443 = sext i8 %1442 to i32
  %1444 = load i8, i8* %16, align 1
  %1445 = sext i8 %1444 to i32
  %1446 = icmp eq i32 %1443, %1445
  br i1 %1446, label %1447, label %1450

1447:                                             ; preds = %1440
  %1448 = load i32, i32* %15, align 4
  %1449 = add nsw i32 %1448, -1
  store i32 %1449, i32* %15, align 4
  br label %1460

1450:                                             ; preds = %1440
  %1451 = load i8*, i8** %9, align 8
  %1452 = load i8, i8* %1451, align 1
  %1453 = sext i8 %1452 to i32
  %1454 = icmp eq i32 %1453, 44
  br i1 %1454, label %1455, label %1459

1455:                                             ; preds = %1450
  %1456 = load i32, i32* %15, align 4
  %1457 = icmp sle i32 %1456, 0
  br i1 %1457, label %1458, label %1459

1458:                                             ; preds = %1455
  br label %1465

1459:                                             ; preds = %1455, %1450
  br label %1460

1460:                                             ; preds = %1459, %1447
  br label %1461

1461:                                             ; preds = %1460, %1437
  br label %1462

1462:                                             ; preds = %1461
  %1463 = load i8*, i8** %9, align 8
  %1464 = getelementptr inbounds i8, i8* %1463, i32 1
  store i8* %1464, i8** %9, align 8
  br label %1426

1465:                                             ; preds = %1458, %1426
  %1466 = load i8*, i8** %9, align 8
  %1467 = load i8*, i8** %8, align 8
  %1468 = icmp eq i8* %1466, %1467
  br i1 %1468, label %1469, label %1486

1469:                                             ; preds = %1465
  %1470 = load i8*, i8** @reading_filename, align 8
  %1471 = icmp ne i8* %1470, null
  br i1 %1471, label %1472, label %1480

1472:                                             ; preds = %1469
  %1473 = load i8*, i8** @reading_filename, align 8
  %1474 = load i32*, i32** @reading_lineno_ptr, align 8
  %1475 = load i32, i32* %1474, align 4
  %1476 = load i32, i32* %6, align 4
  %1477 = icmp eq i32 %1476, 1
  %1478 = zext i1 %1477 to i64
  %1479 = select i1 %1477, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.289, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.290, i64 0, i64 0)
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, i8*, ...)*)(i8* %1473, i32 %1475, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* %1479)
  br label %1485

1480:                                             ; preds = %1469
  %1481 = load i32, i32* %6, align 4
  %1482 = icmp eq i32 %1481, 1
  %1483 = zext i1 %1482 to i64
  %1484 = select i1 %1482, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.289, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.290, i64 0, i64 0)
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34.277, i64 0, i64 0), i8* %1484)
  br label %1485

1485:                                             ; preds = %1480, %1472
  br label %1486

1486:                                             ; preds = %1485, %1465
  %1487 = load i8*, i8** %7, align 8
  %1488 = load i8*, i8** %9, align 8
  %1489 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %1487, i8* %1488)
  store i8* %1489, i8** %7, align 8
  %1490 = load i8*, i8** %7, align 8
  %1491 = call i64 @strlen(i8* %1490) #9
  %1492 = trunc i64 %1491 to i32
  store i32 %1492, i32* %12, align 4
  %1493 = load i8*, i8** %9, align 8
  %1494 = getelementptr inbounds i8, i8* %1493, i64 1
  %1495 = load i8*, i8** %8, align 8
  %1496 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %1494, i8* %1495)
  store i8* %1496, i8** %10, align 8
  %1497 = load i8*, i8** %10, align 8
  store i8* %1497, i8** %11, align 8
  br label %1498

1498:                                             ; preds = %1521, %1486
  %1499 = call i8* (i8**, i32*, ...) bitcast (i8* (i8**, i32*)* @find_next_token to i8* (i8**, i32*, ...)*)(i8** %11, i32* %13)
  store i8* %1499, i8** %9, align 8
  %1500 = icmp ne i8* %1499, null
  br i1 %1500, label %1501, label %1524

1501:                                             ; preds = %1498
  %1502 = load i32, i32* %6, align 4
  %1503 = icmp eq i32 %1502, 2
  br i1 %1503, label %1504, label %1509

1504:                                             ; preds = %1501
  %1505 = load i8*, i8** %5, align 8
  %1506 = load i8*, i8** %7, align 8
  %1507 = load i32, i32* %12, align 4
  %1508 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %1505, i8* %1506, i32 %1507)
  store i8* %1508, i8** %5, align 8
  br label %1509

1509:                                             ; preds = %1504, %1501
  %1510 = load i8*, i8** %5, align 8
  %1511 = load i8*, i8** %9, align 8
  %1512 = load i32, i32* %13, align 4
  %1513 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %1510, i8* %1511, i32 %1512)
  store i8* %1513, i8** %5, align 8
  %1514 = load i32, i32* %6, align 4
  %1515 = icmp eq i32 %1514, 1
  br i1 %1515, label %1516, label %1521

1516:                                             ; preds = %1509
  %1517 = load i8*, i8** %5, align 8
  %1518 = load i8*, i8** %7, align 8
  %1519 = load i32, i32* %12, align 4
  %1520 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %1517, i8* %1518, i32 %1519)
  store i8* %1520, i8** %5, align 8
  br label %1521

1521:                                             ; preds = %1516, %1509
  %1522 = load i8*, i8** %5, align 8
  %1523 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %1522, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.262, i64 0, i64 0), i32 1)
  store i8* %1523, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %1498

1524:                                             ; preds = %1498
  %1525 = load i32, i32* %14, align 4
  %1526 = icmp ne i32 %1525, 0
  br i1 %1526, label %1527, label %1530

1527:                                             ; preds = %1524
  %1528 = load i8*, i8** %5, align 8
  %1529 = getelementptr inbounds i8, i8* %1528, i32 -1
  store i8* %1529, i8** %5, align 8
  br label %1530

1530:                                             ; preds = %1527, %1524
  %1531 = load i8*, i8** %10, align 8
  call void @free(i8* %1531) #10
  %1532 = load i8*, i8** %7, align 8
  call void @free(i8* %1532) #10
  br label %1687

1533:                                             ; preds = %4, %4
  %1534 = load i8*, i8** %7, align 8
  %1535 = load i8*, i8** %8, align 8
  %1536 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %1534, i8* %1535)
  store i8* %1536, i8** %7, align 8
  %1537 = load i8*, i8** %7, align 8
  store i8* %1537, i8** %11, align 8
  br label %1538

1538:                                             ; preds = %1595, %1533
  %1539 = call i8* (i8**, i32*, ...) bitcast (i8* (i8**, i32*)* @find_next_token to i8* (i8**, i32*, ...)*)(i8** %11, i32* %13)
  store i8* %1539, i8** %10, align 8
  %1540 = icmp ne i8* %1539, null
  br i1 %1540, label %1541, label %1598

1541:                                             ; preds = %1538
  %1542 = load i8*, i8** %10, align 8
  %1543 = load i32, i32* %13, align 4
  %1544 = zext i32 %1543 to i64
  %1545 = getelementptr inbounds i8, i8* %1542, i64 %1544
  store i8* %1545, i8** %9, align 8
  br label %1546

1546:                                             ; preds = %1561, %1541
  %1547 = load i8*, i8** %9, align 8
  %1548 = load i8*, i8** %10, align 8
  %1549 = icmp uge i8* %1547, %1548
  br i1 %1549, label %1550, label %1559

1550:                                             ; preds = %1546
  %1551 = load i8*, i8** %9, align 8
  %1552 = load i8, i8* %1551, align 1
  %1553 = sext i8 %1552 to i32
  %1554 = load i32, i32* %6, align 4
  %1555 = icmp eq i32 %1554, 3
  %1556 = zext i1 %1555 to i64
  %1557 = select i1 %1555, i32 47, i32 46
  %1558 = icmp ne i32 %1553, %1557
  br label %1559

1559:                                             ; preds = %1550, %1546
  %1560 = phi i1 [ false, %1546 ], [ %1558, %1550 ]
  br i1 %1560, label %1561, label %1564

1561:                                             ; preds = %1559
  %1562 = load i8*, i8** %9, align 8
  %1563 = getelementptr inbounds i8, i8* %1562, i32 -1
  store i8* %1563, i8** %9, align 8
  br label %1546

1564:                                             ; preds = %1559
  %1565 = load i8*, i8** %9, align 8
  %1566 = load i8*, i8** %10, align 8
  %1567 = icmp uge i8* %1565, %1566
  br i1 %1567, label %1568, label %1583

1568:                                             ; preds = %1564
  %1569 = load i32, i32* %6, align 4
  %1570 = icmp eq i32 %1569, 3
  br i1 %1570, label %1571, label %1574

1571:                                             ; preds = %1568
  %1572 = load i8*, i8** %9, align 8
  %1573 = getelementptr inbounds i8, i8* %1572, i32 1
  store i8* %1573, i8** %9, align 8
  br label %1574

1574:                                             ; preds = %1571, %1568
  %1575 = load i8*, i8** %5, align 8
  %1576 = load i8*, i8** %10, align 8
  %1577 = load i8*, i8** %9, align 8
  %1578 = load i8*, i8** %10, align 8
  %1579 = ptrtoint i8* %1577 to i64
  %1580 = ptrtoint i8* %1578 to i64
  %1581 = sub i64 %1579, %1580
  %1582 = call i8* (i8*, i8*, i64, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i64, ...)*)(i8* %1575, i8* %1576, i64 %1581)
  store i8* %1582, i8** %5, align 8
  br label %1595

1583:                                             ; preds = %1564
  %1584 = load i32, i32* %6, align 4
  %1585 = icmp eq i32 %1584, 3
  br i1 %1585, label %1586, label %1589

1586:                                             ; preds = %1583
  %1587 = load i8*, i8** %5, align 8
  %1588 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %1587, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38.291, i64 0, i64 0), i32 2)
  store i8* %1588, i8** %5, align 8
  br label %1594

1589:                                             ; preds = %1583
  %1590 = load i8*, i8** %5, align 8
  %1591 = load i8*, i8** %10, align 8
  %1592 = load i32, i32* %13, align 4
  %1593 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %1590, i8* %1591, i32 %1592)
  store i8* %1593, i8** %5, align 8
  br label %1594

1594:                                             ; preds = %1589, %1586
  br label %1595

1595:                                             ; preds = %1594, %1574
  %1596 = load i8*, i8** %5, align 8
  %1597 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %1596, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.262, i64 0, i64 0), i32 1)
  store i8* %1597, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %1538

1598:                                             ; preds = %1538
  %1599 = load i32, i32* %14, align 4
  %1600 = icmp ne i32 %1599, 0
  br i1 %1600, label %1601, label %1604

1601:                                             ; preds = %1598
  %1602 = load i8*, i8** %5, align 8
  %1603 = getelementptr inbounds i8, i8* %1602, i32 -1
  store i8* %1603, i8** %5, align 8
  br label %1604

1604:                                             ; preds = %1601, %1598
  %1605 = load i8*, i8** %7, align 8
  call void @free(i8* %1605) #10
  br label %1687

1606:                                             ; preds = %4, %4
  %1607 = load i8*, i8** %7, align 8
  %1608 = load i8*, i8** %8, align 8
  %1609 = call i8* (i8*, i8*, ...) bitcast (i8* (i8*, i8*)* @expand_argument to i8* (i8*, i8*, ...)*)(i8* %1607, i8* %1608)
  store i8* %1609, i8** %7, align 8
  %1610 = load i8*, i8** %7, align 8
  store i8* %1610, i8** %11, align 8
  br label %1611

1611:                                             ; preds = %1678, %1606
  %1612 = call i8* (i8**, i32*, ...) bitcast (i8* (i8**, i32*)* @find_next_token to i8* (i8**, i32*, ...)*)(i8** %11, i32* %13)
  store i8* %1612, i8** %10, align 8
  %1613 = icmp ne i8* %1612, null
  br i1 %1613, label %1614, label %1679

1614:                                             ; preds = %1611
  %1615 = load i8*, i8** %10, align 8
  %1616 = load i32, i32* %13, align 4
  %1617 = zext i32 %1616 to i64
  %1618 = getelementptr inbounds i8, i8* %1615, i64 %1617
  store i8* %1618, i8** %9, align 8
  br label %1619

1619:                                             ; preds = %1634, %1614
  %1620 = load i8*, i8** %9, align 8
  %1621 = load i8*, i8** %10, align 8
  %1622 = icmp uge i8* %1620, %1621
  br i1 %1622, label %1623, label %1632

1623:                                             ; preds = %1619
  %1624 = load i8*, i8** %9, align 8
  %1625 = load i8, i8* %1624, align 1
  %1626 = sext i8 %1625 to i32
  %1627 = load i32, i32* %6, align 4
  %1628 = icmp eq i32 %1627, 4
  %1629 = zext i1 %1628 to i64
  %1630 = select i1 %1628, i32 47, i32 46
  %1631 = icmp ne i32 %1626, %1630
  br label %1632

1632:                                             ; preds = %1623, %1619
  %1633 = phi i1 [ false, %1619 ], [ %1631, %1623 ]
  br i1 %1633, label %1634, label %1637

1634:                                             ; preds = %1632
  %1635 = load i8*, i8** %9, align 8
  %1636 = getelementptr inbounds i8, i8* %1635, i32 -1
  store i8* %1636, i8** %9, align 8
  br label %1619

1637:                                             ; preds = %1632
  %1638 = load i8*, i8** %9, align 8
  %1639 = load i8*, i8** %10, align 8
  %1640 = icmp uge i8* %1638, %1639
  br i1 %1640, label %1641, label %1659

1641:                                             ; preds = %1637
  %1642 = load i32, i32* %6, align 4
  %1643 = icmp eq i32 %1642, 4
  br i1 %1643, label %1644, label %1647

1644:                                             ; preds = %1641
  %1645 = load i8*, i8** %9, align 8
  %1646 = getelementptr inbounds i8, i8* %1645, i32 1
  store i8* %1646, i8** %9, align 8
  br label %1647

1647:                                             ; preds = %1644, %1641
  %1648 = load i8*, i8** %5, align 8
  %1649 = load i8*, i8** %9, align 8
  %1650 = load i32, i32* %13, align 4
  %1651 = zext i32 %1650 to i64
  %1652 = load i8*, i8** %9, align 8
  %1653 = load i8*, i8** %10, align 8
  %1654 = ptrtoint i8* %1652 to i64
  %1655 = ptrtoint i8* %1653 to i64
  %1656 = sub i64 %1654, %1655
  %1657 = sub nsw i64 %1651, %1656
  %1658 = call i8* (i8*, i8*, i64, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i64, ...)*)(i8* %1648, i8* %1649, i64 %1657)
  store i8* %1658, i8** %5, align 8
  br label %1668

1659:                                             ; preds = %1637
  %1660 = load i32, i32* %6, align 4
  %1661 = icmp eq i32 %1660, 4
  br i1 %1661, label %1662, label %1667

1662:                                             ; preds = %1659
  %1663 = load i8*, i8** %5, align 8
  %1664 = load i8*, i8** %10, align 8
  %1665 = load i32, i32* %13, align 4
  %1666 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %1663, i8* %1664, i32 %1665)
  store i8* %1666, i8** %5, align 8
  br label %1667

1667:                                             ; preds = %1662, %1659
  br label %1668

1668:                                             ; preds = %1667, %1647
  %1669 = load i32, i32* %6, align 4
  %1670 = icmp eq i32 %1669, 4
  br i1 %1670, label %1675, label %1671

1671:                                             ; preds = %1668
  %1672 = load i8*, i8** %9, align 8
  %1673 = load i8*, i8** %10, align 8
  %1674 = icmp uge i8* %1672, %1673
  br i1 %1674, label %1675, label %1678

1675:                                             ; preds = %1671, %1668
  %1676 = load i8*, i8** %5, align 8
  %1677 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @variable_buffer_output to i8* (i8*, i8*, i32, ...)*)(i8* %1676, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.262, i64 0, i64 0), i32 1)
  store i8* %1677, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %1678

1678:                                             ; preds = %1675, %1671
  br label %1611

1679:                                             ; preds = %1611
  %1680 = load i32, i32* %14, align 4
  %1681 = icmp ne i32 %1680, 0
  br i1 %1681, label %1682, label %1685

1682:                                             ; preds = %1679
  %1683 = load i8*, i8** %5, align 8
  %1684 = getelementptr inbounds i8, i8* %1683, i32 -1
  store i8* %1684, i8** %5, align 8
  br label %1685

1685:                                             ; preds = %1682, %1679
  %1686 = load i8*, i8** %7, align 8
  call void @free(i8* %1686) #10
  br label %1687

1687:                                             ; preds = %1685, %1604, %1530, %1421, %1336, %1322, %1196, %1157, %1035, %1033, %1009, %883, %770, %530, %358, %250, %205, %84, %65
  %1688 = load i8*, i8** %5, align 8
  ret i8* %1688
}

; Function Attrs: nounwind
declare dso_local i32 @pipe(i32*) #2

; Function Attrs: nounwind
declare dso_local i32 @fork() #2

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: noinline nounwind uwtable
define internal i8* @string_glob(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.nameseq*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.nameseq*, align 8
  store i8* %0, i8** %2, align 8
  %8 = call %struct.nameseq* (i8**, i32, i64, ...) bitcast (%struct.nameseq* (i8**, i32, i32)* @parse_file_seq to %struct.nameseq* (i8**, i32, i64, ...)*)(i8** %2, i32 0, i64 16)
  %9 = call %struct.nameseq* (%struct.nameseq*, i64, ...) bitcast (%struct.nameseq* (%struct.nameseq*, i32)* @multi_glob to %struct.nameseq* (%struct.nameseq*, i64, ...)*)(%struct.nameseq* %8, i64 16)
  store %struct.nameseq* %9, %struct.nameseq** %3, align 8
  %10 = load i8*, i8** @string_glob.result, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %1
  store i32 100, i32* @string_glob.length, align 4
  %13 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 100)
  store i8* %13, i8** @string_glob.result, align 8
  br label %14

14:                                               ; preds = %12, %1
  store i32 0, i32* %4, align 4
  br label %15

15:                                               ; preds = %66, %14
  %16 = load %struct.nameseq*, %struct.nameseq** %3, align 8
  %17 = icmp ne %struct.nameseq* %16, null
  br i1 %17, label %18, label %68

18:                                               ; preds = %15
  %19 = load %struct.nameseq*, %struct.nameseq** %3, align 8
  %20 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %19, i32 0, i32 1
  %21 = load i8*, i8** %20, align 8
  store i8* %21, i8** %5, align 8
  %22 = load i8*, i8** %5, align 8
  %23 = call i64 @strlen(i8* %22) #9
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %6, align 4
  %25 = load %struct.nameseq*, %struct.nameseq** %3, align 8
  %26 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %25, i32 0, i32 0
  %27 = load %struct.nameseq*, %struct.nameseq** %26, align 8
  store %struct.nameseq* %27, %struct.nameseq** %7, align 8
  %28 = load %struct.nameseq*, %struct.nameseq** %3, align 8
  %29 = bitcast %struct.nameseq* %28 to i8*
  call void @free(i8* %29) #10
  %30 = load %struct.nameseq*, %struct.nameseq** %7, align 8
  store %struct.nameseq* %30, %struct.nameseq** %3, align 8
  %31 = load i8*, i8** %5, align 8
  %32 = call i32 (i8*, ...) bitcast (i32 (i8*)* @file_exists_p to i32 (i8*, ...)*)(i8* %31)
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %66

34:                                               ; preds = %18
  %35 = load i32, i32* %4, align 4
  %36 = load i32, i32* %6, align 4
  %37 = add i32 %35, %36
  %38 = add i32 %37, 1
  %39 = load i32, i32* @string_glob.length, align 4
  %40 = icmp ugt i32 %38, %39
  br i1 %40, label %41, label %50

41:                                               ; preds = %34
  %42 = load i32, i32* %6, align 4
  %43 = add i32 %42, 1
  %44 = mul i32 %43, 2
  %45 = load i32, i32* @string_glob.length, align 4
  %46 = add i32 %45, %44
  store i32 %46, i32* @string_glob.length, align 4
  %47 = load i8*, i8** @string_glob.result, align 8
  %48 = load i32, i32* @string_glob.length, align 4
  %49 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i32, ...)*)(i8* %47, i32 %48)
  store i8* %49, i8** @string_glob.result, align 8
  br label %50

50:                                               ; preds = %41, %34
  %51 = load i8*, i8** @string_glob.result, align 8
  %52 = load i32, i32* %4, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %51, i64 %53
  %55 = load i8*, i8** %5, align 8
  %56 = load i32, i32* %6, align 4
  %57 = zext i32 %56 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %55, i64 %57, i1 false)
  %58 = load i32, i32* %6, align 4
  %59 = load i32, i32* %4, align 4
  %60 = add i32 %59, %58
  store i32 %60, i32* %4, align 4
  %61 = load i8*, i8** @string_glob.result, align 8
  %62 = load i32, i32* %4, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %4, align 4
  %64 = zext i32 %62 to i64
  %65 = getelementptr inbounds i8, i8* %61, i64 %64
  store i8 32, i8* %65, align 1
  br label %66

66:                                               ; preds = %50, %18
  %67 = load i8*, i8** %5, align 8
  call void @free(i8* %67) #10
  br label %15

68:                                               ; preds = %15
  %69 = load i32, i32* %4, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %68
  %72 = load i8*, i8** @string_glob.result, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 0
  store i8 0, i8* %73, align 1
  br label %80

74:                                               ; preds = %68
  %75 = load i8*, i8** @string_glob.result, align 8
  %76 = load i32, i32* %4, align 4
  %77 = sub i32 %76, 1
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* %75, i64 %78
  store i8 0, i8* %79, align 1
  br label %80

80:                                               ; preds = %74, %71
  %81 = load i8*, i8** @string_glob.result, align 8
  ret i8* %81
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @try_implicit_rule(%struct.file* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.file*, align 8
  %5 = alloca i32, align 4
  store %struct.file* %0, %struct.file** %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load i32, i32* @debug_flag, align 4
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %9)
  %10 = load %struct.file*, %struct.file** %4, align 8
  %11 = getelementptr inbounds %struct.file, %struct.file* %10, i32 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.303, i64 0, i64 0), i8* %12)
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %15 = call i32 @fflush(%struct._IO_FILE* %14)
  br label %17

16:                                               ; preds = %2
  br label %17

17:                                               ; preds = %16, %8
  %18 = load %struct.file*, %struct.file** %4, align 8
  %19 = getelementptr inbounds %struct.file, %struct.file* %18, i32 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = call i32 (i8*, ...) bitcast (i32 (i8*)* @ar_name to i32 (i8*, ...)*)(i8* %20)
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %42

23:                                               ; preds = %17
  %24 = load i32, i32* @debug_flag, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %34

26:                                               ; preds = %23
  %27 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %27)
  %28 = load %struct.file*, %struct.file** %4, align 8
  %29 = getelementptr inbounds %struct.file, %struct.file* %28, i32 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.304, i64 0, i64 0), i8* %30)
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %33 = call i32 @fflush(%struct._IO_FILE* %32)
  br label %35

34:                                               ; preds = %23
  br label %35

35:                                               ; preds = %34, %26
  %36 = load %struct.file*, %struct.file** %4, align 8
  %37 = load i32, i32* %5, align 4
  %38 = call i32 @pattern_search(%struct.file* %36, i32 1, i32 %37, i32 0)
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %35
  store i32 1, i32* %3, align 4
  br label %46

41:                                               ; preds = %35
  br label %42

42:                                               ; preds = %41, %17
  %43 = load %struct.file*, %struct.file** %4, align 8
  %44 = load i32, i32* %5, align 4
  %45 = call i32 @pattern_search(%struct.file* %43, i32 0, i32 %44, i32 0)
  store i32 %45, i32* %3, align 4
  br label %46

46:                                               ; preds = %42, %40
  %47 = load i32, i32* %3, align 4
  ret i32 %47
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @pattern_search(%struct.file* %0, i32 %1, i32 %2, i32 %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.file*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca %struct.file*, align 8
  %14 = alloca %struct.file**, align 8
  %15 = alloca i8**, align 8
  %16 = alloca i8**, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  %21 = alloca %struct.rule**, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca %struct.rule*, align 8
  %30 = alloca %struct.dep*, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i8*, align 8
  %35 = alloca i8*, align 8
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca %struct.file*, align 8
  %41 = alloca i8*, align 8
  %42 = alloca %struct.file*, align 8
  %43 = alloca %struct.file*, align 8
  %44 = alloca %struct.dep*, align 8
  store %struct.file* %0, %struct.file** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  %45 = load i32, i32* %7, align 4
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %4
  %48 = load %struct.file*, %struct.file** %6, align 8
  %49 = getelementptr inbounds %struct.file, %struct.file* %48, i32 0, i32 1
  %50 = load i8*, i8** %49, align 8
  %51 = call i8* @strchr(i8* %50, i32 40) #9
  br label %56

52:                                               ; preds = %4
  %53 = load %struct.file*, %struct.file** %6, align 8
  %54 = getelementptr inbounds %struct.file, %struct.file* %53, i32 0, i32 1
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %52, %47
  %57 = phi i8* [ %51, %47 ], [ %55, %52 ]
  store i8* %57, i8** %10, align 8
  %58 = load i8*, i8** %10, align 8
  %59 = call i64 @strlen(i8* %58) #9
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* %11, align 4
  store %struct.file* null, %struct.file** %13, align 8
  %61 = load i32, i32* @max_pattern_deps, align 4
  %62 = zext i32 %61 to i64
  %63 = mul i64 %62, 8
  %64 = alloca i8, i64 %63, align 16
  %65 = bitcast i8* %64 to %struct.file**
  store %struct.file** %65, %struct.file*** %14, align 8
  %66 = load i32, i32* @max_pattern_deps, align 4
  %67 = zext i32 %66 to i64
  %68 = mul i64 %67, 8
  %69 = alloca i8, i64 %68, align 16
  %70 = bitcast i8* %69 to i8**
  store i8** %70, i8*** %15, align 8
  %71 = load i32, i32* @max_pattern_deps, align 4
  %72 = zext i32 %71 to i64
  %73 = mul i64 %72, 8
  %74 = alloca i8, i64 %73, align 16
  %75 = bitcast i8* %74 to i8**
  store i8** %75, i8*** %16, align 8
  %76 = load i32, i32* %11, align 4
  %77 = load i32, i32* @max_pattern_dep_length, align 4
  %78 = add i32 %76, %77
  %79 = zext i32 %78 to i64
  %80 = alloca i8, i64 %79, align 16
  store i8* %80, i8** %18, align 8
  %81 = load i32, i32* @num_pattern_rules, align 4
  %82 = zext i32 %81 to i64
  %83 = mul i64 %82, 8
  %84 = alloca i8, i64 %83, align 16
  %85 = bitcast i8* %84 to %struct.rule**
  store %struct.rule** %85, %struct.rule*** %21, align 8
  %86 = load i32, i32* @num_pattern_rules, align 4
  %87 = zext i32 %86 to i64
  %88 = mul i64 %87, 4
  %89 = alloca i8, i64 %88, align 16
  %90 = bitcast i8* %89 to i32*
  store i32* %90, i32** %23, align 8
  %91 = load i32, i32* @num_pattern_rules, align 4
  %92 = zext i32 %91 to i64
  %93 = mul i64 %92, 1
  %94 = alloca i8, i64 %93, align 16
  store i8* %94, i8** %24, align 8
  store i32 0, i32* %27, align 4
  %95 = load i32, i32* %7, align 4
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %101, label %97

97:                                               ; preds = %56
  %98 = load i8*, i8** %10, align 8
  %99 = call i32 (i8*, ...) bitcast (i32 (i8*)* @ar_name to i32 (i8*, ...)*)(i8* %98)
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %97, %56
  store i8* null, i8** %12, align 8
  br label %115

102:                                              ; preds = %97
  %103 = load i8*, i8** %10, align 8
  %104 = call i8* @strrchr(i8* %103, i32 47) #9
  store i8* %104, i8** %12, align 8
  %105 = load i8*, i8** %12, align 8
  %106 = icmp ne i8* %105, null
  br i1 %106, label %107, label %114

107:                                              ; preds = %102
  %108 = load i8*, i8** %12, align 8
  %109 = getelementptr inbounds i8, i8* %108, i64 1
  %110 = load i8, i8* %109, align 1
  %111 = sext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %107
  store i8* null, i8** %12, align 8
  br label %114

114:                                              ; preds = %113, %107, %102
  br label %115

115:                                              ; preds = %114, %101
  store i32 0, i32* %22, align 4
  %116 = load %struct.rule*, %struct.rule** @pattern_rules, align 8
  store %struct.rule* %116, %struct.rule** %29, align 8
  br label %117

117:                                              ; preds = %395, %115
  %118 = load %struct.rule*, %struct.rule** %29, align 8
  %119 = icmp ne %struct.rule* %118, null
  br i1 %119, label %120, label %399

120:                                              ; preds = %117
  store i32 0, i32* %32, align 4
  %121 = load %struct.rule*, %struct.rule** %29, align 8
  %122 = getelementptr inbounds %struct.rule, %struct.rule* %121, i32 0, i32 4
  %123 = load %struct.dep*, %struct.dep** %122, align 8
  %124 = icmp ne %struct.dep* %123, null
  br i1 %124, label %125, label %131

125:                                              ; preds = %120
  %126 = load %struct.rule*, %struct.rule** %29, align 8
  %127 = getelementptr inbounds %struct.rule, %struct.rule* %126, i32 0, i32 5
  %128 = load %struct.commands*, %struct.commands** %127, align 8
  %129 = icmp eq %struct.commands* %128, null
  br i1 %129, label %130, label %131

130:                                              ; preds = %125
  br label %395

131:                                              ; preds = %125, %120
  %132 = load %struct.rule*, %struct.rule** %29, align 8
  %133 = getelementptr inbounds %struct.rule, %struct.rule* %132, i32 0, i32 8
  %134 = load i8, i8* %133, align 2
  %135 = icmp ne i8 %134, 0
  br i1 %135, label %136, label %146

136:                                              ; preds = %131
  %137 = load i32, i32* @debug_flag, align 4
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %139, label %144

139:                                              ; preds = %136
  %140 = load i32, i32* %8, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %140)
  %141 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2.305, i64 0, i64 0), i32 0, i32 0)
  %142 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %143 = call i32 @fflush(%struct._IO_FILE* %142)
  br label %145

144:                                              ; preds = %136
  br label %145

145:                                              ; preds = %144, %139
  br label %395

146:                                              ; preds = %131
  store i32 0, i32* %28, align 4
  br label %147

147:                                              ; preds = %349, %146
  %148 = load %struct.rule*, %struct.rule** %29, align 8
  %149 = getelementptr inbounds %struct.rule, %struct.rule* %148, i32 0, i32 1
  %150 = load i8**, i8*** %149, align 8
  %151 = load i32, i32* %28, align 4
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds i8*, i8** %150, i64 %152
  %154 = load i8*, i8** %153, align 8
  %155 = icmp ne i8* %154, null
  br i1 %155, label %156, label %352

156:                                              ; preds = %147
  %157 = load %struct.rule*, %struct.rule** %29, align 8
  %158 = getelementptr inbounds %struct.rule, %struct.rule* %157, i32 0, i32 1
  %159 = load i8**, i8*** %158, align 8
  %160 = load i32, i32* %28, align 4
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds i8*, i8** %159, i64 %161
  %163 = load i8*, i8** %162, align 8
  store i8* %163, i8** %34, align 8
  %164 = load %struct.rule*, %struct.rule** %29, align 8
  %165 = getelementptr inbounds %struct.rule, %struct.rule* %164, i32 0, i32 3
  %166 = load i8**, i8*** %165, align 8
  %167 = load i32, i32* %28, align 4
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds i8*, i8** %166, i64 %168
  %170 = load i8*, i8** %169, align 8
  store i8* %170, i8** %35, align 8
  %171 = load i32, i32* %9, align 4
  %172 = icmp ugt i32 %171, 0
  br i1 %172, label %173, label %185

173:                                              ; preds = %156
  %174 = load i8*, i8** %34, align 8
  %175 = getelementptr inbounds i8, i8* %174, i64 1
  %176 = load i8, i8* %175, align 1
  %177 = sext i8 %176 to i32
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %185

179:                                              ; preds = %173
  %180 = load %struct.rule*, %struct.rule** %29, align 8
  %181 = getelementptr inbounds %struct.rule, %struct.rule* %180, i32 0, i32 6
  %182 = load i8, i8* %181, align 8
  %183 = icmp ne i8 %182, 0
  br i1 %183, label %185, label %184

184:                                              ; preds = %179
  br label %349

185:                                              ; preds = %179, %173, %156
  %186 = load %struct.rule*, %struct.rule** %29, align 8
  %187 = getelementptr inbounds %struct.rule, %struct.rule* %186, i32 0, i32 2
  %188 = load i32*, i32** %187, align 8
  %189 = load i32, i32* %28, align 4
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds i32, i32* %188, i64 %190
  %192 = load i32, i32* %191, align 4
  %193 = load i32, i32* %11, align 4
  %194 = icmp ugt i32 %192, %193
  br i1 %194, label %195, label %196

195:                                              ; preds = %185
  br label %349

196:                                              ; preds = %185
  %197 = load i8*, i8** %10, align 8
  %198 = load i8*, i8** %35, align 8
  %199 = load i8*, i8** %34, align 8
  %200 = ptrtoint i8* %198 to i64
  %201 = ptrtoint i8* %199 to i64
  %202 = sub i64 %200, %201
  %203 = sub nsw i64 %202, 1
  %204 = getelementptr inbounds i8, i8* %197, i64 %203
  store i8* %204, i8** %19, align 8
  %205 = load i32, i32* %11, align 4
  %206 = load %struct.rule*, %struct.rule** %29, align 8
  %207 = getelementptr inbounds %struct.rule, %struct.rule* %206, i32 0, i32 2
  %208 = load i32*, i32** %207, align 8
  %209 = load i32, i32* %28, align 4
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds i32, i32* %208, i64 %210
  %212 = load i32, i32* %211, align 4
  %213 = sub i32 %205, %212
  %214 = add i32 %213, 1
  store i32 %214, i32* %20, align 4
  %215 = load i8*, i8** %12, align 8
  %216 = icmp ne i8* %215, null
  br i1 %216, label %217, label %221

217:                                              ; preds = %196
  %218 = load i8*, i8** %34, align 8
  %219 = call i8* @strchr(i8* %218, i32 47) #9
  %220 = icmp eq i8* %219, null
  br label %221

221:                                              ; preds = %217, %196
  %222 = phi i1 [ false, %196 ], [ %220, %217 ]
  %223 = zext i1 %222 to i32
  store i32 %223, i32* %33, align 4
  %224 = load i32, i32* %33, align 4
  %225 = icmp ne i32 %224, 0
  br i1 %225, label %226, label %246

226:                                              ; preds = %221
  %227 = load i8*, i8** %12, align 8
  %228 = load i8*, i8** %10, align 8
  %229 = ptrtoint i8* %227 to i64
  %230 = ptrtoint i8* %228 to i64
  %231 = sub i64 %229, %230
  %232 = add nsw i64 %231, 1
  %233 = trunc i64 %232 to i32
  store i32 %233, i32* %36, align 4
  %234 = load i32, i32* %36, align 4
  %235 = load i32, i32* %20, align 4
  %236 = icmp ugt i32 %234, %235
  br i1 %236, label %237, label %238

237:                                              ; preds = %226
  br label %349

238:                                              ; preds = %226
  %239 = load i32, i32* %36, align 4
  %240 = load i32, i32* %20, align 4
  %241 = sub i32 %240, %239
  store i32 %241, i32* %20, align 4
  %242 = load i32, i32* %36, align 4
  %243 = load i8*, i8** %19, align 8
  %244 = zext i32 %242 to i64
  %245 = getelementptr inbounds i8, i8* %243, i64 %244
  store i8* %245, i8** %19, align 8
  br label %246

246:                                              ; preds = %238, %221
  %247 = load i32, i32* %33, align 4
  %248 = icmp ne i32 %247, 0
  br i1 %248, label %249, label %268

249:                                              ; preds = %246
  %250 = load i8*, i8** %19, align 8
  %251 = load i8*, i8** %12, align 8
  %252 = getelementptr inbounds i8, i8* %251, i64 1
  %253 = icmp ugt i8* %250, %252
  br i1 %253, label %254, label %267

254:                                              ; preds = %249
  %255 = load i8*, i8** %34, align 8
  %256 = load i8*, i8** %12, align 8
  %257 = getelementptr inbounds i8, i8* %256, i64 1
  %258 = load i8*, i8** %19, align 8
  %259 = load i8*, i8** %12, align 8
  %260 = ptrtoint i8* %258 to i64
  %261 = ptrtoint i8* %259 to i64
  %262 = sub i64 %260, %261
  %263 = sub nsw i64 %262, 1
  %264 = call i32 @strncmp(i8* %255, i8* %257, i64 %263) #9
  %265 = icmp ne i32 %264, 0
  br i1 %265, label %266, label %267

266:                                              ; preds = %254
  br label %349

267:                                              ; preds = %254, %249
  br label %284

268:                                              ; preds = %246
  %269 = load i8*, i8** %19, align 8
  %270 = load i8*, i8** %10, align 8
  %271 = icmp ugt i8* %269, %270
  br i1 %271, label %272, label %283

272:                                              ; preds = %268
  %273 = load i8*, i8** %34, align 8
  %274 = load i8*, i8** %10, align 8
  %275 = load i8*, i8** %19, align 8
  %276 = load i8*, i8** %10, align 8
  %277 = ptrtoint i8* %275 to i64
  %278 = ptrtoint i8* %276 to i64
  %279 = sub i64 %277, %278
  %280 = call i32 @strncmp(i8* %273, i8* %274, i64 %279) #9
  %281 = icmp ne i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %272
  br label %349

283:                                              ; preds = %272, %268
  br label %284

284:                                              ; preds = %283, %267
  %285 = load i8*, i8** %35, align 8
  %286 = load i8, i8* %285, align 1
  %287 = sext i8 %286 to i32
  %288 = load i8*, i8** %19, align 8
  %289 = load i32, i32* %20, align 4
  %290 = zext i32 %289 to i64
  %291 = getelementptr inbounds i8, i8* %288, i64 %290
  %292 = load i8, i8* %291, align 1
  %293 = sext i8 %292 to i32
  %294 = icmp ne i32 %287, %293
  br i1 %294, label %340, label %295

295:                                              ; preds = %284
  %296 = load i8*, i8** %35, align 8
  %297 = load i8, i8* %296, align 1
  %298 = sext i8 %297 to i32
  %299 = icmp ne i32 %298, 0
  br i1 %299, label %300, label %341

300:                                              ; preds = %295
  %301 = load i8*, i8** %35, align 8
  %302 = getelementptr inbounds i8, i8* %301, i64 1
  %303 = load i8*, i8** %19, align 8
  %304 = load i32, i32* %20, align 4
  %305 = add i32 %304, 1
  %306 = zext i32 %305 to i64
  %307 = getelementptr inbounds i8, i8* %303, i64 %306
  %308 = icmp eq i8* %302, %307
  br i1 %308, label %341, label %309

309:                                              ; preds = %300
  %310 = load i8*, i8** %35, align 8
  %311 = getelementptr inbounds i8, i8* %310, i64 1
  %312 = load i8, i8* %311, align 1
  %313 = sext i8 %312 to i32
  %314 = load i8*, i8** %19, align 8
  %315 = load i32, i32* %20, align 4
  %316 = add i32 %315, 1
  %317 = zext i32 %316 to i64
  %318 = getelementptr inbounds i8, i8* %314, i64 %317
  %319 = load i8, i8* %318, align 1
  %320 = sext i8 %319 to i32
  %321 = icmp eq i32 %313, %320
  br i1 %321, label %322, label %340

322:                                              ; preds = %309
  %323 = load i8*, i8** %35, align 8
  %324 = getelementptr inbounds i8, i8* %323, i64 1
  %325 = load i8, i8* %324, align 1
  %326 = sext i8 %325 to i32
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %341, label %328

328:                                              ; preds = %322
  %329 = load i8*, i8** %35, align 8
  %330 = getelementptr inbounds i8, i8* %329, i64 1
  %331 = getelementptr inbounds i8, i8* %330, i64 1
  %332 = load i8*, i8** %19, align 8
  %333 = load i32, i32* %20, align 4
  %334 = add i32 %333, 1
  %335 = zext i32 %334 to i64
  %336 = getelementptr inbounds i8, i8* %332, i64 %335
  %337 = getelementptr inbounds i8, i8* %336, i64 1
  %338 = call i32 @strcmp(i8* %331, i8* %337) #9
  %339 = icmp ne i32 %338, 0
  br i1 %339, label %340, label %341

340:                                              ; preds = %328, %309, %284
  br label %349

341:                                              ; preds = %328, %322, %300, %295
  %342 = load i8*, i8** %34, align 8
  %343 = getelementptr inbounds i8, i8* %342, i64 1
  %344 = load i8, i8* %343, align 1
  %345 = sext i8 %344 to i32
  %346 = icmp ne i32 %345, 0
  br i1 %346, label %347, label %348

347:                                              ; preds = %341
  store i32 1, i32* %32, align 4
  br label %348

348:                                              ; preds = %347, %341
  br label %352

349:                                              ; preds = %340, %282, %266, %237, %195, %184
  %350 = load i32, i32* %28, align 4
  %351 = add i32 %350, 1
  store i32 %351, i32* %28, align 4
  br label %147

352:                                              ; preds = %348, %147
  %353 = load %struct.rule*, %struct.rule** %29, align 8
  %354 = getelementptr inbounds %struct.rule, %struct.rule* %353, i32 0, i32 1
  %355 = load i8**, i8*** %354, align 8
  %356 = load i32, i32* %28, align 4
  %357 = zext i32 %356 to i64
  %358 = getelementptr inbounds i8*, i8** %355, i64 %357
  %359 = load i8*, i8** %358, align 8
  %360 = icmp eq i8* %359, null
  br i1 %360, label %361, label %362

361:                                              ; preds = %352
  br label %395

362:                                              ; preds = %352
  %363 = load i32, i32* %32, align 4
  %364 = load i32, i32* %27, align 4
  %365 = or i32 %364, %363
  store i32 %365, i32* %27, align 4
  %366 = load %struct.rule*, %struct.rule** %29, align 8
  %367 = getelementptr inbounds %struct.rule, %struct.rule* %366, i32 0, i32 4
  %368 = load %struct.dep*, %struct.dep** %367, align 8
  %369 = icmp eq %struct.dep* %368, null
  br i1 %369, label %370, label %376

370:                                              ; preds = %362
  %371 = load %struct.rule*, %struct.rule** %29, align 8
  %372 = getelementptr inbounds %struct.rule, %struct.rule* %371, i32 0, i32 5
  %373 = load %struct.commands*, %struct.commands** %372, align 8
  %374 = icmp eq %struct.commands* %373, null
  br i1 %374, label %375, label %376

375:                                              ; preds = %370
  br label %395

376:                                              ; preds = %370, %362
  %377 = load %struct.rule*, %struct.rule** %29, align 8
  %378 = load %struct.rule**, %struct.rule*** %21, align 8
  %379 = load i32, i32* %22, align 4
  %380 = zext i32 %379 to i64
  %381 = getelementptr inbounds %struct.rule*, %struct.rule** %378, i64 %380
  store %struct.rule* %377, %struct.rule** %381, align 8
  %382 = load i32, i32* %28, align 4
  %383 = load i32*, i32** %23, align 8
  %384 = load i32, i32* %22, align 4
  %385 = zext i32 %384 to i64
  %386 = getelementptr inbounds i32, i32* %383, i64 %385
  store i32 %382, i32* %386, align 4
  %387 = load i32, i32* %33, align 4
  %388 = trunc i32 %387 to i8
  %389 = load i8*, i8** %24, align 8
  %390 = load i32, i32* %22, align 4
  %391 = zext i32 %390 to i64
  %392 = getelementptr inbounds i8, i8* %389, i64 %391
  store i8 %388, i8* %392, align 1
  %393 = load i32, i32* %22, align 4
  %394 = add i32 %393, 1
  store i32 %394, i32* %22, align 4
  br label %395

395:                                              ; preds = %376, %375, %361, %145, %130
  %396 = load %struct.rule*, %struct.rule** %29, align 8
  %397 = getelementptr inbounds %struct.rule, %struct.rule* %396, i32 0, i32 0
  %398 = load %struct.rule*, %struct.rule** %397, align 8
  store %struct.rule* %398, %struct.rule** %29, align 8
  br label %117

399:                                              ; preds = %117
  %400 = load i32, i32* %27, align 4
  %401 = icmp ne i32 %400, 0
  br i1 %401, label %402, label %475

402:                                              ; preds = %399
  store i32 0, i32* %28, align 4
  br label %403

403:                                              ; preds = %471, %402
  %404 = load i32, i32* %28, align 4
  %405 = load i32, i32* %22, align 4
  %406 = icmp ult i32 %404, %405
  br i1 %406, label %407, label %474

407:                                              ; preds = %403
  %408 = load %struct.rule**, %struct.rule*** %21, align 8
  %409 = load i32, i32* %28, align 4
  %410 = zext i32 %409 to i64
  %411 = getelementptr inbounds %struct.rule*, %struct.rule** %408, i64 %410
  %412 = load %struct.rule*, %struct.rule** %411, align 8
  %413 = getelementptr inbounds %struct.rule, %struct.rule* %412, i32 0, i32 6
  %414 = load i8, i8* %413, align 8
  %415 = icmp ne i8 %414, 0
  br i1 %415, label %470, label %416

416:                                              ; preds = %407
  store i32 0, i32* %37, align 4
  br label %417

417:                                              ; preds = %448, %416
  %418 = load %struct.rule**, %struct.rule*** %21, align 8
  %419 = load i32, i32* %28, align 4
  %420 = zext i32 %419 to i64
  %421 = getelementptr inbounds %struct.rule*, %struct.rule** %418, i64 %420
  %422 = load %struct.rule*, %struct.rule** %421, align 8
  %423 = getelementptr inbounds %struct.rule, %struct.rule* %422, i32 0, i32 1
  %424 = load i8**, i8*** %423, align 8
  %425 = load i32, i32* %37, align 4
  %426 = zext i32 %425 to i64
  %427 = getelementptr inbounds i8*, i8** %424, i64 %426
  %428 = load i8*, i8** %427, align 8
  %429 = icmp ne i8* %428, null
  br i1 %429, label %430, label %451

430:                                              ; preds = %417
  %431 = load %struct.rule**, %struct.rule*** %21, align 8
  %432 = load i32, i32* %28, align 4
  %433 = zext i32 %432 to i64
  %434 = getelementptr inbounds %struct.rule*, %struct.rule** %431, i64 %433
  %435 = load %struct.rule*, %struct.rule** %434, align 8
  %436 = getelementptr inbounds %struct.rule, %struct.rule* %435, i32 0, i32 1
  %437 = load i8**, i8*** %436, align 8
  %438 = load i32, i32* %37, align 4
  %439 = zext i32 %438 to i64
  %440 = getelementptr inbounds i8*, i8** %437, i64 %439
  %441 = load i8*, i8** %440, align 8
  %442 = getelementptr inbounds i8, i8* %441, i64 1
  %443 = load i8, i8* %442, align 1
  %444 = sext i8 %443 to i32
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %446, label %447

446:                                              ; preds = %430
  br label %451

447:                                              ; preds = %430
  br label %448

448:                                              ; preds = %447
  %449 = load i32, i32* %37, align 4
  %450 = add i32 %449, 1
  store i32 %450, i32* %37, align 4
  br label %417

451:                                              ; preds = %446, %417
  %452 = load %struct.rule**, %struct.rule*** %21, align 8
  %453 = load i32, i32* %28, align 4
  %454 = zext i32 %453 to i64
  %455 = getelementptr inbounds %struct.rule*, %struct.rule** %452, i64 %454
  %456 = load %struct.rule*, %struct.rule** %455, align 8
  %457 = getelementptr inbounds %struct.rule, %struct.rule* %456, i32 0, i32 1
  %458 = load i8**, i8*** %457, align 8
  %459 = load i32, i32* %37, align 4
  %460 = zext i32 %459 to i64
  %461 = getelementptr inbounds i8*, i8** %458, i64 %460
  %462 = load i8*, i8** %461, align 8
  %463 = icmp ne i8* %462, null
  br i1 %463, label %464, label %469

464:                                              ; preds = %451
  %465 = load %struct.rule**, %struct.rule*** %21, align 8
  %466 = load i32, i32* %28, align 4
  %467 = zext i32 %466 to i64
  %468 = getelementptr inbounds %struct.rule*, %struct.rule** %465, i64 %467
  store %struct.rule* null, %struct.rule** %468, align 8
  br label %469

469:                                              ; preds = %464, %451
  br label %470

470:                                              ; preds = %469, %407
  br label %471

471:                                              ; preds = %470
  %472 = load i32, i32* %28, align 4
  %473 = add i32 %472, 1
  store i32 %473, i32* %28, align 4
  br label %403

474:                                              ; preds = %403
  br label %475

475:                                              ; preds = %474, %399
  store i32 0, i32* %26, align 4
  br label %476

476:                                              ; preds = %960, %475
  %477 = load i32, i32* %26, align 4
  %478 = load i32, i32* %26, align 4
  %479 = icmp ne i32 %478, 0
  %480 = xor i1 %479, true
  %481 = xor i1 %480, true
  %482 = zext i1 %481 to i32
  %483 = icmp eq i32 %477, %482
  br i1 %483, label %484, label %963

484:                                              ; preds = %476
  store i32 0, i32* %28, align 4
  br label %485

485:                                              ; preds = %951, %484
  %486 = load i32, i32* %28, align 4
  %487 = load i32, i32* %22, align 4
  %488 = icmp ult i32 %486, %487
  br i1 %488, label %489, label %954

489:                                              ; preds = %485
  %490 = load %struct.rule**, %struct.rule*** %21, align 8
  %491 = load i32, i32* %28, align 4
  %492 = zext i32 %491 to i64
  %493 = getelementptr inbounds %struct.rule*, %struct.rule** %490, i64 %492
  %494 = load %struct.rule*, %struct.rule** %493, align 8
  store %struct.rule* %494, %struct.rule** %29, align 8
  %495 = load %struct.rule*, %struct.rule** %29, align 8
  %496 = icmp eq %struct.rule* %495, null
  br i1 %496, label %497, label %498

497:                                              ; preds = %489
  br label %951

498:                                              ; preds = %489
  %499 = load i32, i32* %26, align 4
  %500 = icmp ne i32 %499, 0
  br i1 %500, label %501, label %508

501:                                              ; preds = %498
  %502 = load %struct.rule*, %struct.rule** %29, align 8
  %503 = getelementptr inbounds %struct.rule, %struct.rule* %502, i32 0, i32 6
  %504 = load i8, i8* %503, align 8
  %505 = sext i8 %504 to i32
  %506 = icmp ne i32 %505, 0
  br i1 %506, label %507, label %508

507:                                              ; preds = %501
  br label %951

508:                                              ; preds = %501, %498
  %509 = load %struct.rule*, %struct.rule** %29, align 8
  %510 = getelementptr inbounds %struct.rule, %struct.rule* %509, i32 0, i32 8
  store i8 1, i8* %510, align 2
  %511 = load i8*, i8** %10, align 8
  %512 = load %struct.rule*, %struct.rule** %29, align 8
  %513 = getelementptr inbounds %struct.rule, %struct.rule* %512, i32 0, i32 3
  %514 = load i8**, i8*** %513, align 8
  %515 = load i32*, i32** %23, align 8
  %516 = load i32, i32* %28, align 4
  %517 = zext i32 %516 to i64
  %518 = getelementptr inbounds i32, i32* %515, i64 %517
  %519 = load i32, i32* %518, align 4
  %520 = zext i32 %519 to i64
  %521 = getelementptr inbounds i8*, i8** %514, i64 %520
  %522 = load i8*, i8** %521, align 8
  %523 = load %struct.rule*, %struct.rule** %29, align 8
  %524 = getelementptr inbounds %struct.rule, %struct.rule* %523, i32 0, i32 1
  %525 = load i8**, i8*** %524, align 8
  %526 = load i32*, i32** %23, align 8
  %527 = load i32, i32* %28, align 4
  %528 = zext i32 %527 to i64
  %529 = getelementptr inbounds i32, i32* %526, i64 %528
  %530 = load i32, i32* %529, align 4
  %531 = zext i32 %530 to i64
  %532 = getelementptr inbounds i8*, i8** %525, i64 %531
  %533 = load i8*, i8** %532, align 8
  %534 = ptrtoint i8* %522 to i64
  %535 = ptrtoint i8* %533 to i64
  %536 = sub i64 %534, %535
  %537 = getelementptr inbounds i8, i8* %511, i64 %536
  %538 = getelementptr inbounds i8, i8* %537, i64 -1
  store i8* %538, i8** %19, align 8
  %539 = load i32, i32* %11, align 4
  %540 = load %struct.rule*, %struct.rule** %29, align 8
  %541 = getelementptr inbounds %struct.rule, %struct.rule* %540, i32 0, i32 2
  %542 = load i32*, i32** %541, align 8
  %543 = load i32*, i32** %23, align 8
  %544 = load i32, i32* %28, align 4
  %545 = zext i32 %544 to i64
  %546 = getelementptr inbounds i32, i32* %543, i64 %545
  %547 = load i32, i32* %546, align 4
  %548 = zext i32 %547 to i64
  %549 = getelementptr inbounds i32, i32* %542, i64 %548
  %550 = load i32, i32* %549, align 4
  %551 = sub i32 %539, %550
  %552 = add i32 %551, 1
  store i32 %552, i32* %20, align 4
  %553 = load i8*, i8** %12, align 8
  %554 = icmp ne i8* %553, null
  br i1 %554, label %555, label %569

555:                                              ; preds = %508
  %556 = load %struct.rule*, %struct.rule** %29, align 8
  %557 = getelementptr inbounds %struct.rule, %struct.rule* %556, i32 0, i32 1
  %558 = load i8**, i8*** %557, align 8
  %559 = load i32*, i32** %23, align 8
  %560 = load i32, i32* %28, align 4
  %561 = zext i32 %560 to i64
  %562 = getelementptr inbounds i32, i32* %559, i64 %561
  %563 = load i32, i32* %562, align 4
  %564 = zext i32 %563 to i64
  %565 = getelementptr inbounds i8*, i8** %558, i64 %564
  %566 = load i8*, i8** %565, align 8
  %567 = call i8* @strchr(i8* %566, i32 47) #9
  %568 = icmp eq i8* %567, null
  br label %569

569:                                              ; preds = %555, %508
  %570 = phi i1 [ false, %508 ], [ %568, %555 ]
  %571 = zext i1 %570 to i32
  store i32 %571, i32* %38, align 4
  %572 = load i32, i32* %38, align 4
  %573 = icmp ne i32 %572, 0
  br i1 %573, label %574, label %593

574:                                              ; preds = %569
  %575 = load i8*, i8** %12, align 8
  %576 = load i8*, i8** %10, align 8
  %577 = ptrtoint i8* %575 to i64
  %578 = ptrtoint i8* %576 to i64
  %579 = sub i64 %577, %578
  %580 = add nsw i64 %579, 1
  %581 = load i8*, i8** %19, align 8
  %582 = getelementptr inbounds i8, i8* %581, i64 %580
  store i8* %582, i8** %19, align 8
  %583 = load i8*, i8** %12, align 8
  %584 = load i8*, i8** %10, align 8
  %585 = ptrtoint i8* %583 to i64
  %586 = ptrtoint i8* %584 to i64
  %587 = sub i64 %585, %586
  %588 = add nsw i64 %587, 1
  %589 = load i32, i32* %20, align 4
  %590 = zext i32 %589 to i64
  %591 = sub nsw i64 %590, %588
  %592 = trunc i64 %591 to i32
  store i32 %592, i32* %20, align 4
  br label %593

593:                                              ; preds = %574, %569
  %594 = load i32, i32* @debug_flag, align 4
  %595 = icmp ne i32 %594, 0
  br i1 %595, label %596, label %603

596:                                              ; preds = %593
  %597 = load i32, i32* %8, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %597)
  %598 = load i32, i32* %20, align 4
  %599 = load i8*, i8** %19, align 8
  %600 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.306, i64 0, i64 0), i32 %598, i8* %599)
  %601 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %602 = call i32 @fflush(%struct._IO_FILE* %601)
  br label %604

603:                                              ; preds = %593
  br label %604

604:                                              ; preds = %603, %596
  store i32 0, i32* %17, align 4
  %605 = load %struct.rule*, %struct.rule** %29, align 8
  %606 = getelementptr inbounds %struct.rule, %struct.rule* %605, i32 0, i32 4
  %607 = load %struct.dep*, %struct.dep** %606, align 8
  store %struct.dep* %607, %struct.dep** %30, align 8
  br label %608

608:                                              ; preds = %895, %604
  %609 = load %struct.dep*, %struct.dep** %30, align 8
  %610 = icmp ne %struct.dep* %609, null
  br i1 %610, label %611, label %899

611:                                              ; preds = %608
  %612 = load %struct.dep*, %struct.dep** %30, align 8
  %613 = getelementptr inbounds %struct.dep, %struct.dep* %612, i32 0, i32 1
  %614 = load i8*, i8** %613, align 8
  %615 = icmp eq i8* %614, null
  br i1 %615, label %616, label %622

616:                                              ; preds = %611
  %617 = load %struct.dep*, %struct.dep** %30, align 8
  %618 = getelementptr inbounds %struct.dep, %struct.dep* %617, i32 0, i32 2
  %619 = load %struct.file*, %struct.file** %618, align 8
  %620 = getelementptr inbounds %struct.file, %struct.file* %619, i32 0, i32 1
  %621 = load i8*, i8** %620, align 8
  br label %626

622:                                              ; preds = %611
  %623 = load %struct.dep*, %struct.dep** %30, align 8
  %624 = getelementptr inbounds %struct.dep, %struct.dep* %623, i32 0, i32 1
  %625 = load i8*, i8** %624, align 8
  br label %626

626:                                              ; preds = %622, %616
  %627 = phi i8* [ %621, %616 ], [ %625, %622 ]
  %628 = call i8* @strchr(i8* %627, i32 37) #9
  store i8* %628, i8** %31, align 8
  %629 = load i8*, i8** %31, align 8
  %630 = icmp ne i8* %629, null
  br i1 %630, label %631, label %730

631:                                              ; preds = %626
  %632 = load i32, i32* %38, align 4
  %633 = icmp ne i32 %632, 0
  br i1 %633, label %634, label %646

634:                                              ; preds = %631
  %635 = load i8*, i8** %12, align 8
  %636 = load i8*, i8** %10, align 8
  %637 = ptrtoint i8* %635 to i64
  %638 = ptrtoint i8* %636 to i64
  %639 = sub i64 %637, %638
  %640 = add nsw i64 %639, 1
  %641 = trunc i64 %640 to i32
  store i32 %641, i32* %39, align 4
  %642 = load i8*, i8** %18, align 8
  %643 = load i8*, i8** %10, align 8
  %644 = load i32, i32* %39, align 4
  %645 = zext i32 %644 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %642, i8* align 1 %643, i64 %645, i1 false)
  br label %647

646:                                              ; preds = %631
  store i32 0, i32* %39, align 4
  br label %647

647:                                              ; preds = %646, %634
  %648 = load i8*, i8** %18, align 8
  %649 = load i32, i32* %39, align 4
  %650 = zext i32 %649 to i64
  %651 = getelementptr inbounds i8, i8* %648, i64 %650
  %652 = load %struct.dep*, %struct.dep** %30, align 8
  %653 = getelementptr inbounds %struct.dep, %struct.dep* %652, i32 0, i32 1
  %654 = load i8*, i8** %653, align 8
  %655 = icmp eq i8* %654, null
  br i1 %655, label %656, label %662

656:                                              ; preds = %647
  %657 = load %struct.dep*, %struct.dep** %30, align 8
  %658 = getelementptr inbounds %struct.dep, %struct.dep* %657, i32 0, i32 2
  %659 = load %struct.file*, %struct.file** %658, align 8
  %660 = getelementptr inbounds %struct.file, %struct.file* %659, i32 0, i32 1
  %661 = load i8*, i8** %660, align 8
  br label %666

662:                                              ; preds = %647
  %663 = load %struct.dep*, %struct.dep** %30, align 8
  %664 = getelementptr inbounds %struct.dep, %struct.dep* %663, i32 0, i32 1
  %665 = load i8*, i8** %664, align 8
  br label %666

666:                                              ; preds = %662, %656
  %667 = phi i8* [ %661, %656 ], [ %665, %662 ]
  %668 = load i8*, i8** %31, align 8
  %669 = load %struct.dep*, %struct.dep** %30, align 8
  %670 = getelementptr inbounds %struct.dep, %struct.dep* %669, i32 0, i32 1
  %671 = load i8*, i8** %670, align 8
  %672 = icmp eq i8* %671, null
  br i1 %672, label %673, label %679

673:                                              ; preds = %666
  %674 = load %struct.dep*, %struct.dep** %30, align 8
  %675 = getelementptr inbounds %struct.dep, %struct.dep* %674, i32 0, i32 2
  %676 = load %struct.file*, %struct.file** %675, align 8
  %677 = getelementptr inbounds %struct.file, %struct.file* %676, i32 0, i32 1
  %678 = load i8*, i8** %677, align 8
  br label %683

679:                                              ; preds = %666
  %680 = load %struct.dep*, %struct.dep** %30, align 8
  %681 = getelementptr inbounds %struct.dep, %struct.dep* %680, i32 0, i32 1
  %682 = load i8*, i8** %681, align 8
  br label %683

683:                                              ; preds = %679, %673
  %684 = phi i8* [ %678, %673 ], [ %682, %679 ]
  %685 = ptrtoint i8* %668 to i64
  %686 = ptrtoint i8* %684 to i64
  %687 = sub i64 %685, %686
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %651, i8* align 1 %667, i64 %687, i1 false)
  %688 = load i8*, i8** %31, align 8
  %689 = load %struct.dep*, %struct.dep** %30, align 8
  %690 = getelementptr inbounds %struct.dep, %struct.dep* %689, i32 0, i32 1
  %691 = load i8*, i8** %690, align 8
  %692 = icmp eq i8* %691, null
  br i1 %692, label %693, label %699

693:                                              ; preds = %683
  %694 = load %struct.dep*, %struct.dep** %30, align 8
  %695 = getelementptr inbounds %struct.dep, %struct.dep* %694, i32 0, i32 2
  %696 = load %struct.file*, %struct.file** %695, align 8
  %697 = getelementptr inbounds %struct.file, %struct.file* %696, i32 0, i32 1
  %698 = load i8*, i8** %697, align 8
  br label %703

699:                                              ; preds = %683
  %700 = load %struct.dep*, %struct.dep** %30, align 8
  %701 = getelementptr inbounds %struct.dep, %struct.dep* %700, i32 0, i32 1
  %702 = load i8*, i8** %701, align 8
  br label %703

703:                                              ; preds = %699, %693
  %704 = phi i8* [ %698, %693 ], [ %702, %699 ]
  %705 = ptrtoint i8* %688 to i64
  %706 = ptrtoint i8* %704 to i64
  %707 = sub i64 %705, %706
  %708 = load i32, i32* %39, align 4
  %709 = zext i32 %708 to i64
  %710 = add nsw i64 %709, %707
  %711 = trunc i64 %710 to i32
  store i32 %711, i32* %39, align 4
  %712 = load i8*, i8** %18, align 8
  %713 = load i32, i32* %39, align 4
  %714 = zext i32 %713 to i64
  %715 = getelementptr inbounds i8, i8* %712, i64 %714
  %716 = load i8*, i8** %19, align 8
  %717 = load i32, i32* %20, align 4
  %718 = zext i32 %717 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %715, i8* align 1 %716, i64 %718, i1 false)
  %719 = load i32, i32* %20, align 4
  %720 = load i32, i32* %39, align 4
  %721 = add i32 %720, %719
  store i32 %721, i32* %39, align 4
  %722 = load i8*, i8** %18, align 8
  %723 = load i32, i32* %39, align 4
  %724 = zext i32 %723 to i64
  %725 = getelementptr inbounds i8, i8* %722, i64 %724
  %726 = load i8*, i8** %31, align 8
  %727 = getelementptr inbounds i8, i8* %726, i64 1
  %728 = call i8* @strcpy(i8* %725, i8* %727) #10
  %729 = load i8*, i8** %18, align 8
  store i8* %729, i8** %31, align 8
  br label %747

730:                                              ; preds = %626
  %731 = load %struct.dep*, %struct.dep** %30, align 8
  %732 = getelementptr inbounds %struct.dep, %struct.dep* %731, i32 0, i32 1
  %733 = load i8*, i8** %732, align 8
  %734 = icmp eq i8* %733, null
  br i1 %734, label %735, label %741

735:                                              ; preds = %730
  %736 = load %struct.dep*, %struct.dep** %30, align 8
  %737 = getelementptr inbounds %struct.dep, %struct.dep* %736, i32 0, i32 2
  %738 = load %struct.file*, %struct.file** %737, align 8
  %739 = getelementptr inbounds %struct.file, %struct.file* %738, i32 0, i32 1
  %740 = load i8*, i8** %739, align 8
  br label %745

741:                                              ; preds = %730
  %742 = load %struct.dep*, %struct.dep** %30, align 8
  %743 = getelementptr inbounds %struct.dep, %struct.dep* %742, i32 0, i32 1
  %744 = load i8*, i8** %743, align 8
  br label %745

745:                                              ; preds = %741, %735
  %746 = phi i8* [ %740, %735 ], [ %744, %741 ]
  store i8* %746, i8** %31, align 8
  br label %747

747:                                              ; preds = %745, %703
  %748 = load i8*, i8** %31, align 8
  %749 = call i32 (i8*, ...) bitcast (i32 (i8*)* @file_impossible_p to i32 (i8*, ...)*)(i8* %748)
  %750 = icmp ne i32 %749, 0
  br i1 %750, label %751, label %771

751:                                              ; preds = %747
  %752 = load i32, i32* @debug_flag, align 4
  %753 = icmp ne i32 %752, 0
  br i1 %753, label %754, label %765

754:                                              ; preds = %751
  %755 = load i32, i32* %8, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %755)
  %756 = load i8*, i8** %31, align 8
  %757 = load i8*, i8** %18, align 8
  %758 = icmp eq i8* %756, %757
  %759 = zext i1 %758 to i64
  %760 = select i1 %758, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.307, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.308, i64 0, i64 0)
  %761 = load i8*, i8** %31, align 8
  %762 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4.309, i64 0, i64 0), i8* %760, i8* %761)
  %763 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %764 = call i32 @fflush(%struct._IO_FILE* %763)
  br label %766

765:                                              ; preds = %751
  br label %766

766:                                              ; preds = %765, %754
  %767 = load %struct.rule**, %struct.rule*** %21, align 8
  %768 = load i32, i32* %28, align 4
  %769 = zext i32 %768 to i64
  %770 = getelementptr inbounds %struct.rule*, %struct.rule** %767, i64 %769
  store %struct.rule* null, %struct.rule** %770, align 8
  br label %899

771:                                              ; preds = %747
  %772 = load %struct.file**, %struct.file*** %14, align 8
  %773 = load i32, i32* %17, align 4
  %774 = zext i32 %773 to i64
  %775 = getelementptr inbounds %struct.file*, %struct.file** %772, i64 %774
  store %struct.file* null, %struct.file** %775, align 8
  %776 = load i32, i32* @debug_flag, align 4
  %777 = icmp ne i32 %776, 0
  br i1 %777, label %778, label %789

778:                                              ; preds = %771
  %779 = load i32, i32* %8, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %779)
  %780 = load i8*, i8** %31, align 8
  %781 = load i8*, i8** %18, align 8
  %782 = icmp eq i8* %780, %781
  %783 = zext i1 %782 to i64
  %784 = select i1 %782, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.307, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.308, i64 0, i64 0)
  %785 = load i8*, i8** %31, align 8
  %786 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7.310, i64 0, i64 0), i8* %784, i8* %785)
  %787 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %788 = call i32 @fflush(%struct._IO_FILE* %787)
  br label %790

789:                                              ; preds = %771
  br label %790

790:                                              ; preds = %789, %778
  %791 = load %struct.rule*, %struct.rule** %29, align 8
  %792 = getelementptr inbounds %struct.rule, %struct.rule* %791, i32 0, i32 7
  %793 = load i8, i8* %792, align 1
  %794 = icmp ne i8 %793, 0
  br i1 %794, label %799, label %795

795:                                              ; preds = %790
  %796 = load i8*, i8** %31, align 8
  %797 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @lookup_file to %struct.file* (i8*, ...)*)(i8* %796)
  %798 = icmp ne %struct.file* %797, null
  br i1 %798, label %803, label %799

799:                                              ; preds = %795, %790
  %800 = load i8*, i8** %31, align 8
  %801 = call i32 (i8*, ...) bitcast (i32 (i8*)* @file_exists_p to i32 (i8*, ...)*)(i8* %800)
  %802 = icmp ne i32 %801, 0
  br i1 %802, label %803, label %813

803:                                              ; preds = %799, %795
  %804 = load i8*, i8** %31, align 8
  %805 = load i8*, i8** %31, align 8
  %806 = call i64 @strlen(i8* %805) #9
  %807 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %804, i64 %806)
  %808 = load i8**, i8*** %16, align 8
  %809 = load i32, i32* %17, align 4
  %810 = add i32 %809, 1
  store i32 %810, i32* %17, align 4
  %811 = zext i32 %809 to i64
  %812 = getelementptr inbounds i8*, i8** %808, i64 %811
  store i8* %807, i8** %812, align 8
  br label %895

813:                                              ; preds = %799
  %814 = call i32 (i8**, ...) bitcast (i32 (i8**)* @vpath_search to i32 (i8**, ...)*)(i8** %31)
  %815 = icmp ne i32 %814, 0
  br i1 %815, label %816, label %833

816:                                              ; preds = %813
  %817 = load i32, i32* @debug_flag, align 4
  %818 = icmp ne i32 %817, 0
  br i1 %818, label %819, label %825

819:                                              ; preds = %816
  %820 = load i32, i32* %8, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %820)
  %821 = load i8*, i8** %31, align 8
  %822 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8.311, i64 0, i64 0), i8* %821, i32 0)
  %823 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %824 = call i32 @fflush(%struct._IO_FILE* %823)
  br label %826

825:                                              ; preds = %816
  br label %826

826:                                              ; preds = %825, %819
  %827 = load i8*, i8** %31, align 8
  %828 = load i8**, i8*** %16, align 8
  %829 = load i32, i32* %17, align 4
  %830 = add i32 %829, 1
  store i32 %830, i32* %17, align 4
  %831 = zext i32 %829 to i64
  %832 = getelementptr inbounds i8*, i8** %828, i64 %831
  store i8* %827, i8** %832, align 8
  br label %895

833:                                              ; preds = %813
  %834 = load i32, i32* %26, align 4
  %835 = icmp ne i32 %834, 0
  br i1 %835, label %836, label %894

836:                                              ; preds = %833
  %837 = load %struct.file*, %struct.file** %13, align 8
  %838 = icmp eq %struct.file* %837, null
  br i1 %838, label %839, label %842

839:                                              ; preds = %836
  %840 = alloca i8, i64 96, align 16
  %841 = bitcast i8* %840 to %struct.file*
  store %struct.file* %841, %struct.file** %13, align 8
  br label %842

842:                                              ; preds = %839, %836
  %843 = load i32, i32* @debug_flag, align 4
  %844 = icmp ne i32 %843, 0
  br i1 %844, label %845, label %851

845:                                              ; preds = %842
  %846 = load i32, i32* %8, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %846)
  %847 = load i8*, i8** %31, align 8
  %848 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.312, i64 0, i64 0), i8* %847, i32 0)
  %849 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %850 = call i32 @fflush(%struct._IO_FILE* %849)
  br label %852

851:                                              ; preds = %842
  br label %852

852:                                              ; preds = %851, %845
  %853 = load %struct.file*, %struct.file** %13, align 8
  %854 = bitcast %struct.file* %853 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %854, i8 0, i64 96, i1 false)
  %855 = load i8*, i8** %31, align 8
  %856 = load %struct.file*, %struct.file** %13, align 8
  %857 = getelementptr inbounds %struct.file, %struct.file* %856, i32 0, i32 1
  store i8* %855, i8** %857, align 8
  %858 = load %struct.file*, %struct.file** %13, align 8
  %859 = load i32, i32* %8, align 4
  %860 = add i32 %859, 1
  %861 = load i32, i32* %9, align 4
  %862 = add i32 %861, 1
  %863 = call i32 @pattern_search(%struct.file* %858, i32 0, i32 %860, i32 %862)
  %864 = icmp ne i32 %863, 0
  br i1 %864, label %865, label %892

865:                                              ; preds = %852
  %866 = load i8*, i8** %31, align 8
  %867 = load i8*, i8** %31, align 8
  %868 = call i64 @strlen(i8* %867) #9
  %869 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %866, i64 %868)
  store i8* %869, i8** %31, align 8
  %870 = load %struct.file*, %struct.file** %13, align 8
  %871 = getelementptr inbounds %struct.file, %struct.file* %870, i32 0, i32 1
  %872 = load i8*, i8** %871, align 8
  %873 = load i8**, i8*** %15, align 8
  %874 = load i32, i32* %17, align 4
  %875 = zext i32 %874 to i64
  %876 = getelementptr inbounds i8*, i8** %873, i64 %875
  store i8* %872, i8** %876, align 8
  %877 = load i8*, i8** %31, align 8
  %878 = load i8**, i8*** %16, align 8
  %879 = load i32, i32* %17, align 4
  %880 = zext i32 %879 to i64
  %881 = getelementptr inbounds i8*, i8** %878, i64 %880
  store i8* %877, i8** %881, align 8
  %882 = load i8*, i8** %31, align 8
  %883 = load %struct.file*, %struct.file** %13, align 8
  %884 = getelementptr inbounds %struct.file, %struct.file* %883, i32 0, i32 1
  store i8* %882, i8** %884, align 8
  %885 = load %struct.file*, %struct.file** %13, align 8
  %886 = load %struct.file**, %struct.file*** %14, align 8
  %887 = load i32, i32* %17, align 4
  %888 = zext i32 %887 to i64
  %889 = getelementptr inbounds %struct.file*, %struct.file** %886, i64 %888
  store %struct.file* %885, %struct.file** %889, align 8
  store %struct.file* null, %struct.file** %13, align 8
  %890 = load i32, i32* %17, align 4
  %891 = add i32 %890, 1
  store i32 %891, i32* %17, align 4
  br label %895

892:                                              ; preds = %852
  %893 = load i8*, i8** %31, align 8
  call void (i8*, ...) bitcast (void (i8*)* @file_impossible to void (i8*, ...)*)(i8* %893)
  br label %894

894:                                              ; preds = %892, %833
  br label %899

895:                                              ; preds = %865, %826, %803
  %896 = load %struct.dep*, %struct.dep** %30, align 8
  %897 = getelementptr inbounds %struct.dep, %struct.dep* %896, i32 0, i32 0
  %898 = load %struct.dep*, %struct.dep** %897, align 8
  store %struct.dep* %898, %struct.dep** %30, align 8
  br label %608

899:                                              ; preds = %894, %766, %608
  %900 = load %struct.rule*, %struct.rule** %29, align 8
  %901 = getelementptr inbounds %struct.rule, %struct.rule* %900, i32 0, i32 8
  store i8 0, i8* %901, align 2
  %902 = load %struct.dep*, %struct.dep** %30, align 8
  %903 = icmp ne %struct.dep* %902, null
  br i1 %903, label %904, label %949

904:                                              ; preds = %899
  br label %905

905:                                              ; preds = %947, %904
  %906 = load i32, i32* %17, align 4
  %907 = add i32 %906, -1
  store i32 %907, i32* %17, align 4
  %908 = icmp ugt i32 %906, 0
  br i1 %908, label %909, label %948

909:                                              ; preds = %905
  %910 = load %struct.file**, %struct.file*** %14, align 8
  %911 = load i32, i32* %17, align 4
  %912 = zext i32 %911 to i64
  %913 = getelementptr inbounds %struct.file*, %struct.file** %910, i64 %912
  %914 = load %struct.file*, %struct.file** %913, align 8
  store %struct.file* %914, %struct.file** %40, align 8
  %915 = load i8**, i8*** %16, align 8
  %916 = load i32, i32* %17, align 4
  %917 = zext i32 %916 to i64
  %918 = getelementptr inbounds i8*, i8** %915, i64 %917
  %919 = load i8*, i8** %918, align 8
  call void @free(i8* %919) #10
  %920 = load %struct.file*, %struct.file** %40, align 8
  %921 = icmp ne %struct.file* %920, null
  br i1 %921, label %922, label %947

922:                                              ; preds = %909
  %923 = load %struct.file*, %struct.file** %40, align 8
  %924 = getelementptr inbounds %struct.file, %struct.file* %923, i32 0, i32 4
  %925 = load i8*, i8** %924, align 8
  %926 = load %struct.file*, %struct.file** %40, align 8
  %927 = getelementptr inbounds %struct.file, %struct.file* %926, i32 0, i32 1
  %928 = load i8*, i8** %927, align 8
  %929 = icmp ult i8* %925, %928
  br i1 %929, label %943, label %930

930:                                              ; preds = %922
  %931 = load %struct.file*, %struct.file** %40, align 8
  %932 = getelementptr inbounds %struct.file, %struct.file* %931, i32 0, i32 4
  %933 = load i8*, i8** %932, align 8
  %934 = load %struct.file*, %struct.file** %40, align 8
  %935 = getelementptr inbounds %struct.file, %struct.file* %934, i32 0, i32 1
  %936 = load i8*, i8** %935, align 8
  %937 = load %struct.file*, %struct.file** %40, align 8
  %938 = getelementptr inbounds %struct.file, %struct.file* %937, i32 0, i32 1
  %939 = load i8*, i8** %938, align 8
  %940 = call i64 @strlen(i8* %939) #9
  %941 = getelementptr inbounds i8, i8* %936, i64 %940
  %942 = icmp ugt i8* %933, %941
  br i1 %942, label %943, label %947

943:                                              ; preds = %930, %922
  %944 = load %struct.file*, %struct.file** %40, align 8
  %945 = getelementptr inbounds %struct.file, %struct.file* %944, i32 0, i32 4
  %946 = load i8*, i8** %945, align 8
  call void @free(i8* %946) #10
  br label %947

947:                                              ; preds = %943, %930, %909
  br label %905

948:                                              ; preds = %905
  br label %950

949:                                              ; preds = %899
  br label %954

950:                                              ; preds = %948
  br label %951

951:                                              ; preds = %950, %507, %497
  %952 = load i32, i32* %28, align 4
  %953 = add i32 %952, 1
  store i32 %953, i32* %28, align 4
  br label %485

954:                                              ; preds = %949, %485
  %955 = load i32, i32* %28, align 4
  %956 = load i32, i32* %22, align 4
  %957 = icmp ult i32 %955, %956
  br i1 %957, label %958, label %959

958:                                              ; preds = %954
  br label %963

959:                                              ; preds = %954
  store %struct.rule* null, %struct.rule** %29, align 8
  br label %960

960:                                              ; preds = %959
  %961 = load i32, i32* %26, align 4
  %962 = add nsw i32 %961, 1
  store i32 %962, i32* %26, align 4
  br label %476

963:                                              ; preds = %958, %476
  %964 = load %struct.rule*, %struct.rule** %29, align 8
  %965 = icmp eq %struct.rule* %964, null
  br i1 %965, label %966, label %967

966:                                              ; preds = %963
  store i32 0, i32* %5, align 4
  br label %1398

967:                                              ; preds = %963
  %968 = load i32, i32* %28, align 4
  store i32 %968, i32* %25, align 4
  %969 = load i32, i32* %9, align 4
  %970 = icmp ugt i32 %969, 0
  br i1 %970, label %971, label %985

971:                                              ; preds = %967
  %972 = load %struct.rule*, %struct.rule** %29, align 8
  %973 = getelementptr inbounds %struct.rule, %struct.rule* %972, i32 0, i32 1
  %974 = load i8**, i8*** %973, align 8
  %975 = load i32*, i32** %23, align 8
  %976 = load i32, i32* %25, align 4
  %977 = zext i32 %976 to i64
  %978 = getelementptr inbounds i32, i32* %975, i64 %977
  %979 = load i32, i32* %978, align 4
  %980 = zext i32 %979 to i64
  %981 = getelementptr inbounds i8*, i8** %974, i64 %980
  %982 = load i8*, i8** %981, align 8
  %983 = load %struct.file*, %struct.file** %6, align 8
  %984 = getelementptr inbounds %struct.file, %struct.file* %983, i32 0, i32 1
  store i8* %982, i8** %984, align 8
  br label %985

985:                                              ; preds = %971, %967
  br label %986

986:                                              ; preds = %1155, %985
  %987 = load i32, i32* %17, align 4
  %988 = add i32 %987, -1
  store i32 %988, i32* %17, align 4
  %989 = icmp ugt i32 %987, 0
  br i1 %989, label %990, label %1164

990:                                              ; preds = %986
  %991 = load %struct.file**, %struct.file*** %14, align 8
  %992 = load i32, i32* %17, align 4
  %993 = zext i32 %992 to i64
  %994 = getelementptr inbounds %struct.file*, %struct.file** %991, i64 %993
  %995 = load %struct.file*, %struct.file** %994, align 8
  %996 = icmp ne %struct.file* %995, null
  br i1 %996, label %997, label %1096

997:                                              ; preds = %990
  %998 = load %struct.file**, %struct.file*** %14, align 8
  %999 = load i32, i32* %17, align 4
  %1000 = zext i32 %999 to i64
  %1001 = getelementptr inbounds %struct.file*, %struct.file** %998, i64 %1000
  %1002 = load %struct.file*, %struct.file** %1001, align 8
  store %struct.file* %1002, %struct.file** %42, align 8
  %1003 = load %struct.file*, %struct.file** %42, align 8
  %1004 = getelementptr inbounds %struct.file, %struct.file* %1003, i32 0, i32 1
  %1005 = load i8*, i8** %1004, align 8
  %1006 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* %1005)
  store %struct.file* %1006, %struct.file** %43, align 8
  %1007 = load %struct.file*, %struct.file** %42, align 8
  %1008 = getelementptr inbounds %struct.file, %struct.file* %1007, i32 0, i32 2
  %1009 = load %struct.dep*, %struct.dep** %1008, align 8
  %1010 = load %struct.file*, %struct.file** %43, align 8
  %1011 = getelementptr inbounds %struct.file, %struct.file* %1010, i32 0, i32 2
  store %struct.dep* %1009, %struct.dep** %1011, align 8
  %1012 = load %struct.file*, %struct.file** %42, align 8
  %1013 = getelementptr inbounds %struct.file, %struct.file* %1012, i32 0, i32 3
  %1014 = load %struct.commands*, %struct.commands** %1013, align 8
  %1015 = load %struct.file*, %struct.file** %43, align 8
  %1016 = getelementptr inbounds %struct.file, %struct.file* %1015, i32 0, i32 3
  store %struct.commands* %1014, %struct.commands** %1016, align 8
  %1017 = load %struct.file*, %struct.file** %42, align 8
  %1018 = getelementptr inbounds %struct.file, %struct.file* %1017, i32 0, i32 4
  %1019 = load i8*, i8** %1018, align 8
  %1020 = load %struct.file*, %struct.file** %43, align 8
  %1021 = getelementptr inbounds %struct.file, %struct.file* %1020, i32 0, i32 4
  store i8* %1019, i8** %1021, align 8
  %1022 = load i8**, i8*** %15, align 8
  %1023 = load i32, i32* %17, align 4
  %1024 = zext i32 %1023 to i64
  %1025 = getelementptr inbounds i8*, i8** %1022, i64 %1024
  %1026 = load i8*, i8** %1025, align 8
  %1027 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @lookup_file to %struct.file* (i8*, ...)*)(i8* %1026)
  store %struct.file* %1027, %struct.file** %42, align 8
  %1028 = load %struct.file*, %struct.file** %42, align 8
  %1029 = icmp ne %struct.file* %1028, null
  br i1 %1029, label %1030, label %1044

1030:                                             ; preds = %997
  %1031 = load %struct.file*, %struct.file** %42, align 8
  %1032 = getelementptr inbounds %struct.file, %struct.file* %1031, i32 0, i32 12
  %1033 = load i16, i16* %1032, align 2
  %1034 = lshr i16 %1033, 3
  %1035 = and i16 %1034, 1
  %1036 = zext i16 %1035 to i32
  %1037 = icmp ne i32 %1036, 0
  br i1 %1037, label %1038, label %1044

1038:                                             ; preds = %1030
  %1039 = load %struct.file*, %struct.file** %43, align 8
  %1040 = getelementptr inbounds %struct.file, %struct.file* %1039, i32 0, i32 12
  %1041 = load i16, i16* %1040, align 2
  %1042 = and i16 %1041, -9
  %1043 = or i16 %1042, 8
  store i16 %1043, i16* %1040, align 2
  br label %1044

1044:                                             ; preds = %1038, %1030, %997
  %1045 = load %struct.file*, %struct.file** %43, align 8
  %1046 = getelementptr inbounds %struct.file, %struct.file* %1045, i32 0, i32 12
  %1047 = load i16, i16* %1046, align 2
  %1048 = and i16 %1047, -1025
  %1049 = or i16 %1048, 1024
  store i16 %1049, i16* %1046, align 2
  %1050 = load %struct.file*, %struct.file** %43, align 8
  %1051 = getelementptr inbounds %struct.file, %struct.file* %1050, i32 0, i32 12
  %1052 = load i16, i16* %1051, align 2
  %1053 = and i16 %1052, -17
  %1054 = or i16 %1053, 16
  store i16 %1054, i16* %1051, align 2
  %1055 = load %struct.file*, %struct.file** %43, align 8
  %1056 = getelementptr inbounds %struct.file, %struct.file* %1055, i32 0, i32 2
  %1057 = load %struct.dep*, %struct.dep** %1056, align 8
  store %struct.dep* %1057, %struct.dep** %30, align 8
  br label %1058

1058:                                             ; preds = %1089, %1044
  %1059 = load %struct.dep*, %struct.dep** %30, align 8
  %1060 = icmp ne %struct.dep* %1059, null
  br i1 %1060, label %1061, label %1093

1061:                                             ; preds = %1058
  %1062 = load %struct.dep*, %struct.dep** %30, align 8
  %1063 = getelementptr inbounds %struct.dep, %struct.dep* %1062, i32 0, i32 1
  %1064 = load i8*, i8** %1063, align 8
  %1065 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* %1064)
  %1066 = load %struct.dep*, %struct.dep** %30, align 8
  %1067 = getelementptr inbounds %struct.dep, %struct.dep* %1066, i32 0, i32 2
  store %struct.file* %1065, %struct.file** %1067, align 8
  %1068 = load %struct.dep*, %struct.dep** %30, align 8
  %1069 = getelementptr inbounds %struct.dep, %struct.dep* %1068, i32 0, i32 1
  store i8* null, i8** %1069, align 8
  %1070 = load %struct.dep*, %struct.dep** %30, align 8
  %1071 = getelementptr inbounds %struct.dep, %struct.dep* %1070, i32 0, i32 3
  %1072 = load i32, i32* %1071, align 8
  %1073 = load %struct.dep*, %struct.dep** %30, align 8
  %1074 = getelementptr inbounds %struct.dep, %struct.dep* %1073, i32 0, i32 2
  %1075 = load %struct.file*, %struct.file** %1074, align 8
  %1076 = getelementptr inbounds %struct.file, %struct.file* %1075, i32 0, i32 12
  %1077 = load i16, i16* %1076, align 2
  %1078 = lshr i16 %1077, 4
  %1079 = and i16 %1078, 1
  %1080 = zext i16 %1079 to i32
  %1081 = or i32 %1080, %1072
  %1082 = trunc i32 %1081 to i16
  %1083 = load i16, i16* %1076, align 2
  %1084 = and i16 %1082, 1
  %1085 = shl i16 %1084, 4
  %1086 = and i16 %1083, -17
  %1087 = or i16 %1086, %1085
  store i16 %1087, i16* %1076, align 2
  %1088 = zext i16 %1084 to i32
  br label %1089

1089:                                             ; preds = %1061
  %1090 = load %struct.dep*, %struct.dep** %30, align 8
  %1091 = getelementptr inbounds %struct.dep, %struct.dep* %1090, i32 0, i32 0
  %1092 = load %struct.dep*, %struct.dep** %1091, align 8
  store %struct.dep* %1092, %struct.dep** %30, align 8
  br label %1058

1093:                                             ; preds = %1058
  %1094 = load i32, i32* @num_intermediates, align 4
  %1095 = add i32 %1094, 1
  store i32 %1095, i32* @num_intermediates, align 4
  br label %1096

1096:                                             ; preds = %1093, %990
  %1097 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 32)
  %1098 = bitcast i8* %1097 to %struct.dep*
  store %struct.dep* %1098, %struct.dep** %30, align 8
  %1099 = load i8**, i8*** %16, align 8
  %1100 = load i32, i32* %17, align 4
  %1101 = zext i32 %1100 to i64
  %1102 = getelementptr inbounds i8*, i8** %1099, i64 %1101
  %1103 = load i8*, i8** %1102, align 8
  store i8* %1103, i8** %41, align 8
  %1104 = load i32, i32* %9, align 4
  %1105 = icmp eq i32 %1104, 0
  br i1 %1105, label %1106, label %1113

1106:                                             ; preds = %1096
  %1107 = load %struct.dep*, %struct.dep** %30, align 8
  %1108 = getelementptr inbounds %struct.dep, %struct.dep* %1107, i32 0, i32 1
  store i8* null, i8** %1108, align 8
  %1109 = load i8*, i8** %41, align 8
  %1110 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* %1109)
  %1111 = load %struct.dep*, %struct.dep** %30, align 8
  %1112 = getelementptr inbounds %struct.dep, %struct.dep* %1111, i32 0, i32 2
  store %struct.file* %1110, %struct.file** %1112, align 8
  br label %1121

1113:                                             ; preds = %1096
  %1114 = load i8*, i8** %41, align 8
  %1115 = load %struct.dep*, %struct.dep** %30, align 8
  %1116 = getelementptr inbounds %struct.dep, %struct.dep* %1115, i32 0, i32 1
  store i8* %1114, i8** %1116, align 8
  %1117 = load %struct.dep*, %struct.dep** %30, align 8
  %1118 = getelementptr inbounds %struct.dep, %struct.dep* %1117, i32 0, i32 2
  store %struct.file* null, %struct.file** %1118, align 8
  %1119 = load %struct.dep*, %struct.dep** %30, align 8
  %1120 = getelementptr inbounds %struct.dep, %struct.dep* %1119, i32 0, i32 3
  store i32 0, i32* %1120, align 8
  br label %1121

1121:                                             ; preds = %1113, %1106
  %1122 = load %struct.file**, %struct.file*** %14, align 8
  %1123 = load i32, i32* %17, align 4
  %1124 = zext i32 %1123 to i64
  %1125 = getelementptr inbounds %struct.file*, %struct.file** %1122, i64 %1124
  %1126 = load %struct.file*, %struct.file** %1125, align 8
  %1127 = icmp eq %struct.file* %1126, null
  br i1 %1127, label %1128, label %1155

1128:                                             ; preds = %1121
  %1129 = load %struct.rule**, %struct.rule*** %21, align 8
  %1130 = load i32, i32* %25, align 4
  %1131 = zext i32 %1130 to i64
  %1132 = getelementptr inbounds %struct.rule*, %struct.rule** %1129, i64 %1131
  %1133 = load %struct.rule*, %struct.rule** %1132, align 8
  %1134 = getelementptr inbounds %struct.rule, %struct.rule* %1133, i32 0, i32 6
  %1135 = load i8, i8* %1134, align 8
  %1136 = sext i8 %1135 to i32
  %1137 = icmp ne i32 %1136, 0
  br i1 %1137, label %1138, label %1155

1138:                                             ; preds = %1128
  %1139 = load %struct.dep*, %struct.dep** %30, align 8
  %1140 = getelementptr inbounds %struct.dep, %struct.dep* %1139, i32 0, i32 2
  %1141 = load %struct.file*, %struct.file** %1140, align 8
  %1142 = icmp eq %struct.file* %1141, null
  br i1 %1142, label %1143, label %1146

1143:                                             ; preds = %1138
  %1144 = load %struct.dep*, %struct.dep** %30, align 8
  %1145 = getelementptr inbounds %struct.dep, %struct.dep* %1144, i32 0, i32 3
  store i32 1, i32* %1145, align 8
  br label %1154

1146:                                             ; preds = %1138
  %1147 = load %struct.dep*, %struct.dep** %30, align 8
  %1148 = getelementptr inbounds %struct.dep, %struct.dep* %1147, i32 0, i32 2
  %1149 = load %struct.file*, %struct.file** %1148, align 8
  %1150 = getelementptr inbounds %struct.file, %struct.file* %1149, i32 0, i32 12
  %1151 = load i16, i16* %1150, align 2
  %1152 = and i16 %1151, -17
  %1153 = or i16 %1152, 16
  store i16 %1153, i16* %1150, align 2
  br label %1154

1154:                                             ; preds = %1146, %1143
  br label %1155

1155:                                             ; preds = %1154, %1128, %1121
  %1156 = load %struct.file*, %struct.file** %6, align 8
  %1157 = getelementptr inbounds %struct.file, %struct.file* %1156, i32 0, i32 2
  %1158 = load %struct.dep*, %struct.dep** %1157, align 8
  %1159 = load %struct.dep*, %struct.dep** %30, align 8
  %1160 = getelementptr inbounds %struct.dep, %struct.dep* %1159, i32 0, i32 0
  store %struct.dep* %1158, %struct.dep** %1160, align 8
  %1161 = load %struct.dep*, %struct.dep** %30, align 8
  %1162 = load %struct.file*, %struct.file** %6, align 8
  %1163 = getelementptr inbounds %struct.file, %struct.file* %1162, i32 0, i32 2
  store %struct.dep* %1161, %struct.dep** %1163, align 8
  br label %986

1164:                                             ; preds = %986
  %1165 = load %struct.file*, %struct.file** %6, align 8
  %1166 = getelementptr inbounds %struct.file, %struct.file* %1165, i32 0, i32 2
  %1167 = load %struct.dep*, %struct.dep** %1166, align 8
  call void (%struct.dep*, ...) bitcast (void (%struct.dep*)* @uniquize_deps to void (%struct.dep*, ...)*)(%struct.dep* %1167)
  %1168 = load i8*, i8** %24, align 8
  %1169 = load i32, i32* %25, align 4
  %1170 = zext i32 %1169 to i64
  %1171 = getelementptr inbounds i8, i8* %1168, i64 %1170
  %1172 = load i8, i8* %1171, align 1
  %1173 = icmp ne i8 %1172, 0
  br i1 %1173, label %1192, label %1174

1174:                                             ; preds = %1164
  %1175 = load i8*, i8** %19, align 8
  %1176 = load i32, i32* %20, align 4
  %1177 = zext i32 %1176 to i64
  %1178 = getelementptr inbounds i8, i8* %1175, i64 %1177
  %1179 = load i8, i8* %1178, align 1
  %1180 = sext i8 %1179 to i32
  %1181 = icmp eq i32 %1180, 0
  br i1 %1181, label %1182, label %1184

1182:                                             ; preds = %1174
  %1183 = load i8*, i8** %19, align 8
  br label %1188

1184:                                             ; preds = %1174
  %1185 = load i8*, i8** %19, align 8
  %1186 = load i32, i32* %20, align 4
  %1187 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i32, ...)*)(i8* %1185, i32 %1186)
  br label %1188

1188:                                             ; preds = %1184, %1182
  %1189 = phi i8* [ %1183, %1182 ], [ %1187, %1184 ]
  %1190 = load %struct.file*, %struct.file** %6, align 8
  %1191 = getelementptr inbounds %struct.file, %struct.file* %1190, i32 0, i32 4
  store i8* %1189, i8** %1191, align 8
  br label %1242

1192:                                             ; preds = %1164
  %1193 = load i8*, i8** %12, align 8
  %1194 = getelementptr inbounds i8, i8* %1193, i64 1
  %1195 = load i8*, i8** %10, align 8
  %1196 = ptrtoint i8* %1194 to i64
  %1197 = ptrtoint i8* %1195 to i64
  %1198 = sub i64 %1196, %1197
  %1199 = load i32, i32* %20, align 4
  %1200 = zext i32 %1199 to i64
  %1201 = add nsw i64 %1198, %1200
  %1202 = add nsw i64 %1201, 1
  %1203 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 %1202)
  %1204 = load %struct.file*, %struct.file** %6, align 8
  %1205 = getelementptr inbounds %struct.file, %struct.file* %1204, i32 0, i32 4
  store i8* %1203, i8** %1205, align 8
  %1206 = load %struct.file*, %struct.file** %6, align 8
  %1207 = getelementptr inbounds %struct.file, %struct.file* %1206, i32 0, i32 4
  %1208 = load i8*, i8** %1207, align 8
  %1209 = load i8*, i8** %10, align 8
  %1210 = load i8*, i8** %12, align 8
  %1211 = getelementptr inbounds i8, i8* %1210, i64 1
  %1212 = load i8*, i8** %10, align 8
  %1213 = ptrtoint i8* %1211 to i64
  %1214 = ptrtoint i8* %1212 to i64
  %1215 = sub i64 %1213, %1214
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1208, i8* align 1 %1209, i64 %1215, i1 false)
  %1216 = load %struct.file*, %struct.file** %6, align 8
  %1217 = getelementptr inbounds %struct.file, %struct.file* %1216, i32 0, i32 4
  %1218 = load i8*, i8** %1217, align 8
  %1219 = load i8*, i8** %12, align 8
  %1220 = getelementptr inbounds i8, i8* %1219, i64 1
  %1221 = load i8*, i8** %10, align 8
  %1222 = ptrtoint i8* %1220 to i64
  %1223 = ptrtoint i8* %1221 to i64
  %1224 = sub i64 %1222, %1223
  %1225 = getelementptr inbounds i8, i8* %1218, i64 %1224
  %1226 = load i8*, i8** %19, align 8
  %1227 = load i32, i32* %20, align 4
  %1228 = zext i32 %1227 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1225, i8* align 1 %1226, i64 %1228, i1 false)
  %1229 = load %struct.file*, %struct.file** %6, align 8
  %1230 = getelementptr inbounds %struct.file, %struct.file* %1229, i32 0, i32 4
  %1231 = load i8*, i8** %1230, align 8
  %1232 = load i8*, i8** %12, align 8
  %1233 = getelementptr inbounds i8, i8* %1232, i64 1
  %1234 = load i8*, i8** %10, align 8
  %1235 = ptrtoint i8* %1233 to i64
  %1236 = ptrtoint i8* %1234 to i64
  %1237 = sub i64 %1235, %1236
  %1238 = load i32, i32* %20, align 4
  %1239 = zext i32 %1238 to i64
  %1240 = add nsw i64 %1237, %1239
  %1241 = getelementptr inbounds i8, i8* %1231, i64 %1240
  store i8 0, i8* %1241, align 1
  br label %1242

1242:                                             ; preds = %1192, %1188
  %1243 = load %struct.rule*, %struct.rule** %29, align 8
  %1244 = getelementptr inbounds %struct.rule, %struct.rule* %1243, i32 0, i32 5
  %1245 = load %struct.commands*, %struct.commands** %1244, align 8
  %1246 = load %struct.file*, %struct.file** %6, align 8
  %1247 = getelementptr inbounds %struct.file, %struct.file* %1246, i32 0, i32 3
  store %struct.commands* %1245, %struct.commands** %1247, align 8
  %1248 = load %struct.rule*, %struct.rule** %29, align 8
  %1249 = getelementptr inbounds %struct.rule, %struct.rule* %1248, i32 0, i32 1
  %1250 = load i8**, i8*** %1249, align 8
  %1251 = getelementptr inbounds i8*, i8** %1250, i64 1
  %1252 = load i8*, i8** %1251, align 8
  %1253 = icmp ne i8* %1252, null
  br i1 %1253, label %1254, label %1397

1254:                                             ; preds = %1242
  store i32 0, i32* %28, align 4
  br label %1255

1255:                                             ; preds = %1393, %1254
  %1256 = load %struct.rule*, %struct.rule** %29, align 8
  %1257 = getelementptr inbounds %struct.rule, %struct.rule* %1256, i32 0, i32 1
  %1258 = load i8**, i8*** %1257, align 8
  %1259 = load i32, i32* %28, align 4
  %1260 = zext i32 %1259 to i64
  %1261 = getelementptr inbounds i8*, i8** %1258, i64 %1260
  %1262 = load i8*, i8** %1261, align 8
  %1263 = icmp ne i8* %1262, null
  br i1 %1263, label %1264, label %1396

1264:                                             ; preds = %1255
  %1265 = load i32, i32* %28, align 4
  %1266 = load i32*, i32** %23, align 8
  %1267 = load i32, i32* %25, align 4
  %1268 = zext i32 %1267 to i64
  %1269 = getelementptr inbounds i32, i32* %1266, i64 %1268
  %1270 = load i32, i32* %1269, align 4
  %1271 = icmp ne i32 %1265, %1270
  br i1 %1271, label %1272, label %1392

1272:                                             ; preds = %1264
  %1273 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 32)
  %1274 = bitcast i8* %1273 to %struct.dep*
  store %struct.dep* %1274, %struct.dep** %44, align 8
  %1275 = load %struct.rule*, %struct.rule** %29, align 8
  %1276 = getelementptr inbounds %struct.rule, %struct.rule* %1275, i32 0, i32 2
  %1277 = load i32*, i32** %1276, align 8
  %1278 = load i32, i32* %28, align 4
  %1279 = zext i32 %1278 to i64
  %1280 = getelementptr inbounds i32, i32* %1277, i64 %1279
  %1281 = load i32, i32* %1280, align 4
  %1282 = load i32, i32* %20, align 4
  %1283 = add i32 %1281, %1282
  %1284 = add i32 %1283, 1
  %1285 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %1284)
  store i8* %1285, i8** %31, align 8
  %1286 = load %struct.dep*, %struct.dep** %44, align 8
  %1287 = getelementptr inbounds %struct.dep, %struct.dep* %1286, i32 0, i32 1
  store i8* %1285, i8** %1287, align 8
  %1288 = load i8*, i8** %31, align 8
  %1289 = load %struct.rule*, %struct.rule** %29, align 8
  %1290 = getelementptr inbounds %struct.rule, %struct.rule* %1289, i32 0, i32 1
  %1291 = load i8**, i8*** %1290, align 8
  %1292 = load i32, i32* %28, align 4
  %1293 = zext i32 %1292 to i64
  %1294 = getelementptr inbounds i8*, i8** %1291, i64 %1293
  %1295 = load i8*, i8** %1294, align 8
  %1296 = load %struct.rule*, %struct.rule** %29, align 8
  %1297 = getelementptr inbounds %struct.rule, %struct.rule* %1296, i32 0, i32 3
  %1298 = load i8**, i8*** %1297, align 8
  %1299 = load i32, i32* %28, align 4
  %1300 = zext i32 %1299 to i64
  %1301 = getelementptr inbounds i8*, i8** %1298, i64 %1300
  %1302 = load i8*, i8** %1301, align 8
  %1303 = load %struct.rule*, %struct.rule** %29, align 8
  %1304 = getelementptr inbounds %struct.rule, %struct.rule* %1303, i32 0, i32 1
  %1305 = load i8**, i8*** %1304, align 8
  %1306 = load i32, i32* %28, align 4
  %1307 = zext i32 %1306 to i64
  %1308 = getelementptr inbounds i8*, i8** %1305, i64 %1307
  %1309 = load i8*, i8** %1308, align 8
  %1310 = ptrtoint i8* %1302 to i64
  %1311 = ptrtoint i8* %1309 to i64
  %1312 = sub i64 %1310, %1311
  %1313 = sub nsw i64 %1312, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1288, i8* align 1 %1295, i64 %1313, i1 false)
  %1314 = load %struct.rule*, %struct.rule** %29, align 8
  %1315 = getelementptr inbounds %struct.rule, %struct.rule* %1314, i32 0, i32 3
  %1316 = load i8**, i8*** %1315, align 8
  %1317 = load i32, i32* %28, align 4
  %1318 = zext i32 %1317 to i64
  %1319 = getelementptr inbounds i8*, i8** %1316, i64 %1318
  %1320 = load i8*, i8** %1319, align 8
  %1321 = load %struct.rule*, %struct.rule** %29, align 8
  %1322 = getelementptr inbounds %struct.rule, %struct.rule* %1321, i32 0, i32 1
  %1323 = load i8**, i8*** %1322, align 8
  %1324 = load i32, i32* %28, align 4
  %1325 = zext i32 %1324 to i64
  %1326 = getelementptr inbounds i8*, i8** %1323, i64 %1325
  %1327 = load i8*, i8** %1326, align 8
  %1328 = ptrtoint i8* %1320 to i64
  %1329 = ptrtoint i8* %1327 to i64
  %1330 = sub i64 %1328, %1329
  %1331 = sub nsw i64 %1330, 1
  %1332 = load i8*, i8** %31, align 8
  %1333 = getelementptr inbounds i8, i8* %1332, i64 %1331
  store i8* %1333, i8** %31, align 8
  %1334 = load i8*, i8** %31, align 8
  %1335 = load i8*, i8** %19, align 8
  %1336 = load i32, i32* %20, align 4
  %1337 = zext i32 %1336 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1334, i8* align 1 %1335, i64 %1337, i1 false)
  %1338 = load i32, i32* %20, align 4
  %1339 = load i8*, i8** %31, align 8
  %1340 = zext i32 %1338 to i64
  %1341 = getelementptr inbounds i8, i8* %1339, i64 %1340
  store i8* %1341, i8** %31, align 8
  %1342 = load i8*, i8** %31, align 8
  %1343 = load %struct.rule*, %struct.rule** %29, align 8
  %1344 = getelementptr inbounds %struct.rule, %struct.rule* %1343, i32 0, i32 3
  %1345 = load i8**, i8*** %1344, align 8
  %1346 = load i32, i32* %28, align 4
  %1347 = zext i32 %1346 to i64
  %1348 = getelementptr inbounds i8*, i8** %1345, i64 %1347
  %1349 = load i8*, i8** %1348, align 8
  %1350 = load %struct.rule*, %struct.rule** %29, align 8
  %1351 = getelementptr inbounds %struct.rule, %struct.rule* %1350, i32 0, i32 2
  %1352 = load i32*, i32** %1351, align 8
  %1353 = load i32, i32* %28, align 4
  %1354 = zext i32 %1353 to i64
  %1355 = getelementptr inbounds i32, i32* %1352, i64 %1354
  %1356 = load i32, i32* %1355, align 4
  %1357 = zext i32 %1356 to i64
  %1358 = load %struct.rule*, %struct.rule** %29, align 8
  %1359 = getelementptr inbounds %struct.rule, %struct.rule* %1358, i32 0, i32 3
  %1360 = load i8**, i8*** %1359, align 8
  %1361 = load i32, i32* %28, align 4
  %1362 = zext i32 %1361 to i64
  %1363 = getelementptr inbounds i8*, i8** %1360, i64 %1362
  %1364 = load i8*, i8** %1363, align 8
  %1365 = load %struct.rule*, %struct.rule** %29, align 8
  %1366 = getelementptr inbounds %struct.rule, %struct.rule* %1365, i32 0, i32 1
  %1367 = load i8**, i8*** %1366, align 8
  %1368 = load i32, i32* %28, align 4
  %1369 = zext i32 %1368 to i64
  %1370 = getelementptr inbounds i8*, i8** %1367, i64 %1369
  %1371 = load i8*, i8** %1370, align 8
  %1372 = ptrtoint i8* %1364 to i64
  %1373 = ptrtoint i8* %1371 to i64
  %1374 = sub i64 %1372, %1373
  %1375 = sub nsw i64 %1374, 1
  %1376 = sub nsw i64 %1357, %1375
  %1377 = add nsw i64 %1376, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1342, i8* align 1 %1349, i64 %1377, i1 false)
  %1378 = load %struct.dep*, %struct.dep** %44, align 8
  %1379 = getelementptr inbounds %struct.dep, %struct.dep* %1378, i32 0, i32 1
  %1380 = load i8*, i8** %1379, align 8
  %1381 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* %1380)
  %1382 = load %struct.dep*, %struct.dep** %44, align 8
  %1383 = getelementptr inbounds %struct.dep, %struct.dep* %1382, i32 0, i32 2
  store %struct.file* %1381, %struct.file** %1383, align 8
  %1384 = load %struct.file*, %struct.file** %6, align 8
  %1385 = getelementptr inbounds %struct.file, %struct.file* %1384, i32 0, i32 5
  %1386 = load %struct.dep*, %struct.dep** %1385, align 8
  %1387 = load %struct.dep*, %struct.dep** %44, align 8
  %1388 = getelementptr inbounds %struct.dep, %struct.dep* %1387, i32 0, i32 0
  store %struct.dep* %1386, %struct.dep** %1388, align 8
  %1389 = load %struct.dep*, %struct.dep** %44, align 8
  %1390 = load %struct.file*, %struct.file** %6, align 8
  %1391 = getelementptr inbounds %struct.file, %struct.file* %1390, i32 0, i32 5
  store %struct.dep* %1389, %struct.dep** %1391, align 8
  br label %1392

1392:                                             ; preds = %1272, %1264
  br label %1393

1393:                                             ; preds = %1392
  %1394 = load i32, i32* %28, align 4
  %1395 = add i32 %1394, 1
  store i32 %1395, i32* %28, align 4
  br label %1255

1396:                                             ; preds = %1255
  br label %1397

1397:                                             ; preds = %1396, %1242
  store i32 1, i32* %5, align 4
  br label %1398

1398:                                             ; preds = %1397, %966
  %1399 = load i32, i32* %5, align 4
  ret i32 %1399
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @push_signals_blocked_p(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %4 = load i8*, i8** @signals_blocked_p_stack, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %12

6:                                                ; preds = %1
  store i32 8, i32* @signals_blocked_p_max, align 4
  %7 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 8)
  store i8* %7, i8** @signals_blocked_p_stack, align 8
  store i32 1, i32* @signals_blocked_p_depth, align 4
  %8 = load i32, i32* %2, align 4
  %9 = trunc i32 %8 to i8
  %10 = load i8*, i8** @signals_blocked_p_stack, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 0
  store i8 %9, i8* %11, align 1
  store i32 0, i32* %3, align 4
  br label %45

12:                                               ; preds = %1
  %13 = load i32, i32* @signals_blocked_p_depth, align 4
  %14 = load i32, i32* @signals_blocked_p_max, align 4
  %15 = icmp eq i32 %13, %14
  br i1 %15, label %16, label %22

16:                                               ; preds = %12
  %17 = load i32, i32* @signals_blocked_p_max, align 4
  %18 = add i32 %17, 8
  store i32 %18, i32* @signals_blocked_p_max, align 4
  %19 = load i8*, i8** @signals_blocked_p_stack, align 8
  %20 = load i32, i32* @signals_blocked_p_max, align 4
  %21 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i32, ...)*)(i8* %19, i32 %20)
  store i8* %21, i8** @signals_blocked_p_stack, align 8
  br label %22

22:                                               ; preds = %16, %12
  %23 = load i32, i32* @signals_blocked_p_depth, align 4
  %24 = icmp ugt i32 %23, 0
  br i1 %24, label %25, label %34

25:                                               ; preds = %22
  %26 = load i8*, i8** @signals_blocked_p_stack, align 8
  %27 = load i32, i32* @signals_blocked_p_depth, align 4
  %28 = sub i32 %27, 1
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %26, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = icmp ne i32 %32, 0
  br label %34

34:                                               ; preds = %25, %22
  %35 = phi i1 [ false, %22 ], [ %33, %25 ]
  %36 = zext i1 %35 to i32
  store i32 %36, i32* %3, align 4
  %37 = load i32, i32* %2, align 4
  %38 = trunc i32 %37 to i8
  %39 = load i8*, i8** @signals_blocked_p_stack, align 8
  %40 = load i32, i32* @signals_blocked_p_depth, align 4
  %41 = add i32 %40, 1
  store i32 %41, i32* @signals_blocked_p_depth, align 4
  %42 = sub i32 %41, 1
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %39, i64 %43
  store i8 %38, i8* %44, align 1
  br label %45

45:                                               ; preds = %34, %6
  %46 = load i32, i32* %3, align 4
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %52

48:                                               ; preds = %45
  %49 = load i32, i32* %2, align 4
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %48
  call void @unblock_signals()
  br label %60

52:                                               ; preds = %48, %45
  %53 = load i32, i32* %2, align 4
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %52
  %56 = load i32, i32* %3, align 4
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  call void @block_signals()
  br label %59

59:                                               ; preds = %58, %55, %52
  br label %60

60:                                               ; preds = %59, %51
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @unblock_signals() #0 {
  %1 = call i32 @sigblock(i32 0) #10
  %2 = load i32, i32* @fatal_signal_mask, align 4
  %3 = or i32 %2, 65536
  %4 = xor i32 %3, -1
  %5 = and i32 %1, %4
  %6 = call i32 @sigsetmask(i32 %5) #10
  call void (...) bitcast (void ()* @unblock_remote_children to void (...)*)()
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @block_signals() #0 {
  %1 = load i32, i32* @fatal_signal_mask, align 4
  %2 = or i32 %1, 65536
  %3 = call i32 @sigblock(i32 %2) #10
  call void (...) bitcast (void ()* @block_remote_children to void (...)*)()
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @sigblock(i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @pop_signals_blocked_p() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = load i32, i32* @signals_blocked_p_depth, align 4
  %4 = icmp ugt i32 %3, 0
  br i1 %4, label %5, label %15

5:                                                ; preds = %0
  %6 = load i8*, i8** @signals_blocked_p_stack, align 8
  %7 = load i32, i32* @signals_blocked_p_depth, align 4
  %8 = add i32 %7, -1
  store i32 %8, i32* @signals_blocked_p_depth, align 4
  %9 = sub i32 %7, 1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i8, i8* %6, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = icmp ne i32 %13, 0
  br label %15

15:                                               ; preds = %5, %0
  %16 = phi i1 [ false, %0 ], [ %14, %5 ]
  %17 = zext i1 %16 to i32
  store i32 %17, i32* %1, align 4
  %18 = load i32, i32* @signals_blocked_p_depth, align 4
  %19 = icmp ugt i32 %18, 0
  br i1 %19, label %20, label %29

20:                                               ; preds = %15
  %21 = load i8*, i8** @signals_blocked_p_stack, align 8
  %22 = load i32, i32* @signals_blocked_p_depth, align 4
  %23 = sub i32 %22, 1
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %21, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = sext i8 %26 to i32
  %28 = icmp ne i32 %27, 0
  br label %29

29:                                               ; preds = %20, %15
  %30 = phi i1 [ false, %15 ], [ %28, %20 ]
  %31 = zext i1 %30 to i32
  store i32 %31, i32* %2, align 4
  %32 = load i32, i32* %2, align 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %29
  %35 = load i32, i32* %1, align 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %34
  call void @block_signals()
  br label %46

38:                                               ; preds = %34, %29
  %39 = load i32, i32* %1, align 4
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %38
  %42 = load i32, i32* %2, align 4
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  call void @unblock_signals()
  br label %45

45:                                               ; preds = %44, %41, %38
  br label %46

46:                                               ; preds = %45, %37
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @child_handler(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.child*, align 8
  %11 = alloca %struct.child*, align 8
  %12 = alloca i32, align 4
  %13 = alloca [100 x i8], align 16
  store i32 %0, i32* %2, align 4
  store i32 0, i32* %4, align 4
  %14 = load i32, i32* %2, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %1
  call void @block_signals()
  br label %17

17:                                               ; preds = %16, %1
  br label %18

18:                                               ; preds = %256, %199, %80, %17
  store i32 0, i32* %5, align 4
  %19 = call i32 (i32*, i32*, i32*, i32, ...) bitcast (i32 (i32*, i32*, i32*, i32)* @remote_status to i32 (i32*, i32*, i32*, i32, ...)*)(i32* %7, i32* %8, i32* %9, i32 0)
  store i32 %19, i32* %6, align 4
  %20 = load i32, i32* %6, align 4
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %22, label %53

22:                                               ; preds = %18
  %23 = load i32, i32* %2, align 4
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = call i32 @waitpid(i32 -1, i32* %3, i32 1)
  store i32 %26, i32* %6, align 4
  br label %29

27:                                               ; preds = %22
  %28 = call i32 @wait(i32* %3)
  store i32 %28, i32* %6, align 4
  br label %29

29:                                               ; preds = %27, %25
  %30 = load i32, i32* %6, align 4
  %31 = icmp sle i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  br label %257

33:                                               ; preds = %29
  %34 = load i32, i32* %3, align 4
  %35 = and i32 %34, 65280
  %36 = ashr i32 %35, 8
  store i32 %36, i32* %7, align 4
  %37 = load i32, i32* %3, align 4
  %38 = and i32 %37, 127
  %39 = add nsw i32 %38, 1
  %40 = trunc i32 %39 to i8
  %41 = sext i8 %40 to i32
  %42 = ashr i32 %41, 1
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %33
  %45 = load i32, i32* %3, align 4
  %46 = and i32 %45, 127
  br label %48

47:                                               ; preds = %33
  br label %48

48:                                               ; preds = %47, %44
  %49 = phi i32 [ %46, %44 ], [ 0, %47 ]
  store i32 %49, i32* %8, align 4
  %50 = load i32, i32* %3, align 4
  %51 = and i32 %50, 128
  store i32 %51, i32* %9, align 4
  br label %52

52:                                               ; preds = %48
  br label %54

53:                                               ; preds = %18
  store i32 1, i32* %5, align 4
  br label %54

54:                                               ; preds = %53, %52
  %55 = load i32, i32* %5, align 4
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %81, label %57

57:                                               ; preds = %54
  %58 = load i32, i32* %6, align 4
  %59 = load i32, i32* @shell_function_pid, align 4
  %60 = icmp eq i32 %58, %59
  br i1 %60, label %61, label %81

61:                                               ; preds = %57
  %62 = load i32, i32* %8, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %61
  %65 = load i32, i32* %7, align 4
  %66 = icmp eq i32 %65, 127
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  store i32 -1, i32* @shell_function_completed, align 4
  br label %69

68:                                               ; preds = %64, %61
  store i32 1, i32* @shell_function_completed, align 4
  br label %69

69:                                               ; preds = %68, %67
  %70 = load i32, i32* %4, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %4, align 4
  %72 = load i32, i32* %2, align 4
  %73 = icmp slt i32 %72, 0
  br i1 %73, label %74, label %80

74:                                               ; preds = %69
  %75 = load i32, i32* %4, align 4
  %76 = load i32, i32* %2, align 4
  %77 = sub nsw i32 0, %76
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %80

79:                                               ; preds = %74
  br label %257

80:                                               ; preds = %74, %69
  br label %18

81:                                               ; preds = %57, %54
  %82 = load i32, i32* %8, align 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %81
  %85 = load i32, i32* %7, align 4
  %86 = icmp ne i32 %85, 0
  br label %87

87:                                               ; preds = %84, %81
  %88 = phi i1 [ true, %81 ], [ %86, %84 ]
  %89 = zext i1 %88 to i32
  store i32 %89, i32* %12, align 4
  store %struct.child* null, %struct.child** %10, align 8
  %90 = load %struct.child*, %struct.child** @children, align 8
  store %struct.child* %90, %struct.child** %11, align 8
  br label %91

91:                                               ; preds = %110, %87
  %92 = load %struct.child*, %struct.child** %11, align 8
  %93 = icmp ne %struct.child* %92, null
  br i1 %93, label %94, label %115

94:                                               ; preds = %91
  %95 = load %struct.child*, %struct.child** %11, align 8
  %96 = getelementptr inbounds %struct.child, %struct.child* %95, i32 0, i32 7
  %97 = load i8, i8* %96, align 4
  %98 = and i8 %97, 1
  %99 = zext i8 %98 to i32
  %100 = load i32, i32* %5, align 4
  %101 = icmp eq i32 %99, %100
  br i1 %101, label %102, label %109

102:                                              ; preds = %94
  %103 = load %struct.child*, %struct.child** %11, align 8
  %104 = getelementptr inbounds %struct.child, %struct.child* %103, i32 0, i32 6
  %105 = load i32, i32* %104, align 8
  %106 = load i32, i32* %6, align 4
  %107 = icmp eq i32 %105, %106
  br i1 %107, label %108, label %109

108:                                              ; preds = %102
  br label %115

109:                                              ; preds = %102, %94
  br label %110

110:                                              ; preds = %109
  %111 = load %struct.child*, %struct.child** %11, align 8
  store %struct.child* %111, %struct.child** %10, align 8
  %112 = load %struct.child*, %struct.child** %11, align 8
  %113 = getelementptr inbounds %struct.child, %struct.child* %112, i32 0, i32 0
  %114 = load %struct.child*, %struct.child** %113, align 8
  store %struct.child* %114, %struct.child** %11, align 8
  br label %91

115:                                              ; preds = %108, %91
  %116 = load %struct.child*, %struct.child** %11, align 8
  %117 = icmp eq %struct.child* %116, null
  br i1 %117, label %118, label %137

118:                                              ; preds = %115
  %119 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %120 = load i32, i32* %5, align 4
  %121 = icmp ne i32 %120, 0
  %122 = zext i1 %121 to i64
  %123 = select i1 %121, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.319, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.320, i64 0, i64 0)
  %124 = load i32, i32* %6, align 4
  %125 = call i32 (i8*, i8*, ...) @sprintf(i8* %119, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.321, i64 0, i64 0), i8* %123, i32 %124) #10
  %126 = load i32, i32* %12, align 4
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %128, label %134

128:                                              ; preds = %118
  %129 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %130 = load i32, i32* %7, align 4
  %131 = load i32, i32* %8, align 4
  %132 = load i32, i32* %9, align 4
  %133 = load i32, i32* @ignore_errors_flag, align 4
  call void @child_error(i8* %129, i32 %130, i32 %131, i32 %132, i32 %133)
  br label %136

134:                                              ; preds = %118
  %135 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.322, i64 0, i64 0), i8* %135)
  br label %136

136:                                              ; preds = %134, %128
  br label %256

137:                                              ; preds = %115
  %138 = load %struct.child*, %struct.child** %11, align 8
  %139 = getelementptr inbounds %struct.child, %struct.child* %138, i32 0, i32 7
  %140 = load i8, i8* %139, align 4
  %141 = lshr i8 %140, 2
  %142 = and i8 %141, 1
  %143 = zext i8 %142 to i32
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %137
  store i32 0, i32* @good_stdin_used, align 4
  br label %146

146:                                              ; preds = %145, %137
  %147 = load i32, i32* %12, align 4
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %149, label %178

149:                                              ; preds = %146
  %150 = load %struct.child*, %struct.child** %11, align 8
  %151 = getelementptr inbounds %struct.child, %struct.child* %150, i32 0, i32 7
  %152 = load i8, i8* %151, align 4
  %153 = lshr i8 %152, 1
  %154 = and i8 %153, 1
  %155 = zext i8 %154 to i32
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %178, label %157

157:                                              ; preds = %149
  %158 = load i32, i32* @ignore_errors_flag, align 4
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %178, label %160

160:                                              ; preds = %157
  %161 = load %struct.child*, %struct.child** %11, align 8
  %162 = getelementptr inbounds %struct.child, %struct.child* %161, i32 0, i32 1
  %163 = load %struct.file*, %struct.file** %162, align 8
  %164 = getelementptr inbounds %struct.file, %struct.file* %163, i32 0, i32 1
  %165 = load i8*, i8** %164, align 8
  %166 = load i32, i32* %7, align 4
  %167 = load i32, i32* %8, align 4
  %168 = load i32, i32* %9, align 4
  call void @child_error(i8* %165, i32 %166, i32 %167, i32 %168, i32 0)
  %169 = load %struct.child*, %struct.child** %11, align 8
  %170 = getelementptr inbounds %struct.child, %struct.child* %169, i32 0, i32 1
  %171 = load %struct.file*, %struct.file** %170, align 8
  %172 = getelementptr inbounds %struct.file, %struct.file* %171, i32 0, i32 11
  store i16 1, i16* %172, align 8
  %173 = load i32, i32* %8, align 4
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %160
  %176 = load %struct.child*, %struct.child** %11, align 8
  call void (%struct.child*, ...) bitcast (void (%struct.child*)* @delete_child_targets to void (%struct.child*, ...)*)(%struct.child* %176)
  br label %177

177:                                              ; preds = %175, %160
  br label %218

178:                                              ; preds = %157, %149, %146
  %179 = load i32, i32* %12, align 4
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %181, label %190

181:                                              ; preds = %178
  %182 = load %struct.child*, %struct.child** %11, align 8
  %183 = getelementptr inbounds %struct.child, %struct.child* %182, i32 0, i32 1
  %184 = load %struct.file*, %struct.file** %183, align 8
  %185 = getelementptr inbounds %struct.file, %struct.file* %184, i32 0, i32 1
  %186 = load i8*, i8** %185, align 8
  %187 = load i32, i32* %7, align 4
  %188 = load i32, i32* %8, align 4
  %189 = load i32, i32* %9, align 4
  call void @child_error(i8* %186, i32 %187, i32 %188, i32 %189, i32 1)
  store i32 0, i32* %12, align 4
  br label %190

190:                                              ; preds = %181, %178
  %191 = load %struct.child*, %struct.child** %11, align 8
  call void @start_job(%struct.child* %191)
  %192 = load %struct.child*, %struct.child** %11, align 8
  %193 = getelementptr inbounds %struct.child, %struct.child* %192, i32 0, i32 1
  %194 = load %struct.file*, %struct.file** %193, align 8
  %195 = getelementptr inbounds %struct.file, %struct.file* %194, i32 0, i32 12
  %196 = load i16, i16* %195, align 2
  %197 = and i16 %196, 3
  %198 = zext i16 %197 to i32
  switch i32 %198, label %211 [
    i32 2, label %199
    i32 3, label %200
  ]

199:                                              ; preds = %190
  br label %18

200:                                              ; preds = %190
  %201 = load %struct.child*, %struct.child** %11, align 8
  %202 = getelementptr inbounds %struct.child, %struct.child* %201, i32 0, i32 1
  %203 = load %struct.file*, %struct.file** %202, align 8
  %204 = getelementptr inbounds %struct.file, %struct.file* %203, i32 0, i32 11
  %205 = load i16, i16* %204, align 8
  %206 = sext i16 %205 to i32
  %207 = icmp ne i32 %206, 0
  br i1 %207, label %208, label %210

208:                                              ; preds = %200
  %209 = load %struct.child*, %struct.child** %11, align 8
  call void (%struct.child*, ...) bitcast (void (%struct.child*)* @delete_child_targets to void (%struct.child*, ...)*)(%struct.child* %209)
  br label %210

210:                                              ; preds = %208, %200
  br label %217

211:                                              ; preds = %190
  %212 = load %struct.child*, %struct.child** %11, align 8
  %213 = getelementptr inbounds %struct.child, %struct.child* %212, i32 0, i32 1
  %214 = load %struct.file*, %struct.file** %213, align 8
  %215 = getelementptr inbounds %struct.file, %struct.file* %214, i32 0, i32 1
  %216 = load i8*, i8** %215, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4.323, i64 0, i64 0), i8* %216)
  call void @abort() #12
  unreachable

217:                                              ; preds = %210
  br label %218

218:                                              ; preds = %217, %177
  %219 = load %struct.child*, %struct.child** %11, align 8
  %220 = getelementptr inbounds %struct.child, %struct.child* %219, i32 0, i32 1
  %221 = load %struct.file*, %struct.file** %220, align 8
  call void (%struct.file*, ...) bitcast (void (%struct.file*)* @notice_finished_file to void (%struct.file*, ...)*)(%struct.file* %221)
  %222 = load %struct.child*, %struct.child** %10, align 8
  %223 = icmp eq %struct.child* %222, null
  br i1 %223, label %224, label %228

224:                                              ; preds = %218
  %225 = load %struct.child*, %struct.child** %11, align 8
  %226 = getelementptr inbounds %struct.child, %struct.child* %225, i32 0, i32 0
  %227 = load %struct.child*, %struct.child** %226, align 8
  store %struct.child* %227, %struct.child** @children, align 8
  br label %234

228:                                              ; preds = %218
  %229 = load %struct.child*, %struct.child** %11, align 8
  %230 = getelementptr inbounds %struct.child, %struct.child* %229, i32 0, i32 0
  %231 = load %struct.child*, %struct.child** %230, align 8
  %232 = load %struct.child*, %struct.child** %10, align 8
  %233 = getelementptr inbounds %struct.child, %struct.child* %232, i32 0, i32 0
  store %struct.child* %231, %struct.child** %233, align 8
  br label %234

234:                                              ; preds = %228, %224
  %235 = load %struct.child*, %struct.child** %11, align 8
  call void @free_child(%struct.child* %235)
  %236 = load i32, i32* @job_slots_used, align 4
  %237 = add i32 %236, -1
  store i32 %237, i32* @job_slots_used, align 4
  %238 = load i32, i32* %12, align 4
  %239 = icmp ne i32 %238, 0
  br i1 %239, label %240, label %244

240:                                              ; preds = %234
  %241 = load i32, i32* @keep_going_flag, align 4
  %242 = icmp ne i32 %241, 0
  br i1 %242, label %244, label %243

243:                                              ; preds = %240
  call void (i32, ...) bitcast (void (i32)* @die to void (i32, ...)*)(i32 1)
  br label %244

244:                                              ; preds = %243, %240, %234
  %245 = load i32, i32* %4, align 4
  %246 = add i32 %245, 1
  store i32 %246, i32* %4, align 4
  %247 = load i32, i32* %2, align 4
  %248 = icmp slt i32 %247, 0
  br i1 %248, label %249, label %255

249:                                              ; preds = %244
  %250 = load i32, i32* %4, align 4
  %251 = load i32, i32* %2, align 4
  %252 = sub nsw i32 0, %251
  %253 = icmp eq i32 %250, %252
  br i1 %253, label %254, label %255

254:                                              ; preds = %249
  br label %257

255:                                              ; preds = %249, %244
  br label %256

256:                                              ; preds = %255, %136
  br label %18

257:                                              ; preds = %254, %79, %32
  %258 = load i32, i32* %2, align 4
  %259 = icmp sgt i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %257
  call void @unblock_signals()
  br label %261

261:                                              ; preds = %260, %257
  ret i32 0
}

declare dso_local i32 @waitpid(i32, i32*, i32) #3

declare dso_local i32 @wait(i32*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @child_error(i8* %0, i32 %1, i32 %2, i32 %3, i32 %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  store i8* %0, i8** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %13 = load i32, i32* %10, align 4
  %14 = icmp ne i32 %13, 0
  %15 = zext i1 %14 to i64
  %16 = select i1 %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.361, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.320, i64 0, i64 0)
  store i8* %16, i8** %11, align 8
  %17 = load i32, i32* %8, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %5
  %20 = load i8*, i8** %6, align 8
  %21 = load i32, i32* %7, align 4
  %22 = load i8*, i8** %11, align 8
  call void (i8*, i8*, i32, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, i32, i8*, ...)*)(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15.362, i64 0, i64 0), i8* %20, i32 %21, i8* %22)
  br label %45

23:                                               ; preds = %5
  %24 = load i32, i32* %9, align 4
  %25 = icmp ne i32 %24, 0
  %26 = zext i1 %25 to i64
  %27 = select i1 %25, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16.363, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.320, i64 0, i64 0)
  store i8* %27, i8** %12, align 8
  %28 = load i32, i32* %8, align 4
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %40

30:                                               ; preds = %23
  %31 = load i32, i32* %8, align 4
  %32 = icmp slt i32 %31, 65
  br i1 %32, label %33, label %40

33:                                               ; preds = %30
  %34 = load i8*, i8** %6, align 8
  %35 = load i32, i32* %8, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [65 x i8*], [65 x i8*]* @sys_siglist, i64 0, i64 %36
  %38 = load i8*, i8** %37, align 8
  %39 = load i8*, i8** %12, align 8
  call void (i8*, i8*, i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, i8*, i8*, ...)*)(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.364, i64 0, i64 0), i8* %34, i8* %38, i8* %39)
  br label %44

40:                                               ; preds = %30, %23
  %41 = load i8*, i8** %6, align 8
  %42 = load i32, i32* %8, align 4
  %43 = load i8*, i8** %12, align 8
  call void (i8*, i8*, i32, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, i32, i8*, ...)*)(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.365, i64 0, i64 0), i8* %41, i32 %42, i8* %43)
  br label %44

44:                                               ; preds = %40, %33
  br label %45

45:                                               ; preds = %44, %19
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @start_job(%struct.child* %0) #0 {
  %2 = alloca %struct.child*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8**, align 8
  %7 = alloca i8*, align 8
  %8 = alloca [2 x i32], align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.child* %0, %struct.child** %2, align 8
  store i8 0, i8* %4, align 1
  %12 = load %struct.child*, %struct.child** %2, align 8
  %13 = getelementptr inbounds %struct.child, %struct.child* %12, i32 0, i32 5
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %1
  %17 = load %struct.child*, %struct.child** %2, align 8
  %18 = getelementptr inbounds %struct.child, %struct.child* %17, i32 0, i32 5
  %19 = load i8*, i8** %18, align 8
  %20 = load i8, i8* %19, align 1
  %21 = sext i8 %20 to i32
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %79

23:                                               ; preds = %16, %1
  %24 = load %struct.child*, %struct.child** %2, align 8
  %25 = getelementptr inbounds %struct.child, %struct.child* %24, i32 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = load %struct.child*, %struct.child** %2, align 8
  %28 = getelementptr inbounds %struct.child, %struct.child* %27, i32 0, i32 1
  %29 = load %struct.file*, %struct.file** %28, align 8
  %30 = getelementptr inbounds %struct.file, %struct.file* %29, i32 0, i32 3
  %31 = load %struct.commands*, %struct.commands** %30, align 8
  %32 = getelementptr inbounds %struct.commands, %struct.commands* %31, i32 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %26, %33
  br i1 %34, label %35, label %49

35:                                               ; preds = %23
  %36 = load %struct.child*, %struct.child** %2, align 8
  %37 = getelementptr inbounds %struct.child, %struct.child* %36, i32 0, i32 5
  store i8* null, i8** %37, align 8
  %38 = load %struct.child*, %struct.child** %2, align 8
  %39 = getelementptr inbounds %struct.child, %struct.child* %38, i32 0, i32 1
  %40 = load %struct.file*, %struct.file** %39, align 8
  %41 = getelementptr inbounds %struct.file, %struct.file* %40, i32 0, i32 12
  %42 = load i16, i16* %41, align 2
  %43 = and i16 %42, -4
  %44 = or i16 %43, 3
  store i16 %44, i16* %41, align 2
  %45 = load %struct.child*, %struct.child** %2, align 8
  %46 = getelementptr inbounds %struct.child, %struct.child* %45, i32 0, i32 1
  %47 = load %struct.file*, %struct.file** %46, align 8
  %48 = getelementptr inbounds %struct.file, %struct.file* %47, i32 0, i32 11
  store i16 0, i16* %48, align 8
  br label %380

49:                                               ; preds = %23
  %50 = load %struct.child*, %struct.child** %2, align 8
  %51 = getelementptr inbounds %struct.child, %struct.child* %50, i32 0, i32 3
  %52 = load i8**, i8*** %51, align 8
  %53 = load %struct.child*, %struct.child** %2, align 8
  %54 = getelementptr inbounds %struct.child, %struct.child* %53, i32 0, i32 4
  %55 = load i32, i32* %54, align 8
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i8*, i8** %52, i64 %56
  %58 = load i8*, i8** %57, align 8
  %59 = load %struct.child*, %struct.child** %2, align 8
  %60 = getelementptr inbounds %struct.child, %struct.child* %59, i32 0, i32 5
  store i8* %58, i8** %60, align 8
  %61 = load %struct.child*, %struct.child** %2, align 8
  %62 = getelementptr inbounds %struct.child, %struct.child* %61, i32 0, i32 1
  %63 = load %struct.file*, %struct.file** %62, align 8
  %64 = getelementptr inbounds %struct.file, %struct.file* %63, i32 0, i32 3
  %65 = load %struct.commands*, %struct.commands** %64, align 8
  %66 = getelementptr inbounds %struct.commands, %struct.commands* %65, i32 0, i32 5
  %67 = load i8*, i8** %66, align 8
  %68 = load %struct.child*, %struct.child** %2, align 8
  %69 = getelementptr inbounds %struct.child, %struct.child* %68, i32 0, i32 4
  %70 = load i32, i32* %69, align 8
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* %67, i64 %71
  %73 = load i8, i8* %72, align 1
  store i8 %73, i8* %5, align 1
  %74 = load %struct.child*, %struct.child** %2, align 8
  %75 = getelementptr inbounds %struct.child, %struct.child* %74, i32 0, i32 4
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 1
  store i32 %77, i32* %75, align 8
  br label %78

78:                                               ; preds = %49
  br label %94

79:                                               ; preds = %16
  %80 = load %struct.child*, %struct.child** %2, align 8
  %81 = getelementptr inbounds %struct.child, %struct.child* %80, i32 0, i32 1
  %82 = load %struct.file*, %struct.file** %81, align 8
  %83 = getelementptr inbounds %struct.file, %struct.file* %82, i32 0, i32 3
  %84 = load %struct.commands*, %struct.commands** %83, align 8
  %85 = getelementptr inbounds %struct.commands, %struct.commands* %84, i32 0, i32 5
  %86 = load i8*, i8** %85, align 8
  %87 = load %struct.child*, %struct.child** %2, align 8
  %88 = getelementptr inbounds %struct.child, %struct.child* %87, i32 0, i32 4
  %89 = load i32, i32* %88, align 8
  %90 = sub i32 %89, 1
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds i8, i8* %86, i64 %91
  %93 = load i8, i8* %92, align 1
  store i8 %93, i8* %5, align 1
  br label %94

94:                                               ; preds = %79, %78
  %95 = load %struct.child*, %struct.child** %2, align 8
  %96 = getelementptr inbounds %struct.child, %struct.child* %95, i32 0, i32 5
  %97 = load i8*, i8** %96, align 8
  store i8* %97, i8** %3, align 8
  %98 = load %struct.child*, %struct.child** %2, align 8
  %99 = getelementptr inbounds %struct.child, %struct.child* %98, i32 0, i32 7
  %100 = load i8, i8* %99, align 4
  %101 = and i8 %100, -3
  store i8 %101, i8* %99, align 4
  br label %102

102:                                              ; preds = %146, %94
  %103 = load i8*, i8** %3, align 8
  %104 = load i8, i8* %103, align 1
  %105 = sext i8 %104 to i32
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %107, label %149

107:                                              ; preds = %102
  %108 = load i8*, i8** %3, align 8
  %109 = load i8, i8* %108, align 1
  %110 = sext i8 %109 to i32
  %111 = icmp eq i32 %110, 64
  br i1 %111, label %112, label %113

112:                                              ; preds = %107
  store i8 1, i8* %4, align 1
  br label %146

113:                                              ; preds = %107
  %114 = load i8*, i8** %3, align 8
  %115 = load i8, i8* %114, align 1
  %116 = sext i8 %115 to i32
  %117 = icmp eq i32 %116, 45
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = load %struct.child*, %struct.child** %2, align 8
  %120 = getelementptr inbounds %struct.child, %struct.child* %119, i32 0, i32 7
  %121 = load i8, i8* %120, align 4
  %122 = and i8 %121, -3
  %123 = or i8 %122, 2
  store i8 %123, i8* %120, align 4
  br label %145

124:                                              ; preds = %113
  %125 = load i8*, i8** %3, align 8
  %126 = load i8, i8* %125, align 1
  %127 = sext i8 %126 to i32
  %128 = icmp eq i32 %127, 43
  br i1 %128, label %129, label %130

129:                                              ; preds = %124
  store i8 1, i8* %5, align 1
  br label %144

130:                                              ; preds = %124
  %131 = call i16** @__ctype_b_loc() #11
  %132 = load i16*, i16** %131, align 8
  %133 = load i8*, i8** %3, align 8
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i16, i16* %132, i64 %136
  %138 = load i16, i16* %137, align 2
  %139 = zext i16 %138 to i32
  %140 = and i32 %139, 1
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %143, label %142

142:                                              ; preds = %130
  br label %149

143:                                              ; preds = %130
  br label %144

144:                                              ; preds = %143, %129
  br label %145

145:                                              ; preds = %144, %118
  br label %146

146:                                              ; preds = %145, %112
  %147 = load i8*, i8** %3, align 8
  %148 = getelementptr inbounds i8, i8* %147, i32 1
  store i8* %148, i8** %3, align 8
  br label %102

149:                                              ; preds = %142, %102
  %150 = load i32, i32* @question_flag, align 4
  %151 = icmp ne i32 %150, 0
  br i1 %151, label %152, label %156

152:                                              ; preds = %149
  %153 = load i8, i8* %5, align 1
  %154 = icmp ne i8 %153, 0
  br i1 %154, label %156, label %155

155:                                              ; preds = %152
  br label %368

156:                                              ; preds = %152, %149
  %157 = load i8*, i8** %3, align 8
  %158 = call i8* (i8*, ...) bitcast (i8* (i8*)* @next_token to i8* (i8*, ...)*)(i8* %157)
  store i8* %158, i8** %3, align 8
  %159 = load i8*, i8** %3, align 8
  %160 = load %struct.child*, %struct.child** %2, align 8
  %161 = getelementptr inbounds %struct.child, %struct.child* %160, i32 0, i32 1
  %162 = load %struct.file*, %struct.file** %161, align 8
  %163 = call i8** @construct_command_argv(i8* %159, i8** %7, %struct.file* %162)
  store i8** %163, i8*** %6, align 8
  %164 = load i8*, i8** %7, align 8
  %165 = icmp eq i8* %164, null
  br i1 %165, label %166, label %169

166:                                              ; preds = %156
  %167 = load %struct.child*, %struct.child** %2, align 8
  %168 = getelementptr inbounds %struct.child, %struct.child* %167, i32 0, i32 5
  store i8* null, i8** %168, align 8
  br label %175

169:                                              ; preds = %156
  %170 = load i8*, i8** %7, align 8
  %171 = getelementptr inbounds i8, i8* %170, i32 1
  store i8* %171, i8** %7, align 8
  store i8 0, i8* %170, align 1
  %172 = load i8*, i8** %7, align 8
  %173 = load %struct.child*, %struct.child** %2, align 8
  %174 = getelementptr inbounds %struct.child, %struct.child* %173, i32 0, i32 5
  store i8* %172, i8** %174, align 8
  br label %175

175:                                              ; preds = %169, %166
  %176 = load i32, i32* @just_print_flag, align 4
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %184, label %178

178:                                              ; preds = %175
  %179 = load i8, i8* %4, align 1
  %180 = icmp ne i8 %179, 0
  br i1 %180, label %187, label %181

181:                                              ; preds = %178
  %182 = load i32, i32* @silent_flag, align 4
  %183 = icmp ne i32 %182, 0
  br i1 %183, label %187, label %184

184:                                              ; preds = %181, %175
  %185 = load i8*, i8** %3, align 8
  %186 = call i32 @puts(i8* %185)
  br label %187

187:                                              ; preds = %184, %181, %178
  %188 = load i8**, i8*** %6, align 8
  %189 = icmp eq i8** %188, null
  br i1 %189, label %190, label %192

190:                                              ; preds = %187
  %191 = load %struct.child*, %struct.child** %2, align 8
  call void @start_job(%struct.child* %191)
  br label %380

192:                                              ; preds = %187
  %193 = load i32, i32* @just_print_flag, align 4
  %194 = icmp ne i32 %193, 0
  br i1 %194, label %195, label %205

195:                                              ; preds = %192
  %196 = load i8, i8* %5, align 1
  %197 = icmp ne i8 %196, 0
  br i1 %197, label %205, label %198

198:                                              ; preds = %195
  %199 = load i8**, i8*** %6, align 8
  %200 = getelementptr inbounds i8*, i8** %199, i64 0
  %201 = load i8*, i8** %200, align 8
  call void @free(i8* %201) #10
  %202 = load i8**, i8*** %6, align 8
  %203 = bitcast i8** %202 to i8*
  call void @free(i8* %203) #10
  %204 = load %struct.child*, %struct.child** %2, align 8
  call void @start_job(%struct.child* %204)
  br label %380

205:                                              ; preds = %195, %192
  %206 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %207 = call i32 @fflush(%struct._IO_FILE* %206)
  %208 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %209 = call i32 @fflush(%struct._IO_FILE* %208)
  %210 = load i32, i32* @start_job.bad_stdin, align 4
  %211 = icmp eq i32 %210, -1
  br i1 %211, label %212, label %223

212:                                              ; preds = %205
  %213 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i64 0, i64 0
  %214 = call i32 @pipe(i32* %213) #10
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %222

216:                                              ; preds = %212
  %217 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i64 0, i64 1
  %218 = load i32, i32* %217, align 4
  %219 = call i32 @close(i32 %218)
  %220 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i64 0, i64 0
  %221 = load i32, i32* %220, align 4
  store i32 %221, i32* @start_job.bad_stdin, align 4
  br label %222

222:                                              ; preds = %216, %212
  br label %223

223:                                              ; preds = %222, %205
  %224 = load i32, i32* @good_stdin_used, align 4
  %225 = icmp ne i32 %224, 0
  %226 = xor i1 %225, true
  %227 = zext i1 %226 to i32
  %228 = load %struct.child*, %struct.child** %2, align 8
  %229 = getelementptr inbounds %struct.child, %struct.child* %228, i32 0, i32 7
  %230 = trunc i32 %227 to i8
  %231 = load i8, i8* %229, align 4
  %232 = and i8 %230, 1
  %233 = shl i8 %232, 2
  %234 = and i8 %231, -5
  %235 = or i8 %234, %233
  store i8 %235, i8* %229, align 4
  %236 = zext i8 %232 to i32
  %237 = load %struct.child*, %struct.child** %2, align 8
  %238 = getelementptr inbounds %struct.child, %struct.child* %237, i32 0, i32 7
  %239 = load i8, i8* %238, align 4
  %240 = lshr i8 %239, 2
  %241 = and i8 %240, 1
  %242 = zext i8 %241 to i32
  %243 = icmp ne i32 %242, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %223
  store i32 1, i32* @good_stdin_used, align 4
  br label %245

245:                                              ; preds = %244, %223
  %246 = load %struct.child*, %struct.child** %2, align 8
  %247 = getelementptr inbounds %struct.child, %struct.child* %246, i32 0, i32 7
  %248 = load i8, i8* %247, align 4
  %249 = and i8 %248, -9
  store i8 %249, i8* %247, align 4
  %250 = load %struct.child*, %struct.child** %2, align 8
  %251 = getelementptr inbounds %struct.child, %struct.child* %250, i32 0, i32 2
  %252 = load i8**, i8*** %251, align 8
  %253 = icmp eq i8** %252, null
  br i1 %253, label %254, label %261

254:                                              ; preds = %245
  %255 = load %struct.child*, %struct.child** %2, align 8
  %256 = getelementptr inbounds %struct.child, %struct.child* %255, i32 0, i32 1
  %257 = load %struct.file*, %struct.file** %256, align 8
  %258 = call i8** (%struct.file*, ...) bitcast (i8** (%struct.file*)* @target_environment to i8** (%struct.file*, ...)*)(%struct.file* %257)
  %259 = load %struct.child*, %struct.child** %2, align 8
  %260 = getelementptr inbounds %struct.child, %struct.child* %259, i32 0, i32 2
  store i8** %258, i8*** %260, align 8
  br label %261

261:                                              ; preds = %254, %245
  %262 = call i32 (...) bitcast (i32 ()* @start_remote_job_p to i32 (...)*)()
  %263 = icmp ne i32 %262, 0
  br i1 %263, label %264, label %311

264:                                              ; preds = %261
  %265 = load i8**, i8*** %6, align 8
  %266 = load %struct.child*, %struct.child** %2, align 8
  %267 = getelementptr inbounds %struct.child, %struct.child* %266, i32 0, i32 7
  %268 = load i8, i8* %267, align 4
  %269 = lshr i8 %268, 2
  %270 = and i8 %269, 1
  %271 = zext i8 %270 to i32
  %272 = icmp ne i32 %271, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %264
  br label %276

274:                                              ; preds = %264
  %275 = load i32, i32* @start_job.bad_stdin, align 4
  br label %276

276:                                              ; preds = %274, %273
  %277 = phi i32 [ 0, %273 ], [ %275, %274 ]
  %278 = call i32 (i8**, i32, i32*, i32*, i32*, ...) bitcast (i32 (i8**, i32, i32*, i32*, i32*)* @start_remote_job to i32 (i8**, i32, i32*, i32*, i32*, ...)*)(i8** %265, i32 %277, i32* %9, i32* %10, i32* %11)
  %279 = icmp ne i32 %278, 0
  br i1 %279, label %280, label %281

280:                                              ; preds = %276
  br label %368

281:                                              ; preds = %276
  %282 = load %struct.child*, %struct.child** %2, align 8
  %283 = getelementptr inbounds %struct.child, %struct.child* %282, i32 0, i32 7
  %284 = load i8, i8* %283, align 4
  %285 = lshr i8 %284, 2
  %286 = and i8 %285, 1
  %287 = zext i8 %286 to i32
  %288 = icmp ne i32 %287, 0
  br i1 %288, label %289, label %297

289:                                              ; preds = %281
  %290 = load i32, i32* %11, align 4
  %291 = icmp ne i32 %290, 0
  br i1 %291, label %297, label %292

292:                                              ; preds = %289
  %293 = load %struct.child*, %struct.child** %2, align 8
  %294 = getelementptr inbounds %struct.child, %struct.child* %293, i32 0, i32 7
  %295 = load i8, i8* %294, align 4
  %296 = and i8 %295, -5
  store i8 %296, i8* %294, align 4
  store i32 0, i32* @good_stdin_used, align 4
  br label %297

297:                                              ; preds = %292, %289, %281
  %298 = load i32, i32* %9, align 4
  %299 = load %struct.child*, %struct.child** %2, align 8
  %300 = getelementptr inbounds %struct.child, %struct.child* %299, i32 0, i32 7
  %301 = trunc i32 %298 to i8
  %302 = load i8, i8* %300, align 4
  %303 = and i8 %301, 1
  %304 = and i8 %302, -2
  %305 = or i8 %304, %303
  store i8 %305, i8* %300, align 4
  %306 = zext i8 %303 to i32
  %307 = load i32, i32* %10, align 4
  %308 = load %struct.child*, %struct.child** %2, align 8
  %309 = getelementptr inbounds %struct.child, %struct.child* %308, i32 0, i32 6
  store i32 %307, i32* %309, align 8
  br label %310

310:                                              ; preds = %297
  br label %355

311:                                              ; preds = %261
  %312 = load %struct.child*, %struct.child** %2, align 8
  %313 = getelementptr inbounds %struct.child, %struct.child* %312, i32 0, i32 4
  %314 = load i32, i32* %313, align 8
  %315 = sub i32 %314, 1
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %318

317:                                              ; preds = %311
  call void (...) bitcast (void ()* @make_access to void (...)*)()
  call void (...) bitcast (void ()* @wait_to_start_job to void (...)*)()
  call void (...) bitcast (void ()* @user_access to void (...)*)()
  br label %318

318:                                              ; preds = %317, %311
  %319 = load %struct.child*, %struct.child** %2, align 8
  %320 = getelementptr inbounds %struct.child, %struct.child* %319, i32 0, i32 7
  %321 = load i8, i8* %320, align 4
  %322 = and i8 %321, -2
  store i8 %322, i8* %320, align 4
  %323 = call i32 @vfork() #13
  %324 = load %struct.child*, %struct.child** %2, align 8
  %325 = getelementptr inbounds %struct.child, %struct.child* %324, i32 0, i32 6
  store i32 %323, i32* %325, align 8
  %326 = load %struct.child*, %struct.child** %2, align 8
  %327 = getelementptr inbounds %struct.child, %struct.child* %326, i32 0, i32 6
  %328 = load i32, i32* %327, align 8
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %347

330:                                              ; preds = %318
  %331 = load %struct.child*, %struct.child** %2, align 8
  %332 = getelementptr inbounds %struct.child, %struct.child* %331, i32 0, i32 7
  %333 = load i8, i8* %332, align 4
  %334 = lshr i8 %333, 2
  %335 = and i8 %334, 1
  %336 = zext i8 %335 to i32
  %337 = icmp ne i32 %336, 0
  br i1 %337, label %338, label %339

338:                                              ; preds = %330
  br label %341

339:                                              ; preds = %330
  %340 = load i32, i32* @start_job.bad_stdin, align 4
  br label %341

341:                                              ; preds = %339, %338
  %342 = phi i32 [ 0, %338 ], [ %340, %339 ]
  %343 = load i8**, i8*** %6, align 8
  %344 = load %struct.child*, %struct.child** %2, align 8
  %345 = getelementptr inbounds %struct.child, %struct.child* %344, i32 0, i32 2
  %346 = load i8**, i8*** %345, align 8
  call void @child_execute_job(i32 %342, i32 1, i8** %343, i8** %346)
  br label %354

347:                                              ; preds = %318
  %348 = load %struct.child*, %struct.child** %2, align 8
  %349 = getelementptr inbounds %struct.child, %struct.child* %348, i32 0, i32 6
  %350 = load i32, i32* %349, align 8
  %351 = icmp slt i32 %350, 0
  br i1 %351, label %352, label %353

352:                                              ; preds = %347
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*)* @perror_with_name to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19.328, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.320, i64 0, i64 0))
  br label %368

353:                                              ; preds = %347
  br label %354

354:                                              ; preds = %353, %341
  br label %355

355:                                              ; preds = %354, %310
  %356 = load %struct.child*, %struct.child** %2, align 8
  %357 = getelementptr inbounds %struct.child, %struct.child* %356, i32 0, i32 1
  %358 = load %struct.file*, %struct.file** %357, align 8
  %359 = getelementptr inbounds %struct.file, %struct.file* %358, i32 0, i32 12
  %360 = load i16, i16* %359, align 2
  %361 = and i16 %360, -4
  %362 = or i16 %361, 2
  store i16 %362, i16* %359, align 2
  %363 = load i8**, i8*** %6, align 8
  %364 = getelementptr inbounds i8*, i8** %363, i64 0
  %365 = load i8*, i8** %364, align 8
  call void @free(i8* %365) #10
  %366 = load i8**, i8*** %6, align 8
  %367 = bitcast i8** %366 to i8*
  call void @free(i8* %367) #10
  br label %380

368:                                              ; preds = %352, %280, %155
  %369 = load %struct.child*, %struct.child** %2, align 8
  %370 = getelementptr inbounds %struct.child, %struct.child* %369, i32 0, i32 1
  %371 = load %struct.file*, %struct.file** %370, align 8
  %372 = getelementptr inbounds %struct.file, %struct.file* %371, i32 0, i32 11
  store i16 1, i16* %372, align 8
  %373 = load %struct.child*, %struct.child** %2, align 8
  %374 = getelementptr inbounds %struct.child, %struct.child* %373, i32 0, i32 1
  %375 = load %struct.file*, %struct.file** %374, align 8
  %376 = getelementptr inbounds %struct.file, %struct.file* %375, i32 0, i32 12
  %377 = load i16, i16* %376, align 2
  %378 = and i16 %377, -4
  %379 = or i16 %378, 3
  store i16 %379, i16* %376, align 2
  br label %380

380:                                              ; preds = %368, %355, %198, %190, %35
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_child(%struct.child* %0) #0 {
  %2 = alloca %struct.child*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  store %struct.child* %0, %struct.child** %2, align 8
  %5 = load %struct.child*, %struct.child** %2, align 8
  %6 = getelementptr inbounds %struct.child, %struct.child* %5, i32 0, i32 3
  %7 = load i8**, i8*** %6, align 8
  %8 = icmp ne i8** %7, null
  br i1 %8, label %9, label %36

9:                                                ; preds = %1
  store i32 0, i32* %3, align 4
  br label %10

10:                                               ; preds = %28, %9
  %11 = load i32, i32* %3, align 4
  %12 = load %struct.child*, %struct.child** %2, align 8
  %13 = getelementptr inbounds %struct.child, %struct.child* %12, i32 0, i32 1
  %14 = load %struct.file*, %struct.file** %13, align 8
  %15 = getelementptr inbounds %struct.file, %struct.file* %14, i32 0, i32 3
  %16 = load %struct.commands*, %struct.commands** %15, align 8
  %17 = getelementptr inbounds %struct.commands, %struct.commands* %16, i32 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = icmp ult i32 %11, %18
  br i1 %19, label %20, label %31

20:                                               ; preds = %10
  %21 = load %struct.child*, %struct.child** %2, align 8
  %22 = getelementptr inbounds %struct.child, %struct.child* %21, i32 0, i32 3
  %23 = load i8**, i8*** %22, align 8
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8*, i8** %23, i64 %25
  %27 = load i8*, i8** %26, align 8
  call void @free(i8* %27) #10
  br label %28

28:                                               ; preds = %20
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  br label %10

31:                                               ; preds = %10
  %32 = load %struct.child*, %struct.child** %2, align 8
  %33 = getelementptr inbounds %struct.child, %struct.child* %32, i32 0, i32 3
  %34 = load i8**, i8*** %33, align 8
  %35 = bitcast i8** %34 to i8*
  call void @free(i8* %35) #10
  br label %36

36:                                               ; preds = %31, %1
  %37 = load %struct.child*, %struct.child** %2, align 8
  %38 = getelementptr inbounds %struct.child, %struct.child* %37, i32 0, i32 2
  %39 = load i8**, i8*** %38, align 8
  %40 = icmp ne i8** %39, null
  br i1 %40, label %41, label %58

41:                                               ; preds = %36
  %42 = load %struct.child*, %struct.child** %2, align 8
  %43 = getelementptr inbounds %struct.child, %struct.child* %42, i32 0, i32 2
  %44 = load i8**, i8*** %43, align 8
  store i8** %44, i8*** %4, align 8
  br label %45

45:                                               ; preds = %49, %41
  %46 = load i8**, i8*** %4, align 8
  %47 = load i8*, i8** %46, align 8
  %48 = icmp ne i8* %47, null
  br i1 %48, label %49, label %53

49:                                               ; preds = %45
  %50 = load i8**, i8*** %4, align 8
  %51 = getelementptr inbounds i8*, i8** %50, i32 1
  store i8** %51, i8*** %4, align 8
  %52 = load i8*, i8** %50, align 8
  call void @free(i8* %52) #10
  br label %45

53:                                               ; preds = %45
  %54 = load %struct.child*, %struct.child** %2, align 8
  %55 = getelementptr inbounds %struct.child, %struct.child* %54, i32 0, i32 2
  %56 = load i8**, i8*** %55, align 8
  %57 = bitcast i8** %56 to i8*
  call void @free(i8* %57) #10
  br label %58

58:                                               ; preds = %53, %36
  %59 = load %struct.child*, %struct.child** %2, align 8
  %60 = bitcast %struct.child* %59 to i8*
  call void @free(i8* %60) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8** @construct_command_argv(i8* %0, i8** %1, %struct.file* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca %struct.file*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8**, align 8
  store i8* %0, i8** %4, align 8
  store i8** %1, i8*** %5, align 8
  store %struct.file* %2, %struct.file** %6, align 8
  %10 = load %struct.file*, %struct.file** %6, align 8
  %11 = call i8* (i8*, %struct.file*, ...) bitcast (i8* (i8*, %struct.file*)* @allocated_variable_expand_for_file to i8* (i8*, %struct.file*, ...)*)(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12.334, i64 0, i64 0), %struct.file* %10)
  store i8* %11, i8** %7, align 8
  %12 = load %struct.file*, %struct.file** %6, align 8
  %13 = call i8* (i8*, %struct.file*, ...) bitcast (i8* (i8*, %struct.file*)* @allocated_variable_expand_for_file to i8* (i8*, %struct.file*, ...)*)(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13.335, i64 0, i64 0), %struct.file* %12)
  store i8* %13, i8** %8, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = load i8**, i8*** %5, align 8
  %16 = load i8*, i8** %7, align 8
  %17 = load i8*, i8** %8, align 8
  %18 = call i8** @construct_command_argv_internal(i8* %14, i8** %15, i8* %16, i8* %17)
  store i8** %18, i8*** %9, align 8
  %19 = load i8*, i8** %7, align 8
  call void @free(i8* %19) #10
  %20 = load i8*, i8** %8, align 8
  call void @free(i8* %20) #10
  %21 = load i8**, i8*** %9, align 8
  ret i8** %21
}

; Function Attrs: nounwind returns_twice
declare dso_local i32 @vfork() #7

; Function Attrs: noinline nounwind uwtable
define dso_local void @child_execute_job(i32 %0, i32 %1, i8** %2, i8** %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8**, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i32 %1, i32* %6, align 4
  store i8** %2, i8*** %7, align 8
  store i8** %3, i8*** %8, align 8
  %11 = load i32, i32* %5, align 4
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %4
  %14 = load i32, i32* %5, align 4
  %15 = call i32 @dup2(i32 %14, i32 0) #10
  br label %16

16:                                               ; preds = %13, %4
  %17 = load i32, i32* %6, align 4
  %18 = icmp ne i32 %17, 1
  br i1 %18, label %19, label %22

19:                                               ; preds = %16
  %20 = load i32, i32* %6, align 4
  %21 = call i32 @dup2(i32 %20, i32 1) #10
  br label %22

22:                                               ; preds = %19, %16
  %23 = call i32 @getdtablesize() #10
  store i32 %23, i32* %10, align 4
  store i32 3, i32* %9, align 4
  br label %24

24:                                               ; preds = %31, %22
  %25 = load i32, i32* %9, align 4
  %26 = load i32, i32* %10, align 4
  %27 = icmp slt i32 %25, %26
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = load i32, i32* %9, align 4
  %30 = call i32 @close(i32 %29)
  br label %31

31:                                               ; preds = %28
  %32 = load i32, i32* %9, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %9, align 4
  br label %24

34:                                               ; preds = %24
  call void @unblock_signals()
  %35 = load i8**, i8*** %7, align 8
  %36 = load i8**, i8*** %8, align 8
  call void @exec_command(i8** %35, i8** %36)
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @dup2(i32, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @getdtablesize() #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @exec_command(i8** %0, i8** %1) #0 {
  %3 = alloca i8**, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca [4096 x i8], align 16
  %8 = alloca i8**, align 8
  %9 = alloca [4096 x i8], align 16
  %10 = alloca i8*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i32, align 4
  store i8** %0, i8*** %3, align 8
  store i8** %1, i8*** %4, align 8
  store i8* null, i8** %6, align 8
  store i8* null, i8** %5, align 8
  %13 = load i8**, i8*** %4, align 8
  store i8** %13, i8*** %8, align 8
  br label %14

14:                                               ; preds = %52, %2
  %15 = load i8**, i8*** %8, align 8
  %16 = load i8*, i8** %15, align 8
  %17 = icmp ne i8* %16, null
  br i1 %17, label %18, label %55

18:                                               ; preds = %14
  %19 = load i8*, i8** %5, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %30

21:                                               ; preds = %18
  %22 = load i8**, i8*** %8, align 8
  %23 = load i8*, i8** %22, align 8
  %24 = call i32 @strncmp(i8* %23, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.329, i64 0, i64 0), i64 6) #9
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %21
  %27 = load i8**, i8*** %8, align 8
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 6
  store i8* %29, i8** %5, align 8
  br label %51

30:                                               ; preds = %21, %18
  %31 = load i8*, i8** %6, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %42

33:                                               ; preds = %30
  %34 = load i8**, i8*** %8, align 8
  %35 = load i8*, i8** %34, align 8
  %36 = call i32 @strncmp(i8* %35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8.330, i64 0, i64 0), i64 5) #9
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %33
  %39 = load i8**, i8*** %8, align 8
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 5
  store i8* %41, i8** %6, align 8
  br label %50

42:                                               ; preds = %33, %30
  %43 = load i8*, i8** %6, align 8
  %44 = icmp ne i8* %43, null
  br i1 %44, label %45, label %49

45:                                               ; preds = %42
  %46 = load i8*, i8** %5, align 8
  %47 = icmp ne i8* %46, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  br label %55

49:                                               ; preds = %45, %42
  br label %50

50:                                               ; preds = %49, %38
  br label %51

51:                                               ; preds = %50, %26
  br label %52

52:                                               ; preds = %51
  %53 = load i8**, i8*** %8, align 8
  %54 = getelementptr inbounds i8*, i8** %53, i32 1
  store i8** %54, i8*** %8, align 8
  br label %14

55:                                               ; preds = %48, %14
  call void (...) bitcast (void ()* @child_access to void (...)*)()
  %56 = load i8**, i8*** %3, align 8
  %57 = getelementptr inbounds i8*, i8** %56, i64 0
  %58 = load i8*, i8** %57, align 8
  %59 = load i8*, i8** %6, align 8
  %60 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i64 0, i64 0
  %61 = call i32 @search_path(i8* %58, i8* %59, i8* %60)
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %55
  %64 = load i8**, i8*** %3, align 8
  %65 = getelementptr inbounds i8*, i8** %64, i64 0
  %66 = load i8*, i8** %65, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9.331, i64 0, i64 0), i8* %66)
  br label %144

67:                                               ; preds = %55
  %68 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i64 0, i64 0
  %69 = load i8**, i8*** %3, align 8
  %70 = load i8**, i8*** %4, align 8
  %71 = call i32 @execve(i8* %68, i8** %69, i8** %70) #10
  %72 = call i32* @__errno_location() #11
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 8
  br i1 %74, label %75, label %141

75:                                               ; preds = %67
  %76 = load i8*, i8** %5, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @default_shell, i64 0, i64 0), i8** %10, align 8
  br label %90

79:                                               ; preds = %75
  %80 = load i8*, i8** %5, align 8
  %81 = load i8*, i8** %6, align 8
  %82 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 0
  %83 = call i32 @search_path(i8* %80, i8* %81, i8* %82)
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %79
  %86 = getelementptr inbounds [4096 x i8], [4096 x i8]* %9, i64 0, i64 0
  store i8* %86, i8** %10, align 8
  br label %89

87:                                               ; preds = %79
  store i8* null, i8** %10, align 8
  %88 = load i8*, i8** %5, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10.332, i64 0, i64 0), i8* %88)
  br label %89

89:                                               ; preds = %87, %85
  br label %90

90:                                               ; preds = %89, %78
  %91 = load i8*, i8** %10, align 8
  %92 = icmp ne i8* %91, null
  br i1 %92, label %93, label %140

93:                                               ; preds = %90
  store i32 1, i32* %12, align 4
  br label %94

94:                                               ; preds = %101, %93
  %95 = load i8**, i8*** %3, align 8
  %96 = load i32, i32* %12, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8*, i8** %95, i64 %97
  %99 = load i8*, i8** %98, align 8
  %100 = icmp ne i8* %99, null
  br i1 %100, label %101, label %104

101:                                              ; preds = %94
  %102 = load i32, i32* %12, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %12, align 4
  br label %94

104:                                              ; preds = %94
  %105 = load i32, i32* %12, align 4
  %106 = add nsw i32 1, %105
  %107 = add nsw i32 %106, 1
  %108 = sext i32 %107 to i64
  %109 = mul i64 %108, 8
  %110 = alloca i8, i64 %109, align 16
  %111 = bitcast i8* %110 to i8**
  store i8** %111, i8*** %11, align 8
  %112 = load i8*, i8** %10, align 8
  %113 = load i8**, i8*** %11, align 8
  %114 = getelementptr inbounds i8*, i8** %113, i64 0
  store i8* %112, i8** %114, align 8
  %115 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i64 0, i64 0
  %116 = load i8**, i8*** %11, align 8
  %117 = getelementptr inbounds i8*, i8** %116, i64 1
  store i8* %115, i8** %117, align 8
  br label %118

118:                                              ; preds = %121, %104
  %119 = load i32, i32* %12, align 4
  %120 = icmp sgt i32 %119, 0
  br i1 %120, label %121, label %134

121:                                              ; preds = %118
  %122 = load i8**, i8*** %3, align 8
  %123 = load i32, i32* %12, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i8*, i8** %122, i64 %124
  %126 = load i8*, i8** %125, align 8
  %127 = load i8**, i8*** %11, align 8
  %128 = load i32, i32* %12, align 4
  %129 = add nsw i32 1, %128
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i8*, i8** %127, i64 %130
  store i8* %126, i8** %131, align 8
  %132 = load i32, i32* %12, align 4
  %133 = add nsw i32 %132, -1
  store i32 %133, i32* %12, align 4
  br label %118

134:                                              ; preds = %118
  %135 = load i8*, i8** %10, align 8
  %136 = load i8**, i8*** %11, align 8
  %137 = load i8**, i8*** %4, align 8
  %138 = call i32 @execve(i8* %135, i8** %136, i8** %137) #10
  %139 = load i8*, i8** %10, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*)* @perror_with_name to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.333, i64 0, i64 0), i8* %139)
  br label %140

140:                                              ; preds = %134, %90
  br label %143

141:                                              ; preds = %67
  %142 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i64 0, i64 0
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*)* @perror_with_name to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.333, i64 0, i64 0), i8* %142)
  br label %143

143:                                              ; preds = %141, %140
  br label %144

144:                                              ; preds = %143, %63
  call void @_exit(i32 127) #14
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @search_path(i8* %0, i8* %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.stat, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  %13 = load i8*, i8** %6, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %3
  %16 = load i8*, i8** %6, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 0
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %15, %3
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @default_path, i64 0, i64 0), i8** %6, align 8
  br label %22

22:                                               ; preds = %21, %15
  %23 = load i8*, i8** %5, align 8
  %24 = call i8* @strchr(i8* %23, i32 47) #9
  %25 = icmp ne i8* %24, null
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = load i8*, i8** %7, align 8
  %28 = load i8*, i8** %5, align 8
  %29 = call i8* @strcpy(i8* %27, i8* %28) #10
  store i32 1, i32* %4, align 4
  br label %159

30:                                               ; preds = %22
  %31 = load i32, i32* @search_path.ngroups, align 4
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %33, label %35

33:                                               ; preds = %30
  %34 = call i32 @getgroups(i32 65536, i32* getelementptr inbounds ([65536 x i32], [65536 x i32]* @search_path.groups, i64 0, i64 0)) #10
  store i32 %34, i32* @search_path.ngroups, align 4
  br label %35

35:                                               ; preds = %33, %30
  %36 = load i8*, i8** %5, align 8
  %37 = call i64 @strlen(i8* %36) #9
  %38 = add i64 %37, 1
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %8, align 4
  br label %40

40:                                               ; preds = %152, %35
  %41 = load i8*, i8** %6, align 8
  %42 = call i8* @strchr(i8* %41, i32 58) #9
  store i8* %42, i8** %11, align 8
  %43 = load i8*, i8** %11, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = load i8*, i8** %6, align 8
  %47 = load i8*, i8** %6, align 8
  %48 = call i64 @strlen(i8* %47) #9
  %49 = getelementptr inbounds i8, i8* %46, i64 %48
  store i8* %49, i8** %11, align 8
  br label %50

50:                                               ; preds = %45, %40
  %51 = load i8*, i8** %11, align 8
  %52 = load i8*, i8** %6, align 8
  %53 = icmp eq i8* %51, %52
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load i8*, i8** %7, align 8
  %56 = load i8*, i8** %5, align 8
  %57 = load i32, i32* %8, align 4
  %58 = zext i32 %57 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %55, i8* align 1 %56, i64 %58, i1 false)
  br label %85

59:                                               ; preds = %50
  %60 = load i8*, i8** %7, align 8
  %61 = load i8*, i8** %6, align 8
  %62 = load i8*, i8** %11, align 8
  %63 = load i8*, i8** %6, align 8
  %64 = ptrtoint i8* %62 to i64
  %65 = ptrtoint i8* %63 to i64
  %66 = sub i64 %64, %65
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* align 1 %61, i64 %66, i1 false)
  %67 = load i8*, i8** %7, align 8
  %68 = load i8*, i8** %11, align 8
  %69 = load i8*, i8** %6, align 8
  %70 = ptrtoint i8* %68 to i64
  %71 = ptrtoint i8* %69 to i64
  %72 = sub i64 %70, %71
  %73 = getelementptr inbounds i8, i8* %67, i64 %72
  store i8 47, i8* %73, align 1
  %74 = load i8*, i8** %7, align 8
  %75 = load i8*, i8** %11, align 8
  %76 = load i8*, i8** %6, align 8
  %77 = ptrtoint i8* %75 to i64
  %78 = ptrtoint i8* %76 to i64
  %79 = sub i64 %77, %78
  %80 = getelementptr inbounds i8, i8* %74, i64 %79
  %81 = getelementptr inbounds i8, i8* %80, i64 1
  %82 = load i8*, i8** %5, align 8
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* align 1 %82, i64 %84, i1 false)
  br label %85

85:                                               ; preds = %59, %54
  %86 = load i8*, i8** %7, align 8
  %87 = call i32 @stat(i8* %86, %struct.stat* %9) #10
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %149

89:                                               ; preds = %85
  %90 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = and i32 %91, 61440
  %93 = icmp eq i32 %92, 32768
  br i1 %93, label %94, label %149

94:                                               ; preds = %89
  %95 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 4
  %96 = load i32, i32* %95, align 4
  %97 = call i32 @geteuid() #10
  %98 = icmp eq i32 %96, %97
  br i1 %98, label %99, label %103

99:                                               ; preds = %94
  %100 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 3
  %101 = load i32, i32* %100, align 8
  %102 = and i32 %101, 64
  store i32 %102, i32* %10, align 4
  br label %144

103:                                              ; preds = %94
  %104 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 5
  %105 = load i32, i32* %104, align 8
  %106 = call i32 @getegid() #10
  %107 = icmp eq i32 %105, %106
  br i1 %107, label %108, label %112

108:                                              ; preds = %103
  %109 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 3
  %110 = load i32, i32* %109, align 8
  %111 = and i32 %110, 8
  store i32 %111, i32* %10, align 4
  br label %143

112:                                              ; preds = %103
  store i32 0, i32* %12, align 4
  br label %113

113:                                              ; preds = %127, %112
  %114 = load i32, i32* %12, align 4
  %115 = load i32, i32* @search_path.ngroups, align 4
  %116 = icmp slt i32 %114, %115
  br i1 %116, label %117, label %130

117:                                              ; preds = %113
  %118 = load i32, i32* %12, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [65536 x i32], [65536 x i32]* @search_path.groups, i64 0, i64 %119
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 5
  %123 = load i32, i32* %122, align 8
  %124 = icmp eq i32 %121, %123
  br i1 %124, label %125, label %126

125:                                              ; preds = %117
  br label %130

126:                                              ; preds = %117
  br label %127

127:                                              ; preds = %126
  %128 = load i32, i32* %12, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %12, align 4
  br label %113

130:                                              ; preds = %125, %113
  %131 = load i32, i32* %12, align 4
  %132 = load i32, i32* @search_path.ngroups, align 4
  %133 = icmp slt i32 %131, %132
  br i1 %133, label %134, label %138

134:                                              ; preds = %130
  %135 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 3
  %136 = load i32, i32* %135, align 8
  %137 = and i32 %136, 8
  store i32 %137, i32* %10, align 4
  br label %142

138:                                              ; preds = %130
  %139 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 3
  %140 = load i32, i32* %139, align 8
  %141 = and i32 %140, 1
  store i32 %141, i32* %10, align 4
  br label %142

142:                                              ; preds = %138, %134
  br label %143

143:                                              ; preds = %142, %108
  br label %144

144:                                              ; preds = %143, %99
  %145 = load i32, i32* %10, align 4
  %146 = icmp ne i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  store i32 1, i32* %4, align 4
  br label %159

148:                                              ; preds = %144
  br label %149

149:                                              ; preds = %148, %89, %85
  %150 = load i8*, i8** %11, align 8
  %151 = getelementptr inbounds i8, i8* %150, i64 1
  store i8* %151, i8** %6, align 8
  br label %152

152:                                              ; preds = %149
  %153 = load i8*, i8** %6, align 8
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %40, label %157

157:                                              ; preds = %152
  br label %158

158:                                              ; preds = %157
  store i32 0, i32* %4, align 4
  br label %159

159:                                              ; preds = %158, %147, %26
  %160 = load i32, i32* %4, align 4
  ret i32 %160
}

; Function Attrs: nounwind
declare dso_local i32 @execve(i8*, i8**, i8**) #2

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #8

; Function Attrs: nounwind
declare dso_local i32 @getgroups(i32, i32*) #2

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getegid() #2

; Function Attrs: noinline nounwind uwtable
define internal i8** @construct_command_argv_internal(i8* %0, i8** %1, i8* %2, i8* %3) #0 {
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8**, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  store i8* %0, i8** %6, align 8
  store i8** %1, i8*** %7, align 8
  store i8* %2, i8** %8, align 8
  store i8* %3, i8** %9, align 8
  store i8** null, i8*** %15, align 8
  %20 = load i8*, i8** %8, align 8
  %21 = icmp ne i8* %20, null
  br i1 %21, label %22, label %27

22:                                               ; preds = %4
  %23 = load i8*, i8** %8, align 8
  %24 = call i32 @strcmp(i8* %23, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @default_shell, i64 0, i64 0)) #9
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  br label %261

27:                                               ; preds = %22, %4
  %28 = load i8*, i8** %9, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %30, label %58

30:                                               ; preds = %27
  %31 = load i8*, i8** %9, align 8
  store i8* %31, i8** %12, align 8
  br label %32

32:                                               ; preds = %54, %30
  %33 = load i8*, i8** %12, align 8
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %57

37:                                               ; preds = %32
  %38 = load i8*, i8** %12, align 8
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp ne i32 %40, 32
  br i1 %41, label %42, label %53

42:                                               ; preds = %37
  %43 = load i8*, i8** %12, align 8
  %44 = load i8, i8* %43, align 1
  %45 = sext i8 %44 to i32
  %46 = icmp ne i32 %45, 9
  br i1 %46, label %47, label %53

47:                                               ; preds = %42
  %48 = load i8*, i8** %12, align 8
  %49 = load i8, i8* %48, align 1
  %50 = sext i8 %49 to i32
  %51 = icmp ne i32 %50, 10
  br i1 %51, label %52, label %53

52:                                               ; preds = %47
  br label %261

53:                                               ; preds = %47, %42, %37
  br label %54

54:                                               ; preds = %53
  %55 = load i8*, i8** %12, align 8
  %56 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %56, i8** %12, align 8
  br label %32

57:                                               ; preds = %32
  br label %58

58:                                               ; preds = %57, %27
  %59 = load i8*, i8** %6, align 8
  %60 = call i64 @strlen(i8* %59) #9
  %61 = add i64 %60, 1
  %62 = trunc i64 %61 to i32
  store i32 %62, i32* %10, align 4
  %63 = load i32, i32* %10, align 4
  %64 = sext i32 %63 to i64
  %65 = mul i64 %64, 8
  %66 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 %65)
  %67 = bitcast i8* %66 to i8**
  store i8** %67, i8*** %15, align 8
  %68 = load i32, i32* %10, align 4
  %69 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %68)
  %70 = load i8**, i8*** %15, align 8
  %71 = getelementptr inbounds i8*, i8** %70, i64 0
  store i8* %69, i8** %71, align 8
  store i8* %69, i8** %12, align 8
  %72 = load i8*, i8** %12, align 8
  %73 = load i32, i32* %10, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %72, i64 %74
  store i8* %75, i8** %13, align 8
  %76 = load i8**, i8*** %7, align 8
  %77 = icmp ne i8** %76, null
  br i1 %77, label %78, label %80

78:                                               ; preds = %58
  %79 = load i8**, i8*** %7, align 8
  store i8* null, i8** %79, align 8
  br label %80

80:                                               ; preds = %78, %58
  store i32 0, i32* %10, align 4
  store i32 0, i32* %14, align 4
  %81 = load i8*, i8** %6, align 8
  store i8* %81, i8** %11, align 8
  br label %82

82:                                               ; preds = %227, %80
  %83 = load i8*, i8** %11, align 8
  %84 = load i8, i8* %83, align 1
  %85 = sext i8 %84 to i32
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %87, label %230

87:                                               ; preds = %82
  %88 = load i8*, i8** %12, align 8
  %89 = load i8*, i8** %13, align 8
  %90 = icmp ugt i8* %88, %89
  br i1 %90, label %91, label %92

91:                                               ; preds = %87
  call void @abort() #12
  unreachable

92:                                               ; preds = %87
  %93 = load i32, i32* %14, align 4
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %95, label %107

95:                                               ; preds = %92
  %96 = load i8*, i8** %11, align 8
  %97 = load i8, i8* %96, align 1
  %98 = sext i8 %97 to i32
  %99 = icmp eq i32 %98, 39
  br i1 %99, label %100, label %101

100:                                              ; preds = %95
  store i32 0, i32* %14, align 4
  br label %106

101:                                              ; preds = %95
  %102 = load i8*, i8** %11, align 8
  %103 = load i8, i8* %102, align 1
  %104 = load i8*, i8** %12, align 8
  %105 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %105, i8** %12, align 8
  store i8 %103, i8* %104, align 1
  br label %106

106:                                              ; preds = %101, %100
  br label %226

107:                                              ; preds = %92
  %108 = load i8*, i8** %11, align 8
  %109 = load i8, i8* %108, align 1
  %110 = sext i8 %109 to i32
  %111 = call i8* @strchr(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @construct_command_argv_internal.sh_chars, i64 0, i64 0), i32 %110) #9
  %112 = icmp ne i8* %111, null
  br i1 %112, label %113, label %114

113:                                              ; preds = %107
  br label %261

114:                                              ; preds = %107
  %115 = load i8*, i8** %11, align 8
  %116 = load i8, i8* %115, align 1
  %117 = sext i8 %116 to i32
  switch i32 %117, label %219 [
    i32 92, label %118
    i32 39, label %137
    i32 10, label %138
    i32 32, label %148
    i32 9, label %148
  ]

118:                                              ; preds = %114
  %119 = load i8*, i8** %11, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 1
  %121 = load i8, i8* %120, align 1
  %122 = sext i8 %121 to i32
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %124, label %136

124:                                              ; preds = %118
  %125 = load i8*, i8** %11, align 8
  %126 = getelementptr inbounds i8, i8* %125, i64 1
  %127 = load i8, i8* %126, align 1
  %128 = sext i8 %127 to i32
  %129 = icmp ne i32 %128, 10
  br i1 %129, label %130, label %136

130:                                              ; preds = %124
  %131 = load i8*, i8** %11, align 8
  %132 = getelementptr inbounds i8, i8* %131, i32 1
  store i8* %132, i8** %11, align 8
  %133 = load i8, i8* %132, align 1
  %134 = load i8*, i8** %12, align 8
  %135 = getelementptr inbounds i8, i8* %134, i32 1
  store i8* %135, i8** %12, align 8
  store i8 %133, i8* %134, align 1
  br label %136

136:                                              ; preds = %130, %124, %118
  br label %224

137:                                              ; preds = %114
  store i32 1, i32* %14, align 4
  br label %224

138:                                              ; preds = %114
  %139 = load i8**, i8*** %7, align 8
  %140 = icmp ne i8** %139, null
  br i1 %140, label %141, label %144

141:                                              ; preds = %138
  %142 = load i8*, i8** %11, align 8
  %143 = load i8**, i8*** %7, align 8
  store i8* %142, i8** %143, align 8
  br label %231

144:                                              ; preds = %138
  %145 = load i8*, i8** %12, align 8
  %146 = getelementptr inbounds i8, i8* %145, i32 1
  store i8* %146, i8** %12, align 8
  store i8 10, i8* %145, align 1
  br label %147

147:                                              ; preds = %144
  br label %224

148:                                              ; preds = %114, %114
  %149 = load i8*, i8** %12, align 8
  %150 = getelementptr inbounds i8, i8* %149, i32 1
  store i8* %150, i8** %12, align 8
  store i8 0, i8* %149, align 1
  %151 = load i8*, i8** %12, align 8
  %152 = load i8**, i8*** %15, align 8
  %153 = load i32, i32* %10, align 4
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* %10, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds i8*, i8** %152, i64 %155
  store i8* %151, i8** %156, align 8
  %157 = load i32, i32* %10, align 4
  %158 = icmp eq i32 %157, 1
  br i1 %158, label %159, label %214

159:                                              ; preds = %148
  store i32 0, i32* %16, align 4
  br label %160

160:                                              ; preds = %210, %159
  %161 = load i32, i32* %16, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds [25 x i8*], [25 x i8*]* @construct_command_argv_internal.sh_cmds, i64 0, i64 %162
  %164 = load i8*, i8** %163, align 8
  %165 = icmp ne i8* %164, null
  br i1 %165, label %166, label %213

166:                                              ; preds = %160
  %167 = load i32, i32* %16, align 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds [25 x i8*], [25 x i8*]* @construct_command_argv_internal.sh_cmds, i64 0, i64 %168
  %170 = load i8*, i8** %169, align 8
  %171 = load i8**, i8*** %15, align 8
  %172 = getelementptr inbounds i8*, i8** %171, i64 0
  %173 = load i8*, i8** %172, align 8
  %174 = icmp eq i8* %170, %173
  br i1 %174, label %208, label %175

175:                                              ; preds = %166
  %176 = load i32, i32* %16, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds [25 x i8*], [25 x i8*]* @construct_command_argv_internal.sh_cmds, i64 0, i64 %177
  %179 = load i8*, i8** %178, align 8
  %180 = load i8, i8* %179, align 1
  %181 = sext i8 %180 to i32
  %182 = load i8**, i8*** %15, align 8
  %183 = getelementptr inbounds i8*, i8** %182, i64 0
  %184 = load i8*, i8** %183, align 8
  %185 = load i8, i8* %184, align 1
  %186 = sext i8 %185 to i32
  %187 = icmp eq i32 %181, %186
  br i1 %187, label %188, label %209

188:                                              ; preds = %175
  %189 = load i32, i32* %16, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds [25 x i8*], [25 x i8*]* @construct_command_argv_internal.sh_cmds, i64 0, i64 %190
  %192 = load i8*, i8** %191, align 8
  %193 = load i8, i8* %192, align 1
  %194 = sext i8 %193 to i32
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %208, label %196

196:                                              ; preds = %188
  %197 = load i32, i32* %16, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [25 x i8*], [25 x i8*]* @construct_command_argv_internal.sh_cmds, i64 0, i64 %198
  %200 = load i8*, i8** %199, align 8
  %201 = getelementptr inbounds i8, i8* %200, i64 1
  %202 = load i8**, i8*** %15, align 8
  %203 = getelementptr inbounds i8*, i8** %202, i64 0
  %204 = load i8*, i8** %203, align 8
  %205 = getelementptr inbounds i8, i8* %204, i64 1
  %206 = call i32 @strcmp(i8* %201, i8* %205) #9
  %207 = icmp ne i32 %206, 0
  br i1 %207, label %209, label %208

208:                                              ; preds = %196, %188, %166
  br label %261

209:                                              ; preds = %196, %175
  br label %210

210:                                              ; preds = %209
  %211 = load i32, i32* %16, align 4
  %212 = add nsw i32 %211, 1
  store i32 %212, i32* %16, align 4
  br label %160

213:                                              ; preds = %160
  br label %214

214:                                              ; preds = %213, %148
  %215 = load i8*, i8** %11, align 8
  %216 = call i8* (i8*, ...) bitcast (i8* (i8*)* @next_token to i8* (i8*, ...)*)(i8* %215)
  store i8* %216, i8** %11, align 8
  %217 = load i8*, i8** %11, align 8
  %218 = getelementptr inbounds i8, i8* %217, i32 -1
  store i8* %218, i8** %11, align 8
  br label %224

219:                                              ; preds = %114
  %220 = load i8*, i8** %11, align 8
  %221 = load i8, i8* %220, align 1
  %222 = load i8*, i8** %12, align 8
  %223 = getelementptr inbounds i8, i8* %222, i32 1
  store i8* %223, i8** %12, align 8
  store i8 %221, i8* %222, align 1
  br label %224

224:                                              ; preds = %219, %214, %147, %137, %136
  br label %225

225:                                              ; preds = %224
  br label %226

226:                                              ; preds = %225, %106
  br label %227

227:                                              ; preds = %226
  %228 = load i8*, i8** %11, align 8
  %229 = getelementptr inbounds i8, i8* %228, i32 1
  store i8* %229, i8** %11, align 8
  br label %82

230:                                              ; preds = %82
  br label %231

231:                                              ; preds = %230, %141
  %232 = load i32, i32* %14, align 4
  %233 = icmp ne i32 %232, 0
  br i1 %233, label %234, label %235

234:                                              ; preds = %231
  br label %261

235:                                              ; preds = %231
  %236 = load i8*, i8** %12, align 8
  store i8 0, i8* %236, align 1
  %237 = load i8**, i8*** %15, align 8
  %238 = load i32, i32* %10, align 4
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds i8*, i8** %237, i64 %239
  %241 = load i8*, i8** %240, align 8
  %242 = getelementptr inbounds i8, i8* %241, i64 0
  %243 = load i8, i8* %242, align 1
  %244 = sext i8 %243 to i32
  %245 = icmp ne i32 %244, 0
  br i1 %245, label %246, label %249

246:                                              ; preds = %235
  %247 = load i32, i32* %10, align 4
  %248 = add nsw i32 %247, 1
  store i32 %248, i32* %10, align 4
  br label %249

249:                                              ; preds = %246, %235
  %250 = load i8**, i8*** %15, align 8
  %251 = load i32, i32* %10, align 4
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds i8*, i8** %250, i64 %252
  store i8* null, i8** %253, align 8
  %254 = load i8**, i8*** %15, align 8
  %255 = getelementptr inbounds i8*, i8** %254, i64 0
  %256 = load i8*, i8** %255, align 8
  %257 = icmp eq i8* %256, null
  br i1 %257, label %258, label %259

258:                                              ; preds = %249
  store i8** null, i8*** %5, align 8
  br label %373

259:                                              ; preds = %249
  %260 = load i8**, i8*** %15, align 8
  store i8** %260, i8*** %5, align 8
  br label %373

261:                                              ; preds = %234, %208, %113, %52, %26
  %262 = load i8**, i8*** %15, align 8
  %263 = icmp ne i8** %262, null
  br i1 %263, label %264, label %270

264:                                              ; preds = %261
  %265 = load i8**, i8*** %15, align 8
  %266 = getelementptr inbounds i8*, i8** %265, i64 0
  %267 = load i8*, i8** %266, align 8
  call void @free(i8* %267) #10
  %268 = load i8**, i8*** %15, align 8
  %269 = bitcast i8** %268 to i8*
  call void @free(i8* %269) #10
  br label %270

270:                                              ; preds = %264, %261
  %271 = load i8*, i8** %8, align 8
  %272 = icmp eq i8* %271, null
  br i1 %272, label %277, label %273

273:                                              ; preds = %270
  %274 = load i8*, i8** %8, align 8
  %275 = call i32 @strcmp(i8* %274, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @default_shell, i64 0, i64 0)) #9
  %276 = icmp ne i32 %275, 0
  br i1 %276, label %293, label %277

277:                                              ; preds = %273, %270
  %278 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 32)
  %279 = bitcast i8* %278 to i8**
  store i8** %279, i8*** %15, align 8
  %280 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @default_shell, i64 0, i64 0), i64 7)
  %281 = load i8**, i8*** %15, align 8
  %282 = getelementptr inbounds i8*, i8** %281, i64 0
  store i8* %280, i8** %282, align 8
  %283 = load i8**, i8*** %15, align 8
  %284 = getelementptr inbounds i8*, i8** %283, i64 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.336, i64 0, i64 0), i8** %284, align 8
  %285 = load i8*, i8** %6, align 8
  %286 = load i8*, i8** %6, align 8
  %287 = call i64 @strlen(i8* %286) #9
  %288 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %285, i64 %287)
  %289 = load i8**, i8*** %15, align 8
  %290 = getelementptr inbounds i8*, i8** %289, i64 2
  store i8* %288, i8** %290, align 8
  %291 = load i8**, i8*** %15, align 8
  %292 = getelementptr inbounds i8*, i8** %291, i64 3
  store i8* null, i8** %292, align 8
  br label %371

293:                                              ; preds = %273
  %294 = load i8*, i8** %8, align 8
  %295 = call i64 @strlen(i8* %294) #9
  %296 = trunc i64 %295 to i32
  store i32 %296, i32* %17, align 4
  %297 = load i8*, i8** %6, align 8
  %298 = call i64 @strlen(i8* %297) #9
  %299 = trunc i64 %298 to i32
  store i32 %299, i32* %18, align 4
  %300 = load i32, i32* %17, align 4
  %301 = zext i32 %300 to i64
  %302 = add i64 %301, 4
  %303 = load i32, i32* %18, align 4
  %304 = mul i32 %303, 2
  %305 = zext i32 %304 to i64
  %306 = add i64 %302, %305
  %307 = add i64 %306, 1
  %308 = alloca i8, i64 %307, align 16
  store i8* %308, i8** %19, align 8
  %309 = load i8*, i8** %19, align 8
  store i8* %309, i8** %12, align 8
  %310 = load i8*, i8** %12, align 8
  %311 = load i8*, i8** %8, align 8
  %312 = load i32, i32* %17, align 4
  %313 = zext i32 %312 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %310, i8* align 1 %311, i64 %313, i1 false)
  %314 = load i32, i32* %17, align 4
  %315 = load i8*, i8** %12, align 8
  %316 = zext i32 %314 to i64
  %317 = getelementptr inbounds i8, i8* %315, i64 %316
  store i8* %317, i8** %12, align 8
  %318 = load i8*, i8** %12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %318, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @construct_command_argv_internal.minus_c, i64 0, i64 0), i64 4, i1 false)
  %319 = load i8*, i8** %12, align 8
  %320 = getelementptr inbounds i8, i8* %319, i64 4
  store i8* %320, i8** %12, align 8
  %321 = load i8*, i8** %6, align 8
  store i8* %321, i8** %11, align 8
  br label %322

322:                                              ; preds = %363, %293
  %323 = load i8*, i8** %11, align 8
  %324 = load i8, i8* %323, align 1
  %325 = sext i8 %324 to i32
  %326 = icmp ne i32 %325, 0
  br i1 %326, label %327, label %366

327:                                              ; preds = %322
  %328 = load i8*, i8** %11, align 8
  %329 = load i8, i8* %328, align 1
  %330 = sext i8 %329 to i32
  %331 = icmp eq i32 %330, 92
  br i1 %331, label %355, label %332

332:                                              ; preds = %327
  %333 = load i8*, i8** %11, align 8
  %334 = load i8, i8* %333, align 1
  %335 = sext i8 %334 to i32
  %336 = icmp eq i32 %335, 39
  br i1 %336, label %355, label %337

337:                                              ; preds = %332
  %338 = call i16** @__ctype_b_loc() #11
  %339 = load i16*, i16** %338, align 8
  %340 = load i8*, i8** %11, align 8
  %341 = load i8, i8* %340, align 1
  %342 = sext i8 %341 to i32
  %343 = sext i32 %342 to i64
  %344 = getelementptr inbounds i16, i16* %339, i64 %343
  %345 = load i16, i16* %344, align 2
  %346 = zext i16 %345 to i32
  %347 = and i32 %346, 8192
  %348 = icmp ne i32 %347, 0
  br i1 %348, label %355, label %349

349:                                              ; preds = %337
  %350 = load i8*, i8** %11, align 8
  %351 = load i8, i8* %350, align 1
  %352 = sext i8 %351 to i32
  %353 = call i8* @strchr(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @construct_command_argv_internal.sh_chars, i64 0, i64 0), i32 %352) #9
  %354 = icmp ne i8* %353, null
  br i1 %354, label %355, label %358

355:                                              ; preds = %349, %337, %332, %327
  %356 = load i8*, i8** %12, align 8
  %357 = getelementptr inbounds i8, i8* %356, i32 1
  store i8* %357, i8** %12, align 8
  store i8 92, i8* %356, align 1
  br label %358

358:                                              ; preds = %355, %349
  %359 = load i8*, i8** %11, align 8
  %360 = load i8, i8* %359, align 1
  %361 = load i8*, i8** %12, align 8
  %362 = getelementptr inbounds i8, i8* %361, i32 1
  store i8* %362, i8** %12, align 8
  store i8 %360, i8* %361, align 1
  br label %363

363:                                              ; preds = %358
  %364 = load i8*, i8** %11, align 8
  %365 = getelementptr inbounds i8, i8* %364, i32 1
  store i8* %365, i8** %11, align 8
  br label %322

366:                                              ; preds = %322
  %367 = load i8*, i8** %12, align 8
  store i8 0, i8* %367, align 1
  %368 = load i8*, i8** %19, align 8
  %369 = load i8**, i8*** %7, align 8
  %370 = call i8** @construct_command_argv_internal(i8* %368, i8** %369, i8* null, i8* null)
  store i8** %370, i8*** %15, align 8
  br label %371

371:                                              ; preds = %366, %277
  %372 = load i8**, i8*** %15, align 8
  store i8** %372, i8*** %5, align 8
  br label %373

373:                                              ; preds = %371, %259, %258
  %374 = load i8**, i8*** %5, align 8
  ret i8** %374
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @wait_for_children(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  call void @push_signals_blocked_p(i32 1)
  %5 = load i32, i32* %4, align 4
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = load %struct.child*, %struct.child** @children, align 8
  %9 = icmp ne %struct.child* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = load i32, i32* @shell_function_pid, align 4
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %10, %7
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %15 = call i32 @fflush(%struct._IO_FILE* %14)
  call void (i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, ...)*)(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5.368, i64 0, i64 0))
  br label %16

16:                                               ; preds = %13, %10, %2
  %17 = load i32, i32* %3, align 4
  %18 = sub nsw i32 0, %17
  %19 = call i32 @child_handler(i32 %18)
  call void @pop_signals_blocked_p()
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @new_job(%struct.file* %0) #0 {
  %2 = alloca %struct.file*, align 8
  %3 = alloca %struct.commands*, align 8
  %4 = alloca %struct.child*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  store %struct.file* %0, %struct.file** %2, align 8
  %7 = load %struct.file*, %struct.file** %2, align 8
  %8 = getelementptr inbounds %struct.file, %struct.file* %7, i32 0, i32 3
  %9 = load %struct.commands*, %struct.commands** %8, align 8
  store %struct.commands* %9, %struct.commands** %3, align 8
  %10 = load %struct.commands*, %struct.commands** %3, align 8
  call void (%struct.commands*, ...) bitcast (void (%struct.commands*)* @chop_commands to void (%struct.commands*, ...)*)(%struct.commands* %10)
  %11 = load i32, i32* @job_slots, align 4
  %12 = icmp ugt i32 %11, 0
  br i1 %12, label %13, label %20

13:                                               ; preds = %1
  br label %14

14:                                               ; preds = %18, %13
  %15 = load i32, i32* @job_slots_used, align 4
  %16 = load i32, i32* @job_slots, align 4
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  call void @wait_for_children(i32 1, i32 0)
  br label %14

19:                                               ; preds = %14
  br label %20

20:                                               ; preds = %19, %1
  %21 = load %struct.commands*, %struct.commands** %3, align 8
  %22 = getelementptr inbounds %struct.commands, %struct.commands* %21, i32 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = zext i32 %23 to i64
  %25 = mul i64 %24, 8
  %26 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 %25)
  %27 = bitcast i8* %26 to i8**
  store i8** %27, i8*** %5, align 8
  store i32 0, i32* %6, align 4
  br label %28

28:                                               ; preds = %48, %20
  %29 = load i32, i32* %6, align 4
  %30 = load %struct.commands*, %struct.commands** %3, align 8
  %31 = getelementptr inbounds %struct.commands, %struct.commands* %30, i32 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = icmp ult i32 %29, %32
  br i1 %33, label %34, label %51

34:                                               ; preds = %28
  %35 = load %struct.commands*, %struct.commands** %3, align 8
  %36 = getelementptr inbounds %struct.commands, %struct.commands* %35, i32 0, i32 4
  %37 = load i8**, i8*** %36, align 8
  %38 = load i32, i32* %6, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8*, i8** %37, i64 %39
  %41 = load i8*, i8** %40, align 8
  %42 = load %struct.file*, %struct.file** %2, align 8
  %43 = call i8* (i8*, %struct.file*, ...) bitcast (i8* (i8*, %struct.file*)* @allocated_variable_expand_for_file to i8* (i8*, %struct.file*, ...)*)(i8* %41, %struct.file* %42)
  %44 = load i8**, i8*** %5, align 8
  %45 = load i32, i32* %6, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i8*, i8** %44, i64 %46
  store i8* %43, i8** %47, align 8
  br label %48

48:                                               ; preds = %34
  %49 = load i32, i32* %6, align 4
  %50 = add i32 %49, 1
  store i32 %50, i32* %6, align 4
  br label %28

51:                                               ; preds = %28
  call void @push_signals_blocked_p(i32 1)
  %52 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 56)
  %53 = bitcast i8* %52 to %struct.child*
  store %struct.child* %53, %struct.child** %4, align 8
  %54 = load %struct.file*, %struct.file** %2, align 8
  %55 = load %struct.child*, %struct.child** %4, align 8
  %56 = getelementptr inbounds %struct.child, %struct.child* %55, i32 0, i32 1
  store %struct.file* %54, %struct.file** %56, align 8
  %57 = load i8**, i8*** %5, align 8
  %58 = load %struct.child*, %struct.child** %4, align 8
  %59 = getelementptr inbounds %struct.child, %struct.child* %58, i32 0, i32 3
  store i8** %57, i8*** %59, align 8
  %60 = load %struct.child*, %struct.child** %4, align 8
  %61 = getelementptr inbounds %struct.child, %struct.child* %60, i32 0, i32 4
  store i32 0, i32* %61, align 8
  %62 = load %struct.child*, %struct.child** %4, align 8
  %63 = getelementptr inbounds %struct.child, %struct.child* %62, i32 0, i32 5
  store i8* null, i8** %63, align 8
  %64 = load %struct.child*, %struct.child** %4, align 8
  %65 = getelementptr inbounds %struct.child, %struct.child* %64, i32 0, i32 2
  store i8** null, i8*** %65, align 8
  %66 = load %struct.child*, %struct.child** %4, align 8
  call void @start_job(%struct.child* %66)
  %67 = load %struct.file*, %struct.file** %2, align 8
  %68 = getelementptr inbounds %struct.file, %struct.file* %67, i32 0, i32 12
  %69 = load i16, i16* %68, align 2
  %70 = and i16 %69, 3
  %71 = zext i16 %70 to i32
  switch i32 %71, label %82 [
    i32 2, label %72
    i32 3, label %79
  ]

72:                                               ; preds = %51
  %73 = load %struct.child*, %struct.child** @children, align 8
  %74 = load %struct.child*, %struct.child** %4, align 8
  %75 = getelementptr inbounds %struct.child, %struct.child* %74, i32 0, i32 0
  store %struct.child* %73, %struct.child** %75, align 8
  %76 = load %struct.child*, %struct.child** %4, align 8
  store %struct.child* %76, %struct.child** @children, align 8
  %77 = load i32, i32* @job_slots_used, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* @job_slots_used, align 4
  br label %91

79:                                               ; preds = %51
  %80 = load %struct.child*, %struct.child** %4, align 8
  call void @free_child(%struct.child* %80)
  %81 = load %struct.file*, %struct.file** %2, align 8
  call void (%struct.file*, ...) bitcast (void (%struct.file*)* @notice_finished_file to void (%struct.file*, ...)*)(%struct.file* %81)
  br label %91

82:                                               ; preds = %51
  %83 = load %struct.file*, %struct.file** %2, align 8
  %84 = getelementptr inbounds %struct.file, %struct.file* %83, i32 0, i32 1
  %85 = load i8*, i8** %84, align 8
  %86 = load %struct.file*, %struct.file** %2, align 8
  %87 = getelementptr inbounds %struct.file, %struct.file* %86, i32 0, i32 12
  %88 = load i16, i16* %87, align 2
  %89 = and i16 %88, 3
  %90 = zext i16 %89 to i32
  call void (i8*, i8*, i32, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, i32, ...)*)(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.6.371, i64 0, i64 0), i8* %85, i32 %90)
  call void @abort() #12
  unreachable

91:                                               ; preds = %79, %72
  call void @pop_signals_blocked_p()
  %92 = load i32, i32* @job_slots, align 4
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %111

94:                                               ; preds = %91
  %95 = load %struct.file*, %struct.file** %2, align 8
  %96 = getelementptr inbounds %struct.file, %struct.file* %95, i32 0, i32 12
  %97 = load i16, i16* %96, align 2
  %98 = and i16 %97, 3
  %99 = zext i16 %98 to i32
  %100 = icmp eq i32 %99, 2
  br i1 %100, label %101, label %111

101:                                              ; preds = %94
  br label %102

102:                                              ; preds = %109, %101
  %103 = load %struct.file*, %struct.file** %2, align 8
  %104 = getelementptr inbounds %struct.file, %struct.file* %103, i32 0, i32 12
  %105 = load i16, i16* %104, align 2
  %106 = and i16 %105, 3
  %107 = zext i16 %106 to i32
  %108 = icmp ne i32 %107, 3
  br i1 %108, label %109, label %110

109:                                              ; preds = %102
  call void @wait_for_children(i32 1, i32 0)
  br label %102

110:                                              ; preds = %102
  br label %111

111:                                              ; preds = %110, %94, %91
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @wait_to_start_job() #0 {
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main(i32 %0, i8** %1, i8** %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca %struct.file*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8**, align 8
  %14 = alloca i64, align 8
  %15 = alloca %struct.dep*, align 8
  %16 = alloca %struct.dep*, align 8
  %17 = alloca %struct.dep*, align 8
  %18 = alloca [4096 x i8], align 16
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca %struct.variable*, align 8
  %25 = alloca i32, align 4
  %26 = alloca %struct._IO_FILE*, align 8
  %27 = alloca [2048 x i8], align 16
  %28 = alloca i32, align 4
  %29 = alloca i64*, align 8
  %30 = alloca i32, align 4
  %31 = alloca %struct.dep*, align 8
  %32 = alloca %struct.dep*, align 8
  %33 = alloca %struct.file*, align 8
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca %struct.dep*, align 8
  %38 = alloca i64, align 8
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i8*, align 8
  %42 = alloca i8, align 1
  %43 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  store i32 %0, i32* %5, align 4
  store i8** %1, i8*** %6, align 8
  store i8** %2, i8*** %7, align 8
  store %struct.dep* null, %struct.dep** %15, align 8
  store %struct.file* null, %struct.file** @default_goal_file, align 8
  store i8* null, i8** @reading_filename, align 8
  store i32* null, i32** @reading_lineno_ptr, align 8
  store i32 0, i32* @fatal_signal_mask, align 4
  %44 = call void (i32)* @signal(i32 1, void (i32)* bitcast (i32 (i32)* @fatal_error_signal to void (i32)*)) #10
  %45 = bitcast void (i32)* %44 to i8*
  %46 = icmp eq i8* %45, inttoptr (i64 1 to i8*)
  br i1 %46, label %47, label %50

47:                                               ; preds = %3
  %48 = call void (i32)* @signal(i32 1, void (i32)* inttoptr (i64 1 to void (i32)*)) #10
  %49 = bitcast void (i32)* %48 to i8*
  br label %53

50:                                               ; preds = %3
  %51 = load i32, i32* @fatal_signal_mask, align 4
  %52 = or i32 %51, 1
  store i32 %52, i32* @fatal_signal_mask, align 4
  br label %53

53:                                               ; preds = %50, %47
  %54 = call void (i32)* @signal(i32 3, void (i32)* bitcast (i32 (i32)* @fatal_error_signal to void (i32)*)) #10
  %55 = bitcast void (i32)* %54 to i8*
  %56 = icmp eq i8* %55, inttoptr (i64 1 to i8*)
  br i1 %56, label %57, label %60

57:                                               ; preds = %53
  %58 = call void (i32)* @signal(i32 3, void (i32)* inttoptr (i64 1 to void (i32)*)) #10
  %59 = bitcast void (i32)* %58 to i8*
  br label %63

60:                                               ; preds = %53
  %61 = load i32, i32* @fatal_signal_mask, align 4
  %62 = or i32 %61, 4
  store i32 %62, i32* @fatal_signal_mask, align 4
  br label %63

63:                                               ; preds = %60, %57
  %64 = call void (i32)* @signal(i32 2, void (i32)* bitcast (i32 (i32)* @fatal_error_signal to void (i32)*)) #10
  %65 = bitcast void (i32)* %64 to i8*
  %66 = icmp eq i8* %65, inttoptr (i64 1 to i8*)
  br i1 %66, label %67, label %70

67:                                               ; preds = %63
  %68 = call void (i32)* @signal(i32 2, void (i32)* inttoptr (i64 1 to void (i32)*)) #10
  %69 = bitcast void (i32)* %68 to i8*
  br label %73

70:                                               ; preds = %63
  %71 = load i32, i32* @fatal_signal_mask, align 4
  %72 = or i32 %71, 2
  store i32 %72, i32* @fatal_signal_mask, align 4
  br label %73

73:                                               ; preds = %70, %67
  %74 = call void (i32)* @signal(i32 4, void (i32)* bitcast (i32 (i32)* @fatal_error_signal to void (i32)*)) #10
  %75 = bitcast void (i32)* %74 to i8*
  %76 = icmp eq i8* %75, inttoptr (i64 1 to i8*)
  br i1 %76, label %77, label %80

77:                                               ; preds = %73
  %78 = call void (i32)* @signal(i32 4, void (i32)* inttoptr (i64 1 to void (i32)*)) #10
  %79 = bitcast void (i32)* %78 to i8*
  br label %83

80:                                               ; preds = %73
  %81 = load i32, i32* @fatal_signal_mask, align 4
  %82 = or i32 %81, 8
  store i32 %82, i32* @fatal_signal_mask, align 4
  br label %83

83:                                               ; preds = %80, %77
  %84 = call void (i32)* @signal(i32 5, void (i32)* bitcast (i32 (i32)* @fatal_error_signal to void (i32)*)) #10
  %85 = bitcast void (i32)* %84 to i8*
  %86 = icmp eq i8* %85, inttoptr (i64 1 to i8*)
  br i1 %86, label %87, label %90

87:                                               ; preds = %83
  %88 = call void (i32)* @signal(i32 5, void (i32)* inttoptr (i64 1 to void (i32)*)) #10
  %89 = bitcast void (i32)* %88 to i8*
  br label %93

90:                                               ; preds = %83
  %91 = load i32, i32* @fatal_signal_mask, align 4
  %92 = or i32 %91, 16
  store i32 %92, i32* @fatal_signal_mask, align 4
  br label %93

93:                                               ; preds = %90, %87
  %94 = call void (i32)* @signal(i32 6, void (i32)* bitcast (i32 (i32)* @fatal_error_signal to void (i32)*)) #10
  %95 = bitcast void (i32)* %94 to i8*
  %96 = icmp eq i8* %95, inttoptr (i64 1 to i8*)
  br i1 %96, label %97, label %100

97:                                               ; preds = %93
  %98 = call void (i32)* @signal(i32 6, void (i32)* inttoptr (i64 1 to void (i32)*)) #10
  %99 = bitcast void (i32)* %98 to i8*
  br label %103

100:                                              ; preds = %93
  %101 = load i32, i32* @fatal_signal_mask, align 4
  %102 = or i32 %101, 32
  store i32 %102, i32* @fatal_signal_mask, align 4
  br label %103

103:                                              ; preds = %100, %97
  %104 = call void (i32)* @signal(i32 8, void (i32)* bitcast (i32 (i32)* @fatal_error_signal to void (i32)*)) #10
  %105 = bitcast void (i32)* %104 to i8*
  %106 = icmp eq i8* %105, inttoptr (i64 1 to i8*)
  br i1 %106, label %107, label %110

107:                                              ; preds = %103
  %108 = call void (i32)* @signal(i32 8, void (i32)* inttoptr (i64 1 to void (i32)*)) #10
  %109 = bitcast void (i32)* %108 to i8*
  br label %113

110:                                              ; preds = %103
  %111 = load i32, i32* @fatal_signal_mask, align 4
  %112 = or i32 %111, 128
  store i32 %112, i32* @fatal_signal_mask, align 4
  br label %113

113:                                              ; preds = %110, %107
  %114 = call void (i32)* @signal(i32 7, void (i32)* bitcast (i32 (i32)* @fatal_error_signal to void (i32)*)) #10
  %115 = bitcast void (i32)* %114 to i8*
  %116 = icmp eq i8* %115, inttoptr (i64 1 to i8*)
  br i1 %116, label %117, label %120

117:                                              ; preds = %113
  %118 = call void (i32)* @signal(i32 7, void (i32)* inttoptr (i64 1 to void (i32)*)) #10
  %119 = bitcast void (i32)* %118 to i8*
  br label %123

120:                                              ; preds = %113
  %121 = load i32, i32* @fatal_signal_mask, align 4
  %122 = or i32 %121, 64
  store i32 %122, i32* @fatal_signal_mask, align 4
  br label %123

123:                                              ; preds = %120, %117
  %124 = call void (i32)* @signal(i32 11, void (i32)* bitcast (i32 (i32)* @fatal_error_signal to void (i32)*)) #10
  %125 = bitcast void (i32)* %124 to i8*
  %126 = icmp eq i8* %125, inttoptr (i64 1 to i8*)
  br i1 %126, label %127, label %130

127:                                              ; preds = %123
  %128 = call void (i32)* @signal(i32 11, void (i32)* inttoptr (i64 1 to void (i32)*)) #10
  %129 = bitcast void (i32)* %128 to i8*
  br label %133

130:                                              ; preds = %123
  %131 = load i32, i32* @fatal_signal_mask, align 4
  %132 = or i32 %131, 1024
  store i32 %132, i32* @fatal_signal_mask, align 4
  br label %133

133:                                              ; preds = %130, %127
  %134 = call void (i32)* @signal(i32 31, void (i32)* bitcast (i32 (i32)* @fatal_error_signal to void (i32)*)) #10
  %135 = bitcast void (i32)* %134 to i8*
  %136 = icmp eq i8* %135, inttoptr (i64 1 to i8*)
  br i1 %136, label %137, label %140

137:                                              ; preds = %133
  %138 = call void (i32)* @signal(i32 31, void (i32)* inttoptr (i64 1 to void (i32)*)) #10
  %139 = bitcast void (i32)* %138 to i8*
  br label %143

140:                                              ; preds = %133
  %141 = load i32, i32* @fatal_signal_mask, align 4
  %142 = or i32 %141, 1073741824
  store i32 %142, i32* @fatal_signal_mask, align 4
  br label %143

143:                                              ; preds = %140, %137
  %144 = call void (i32)* @signal(i32 15, void (i32)* bitcast (i32 (i32)* @fatal_error_signal to void (i32)*)) #10
  %145 = bitcast void (i32)* %144 to i8*
  %146 = icmp eq i8* %145, inttoptr (i64 1 to i8*)
  br i1 %146, label %147, label %150

147:                                              ; preds = %143
  %148 = call void (i32)* @signal(i32 15, void (i32)* inttoptr (i64 1 to void (i32)*)) #10
  %149 = bitcast void (i32)* %148 to i8*
  br label %153

150:                                              ; preds = %143
  %151 = load i32, i32* @fatal_signal_mask, align 4
  %152 = or i32 %151, 16384
  store i32 %152, i32* @fatal_signal_mask, align 4
  br label %153

153:                                              ; preds = %150, %147
  %154 = call void (i32)* @signal(i32 24, void (i32)* bitcast (i32 (i32)* @fatal_error_signal to void (i32)*)) #10
  %155 = bitcast void (i32)* %154 to i8*
  %156 = icmp eq i8* %155, inttoptr (i64 1 to i8*)
  br i1 %156, label %157, label %160

157:                                              ; preds = %153
  %158 = call void (i32)* @signal(i32 24, void (i32)* inttoptr (i64 1 to void (i32)*)) #10
  %159 = bitcast void (i32)* %158 to i8*
  br label %163

160:                                              ; preds = %153
  %161 = load i32, i32* @fatal_signal_mask, align 4
  %162 = or i32 %161, 8388608
  store i32 %162, i32* @fatal_signal_mask, align 4
  br label %163

163:                                              ; preds = %160, %157
  %164 = call void (i32)* @signal(i32 25, void (i32)* bitcast (i32 (i32)* @fatal_error_signal to void (i32)*)) #10
  %165 = bitcast void (i32)* %164 to i8*
  %166 = icmp eq i8* %165, inttoptr (i64 1 to i8*)
  br i1 %166, label %167, label %170

167:                                              ; preds = %163
  %168 = call void (i32)* @signal(i32 25, void (i32)* inttoptr (i64 1 to void (i32)*)) #10
  %169 = bitcast void (i32)* %168 to i8*
  br label %173

170:                                              ; preds = %163
  %171 = load i32, i32* @fatal_signal_mask, align 4
  %172 = or i32 %171, 16777216
  store i32 %172, i32* @fatal_signal_mask, align 4
  br label %173

173:                                              ; preds = %170, %167
  %174 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @setlinebuf(%struct._IO_FILE* %174) #10
  call void (...) bitcast (void ()* @user_access to void (...)*)()
  %175 = load i8**, i8*** %6, align 8
  %176 = getelementptr inbounds i8*, i8** %175, i64 0
  %177 = load i8*, i8** %176, align 8
  %178 = icmp eq i8* %177, null
  br i1 %178, label %179, label %182

179:                                              ; preds = %173
  %180 = load i8**, i8*** %6, align 8
  %181 = getelementptr inbounds i8*, i8** %180, i64 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.394, i64 0, i64 0), i8** %181, align 8
  br label %182

182:                                              ; preds = %179, %173
  %183 = load i8**, i8*** %6, align 8
  %184 = getelementptr inbounds i8*, i8** %183, i64 0
  %185 = load i8*, i8** %184, align 8
  %186 = getelementptr inbounds i8, i8* %185, i64 0
  %187 = load i8, i8* %186, align 1
  %188 = sext i8 %187 to i32
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %182
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.395, i64 0, i64 0), i8** @program, align 8
  br label %206

191:                                              ; preds = %182
  %192 = load i8**, i8*** %6, align 8
  %193 = getelementptr inbounds i8*, i8** %192, i64 0
  %194 = load i8*, i8** %193, align 8
  %195 = call i8* @strrchr(i8* %194, i32 47) #9
  store i8* %195, i8** @program, align 8
  %196 = load i8*, i8** @program, align 8
  %197 = icmp eq i8* %196, null
  br i1 %197, label %198, label %202

198:                                              ; preds = %191
  %199 = load i8**, i8*** %6, align 8
  %200 = getelementptr inbounds i8*, i8** %199, i64 0
  %201 = load i8*, i8** %200, align 8
  store i8* %201, i8** @program, align 8
  br label %205

202:                                              ; preds = %191
  %203 = load i8*, i8** @program, align 8
  %204 = getelementptr inbounds i8, i8* %203, i32 1
  store i8* %204, i8** @program, align 8
  br label %205

205:                                              ; preds = %202, %198
  br label %206

206:                                              ; preds = %205, %190
  %207 = getelementptr inbounds [4096 x i8], [4096 x i8]* %18, i64 0, i64 0
  %208 = call i8* @getwd(i8* %207) #10
  %209 = icmp eq i8* %208, null
  br i1 %209, label %210, label %213

210:                                              ; preds = %206
  %211 = getelementptr inbounds [4096 x i8], [4096 x i8]* %18, i64 0, i64 0
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.396, i64 0, i64 0), i8* %211)
  %212 = getelementptr inbounds [4096 x i8], [4096 x i8]* %18, i64 0, i64 0
  store i8 0, i8* %212, align 16
  br label %213

213:                                              ; preds = %210, %206
  store i32 0, i32* %9, align 4
  br label %214

214:                                              ; preds = %252, %213
  %215 = load i8**, i8*** %7, align 8
  %216 = load i32, i32* %9, align 4
  %217 = zext i32 %216 to i64
  %218 = getelementptr inbounds i8*, i8** %215, i64 %217
  %219 = load i8*, i8** %218, align 8
  %220 = icmp ne i8* %219, null
  br i1 %220, label %221, label %255

221:                                              ; preds = %214
  %222 = load i8**, i8*** %7, align 8
  %223 = load i32, i32* %9, align 4
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds i8*, i8** %222, i64 %224
  %226 = load i8*, i8** %225, align 8
  store i8* %226, i8** %19, align 8
  br label %227

227:                                              ; preds = %233, %221
  %228 = load i8*, i8** %19, align 8
  %229 = getelementptr inbounds i8, i8* %228, i32 1
  store i8* %229, i8** %19, align 8
  %230 = load i8, i8* %228, align 1
  %231 = sext i8 %230 to i32
  %232 = icmp ne i32 %231, 61
  br i1 %232, label %233, label %234

233:                                              ; preds = %227
  br label %227

234:                                              ; preds = %227
  %235 = load i8**, i8*** %7, align 8
  %236 = load i32, i32* %9, align 4
  %237 = zext i32 %236 to i64
  %238 = getelementptr inbounds i8*, i8** %235, i64 %237
  %239 = load i8*, i8** %238, align 8
  %240 = load i8*, i8** %19, align 8
  %241 = load i8**, i8*** %7, align 8
  %242 = load i32, i32* %9, align 4
  %243 = zext i32 %242 to i64
  %244 = getelementptr inbounds i8*, i8** %241, i64 %243
  %245 = load i8*, i8** %244, align 8
  %246 = ptrtoint i8* %240 to i64
  %247 = ptrtoint i8* %245 to i64
  %248 = sub i64 %246, %247
  %249 = sub nsw i64 %248, 1
  %250 = load i8*, i8** %19, align 8
  %251 = call %struct.variable* (i8*, i64, i8*, i32, i32, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32)* @define_variable to %struct.variable* (i8*, i64, i8*, i32, i32, ...)*)(i8* %239, i64 %249, i8* %250, i32 1, i32 1)
  br label %252

252:                                              ; preds = %234
  %253 = load i32, i32* %9, align 4
  %254 = add i32 %253, 1
  store i32 %254, i32* %9, align 4
  br label %214

255:                                              ; preds = %214
  %256 = load i32, i32* %5, align 4
  %257 = load i8**, i8*** %6, align 8
  call void @decode_switches(i32 %256, i8** %257)
  %258 = load i32, i32* @print_version_flag, align 4
  %259 = icmp ne i32 %258, 0
  br i1 %259, label %266, label %260

260:                                              ; preds = %255
  %261 = load i32, i32* @print_data_base_flag, align 4
  %262 = icmp ne i32 %261, 0
  br i1 %262, label %266, label %263

263:                                              ; preds = %260
  %264 = load i32, i32* @debug_flag, align 4
  %265 = icmp ne i32 %264, 0
  br i1 %265, label %266, label %267

266:                                              ; preds = %263, %260, %255
  call void @print_version()
  br label %267

267:                                              ; preds = %266, %263
  store i32 200, i32* %11, align 4
  %268 = load i32, i32* %11, align 4
  %269 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %268)
  store i8* %269, i8** %10, align 8
  store i32 0, i32* %12, align 4
  store i32 1, i32* %9, align 4
  br label %270

270:                                              ; preds = %405, %267
  %271 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %272 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %271, i32 0, i32 0
  %273 = load i8**, i8*** %272, align 8
  %274 = load i32, i32* %9, align 4
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds i8*, i8** %273, i64 %275
  %277 = load i8*, i8** %276, align 8
  %278 = icmp ne i8* %277, null
  br i1 %278, label %279, label %408

279:                                              ; preds = %270
  %280 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %281 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %280, i32 0, i32 0
  %282 = load i8**, i8*** %281, align 8
  %283 = load i32, i32* %9, align 4
  %284 = zext i32 %283 to i64
  %285 = getelementptr inbounds i8*, i8** %282, i64 %284
  %286 = load i8*, i8** %285, align 8
  %287 = getelementptr inbounds i8, i8* %286, i64 0
  %288 = load i8, i8* %287, align 1
  %289 = sext i8 %288 to i32
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %279
  br label %405

292:                                              ; preds = %279
  %293 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %294 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %293, i32 0, i32 0
  %295 = load i8**, i8*** %294, align 8
  %296 = load i32, i32* %9, align 4
  %297 = zext i32 %296 to i64
  %298 = getelementptr inbounds i8*, i8** %295, i64 %297
  %299 = load i8*, i8** %298, align 8
  %300 = call i32 (i8*, i32, ...) bitcast (i32 (i8*, i32)* @try_variable_definition to i32 (i8*, i32, ...)*)(i8* %299, i32 4)
  %301 = icmp ne i32 %300, 0
  br i1 %301, label %302, label %370

302:                                              ; preds = %292
  %303 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %304 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %303, i32 0, i32 0
  %305 = load i8**, i8*** %304, align 8
  %306 = load i32, i32* %9, align 4
  %307 = zext i32 %306 to i64
  %308 = getelementptr inbounds i8*, i8** %305, i64 %307
  %309 = load i8*, i8** %308, align 8
  store i8* %309, i8** %20, align 8
  %310 = load i8*, i8** %20, align 8
  %311 = call i64 @strlen(i8* %310) #9
  %312 = trunc i64 %311 to i32
  store i32 %312, i32* %21, align 4
  %313 = load i32, i32* %12, align 4
  %314 = load i32, i32* %21, align 4
  %315 = mul i32 %314, 2
  %316 = add i32 %313, %315
  %317 = add i32 %316, 1
  %318 = load i32, i32* %11, align 4
  %319 = icmp ugt i32 %317, %318
  br i1 %319, label %320, label %337

320:                                              ; preds = %302
  %321 = load i32, i32* %21, align 4
  %322 = mul i32 %321, 2
  %323 = load i32, i32* %11, align 4
  %324 = icmp ugt i32 %322, %323
  br i1 %324, label %325, label %330

325:                                              ; preds = %320
  %326 = load i32, i32* %21, align 4
  %327 = mul i32 %326, 2
  %328 = load i32, i32* %11, align 4
  %329 = add i32 %328, %327
  store i32 %329, i32* %11, align 4
  br label %333

330:                                              ; preds = %320
  %331 = load i32, i32* %11, align 4
  %332 = mul i32 %331, 2
  store i32 %332, i32* %11, align 4
  br label %333

333:                                              ; preds = %330, %325
  %334 = load i8*, i8** %10, align 8
  %335 = load i32, i32* %11, align 4
  %336 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i32, ...)*)(i8* %334, i32 %335)
  store i8* %336, i8** %10, align 8
  br label %337

337:                                              ; preds = %333, %302
  br label %338

338:                                              ; preds = %355, %337
  %339 = load i8*, i8** %20, align 8
  %340 = load i8, i8* %339, align 1
  %341 = sext i8 %340 to i32
  %342 = icmp ne i32 %341, 0
  br i1 %342, label %343, label %364

343:                                              ; preds = %338
  %344 = load i8*, i8** %20, align 8
  %345 = load i8, i8* %344, align 1
  %346 = sext i8 %345 to i32
  %347 = call i8* @strchr(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.397, i64 0, i64 0), i32 %346) #9
  %348 = icmp ne i8* %347, null
  br i1 %348, label %349, label %355

349:                                              ; preds = %343
  %350 = load i8*, i8** %10, align 8
  %351 = load i32, i32* %12, align 4
  %352 = add i32 %351, 1
  store i32 %352, i32* %12, align 4
  %353 = zext i32 %351 to i64
  %354 = getelementptr inbounds i8, i8* %350, i64 %353
  store i8 92, i8* %354, align 1
  br label %355

355:                                              ; preds = %349, %343
  %356 = load i8*, i8** %20, align 8
  %357 = getelementptr inbounds i8, i8* %356, i32 1
  store i8* %357, i8** %20, align 8
  %358 = load i8, i8* %356, align 1
  %359 = load i8*, i8** %10, align 8
  %360 = load i32, i32* %12, align 4
  %361 = add i32 %360, 1
  store i32 %361, i32* %12, align 4
  %362 = zext i32 %360 to i64
  %363 = getelementptr inbounds i8, i8* %359, i64 %362
  store i8 %358, i8* %363, align 1
  br label %338

364:                                              ; preds = %338
  %365 = load i8*, i8** %10, align 8
  %366 = load i32, i32* %12, align 4
  %367 = add i32 %366, 1
  store i32 %367, i32* %12, align 4
  %368 = zext i32 %366 to i64
  %369 = getelementptr inbounds i8, i8* %365, i64 %368
  store i8 32, i8* %369, align 1
  br label %404

370:                                              ; preds = %292
  %371 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %372 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %371, i32 0, i32 0
  %373 = load i8**, i8*** %372, align 8
  %374 = load i32, i32* %9, align 4
  %375 = zext i32 %374 to i64
  %376 = getelementptr inbounds i8*, i8** %373, i64 %375
  %377 = load i8*, i8** %376, align 8
  %378 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* %377)
  store %struct.file* %378, %struct.file** %8, align 8
  %379 = load %struct.file*, %struct.file** %8, align 8
  %380 = getelementptr inbounds %struct.file, %struct.file* %379, i32 0, i32 12
  %381 = load i16, i16* %380, align 2
  %382 = and i16 %381, -257
  %383 = or i16 %382, 256
  store i16 %383, i16* %380, align 2
  %384 = load %struct.dep*, %struct.dep** %15, align 8
  %385 = icmp eq %struct.dep* %384, null
  br i1 %385, label %386, label %390

386:                                              ; preds = %370
  %387 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 32)
  %388 = bitcast i8* %387 to %struct.dep*
  store %struct.dep* %388, %struct.dep** %15, align 8
  %389 = load %struct.dep*, %struct.dep** %15, align 8
  store %struct.dep* %389, %struct.dep** %16, align 8
  br label %398

390:                                              ; preds = %370
  %391 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 32)
  %392 = bitcast i8* %391 to %struct.dep*
  %393 = load %struct.dep*, %struct.dep** %16, align 8
  %394 = getelementptr inbounds %struct.dep, %struct.dep* %393, i32 0, i32 0
  store %struct.dep* %392, %struct.dep** %394, align 8
  %395 = load %struct.dep*, %struct.dep** %16, align 8
  %396 = getelementptr inbounds %struct.dep, %struct.dep* %395, i32 0, i32 0
  %397 = load %struct.dep*, %struct.dep** %396, align 8
  store %struct.dep* %397, %struct.dep** %16, align 8
  br label %398

398:                                              ; preds = %390, %386
  %399 = load %struct.dep*, %struct.dep** %16, align 8
  %400 = getelementptr inbounds %struct.dep, %struct.dep* %399, i32 0, i32 1
  store i8* null, i8** %400, align 8
  %401 = load %struct.file*, %struct.file** %8, align 8
  %402 = load %struct.dep*, %struct.dep** %16, align 8
  %403 = getelementptr inbounds %struct.dep, %struct.dep* %402, i32 0, i32 2
  store %struct.file* %401, %struct.file** %403, align 8
  br label %404

404:                                              ; preds = %398, %364
  br label %405

405:                                              ; preds = %404, %291
  %406 = load i32, i32* %9, align 4
  %407 = add i32 %406, 1
  store i32 %407, i32* %9, align 4
  br label %270

408:                                              ; preds = %270
  %409 = load i32, i32* %12, align 4
  %410 = icmp ugt i32 %409, 0
  br i1 %410, label %411, label %419

411:                                              ; preds = %408
  %412 = load i8*, i8** %10, align 8
  %413 = load i32, i32* %12, align 4
  %414 = sub i32 %413, 1
  %415 = zext i32 %414 to i64
  %416 = getelementptr inbounds i8, i8* %412, i64 %415
  store i8 0, i8* %416, align 1
  %417 = load i8*, i8** %10, align 8
  %418 = call %struct.variable* (i8*, i32, i8*, i32, i32, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32)* @define_variable to %struct.variable* (i8*, i32, i8*, i32, i32, ...)*)(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.398, i64 0, i64 0), i32 13, i8* %417, i32 5, i32 0)
  br label %419

419:                                              ; preds = %411, %408
  %420 = getelementptr inbounds [4096 x i8], [4096 x i8]* %18, i64 0, i64 0
  %421 = load i8, i8* %420, align 16
  %422 = sext i8 %421 to i32
  %423 = icmp ne i32 %422, 0
  br i1 %423, label %424, label %451

424:                                              ; preds = %419
  %425 = load i8**, i8*** %6, align 8
  %426 = getelementptr inbounds i8*, i8** %425, i64 0
  %427 = load i8*, i8** %426, align 8
  %428 = icmp ne i8* %427, null
  br i1 %428, label %429, label %451

429:                                              ; preds = %424
  %430 = load i8**, i8*** %6, align 8
  %431 = getelementptr inbounds i8*, i8** %430, i64 0
  %432 = load i8*, i8** %431, align 8
  %433 = getelementptr inbounds i8, i8* %432, i64 0
  %434 = load i8, i8* %433, align 1
  %435 = sext i8 %434 to i32
  %436 = icmp ne i32 %435, 47
  br i1 %436, label %437, label %451

437:                                              ; preds = %429
  %438 = load i8**, i8*** %6, align 8
  %439 = getelementptr inbounds i8*, i8** %438, i64 0
  %440 = load i8*, i8** %439, align 8
  %441 = call i8* @strchr(i8* %440, i32 47) #9
  %442 = icmp ne i8* %441, null
  br i1 %442, label %443, label %451

443:                                              ; preds = %437
  %444 = getelementptr inbounds [4096 x i8], [4096 x i8]* %18, i64 0, i64 0
  %445 = load i8**, i8*** %6, align 8
  %446 = getelementptr inbounds i8*, i8** %445, i64 0
  %447 = load i8*, i8** %446, align 8
  %448 = call i8* (i8*, i8*, i8*, ...) bitcast (i8* (i8*, i8*, i8*)* @concat to i8* (i8*, i8*, i8*, ...)*)(i8* %444, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.399, i64 0, i64 0), i8* %447)
  %449 = load i8**, i8*** %6, align 8
  %450 = getelementptr inbounds i8*, i8** %449, i64 0
  store i8* %448, i8** %450, align 8
  br label %451

451:                                              ; preds = %443, %437, %429, %424, %419
  %452 = load i32, i32* %12, align 4
  %453 = icmp ugt i32 %452, 0
  br i1 %453, label %454, label %463

454:                                              ; preds = %451
  %455 = load i8**, i8*** %6, align 8
  %456 = getelementptr inbounds i8*, i8** %455, i64 0
  %457 = load i8*, i8** %456, align 8
  %458 = load i8*, i8** %10, align 8
  %459 = call i8* (i8*, i8*, i8*, ...) bitcast (i8* (i8*, i8*, i8*)* @concat to i8* (i8*, i8*, i8*, ...)*)(i8* %457, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.400, i64 0, i64 0), i8* %458)
  store i8* %459, i8** %22, align 8
  %460 = load i8*, i8** %22, align 8
  %461 = call %struct.variable* (i8*, i32, i8*, i32, i32, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32)* @define_variable to %struct.variable* (i8*, i32, i8*, i32, i32, ...)*)(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.401, i64 0, i64 0), i32 4, i8* %460, i32 1, i32 0)
  %462 = load i8*, i8** %22, align 8
  call void @free(i8* %462) #10
  br label %468

463:                                              ; preds = %451
  %464 = load i8**, i8*** %6, align 8
  %465 = getelementptr inbounds i8*, i8** %464, i64 0
  %466 = load i8*, i8** %465, align 8
  %467 = call %struct.variable* (i8*, i32, i8*, i32, i32, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32)* @define_variable to %struct.variable* (i8*, i32, i8*, i32, i32, ...)*)(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.401, i64 0, i64 0), i32 4, i8* %466, i32 1, i32 0)
  br label %468

468:                                              ; preds = %463, %454
  %469 = load i8*, i8** %10, align 8
  call void @free(i8* %469) #10
  %470 = load %struct.stringlist*, %struct.stringlist** @directories.402, align 8
  %471 = icmp ne %struct.stringlist* %470, null
  br i1 %471, label %472, label %500

472:                                              ; preds = %468
  store i32 0, i32* %9, align 4
  br label %473

473:                                              ; preds = %496, %472
  %474 = load %struct.stringlist*, %struct.stringlist** @directories.402, align 8
  %475 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %474, i32 0, i32 0
  %476 = load i8**, i8*** %475, align 8
  %477 = load i32, i32* %9, align 4
  %478 = zext i32 %477 to i64
  %479 = getelementptr inbounds i8*, i8** %476, i64 %478
  %480 = load i8*, i8** %479, align 8
  %481 = icmp ne i8* %480, null
  br i1 %481, label %482, label %499

482:                                              ; preds = %473
  %483 = load %struct.stringlist*, %struct.stringlist** @directories.402, align 8
  %484 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %483, i32 0, i32 0
  %485 = load i8**, i8*** %484, align 8
  %486 = load i32, i32* %9, align 4
  %487 = zext i32 %486 to i64
  %488 = getelementptr inbounds i8*, i8** %485, i64 %487
  %489 = load i8*, i8** %488, align 8
  store i8* %489, i8** %23, align 8
  %490 = load i8*, i8** %23, align 8
  %491 = call i32 @chdir(i8* %490) #10
  %492 = icmp slt i32 %491, 0
  br i1 %492, label %493, label %495

493:                                              ; preds = %482
  %494 = load i8*, i8** %23, align 8
  call void (i8*, ...) bitcast (void (i8*)* @pfatal_with_name to void (i8*, ...)*)(i8* %494)
  br label %495

495:                                              ; preds = %493, %482
  br label %496

496:                                              ; preds = %495
  %497 = load i32, i32* %9, align 4
  %498 = add i32 %497, 1
  store i32 %498, i32* %9, align 4
  br label %473

499:                                              ; preds = %473
  br label %500

500:                                              ; preds = %499, %468
  %501 = call %struct.variable* (i8*, i32, ...) bitcast (%struct.variable* (i8*, i32)* @lookup_variable to %struct.variable* (i8*, i32, ...)*)(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.403, i64 0, i64 0), i32 9)
  store %struct.variable* %501, %struct.variable** %24, align 8
  %502 = load %struct.variable*, %struct.variable** %24, align 8
  %503 = icmp ne %struct.variable* %502, null
  br i1 %503, label %504, label %523

504:                                              ; preds = %500
  %505 = load %struct.variable*, %struct.variable** %24, align 8
  %506 = getelementptr inbounds %struct.variable, %struct.variable* %505, i32 0, i32 2
  %507 = load i8*, i8** %506, align 8
  %508 = load i8, i8* %507, align 1
  %509 = sext i8 %508 to i32
  %510 = icmp ne i32 %509, 0
  br i1 %510, label %511, label %523

511:                                              ; preds = %504
  %512 = load %struct.variable*, %struct.variable** %24, align 8
  %513 = getelementptr inbounds %struct.variable, %struct.variable* %512, i32 0, i32 2
  %514 = load i8*, i8** %513, align 8
  %515 = load i8, i8* %514, align 1
  %516 = sext i8 %515 to i32
  %517 = icmp ne i32 %516, 45
  br i1 %517, label %518, label %523

518:                                              ; preds = %511
  %519 = load %struct.variable*, %struct.variable** %24, align 8
  %520 = getelementptr inbounds %struct.variable, %struct.variable* %519, i32 0, i32 2
  %521 = load i8*, i8** %520, align 8
  %522 = call i32 @atoi(i8* %521) #9
  store i32 %522, i32* @makelevel, align 4
  br label %524

523:                                              ; preds = %511, %504, %500
  store i32 0, i32* @makelevel, align 4
  br label %524

524:                                              ; preds = %523, %518
  %525 = load %struct.stringlist*, %struct.stringlist** @include_directories, align 8
  %526 = icmp eq %struct.stringlist* %525, null
  br i1 %526, label %527, label %528

527:                                              ; preds = %524
  br label %532

528:                                              ; preds = %524
  %529 = load %struct.stringlist*, %struct.stringlist** @include_directories, align 8
  %530 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %529, i32 0, i32 0
  %531 = load i8**, i8*** %530, align 8
  br label %532

532:                                              ; preds = %528, %527
  %533 = phi i8** [ null, %527 ], [ %531, %528 ]
  call void (i8**, ...) bitcast (void (i8**)* @construct_include_path to void (i8**, ...)*)(i8** %533)
  %534 = load i32, i32* @print_directory_flag, align 4
  %535 = icmp ne i32 %534, 0
  br i1 %535, label %536, label %537

536:                                              ; preds = %532
  call void @log_working_directory(i32 1)
  br label %537

537:                                              ; preds = %536, %532
  %538 = load %struct.stringlist*, %struct.stringlist** @makefiles, align 8
  %539 = icmp ne %struct.stringlist* %538, null
  br i1 %539, label %540, label %644

540:                                              ; preds = %537
  store i32 0, i32* %25, align 4
  br label %541

541:                                              ; preds = %640, %540
  %542 = load i32, i32* %25, align 4
  %543 = load %struct.stringlist*, %struct.stringlist** @makefiles, align 8
  %544 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %543, i32 0, i32 1
  %545 = load i32, i32* %544, align 8
  %546 = icmp ult i32 %542, %545
  br i1 %546, label %547, label %643

547:                                              ; preds = %541
  %548 = load %struct.stringlist*, %struct.stringlist** @makefiles, align 8
  %549 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %548, i32 0, i32 0
  %550 = load i8**, i8*** %549, align 8
  %551 = load i32, i32* %25, align 4
  %552 = zext i32 %551 to i64
  %553 = getelementptr inbounds i8*, i8** %550, i64 %552
  %554 = load i8*, i8** %553, align 8
  %555 = getelementptr inbounds i8, i8* %554, i64 0
  %556 = load i8, i8* %555, align 1
  %557 = sext i8 %556 to i32
  %558 = icmp eq i32 %557, 45
  br i1 %558, label %559, label %639

559:                                              ; preds = %547
  %560 = load %struct.stringlist*, %struct.stringlist** @makefiles, align 8
  %561 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %560, i32 0, i32 0
  %562 = load i8**, i8*** %561, align 8
  %563 = load i32, i32* %25, align 4
  %564 = zext i32 %563 to i64
  %565 = getelementptr inbounds i8*, i8** %562, i64 %564
  %566 = load i8*, i8** %565, align 8
  %567 = getelementptr inbounds i8, i8* %566, i64 1
  %568 = load i8, i8* %567, align 1
  %569 = sext i8 %568 to i32
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %571, label %639

571:                                              ; preds = %559
  %572 = load %struct.stringlist*, %struct.stringlist** @makefiles, align 8
  %573 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %572, i32 0, i32 0
  %574 = load i8**, i8*** %573, align 8
  %575 = load i32, i32* %25, align 4
  %576 = zext i32 %575 to i64
  %577 = getelementptr inbounds i8*, i8** %574, i64 %576
  %578 = load i8*, i8** %577, align 8
  call void @free(i8* %578) #10
  %579 = call i8* @mktemp(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @main.name, i64 0, i64 0)) #10
  %580 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @main.name, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.404, i64 0, i64 0))
  store %struct._IO_FILE* %580, %struct._IO_FILE** %26, align 8
  %581 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %582 = icmp eq %struct._IO_FILE* %581, null
  br i1 %582, label %583, label %584

583:                                              ; preds = %571
  call void (i8*, ...) bitcast (void (i8*)* @pfatal_with_name to void (i8*, ...)*)(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.405, i64 0, i64 0))
  br label %584

584:                                              ; preds = %583, %571
  br label %585

585:                                              ; preds = %607, %584
  %586 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %587 = call i32 @feof(%struct._IO_FILE* %586) #10
  %588 = icmp ne i32 %587, 0
  %589 = xor i1 %588, true
  br i1 %589, label %590, label %608

590:                                              ; preds = %585
  %591 = getelementptr inbounds [2048 x i8], [2048 x i8]* %27, i64 0, i64 0
  %592 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %593 = call i64 @fread(i8* %591, i64 1, i64 2048, %struct._IO_FILE* %592)
  %594 = trunc i64 %593 to i32
  store i32 %594, i32* %28, align 4
  %595 = load i32, i32* %28, align 4
  %596 = icmp sgt i32 %595, 0
  br i1 %596, label %597, label %607

597:                                              ; preds = %590
  %598 = getelementptr inbounds [2048 x i8], [2048 x i8]* %27, i64 0, i64 0
  %599 = load i32, i32* %28, align 4
  %600 = sext i32 %599 to i64
  %601 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %602 = call i64 @fwrite(i8* %598, i64 1, i64 %600, %struct._IO_FILE* %601)
  %603 = load i32, i32* %28, align 4
  %604 = sext i32 %603 to i64
  %605 = icmp ne i64 %602, %604
  br i1 %605, label %606, label %607

606:                                              ; preds = %597
  call void (i8*, ...) bitcast (void (i8*)* @pfatal_with_name to void (i8*, ...)*)(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11.406, i64 0, i64 0))
  br label %607

607:                                              ; preds = %606, %597, %590
  br label %585

608:                                              ; preds = %585
  %609 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %610 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %609, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12.407, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @main.name, i64 0, i64 0))
  %611 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %612 = call i32 @fclose(%struct._IO_FILE* %611)
  %613 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @main.name, i64 0, i64 0), i64 13)
  %614 = load %struct.stringlist*, %struct.stringlist** @makefiles, align 8
  %615 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %614, i32 0, i32 0
  %616 = load i8**, i8*** %615, align 8
  %617 = load i32, i32* %25, align 4
  %618 = zext i32 %617 to i64
  %619 = getelementptr inbounds i8*, i8** %616, i64 %618
  store i8* %613, i8** %619, align 8
  %620 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @main.name, i64 0, i64 0), i64 13)
  %621 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* %620)
  store %struct.file* %621, %struct.file** %8, align 8
  %622 = load %struct.file*, %struct.file** %8, align 8
  %623 = getelementptr inbounds %struct.file, %struct.file* %622, i32 0, i32 12
  %624 = load i16, i16* %623, align 2
  %625 = and i16 %624, -65
  %626 = or i16 %625, 64
  store i16 %626, i16* %623, align 2
  %627 = load %struct.file*, %struct.file** %8, align 8
  %628 = getelementptr inbounds %struct.file, %struct.file* %627, i32 0, i32 11
  store i16 0, i16* %628, align 8
  %629 = load %struct.file*, %struct.file** %8, align 8
  %630 = getelementptr inbounds %struct.file, %struct.file* %629, i32 0, i32 12
  %631 = load i16, i16* %630, align 2
  %632 = and i16 %631, -1025
  %633 = or i16 %632, 1024
  store i16 %633, i16* %630, align 2
  %634 = load %struct.file*, %struct.file** %8, align 8
  %635 = getelementptr inbounds %struct.file, %struct.file* %634, i32 0, i32 12
  %636 = load i16, i16* %635, align 2
  %637 = and i16 %636, -2049
  %638 = or i16 %637, 2048
  store i16 %638, i16* %635, align 2
  br label %639

639:                                              ; preds = %608, %559, %547
  br label %640

640:                                              ; preds = %639
  %641 = load i32, i32* %25, align 4
  %642 = add i32 %641, 1
  store i32 %642, i32* %25, align 4
  br label %541

643:                                              ; preds = %541
  br label %644

644:                                              ; preds = %643, %537
  %645 = call void (i32)* @signal(i32 17, void (i32)* bitcast (i32 (i32)* @child_handler to void (i32)*)) #10
  %646 = bitcast void (i32)* %645 to i8*
  call void (...) bitcast (void ()* @set_default_suffixes to void (...)*)()
  call void (...) bitcast (void ()* @define_automatic_variables to void (...)*)()
  call void @define_makeflags(i32 0, i32 0)
  call void (...) bitcast (void ()* @define_default_variables to void (...)*)()
  %647 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13.408, i64 0, i64 0))
  store %struct.file* %647, %struct.file** @default_file, align 8
  %648 = load %struct.stringlist*, %struct.stringlist** @makefiles, align 8
  %649 = icmp eq %struct.stringlist* %648, null
  br i1 %649, label %650, label %651

650:                                              ; preds = %644
  br label %655

651:                                              ; preds = %644
  %652 = load %struct.stringlist*, %struct.stringlist** @makefiles, align 8
  %653 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %652, i32 0, i32 0
  %654 = load i8**, i8*** %653, align 8
  br label %655

655:                                              ; preds = %651, %650
  %656 = phi i8** [ null, %650 ], [ %654, %651 ]
  %657 = call %struct.dep* (i8**, ...) bitcast (%struct.dep* (i8**)* @read_all_makefiles to %struct.dep* (i8**, ...)*)(i8** %656)
  store %struct.dep* %657, %struct.dep** %17, align 8
  call void @decode_env_switches(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14.409, i64 0, i64 0), i32 9)
  call void @decode_env_switches(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.410, i64 0, i64 0), i32 6)
  call void @define_makeflags(i32 1, i32 0)
  %658 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @lookup_file to %struct.file* (i8*, ...)*)(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.411, i64 0, i64 0))
  %659 = icmp ne %struct.file* %658, null
  %660 = zext i1 %659 to i32
  %661 = load i32, i32* @ignore_errors_flag, align 4
  %662 = or i32 %661, %660
  store i32 %662, i32* @ignore_errors_flag, align 4
  %663 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @lookup_file to %struct.file* (i8*, ...)*)(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17.412, i64 0, i64 0))
  %664 = icmp ne %struct.file* %663, null
  %665 = zext i1 %664 to i32
  %666 = load i32, i32* @silent_flag, align 4
  %667 = or i32 %666, %665
  store i32 %667, i32* @silent_flag, align 4
  call void (...) bitcast (void ()* @snap_deps to void (...)*)()
  call void (...) bitcast (void ()* @install_default_implicit_rules to void (...)*)()
  call void (...) bitcast (void ()* @convert_to_pattern to void (...)*)()
  call void (...) bitcast (void ()* @count_implicit_rule_limits to void (...)*)()
  call void (...) bitcast (void ()* @build_vpath_lists to void (...)*)()
  %668 = load %struct.stringlist*, %struct.stringlist** @old_files, align 8
  %669 = icmp ne %struct.stringlist* %668, null
  br i1 %669, label %670, label %695

670:                                              ; preds = %655
  %671 = load %struct.stringlist*, %struct.stringlist** @old_files, align 8
  %672 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %671, i32 0, i32 0
  %673 = load i8**, i8*** %672, align 8
  store i8** %673, i8*** %13, align 8
  br label %674

674:                                              ; preds = %691, %670
  %675 = load i8**, i8*** %13, align 8
  %676 = load i8*, i8** %675, align 8
  %677 = icmp ne i8* %676, null
  br i1 %677, label %678, label %694

678:                                              ; preds = %674
  %679 = load i8**, i8*** %13, align 8
  %680 = load i8*, i8** %679, align 8
  %681 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* %680)
  store %struct.file* %681, %struct.file** %8, align 8
  %682 = load %struct.file*, %struct.file** %8, align 8
  %683 = getelementptr inbounds %struct.file, %struct.file* %682, i32 0, i32 6
  store i64 1, i64* %683, align 8
  %684 = load %struct.file*, %struct.file** %8, align 8
  %685 = getelementptr inbounds %struct.file, %struct.file* %684, i32 0, i32 12
  %686 = load i16, i16* %685, align 2
  %687 = and i16 %686, -65
  %688 = or i16 %687, 64
  store i16 %688, i16* %685, align 2
  %689 = load %struct.file*, %struct.file** %8, align 8
  %690 = getelementptr inbounds %struct.file, %struct.file* %689, i32 0, i32 11
  store i16 0, i16* %690, align 8
  br label %691

691:                                              ; preds = %678
  %692 = load i8**, i8*** %13, align 8
  %693 = getelementptr inbounds i8*, i8** %692, i32 1
  store i8** %693, i8*** %13, align 8
  br label %674

694:                                              ; preds = %674
  br label %695

695:                                              ; preds = %694, %655
  %696 = load %struct.stringlist*, %struct.stringlist** @new_files, align 8
  %697 = icmp ne %struct.stringlist* %696, null
  br i1 %697, label %698, label %718

698:                                              ; preds = %695
  %699 = call i64 @time(i64* null) #10
  store i64 %699, i64* %14, align 8
  %700 = load %struct.stringlist*, %struct.stringlist** @new_files, align 8
  %701 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %700, i32 0, i32 0
  %702 = load i8**, i8*** %701, align 8
  store i8** %702, i8*** %13, align 8
  br label %703

703:                                              ; preds = %714, %698
  %704 = load i8**, i8*** %13, align 8
  %705 = load i8*, i8** %704, align 8
  %706 = icmp ne i8* %705, null
  br i1 %706, label %707, label %717

707:                                              ; preds = %703
  %708 = load i8**, i8*** %13, align 8
  %709 = load i8*, i8** %708, align 8
  %710 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* %709)
  store %struct.file* %710, %struct.file** %8, align 8
  %711 = load i64, i64* %14, align 8
  %712 = load %struct.file*, %struct.file** %8, align 8
  %713 = getelementptr inbounds %struct.file, %struct.file* %712, i32 0, i32 6
  store i64 %711, i64* %713, align 8
  br label %714

714:                                              ; preds = %707
  %715 = load i8**, i8*** %13, align 8
  %716 = getelementptr inbounds i8*, i8** %715, i32 1
  store i8** %716, i8*** %13, align 8
  br label %703

717:                                              ; preds = %703
  br label %718

718:                                              ; preds = %717, %695
  %719 = load %struct.dep*, %struct.dep** %17, align 8
  %720 = icmp ne %struct.dep* %719, null
  br i1 %720, label %721, label %1139

721:                                              ; preds = %718
  store i64* null, i64** %29, align 8
  store i32 0, i32* %30, align 4
  %722 = load i32, i32* @debug_flag, align 4
  %723 = icmp ne i32 %722, 0
  br i1 %723, label %724, label %726

724:                                              ; preds = %721
  %725 = call i32 @puts(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18.413, i64 0, i64 0))
  br label %726

726:                                              ; preds = %724, %721
  store %struct.dep* null, %struct.dep** %32, align 8
  %727 = load %struct.dep*, %struct.dep** %17, align 8
  store %struct.dep* %727, %struct.dep** %31, align 8
  br label %728

728:                                              ; preds = %849, %726
  %729 = load %struct.dep*, %struct.dep** %31, align 8
  %730 = icmp ne %struct.dep* %729, null
  br i1 %730, label %731, label %850

731:                                              ; preds = %728
  %732 = load %struct.dep*, %struct.dep** %31, align 8
  %733 = getelementptr inbounds %struct.dep, %struct.dep* %732, i32 0, i32 2
  %734 = load %struct.file*, %struct.file** %733, align 8
  store %struct.file* %734, %struct.file** %33, align 8
  %735 = load %struct.file*, %struct.file** %33, align 8
  %736 = getelementptr inbounds %struct.file, %struct.file* %735, i32 0, i32 12
  %737 = load i16, i16* %736, align 2
  %738 = lshr i16 %737, 2
  %739 = and i16 %738, 1
  %740 = zext i16 %739 to i32
  %741 = icmp ne i32 %740, 0
  br i1 %741, label %742, label %794

742:                                              ; preds = %731
  br label %743

743:                                              ; preds = %790, %742
  %744 = load %struct.file*, %struct.file** %33, align 8
  %745 = getelementptr inbounds %struct.file, %struct.file* %744, i32 0, i32 2
  %746 = load %struct.dep*, %struct.dep** %745, align 8
  %747 = icmp eq %struct.dep* %746, null
  br i1 %747, label %748, label %786

748:                                              ; preds = %743
  %749 = load %struct.file*, %struct.file** %33, align 8
  %750 = getelementptr inbounds %struct.file, %struct.file* %749, i32 0, i32 3
  %751 = load %struct.commands*, %struct.commands** %750, align 8
  %752 = icmp ne %struct.commands* %751, null
  br i1 %752, label %753, label %786

753:                                              ; preds = %748
  %754 = load i32, i32* @debug_flag, align 4
  %755 = icmp ne i32 %754, 0
  br i1 %755, label %756, label %761

756:                                              ; preds = %753
  %757 = load %struct.file*, %struct.file** %33, align 8
  %758 = getelementptr inbounds %struct.file, %struct.file* %757, i32 0, i32 1
  %759 = load i8*, i8** %758, align 8
  %760 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.414, i64 0, i64 0), i8* %759)
  br label %761

761:                                              ; preds = %756, %753
  %762 = load %struct.dep*, %struct.dep** %32, align 8
  %763 = icmp eq %struct.dep* %762, null
  br i1 %763, label %764, label %768

764:                                              ; preds = %761
  %765 = load %struct.dep*, %struct.dep** %31, align 8
  %766 = getelementptr inbounds %struct.dep, %struct.dep* %765, i32 0, i32 0
  %767 = load %struct.dep*, %struct.dep** %766, align 8
  store %struct.dep* %767, %struct.dep** %17, align 8
  br label %774

768:                                              ; preds = %761
  %769 = load %struct.dep*, %struct.dep** %31, align 8
  %770 = getelementptr inbounds %struct.dep, %struct.dep* %769, i32 0, i32 0
  %771 = load %struct.dep*, %struct.dep** %770, align 8
  %772 = load %struct.dep*, %struct.dep** %32, align 8
  %773 = getelementptr inbounds %struct.dep, %struct.dep* %772, i32 0, i32 0
  store %struct.dep* %771, %struct.dep** %773, align 8
  br label %774

774:                                              ; preds = %768, %764
  %775 = load %struct.dep*, %struct.dep** %31, align 8
  %776 = bitcast %struct.dep* %775 to i8*
  call void @free(i8* %776) #10
  %777 = load %struct.dep*, %struct.dep** %32, align 8
  %778 = icmp eq %struct.dep* %777, null
  br i1 %778, label %779, label %780

779:                                              ; preds = %774
  br label %784

780:                                              ; preds = %774
  %781 = load %struct.dep*, %struct.dep** %32, align 8
  %782 = getelementptr inbounds %struct.dep, %struct.dep* %781, i32 0, i32 0
  %783 = load %struct.dep*, %struct.dep** %782, align 8
  br label %784

784:                                              ; preds = %780, %779
  %785 = phi %struct.dep* [ null, %779 ], [ %783, %780 ]
  store %struct.dep* %785, %struct.dep** %31, align 8
  br label %793

786:                                              ; preds = %748, %743
  %787 = load %struct.file*, %struct.file** %33, align 8
  %788 = getelementptr inbounds %struct.file, %struct.file* %787, i32 0, i32 7
  %789 = load %struct.file*, %struct.file** %788, align 8
  store %struct.file* %789, %struct.file** %33, align 8
  br label %790

790:                                              ; preds = %786
  %791 = load %struct.file*, %struct.file** %33, align 8
  %792 = icmp ne %struct.file* %791, null
  br i1 %792, label %743, label %793

793:                                              ; preds = %790, %784
  br label %794

794:                                              ; preds = %793, %731
  %795 = load %struct.file*, %struct.file** %33, align 8
  %796 = icmp eq %struct.file* %795, null
  br i1 %796, label %805, label %797

797:                                              ; preds = %794
  %798 = load %struct.file*, %struct.file** %33, align 8
  %799 = getelementptr inbounds %struct.file, %struct.file* %798, i32 0, i32 12
  %800 = load i16, i16* %799, align 2
  %801 = lshr i16 %800, 2
  %802 = and i16 %801, 1
  %803 = zext i16 %802 to i32
  %804 = icmp ne i32 %803, 0
  br i1 %804, label %849, label %805

805:                                              ; preds = %797, %794
  %806 = load i64*, i64** %29, align 8
  %807 = icmp eq i64* %806, null
  br i1 %807, label %808, label %811

808:                                              ; preds = %805
  %809 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 8)
  %810 = bitcast i8* %809 to i64*
  store i64* %810, i64** %29, align 8
  br label %820

811:                                              ; preds = %805
  %812 = load i64*, i64** %29, align 8
  %813 = bitcast i64* %812 to i8*
  %814 = load i32, i32* %30, align 4
  %815 = add i32 %814, 1
  %816 = zext i32 %815 to i64
  %817 = mul i64 %816, 8
  %818 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i64, ...)*)(i8* %813, i64 %817)
  %819 = bitcast i8* %818 to i64*
  store i64* %819, i64** %29, align 8
  br label %820

820:                                              ; preds = %811, %808
  %821 = load %struct.dep*, %struct.dep** %31, align 8
  %822 = getelementptr inbounds %struct.dep, %struct.dep* %821, i32 0, i32 2
  %823 = load %struct.file*, %struct.file** %822, align 8
  %824 = getelementptr inbounds %struct.file, %struct.file* %823, i32 0, i32 6
  %825 = load i64, i64* %824, align 8
  %826 = icmp ne i64 %825, 0
  br i1 %826, label %827, label %833

827:                                              ; preds = %820
  %828 = load %struct.dep*, %struct.dep** %31, align 8
  %829 = getelementptr inbounds %struct.dep, %struct.dep* %828, i32 0, i32 2
  %830 = load %struct.file*, %struct.file** %829, align 8
  %831 = getelementptr inbounds %struct.file, %struct.file* %830, i32 0, i32 6
  %832 = load i64, i64* %831, align 8
  br label %838

833:                                              ; preds = %820
  %834 = load %struct.dep*, %struct.dep** %31, align 8
  %835 = getelementptr inbounds %struct.dep, %struct.dep* %834, i32 0, i32 2
  %836 = load %struct.file*, %struct.file** %835, align 8
  %837 = call i64 (%struct.file*, i32, ...) bitcast (i64 (%struct.file*, i32)* @f_mtime to i64 (%struct.file*, i32, ...)*)(%struct.file* %836, i32 0)
  br label %838

838:                                              ; preds = %833, %827
  %839 = phi i64 [ %832, %827 ], [ %837, %833 ]
  %840 = load i64*, i64** %29, align 8
  %841 = load i32, i32* %30, align 4
  %842 = add i32 %841, 1
  store i32 %842, i32* %30, align 4
  %843 = zext i32 %841 to i64
  %844 = getelementptr inbounds i64, i64* %840, i64 %843
  store i64 %839, i64* %844, align 8
  %845 = load %struct.dep*, %struct.dep** %31, align 8
  store %struct.dep* %845, %struct.dep** %32, align 8
  %846 = load %struct.dep*, %struct.dep** %31, align 8
  %847 = getelementptr inbounds %struct.dep, %struct.dep* %846, i32 0, i32 0
  %848 = load %struct.dep*, %struct.dep** %847, align 8
  store %struct.dep* %848, %struct.dep** %31, align 8
  br label %849

849:                                              ; preds = %838, %797
  br label %728

850:                                              ; preds = %728
  call void @define_makeflags(i32 1, i32 1)
  %851 = load %struct.dep*, %struct.dep** %17, align 8
  %852 = call i32 (%struct.dep*, i32, ...) bitcast (i32 (%struct.dep*, i32)* @update_goal_chain to i32 (%struct.dep*, i32, ...)*)(%struct.dep* %851, i32 1)
  switch i32 %852, label %853 [
    i32 -1, label %854
    i32 1, label %855
    i32 0, label %1014
  ]

853:                                              ; preds = %850
  call void @abort() #12
  unreachable

854:                                              ; preds = %850
  br label %1138

855:                                              ; preds = %850
  store i32 0, i32* %34, align 4
  store i32 0, i32* %35, align 4
  store i32 0, i32* %36, align 4
  br label %856

856:                                              ; preds = %1000, %855
  %857 = load %struct.dep*, %struct.dep** %17, align 8
  %858 = icmp ne %struct.dep* %857, null
  br i1 %858, label %859, label %1003

859:                                              ; preds = %856
  %860 = load %struct.dep*, %struct.dep** %17, align 8
  store %struct.dep* %860, %struct.dep** %37, align 8
  %861 = load %struct.dep*, %struct.dep** %37, align 8
  %862 = getelementptr inbounds %struct.dep, %struct.dep* %861, i32 0, i32 0
  %863 = load %struct.dep*, %struct.dep** %862, align 8
  store %struct.dep* %863, %struct.dep** %17, align 8
  %864 = load %struct.dep*, %struct.dep** %37, align 8
  %865 = getelementptr inbounds %struct.dep, %struct.dep* %864, i32 0, i32 2
  %866 = load %struct.file*, %struct.file** %865, align 8
  %867 = getelementptr inbounds %struct.file, %struct.file* %866, i32 0, i32 12
  %868 = load i16, i16* %867, align 2
  %869 = lshr i16 %868, 6
  %870 = and i16 %869, 1
  %871 = zext i16 %870 to i32
  %872 = icmp ne i32 %871, 0
  br i1 %872, label %873, label %957

873:                                              ; preds = %859
  %874 = load %struct.dep*, %struct.dep** %37, align 8
  %875 = getelementptr inbounds %struct.dep, %struct.dep* %874, i32 0, i32 2
  %876 = load %struct.file*, %struct.file** %875, align 8
  %877 = getelementptr inbounds %struct.file, %struct.file* %876, i32 0, i32 11
  %878 = load i16, i16* %877, align 8
  %879 = sext i16 %878 to i32
  %880 = icmp eq i32 %879, 0
  br i1 %880, label %881, label %910

881:                                              ; preds = %873
  %882 = load %struct.dep*, %struct.dep** %37, align 8
  %883 = getelementptr inbounds %struct.dep, %struct.dep* %882, i32 0, i32 2
  %884 = load %struct.file*, %struct.file** %883, align 8
  %885 = getelementptr inbounds %struct.file, %struct.file* %884, i32 0, i32 6
  %886 = load i64, i64* %885, align 8
  %887 = icmp ne i64 %886, 0
  br i1 %887, label %888, label %894

888:                                              ; preds = %881
  %889 = load %struct.dep*, %struct.dep** %37, align 8
  %890 = getelementptr inbounds %struct.dep, %struct.dep* %889, i32 0, i32 2
  %891 = load %struct.file*, %struct.file** %890, align 8
  %892 = getelementptr inbounds %struct.file, %struct.file* %891, i32 0, i32 6
  %893 = load i64, i64* %892, align 8
  br label %899

894:                                              ; preds = %881
  %895 = load %struct.dep*, %struct.dep** %37, align 8
  %896 = getelementptr inbounds %struct.dep, %struct.dep* %895, i32 0, i32 2
  %897 = load %struct.file*, %struct.file** %896, align 8
  %898 = call i64 (%struct.file*, i32, ...) bitcast (i64 (%struct.file*, i32)* @f_mtime to i64 (%struct.file*, i32, ...)*)(%struct.file* %897, i32 0)
  br label %899

899:                                              ; preds = %894, %888
  %900 = phi i64 [ %893, %888 ], [ %898, %894 ]
  %901 = load i64*, i64** %29, align 8
  %902 = load i32, i32* %36, align 4
  %903 = zext i32 %902 to i64
  %904 = getelementptr inbounds i64, i64* %901, i64 %903
  %905 = load i64, i64* %904, align 8
  %906 = icmp ne i64 %900, %905
  %907 = zext i1 %906 to i32
  %908 = load i32, i32* %34, align 4
  %909 = or i32 %908, %907
  store i32 %909, i32* %34, align 4
  br label %956

910:                                              ; preds = %873
  %911 = load %struct.dep*, %struct.dep** %37, align 8
  %912 = getelementptr inbounds %struct.dep, %struct.dep* %911, i32 0, i32 3
  %913 = load i32, i32* %912, align 8
  %914 = icmp ne i32 %913, 1
  br i1 %914, label %915, label %955

915:                                              ; preds = %910
  %916 = load %struct.dep*, %struct.dep** %37, align 8
  %917 = getelementptr inbounds %struct.dep, %struct.dep* %916, i32 0, i32 2
  %918 = load %struct.file*, %struct.file** %917, align 8
  %919 = getelementptr inbounds %struct.file, %struct.file* %918, i32 0, i32 1
  %920 = load i8*, i8** %919, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.20.415, i64 0, i64 0), i8* %920)
  %921 = load %struct.dep*, %struct.dep** %37, align 8
  %922 = getelementptr inbounds %struct.dep, %struct.dep* %921, i32 0, i32 2
  %923 = load %struct.file*, %struct.file** %922, align 8
  %924 = getelementptr inbounds %struct.file, %struct.file* %923, i32 0, i32 6
  %925 = load i64, i64* %924, align 8
  %926 = icmp ne i64 %925, 0
  br i1 %926, label %927, label %933

927:                                              ; preds = %915
  %928 = load %struct.dep*, %struct.dep** %37, align 8
  %929 = getelementptr inbounds %struct.dep, %struct.dep* %928, i32 0, i32 2
  %930 = load %struct.file*, %struct.file** %929, align 8
  %931 = getelementptr inbounds %struct.file, %struct.file* %930, i32 0, i32 6
  %932 = load i64, i64* %931, align 8
  br label %938

933:                                              ; preds = %915
  %934 = load %struct.dep*, %struct.dep** %37, align 8
  %935 = getelementptr inbounds %struct.dep, %struct.dep* %934, i32 0, i32 2
  %936 = load %struct.file*, %struct.file** %935, align 8
  %937 = call i64 (%struct.file*, i32, ...) bitcast (i64 (%struct.file*, i32)* @f_mtime to i64 (%struct.file*, i32, ...)*)(%struct.file* %936, i32 0)
  br label %938

938:                                              ; preds = %933, %927
  %939 = phi i64 [ %932, %927 ], [ %937, %933 ]
  store i64 %939, i64* %38, align 8
  %940 = load i64, i64* %38, align 8
  %941 = icmp ne i64 %940, -1
  br i1 %941, label %942, label %950

942:                                              ; preds = %938
  %943 = load i64, i64* %38, align 8
  %944 = load i64*, i64** %29, align 8
  %945 = load i32, i32* %36, align 4
  %946 = zext i32 %945 to i64
  %947 = getelementptr inbounds i64, i64* %944, i64 %946
  %948 = load i64, i64* %947, align 8
  %949 = icmp ne i64 %943, %948
  br label %950

950:                                              ; preds = %942, %938
  %951 = phi i1 [ false, %938 ], [ %949, %942 ]
  %952 = zext i1 %951 to i32
  %953 = load i32, i32* %34, align 4
  %954 = or i32 %953, %952
  store i32 %954, i32* %34, align 4
  br label %955

955:                                              ; preds = %950, %910
  br label %956

956:                                              ; preds = %955, %899
  br label %997

957:                                              ; preds = %859
  %958 = load %struct.dep*, %struct.dep** %37, align 8
  %959 = getelementptr inbounds %struct.dep, %struct.dep* %958, i32 0, i32 3
  %960 = load i32, i32* %959, align 8
  switch i32 %960, label %996 [
    i32 0, label %961
    i32 1, label %978
    i32 2, label %979
  ]

961:                                              ; preds = %957
  %962 = load %struct.dep*, %struct.dep** %37, align 8
  %963 = getelementptr inbounds %struct.dep, %struct.dep* %962, i32 0, i32 1
  %964 = load i8*, i8** %963, align 8
  %965 = icmp eq i8* %964, null
  br i1 %965, label %966, label %972

966:                                              ; preds = %961
  %967 = load %struct.dep*, %struct.dep** %37, align 8
  %968 = getelementptr inbounds %struct.dep, %struct.dep* %967, i32 0, i32 2
  %969 = load %struct.file*, %struct.file** %968, align 8
  %970 = getelementptr inbounds %struct.file, %struct.file* %969, i32 0, i32 1
  %971 = load i8*, i8** %970, align 8
  br label %976

972:                                              ; preds = %961
  %973 = load %struct.dep*, %struct.dep** %37, align 8
  %974 = getelementptr inbounds %struct.dep, %struct.dep* %973, i32 0, i32 1
  %975 = load i8*, i8** %974, align 8
  br label %976

976:                                              ; preds = %972, %966
  %977 = phi i8* [ %971, %966 ], [ %975, %972 ]
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21.416, i64 0, i64 0), i8* %977)
  store i32 1, i32* %35, align 4
  br label %996

978:                                              ; preds = %957
  br label %996

979:                                              ; preds = %957
  %980 = load %struct.dep*, %struct.dep** %37, align 8
  %981 = getelementptr inbounds %struct.dep, %struct.dep* %980, i32 0, i32 1
  %982 = load i8*, i8** %981, align 8
  %983 = icmp eq i8* %982, null
  br i1 %983, label %984, label %990

984:                                              ; preds = %979
  %985 = load %struct.dep*, %struct.dep** %37, align 8
  %986 = getelementptr inbounds %struct.dep, %struct.dep* %985, i32 0, i32 2
  %987 = load %struct.file*, %struct.file** %986, align 8
  %988 = getelementptr inbounds %struct.file, %struct.file* %987, i32 0, i32 1
  %989 = load i8*, i8** %988, align 8
  br label %994

990:                                              ; preds = %979
  %991 = load %struct.dep*, %struct.dep** %37, align 8
  %992 = getelementptr inbounds %struct.dep, %struct.dep* %991, i32 0, i32 1
  %993 = load i8*, i8** %992, align 8
  br label %994

994:                                              ; preds = %990, %984
  %995 = phi i8* [ %989, %984 ], [ %993, %990 ]
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22.417, i64 0, i64 0), i8* %995)
  br label %996

996:                                              ; preds = %994, %978, %976, %957
  br label %997

997:                                              ; preds = %996, %956
  %998 = load %struct.dep*, %struct.dep** %37, align 8
  %999 = bitcast %struct.dep* %998 to i8*
  call void @free(i8* %999) #10
  br label %1000

1000:                                             ; preds = %997
  %1001 = load i32, i32* %36, align 4
  %1002 = add i32 %1001, 1
  store i32 %1002, i32* %36, align 4
  br label %856

1003:                                             ; preds = %856
  %1004 = load i32, i32* %34, align 4
  %1005 = icmp ne i32 %1004, 0
  br i1 %1005, label %1006, label %1007

1006:                                             ; preds = %1003
  br label %1015

1007:                                             ; preds = %1003
  %1008 = load i32, i32* %35, align 4
  %1009 = icmp ne i32 %1008, 0
  br i1 %1009, label %1010, label %1011

1010:                                             ; preds = %1007
  call void @die(i32 1)
  br label %1012

1011:                                             ; preds = %1007
  br label %1138

1012:                                             ; preds = %1010
  br label %1013

1013:                                             ; preds = %1012
  br label %1014

1014:                                             ; preds = %1013, %850
  br label %1015

1015:                                             ; preds = %1014, %1006
  %1016 = load i32, i32* @print_directory_flag, align 4
  %1017 = icmp ne i32 %1016, 0
  br i1 %1017, label %1018, label %1019

1018:                                             ; preds = %1015
  call void @log_working_directory(i32 0)
  br label %1019

1019:                                             ; preds = %1018, %1015
  %1020 = load i32, i32* @debug_flag, align 4
  %1021 = icmp ne i32 %1020, 0
  br i1 %1021, label %1022, label %1024

1022:                                             ; preds = %1019
  %1023 = call i32 @puts(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23.420, i64 0, i64 0))
  br label %1024

1024:                                             ; preds = %1022, %1019
  %1025 = load %struct.stringlist*, %struct.stringlist** @makefiles, align 8
  %1026 = icmp ne %struct.stringlist* %1025, null
  br i1 %1026, label %1027, label %1085

1027:                                             ; preds = %1024
  store i32 0, i32* %40, align 4
  store i32 1, i32* %39, align 4
  br label %1028

1028:                                             ; preds = %1081, %1027
  %1029 = load i32, i32* %39, align 4
  %1030 = load i32, i32* %5, align 4
  %1031 = icmp ult i32 %1029, %1030
  br i1 %1031, label %1032, label %1084

1032:                                             ; preds = %1028
  %1033 = load i8**, i8*** %6, align 8
  %1034 = load i32, i32* %39, align 4
  %1035 = zext i32 %1034 to i64
  %1036 = getelementptr inbounds i8*, i8** %1033, i64 %1035
  %1037 = load i8*, i8** %1036, align 8
  %1038 = call i32 @strcmp(i8* %1037, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.421, i64 0, i64 0)) #9
  %1039 = icmp ne i32 %1038, 0
  br i1 %1039, label %1080, label %1040

1040:                                             ; preds = %1032
  %1041 = load i8**, i8*** %6, align 8
  %1042 = load i32, i32* %39, align 4
  %1043 = zext i32 %1042 to i64
  %1044 = getelementptr inbounds i8*, i8** %1041, i64 %1043
  %1045 = load i8*, i8** %1044, align 8
  %1046 = getelementptr inbounds i8, i8* %1045, i64 2
  store i8* %1046, i8** %41, align 8
  %1047 = load i8*, i8** %41, align 8
  %1048 = load i8, i8* %1047, align 1
  %1049 = sext i8 %1048 to i32
  %1050 = icmp eq i32 %1049, 0
  br i1 %1050, label %1051, label %1064

1051:                                             ; preds = %1040
  %1052 = load %struct.stringlist*, %struct.stringlist** @makefiles, align 8
  %1053 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %1052, i32 0, i32 0
  %1054 = load i8**, i8*** %1053, align 8
  %1055 = load i32, i32* %40, align 4
  %1056 = zext i32 %1055 to i64
  %1057 = getelementptr inbounds i8*, i8** %1054, i64 %1056
  %1058 = load i8*, i8** %1057, align 8
  %1059 = load i8**, i8*** %6, align 8
  %1060 = load i32, i32* %39, align 4
  %1061 = add i32 %1060, 1
  store i32 %1061, i32* %39, align 4
  %1062 = zext i32 %1061 to i64
  %1063 = getelementptr inbounds i8*, i8** %1059, i64 %1062
  store i8* %1058, i8** %1063, align 8
  br label %1077

1064:                                             ; preds = %1040
  %1065 = load %struct.stringlist*, %struct.stringlist** @makefiles, align 8
  %1066 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %1065, i32 0, i32 0
  %1067 = load i8**, i8*** %1066, align 8
  %1068 = load i32, i32* %40, align 4
  %1069 = zext i32 %1068 to i64
  %1070 = getelementptr inbounds i8*, i8** %1067, i64 %1069
  %1071 = load i8*, i8** %1070, align 8
  %1072 = call i8* (i8*, i8*, i8*, ...) bitcast (i8* (i8*, i8*, i8*)* @concat to i8* (i8*, i8*, i8*, ...)*)(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.421, i64 0, i64 0), i8* %1071, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.394, i64 0, i64 0))
  %1073 = load i8**, i8*** %6, align 8
  %1074 = load i32, i32* %39, align 4
  %1075 = zext i32 %1074 to i64
  %1076 = getelementptr inbounds i8*, i8** %1073, i64 %1075
  store i8* %1072, i8** %1076, align 8
  br label %1077

1077:                                             ; preds = %1064, %1051
  %1078 = load i32, i32* %40, align 4
  %1079 = add i32 %1078, 1
  store i32 %1079, i32* %40, align 4
  br label %1080

1080:                                             ; preds = %1077, %1032
  br label %1081

1081:                                             ; preds = %1080
  %1082 = load i32, i32* %39, align 4
  %1083 = add i32 %1082, 1
  store i32 %1083, i32* %39, align 4
  br label %1028

1084:                                             ; preds = %1028
  br label %1085

1085:                                             ; preds = %1084, %1024
  %1086 = load %struct.stringlist*, %struct.stringlist** @directories.402, align 8
  %1087 = icmp ne %struct.stringlist* %1086, null
  br i1 %1087, label %1088, label %1111

1088:                                             ; preds = %1085
  %1089 = load %struct.stringlist*, %struct.stringlist** @directories.402, align 8
  %1090 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %1089, i32 0, i32 1
  %1091 = load i32, i32* %1090, align 8
  %1092 = icmp ugt i32 %1091, 0
  br i1 %1092, label %1093, label %1111

1093:                                             ; preds = %1088
  %1094 = getelementptr inbounds [4096 x i8], [4096 x i8]* %18, i64 0, i64 0
  %1095 = load i8, i8* %1094, align 16
  %1096 = sext i8 %1095 to i32
  %1097 = icmp ne i32 %1096, 0
  br i1 %1097, label %1098, label %1105

1098:                                             ; preds = %1093
  %1099 = getelementptr inbounds [4096 x i8], [4096 x i8]* %18, i64 0, i64 0
  %1100 = call i32 @chdir(i8* %1099) #10
  %1101 = icmp slt i32 %1100, 0
  br i1 %1101, label %1102, label %1103

1102:                                             ; preds = %1098
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*)* @perror_with_name to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25.422, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.394, i64 0, i64 0))
  store i8 1, i8* %42, align 1
  br label %1104

1103:                                             ; preds = %1098
  store i8 0, i8* %42, align 1
  br label %1104

1104:                                             ; preds = %1103, %1102
  br label %1106

1105:                                             ; preds = %1093
  store i8 1, i8* %42, align 1
  br label %1106

1106:                                             ; preds = %1105, %1104
  %1107 = load i8, i8* %42, align 1
  %1108 = icmp ne i8 %1107, 0
  br i1 %1108, label %1109, label %1110

1109:                                             ; preds = %1106
  call void (i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26.423, i64 0, i64 0))
  br label %1110

1110:                                             ; preds = %1109, %1106
  br label %1111

1111:                                             ; preds = %1110, %1088, %1085
  %1112 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %1113 = call i32 @fflush(%struct._IO_FILE* %1112)
  %1114 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1115 = call i32 @fflush(%struct._IO_FILE* %1114)
  %1116 = load i8**, i8*** @environ, align 8
  store i8** %1116, i8*** %13, align 8
  br label %1117

1117:                                             ; preds = %1132, %1111
  %1118 = load i8**, i8*** %13, align 8
  %1119 = load i8*, i8** %1118, align 8
  %1120 = icmp ne i8* %1119, null
  br i1 %1120, label %1121, label %1135

1121:                                             ; preds = %1117
  %1122 = load i8**, i8*** %13, align 8
  %1123 = load i8*, i8** %1122, align 8
  %1124 = call i32 @strncmp(i8* %1123, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27.424, i64 0, i64 0), i64 10) #9
  %1125 = icmp ne i32 %1124, 0
  br i1 %1125, label %1131, label %1126

1126:                                             ; preds = %1121
  %1127 = load i8**, i8*** %13, align 8
  %1128 = load i8*, i8** %1127, align 8
  %1129 = load i32, i32* @makelevel, align 4
  %1130 = call i32 (i8*, i8*, ...) @sprintf(i8* %1128, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28.425, i64 0, i64 0), i32 %1129) #10
  br label %1135

1131:                                             ; preds = %1121
  br label %1132

1132:                                             ; preds = %1131
  %1133 = load i8**, i8*** %13, align 8
  %1134 = getelementptr inbounds i8*, i8** %1133, i32 1
  store i8** %1134, i8*** %13, align 8
  br label %1117

1135:                                             ; preds = %1126, %1117
  %1136 = load i8**, i8*** %6, align 8
  %1137 = load i8**, i8*** @environ, align 8
  call void (i8**, i8**, ...) bitcast (void (i8**, i8**)* @exec_command to void (i8**, i8**, ...)*)(i8** %1136, i8** %1137)
  br label %1138

1138:                                             ; preds = %1135, %1011, %854
  br label %1139

1139:                                             ; preds = %1138, %718
  call void @define_makeflags(i32 1, i32 0)
  %1140 = load %struct.dep*, %struct.dep** %15, align 8
  %1141 = icmp eq %struct.dep* %1140, null
  br i1 %1141, label %1142, label %1156

1142:                                             ; preds = %1139
  %1143 = load %struct.file*, %struct.file** @default_goal_file, align 8
  %1144 = icmp ne %struct.file* %1143, null
  br i1 %1144, label %1145, label %1155

1145:                                             ; preds = %1142
  %1146 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 32)
  %1147 = bitcast i8* %1146 to %struct.dep*
  store %struct.dep* %1147, %struct.dep** %15, align 8
  %1148 = load %struct.dep*, %struct.dep** %15, align 8
  %1149 = getelementptr inbounds %struct.dep, %struct.dep* %1148, i32 0, i32 0
  store %struct.dep* null, %struct.dep** %1149, align 8
  %1150 = load %struct.dep*, %struct.dep** %15, align 8
  %1151 = getelementptr inbounds %struct.dep, %struct.dep* %1150, i32 0, i32 1
  store i8* null, i8** %1151, align 8
  %1152 = load %struct.file*, %struct.file** @default_goal_file, align 8
  %1153 = load %struct.dep*, %struct.dep** %15, align 8
  %1154 = getelementptr inbounds %struct.dep, %struct.dep* %1153, i32 0, i32 2
  store %struct.file* %1152, %struct.file** %1154, align 8
  br label %1155

1155:                                             ; preds = %1145, %1142
  br label %1159

1156:                                             ; preds = %1139
  %1157 = load %struct.dep*, %struct.dep** %16, align 8
  %1158 = getelementptr inbounds %struct.dep, %struct.dep* %1157, i32 0, i32 0
  store %struct.dep* null, %struct.dep** %1158, align 8
  br label %1159

1159:                                             ; preds = %1156, %1155
  %1160 = load %struct.dep*, %struct.dep** %15, align 8
  %1161 = icmp ne %struct.dep* %1160, null
  br i1 %1161, label %1162, label %1174

1162:                                             ; preds = %1159
  %1163 = load i32, i32* @debug_flag, align 4
  %1164 = icmp ne i32 %1163, 0
  br i1 %1164, label %1165, label %1167

1165:                                             ; preds = %1162
  %1166 = call i32 @puts(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.426, i64 0, i64 0))
  br label %1167

1167:                                             ; preds = %1165, %1162
  %1168 = load %struct.dep*, %struct.dep** %15, align 8
  %1169 = call i32 (%struct.dep*, i32, ...) bitcast (i32 (%struct.dep*, i32)* @update_goal_chain to i32 (%struct.dep*, i32, ...)*)(%struct.dep* %1168, i32 0)
  switch i32 %1169, label %1172 [
    i32 -1, label %1170
    i32 0, label %1170
    i32 1, label %1171
  ]

1170:                                             ; preds = %1167, %1167
  store i32 0, i32* %43, align 4
  br label %1173

1171:                                             ; preds = %1167
  store i32 1, i32* %43, align 4
  br label %1173

1172:                                             ; preds = %1167
  call void @abort() #12
  unreachable

1173:                                             ; preds = %1171, %1170
  br label %1174

1174:                                             ; preds = %1173, %1159
  %1175 = load i32, i32* @print_data_base_flag, align 4
  %1176 = icmp ne i32 %1175, 0
  br i1 %1176, label %1177, label %1178

1177:                                             ; preds = %1174
  call void @print_data_base()
  br label %1178

1178:                                             ; preds = %1177, %1174
  %1179 = load %struct.dep*, %struct.dep** %15, align 8
  %1180 = icmp eq %struct.dep* %1179, null
  br i1 %1180, label %1181, label %1187

1181:                                             ; preds = %1178
  %1182 = load %struct.dep*, %struct.dep** %17, align 8
  %1183 = icmp eq %struct.dep* %1182, null
  br i1 %1183, label %1184, label %1185

1184:                                             ; preds = %1181
  call void (i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.30.427, i64 0, i64 0))
  br label %1186

1185:                                             ; preds = %1181
  call void (i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31.428, i64 0, i64 0))
  br label %1186

1186:                                             ; preds = %1185, %1184
  br label %1187

1187:                                             ; preds = %1186, %1178
  %1188 = load i32, i32* %43, align 4
  call void @die(i32 %1188)
  ret i32 0
}

; Function Attrs: nounwind
declare dso_local void @setlinebuf(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i8* @getwd(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @decode_switches(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %struct.command_switch*, align 8
  %9 = alloca %struct.stringlist*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  store i8 0, i8* %5, align 1
  call void @decode_env_switches(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14.409, i64 0, i64 0), i32 9)
  call void @decode_env_switches(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.410, i64 0, i64 0), i32 6)
  %12 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 16)
  %13 = bitcast i8* %12 to %struct.stringlist*
  store %struct.stringlist* %13, %struct.stringlist** @other_args, align 8
  %14 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %15 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %14, i32 0, i32 2
  store i32 5, i32* %15, align 4
  %16 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 40)
  %17 = bitcast i8* %16 to i8**
  %18 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %19 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %18, i32 0, i32 0
  store i8** %17, i8*** %19, align 8
  %20 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %21 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %20, i32 0, i32 1
  store i32 1, i32* %21, align 8
  %22 = load i8**, i8*** %4, align 8
  %23 = getelementptr inbounds i8*, i8** %22, i64 0
  %24 = load i8*, i8** %23, align 8
  %25 = load i8**, i8*** %4, align 8
  %26 = getelementptr inbounds i8*, i8** %25, i64 0
  %27 = load i8*, i8** %26, align 8
  %28 = call i64 @strlen(i8* %27) #9
  %29 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %24, i64 %28)
  %30 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %31 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %30, i32 0, i32 0
  %32 = load i8**, i8*** %31, align 8
  %33 = getelementptr inbounds i8*, i8** %32, i64 0
  store i8* %29, i8** %33, align 8
  store i32 1, i32* %6, align 4
  br label %34

34:                                               ; preds = %455, %2
  %35 = load i32, i32* %6, align 4
  %36 = load i32, i32* %3, align 4
  %37 = icmp ult i32 %35, %36
  br i1 %37, label %38, label %458

38:                                               ; preds = %34
  %39 = load i8**, i8*** %4, align 8
  %40 = load i32, i32* %6, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8*, i8** %39, i64 %41
  %43 = load i8*, i8** %42, align 8
  store i8* %43, i8** %7, align 8
  %44 = load i8*, i8** %7, align 8
  %45 = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %45, i8** %7, align 8
  %46 = load i8, i8* %44, align 1
  %47 = sext i8 %46 to i32
  %48 = icmp eq i32 %47, 45
  br i1 %48, label %49, label %412

49:                                               ; preds = %38
  br label %50

50:                                               ; preds = %410, %49
  %51 = load i8*, i8** %7, align 8
  %52 = load i8, i8* %51, align 1
  %53 = sext i8 %52 to i32
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %411

55:                                               ; preds = %50
  store %struct.command_switch* getelementptr inbounds ([23 x %struct.command_switch], [23 x %struct.command_switch]* @switches, i64 0, i64 0), %struct.command_switch** %8, align 8
  br label %56

56:                                               ; preds = %396, %55
  %57 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %58 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %57, i32 0, i32 0
  %59 = load i8, i8* %58, align 8
  %60 = sext i8 %59 to i32
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %399

62:                                               ; preds = %56
  %63 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %64 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %63, i32 0, i32 0
  %65 = load i8, i8* %64, align 8
  %66 = sext i8 %65 to i32
  %67 = load i8*, i8** %7, align 8
  %68 = load i8, i8* %67, align 1
  %69 = sext i8 %68 to i32
  %70 = icmp eq i32 %66, %69
  br i1 %70, label %71, label %395

71:                                               ; preds = %62
  %72 = load i8*, i8** %7, align 8
  %73 = getelementptr inbounds i8, i8* %72, i32 1
  store i8* %73, i8** %7, align 8
  %74 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %75 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %74, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  switch i32 %76, label %77 [
    i32 5, label %78
    i32 0, label %79
    i32 1, label %79
    i32 2, label %89
    i32 3, label %192
    i32 4, label %292
  ]

77:                                               ; preds = %71
  call void @abort() #12
  unreachable

78:                                               ; preds = %71
  br label %394

79:                                               ; preds = %71, %71
  %80 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %81 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %80, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  %84 = zext i1 %83 to i32
  %85 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %86 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %85, i32 0, i32 2
  %87 = load i8*, i8** %86, align 8
  %88 = bitcast i8* %87 to i32*
  store i32 %84, i32* %88, align 4
  br label %394

89:                                               ; preds = %71
  %90 = load i8*, i8** %7, align 8
  %91 = load i8, i8* %90, align 1
  %92 = sext i8 %91 to i32
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %116

94:                                               ; preds = %89
  %95 = load i8**, i8*** %4, align 8
  %96 = load i32, i32* %6, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %6, align 4
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i8*, i8** %95, i64 %98
  %100 = load i8*, i8** %99, align 8
  store i8* %100, i8** %10, align 8
  %101 = load i8*, i8** %10, align 8
  %102 = icmp eq i8* %101, null
  br i1 %102, label %103, label %115

103:                                              ; preds = %94
  %104 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %105 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %104, i32 0, i32 4
  %106 = load i8*, i8** %105, align 8
  store i8* %106, i8** %10, align 8
  %107 = load i8*, i8** %10, align 8
  %108 = icmp eq i8* %107, null
  br i1 %108, label %109, label %114

109:                                              ; preds = %103
  %110 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %111 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %110, i32 0, i32 0
  %112 = load i8, i8* %111, align 8
  %113 = sext i8 %112 to i32
  call void (i8*, i32, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i32, ...)*)(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.32.442, i64 0, i64 0), i32 %113)
  store i8 1, i8* %5, align 1
  br label %394

114:                                              ; preds = %103
  br label %115

115:                                              ; preds = %114, %94
  br label %118

116:                                              ; preds = %89
  %117 = load i8*, i8** %7, align 8
  store i8* %117, i8** %10, align 8
  br label %118

118:                                              ; preds = %116, %115
  %119 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %120 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %119, i32 0, i32 2
  %121 = load i8*, i8** %120, align 8
  %122 = bitcast i8* %121 to %struct.stringlist**
  %123 = load %struct.stringlist*, %struct.stringlist** %122, align 8
  store %struct.stringlist* %123, %struct.stringlist** %9, align 8
  %124 = load %struct.stringlist*, %struct.stringlist** %9, align 8
  %125 = icmp eq %struct.stringlist* %124, null
  br i1 %125, label %126, label %142

126:                                              ; preds = %118
  %127 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 16)
  %128 = bitcast i8* %127 to %struct.stringlist*
  store %struct.stringlist* %128, %struct.stringlist** %9, align 8
  %129 = load %struct.stringlist*, %struct.stringlist** %9, align 8
  %130 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %129, i32 0, i32 2
  store i32 5, i32* %130, align 4
  %131 = load %struct.stringlist*, %struct.stringlist** %9, align 8
  %132 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %131, i32 0, i32 1
  store i32 0, i32* %132, align 8
  %133 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 40)
  %134 = bitcast i8* %133 to i8**
  %135 = load %struct.stringlist*, %struct.stringlist** %9, align 8
  %136 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %135, i32 0, i32 0
  store i8** %134, i8*** %136, align 8
  %137 = load %struct.stringlist*, %struct.stringlist** %9, align 8
  %138 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %139 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %138, i32 0, i32 2
  %140 = load i8*, i8** %139, align 8
  %141 = bitcast i8* %140 to %struct.stringlist**
  store %struct.stringlist* %137, %struct.stringlist** %141, align 8
  br label %170

142:                                              ; preds = %118
  %143 = load %struct.stringlist*, %struct.stringlist** %9, align 8
  %144 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %143, i32 0, i32 1
  %145 = load i32, i32* %144, align 8
  %146 = load %struct.stringlist*, %struct.stringlist** %9, align 8
  %147 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %146, i32 0, i32 2
  %148 = load i32, i32* %147, align 4
  %149 = sub i32 %148, 1
  %150 = icmp eq i32 %145, %149
  br i1 %150, label %151, label %169

151:                                              ; preds = %142
  %152 = load %struct.stringlist*, %struct.stringlist** %9, align 8
  %153 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %152, i32 0, i32 2
  %154 = load i32, i32* %153, align 4
  %155 = add i32 %154, 5
  store i32 %155, i32* %153, align 4
  %156 = load %struct.stringlist*, %struct.stringlist** %9, align 8
  %157 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %156, i32 0, i32 0
  %158 = load i8**, i8*** %157, align 8
  %159 = bitcast i8** %158 to i8*
  %160 = load %struct.stringlist*, %struct.stringlist** %9, align 8
  %161 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %160, i32 0, i32 2
  %162 = load i32, i32* %161, align 4
  %163 = zext i32 %162 to i64
  %164 = mul i64 %163, 8
  %165 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i64, ...)*)(i8* %159, i64 %164)
  %166 = bitcast i8* %165 to i8**
  %167 = load %struct.stringlist*, %struct.stringlist** %9, align 8
  %168 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %167, i32 0, i32 0
  store i8** %166, i8*** %168, align 8
  br label %169

169:                                              ; preds = %151, %142
  br label %170

170:                                              ; preds = %169, %126
  %171 = load i8*, i8** %10, align 8
  %172 = load i8*, i8** %10, align 8
  %173 = call i64 @strlen(i8* %172) #9
  %174 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %171, i64 %173)
  %175 = load %struct.stringlist*, %struct.stringlist** %9, align 8
  %176 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %175, i32 0, i32 0
  %177 = load i8**, i8*** %176, align 8
  %178 = load %struct.stringlist*, %struct.stringlist** %9, align 8
  %179 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %178, i32 0, i32 1
  %180 = load i32, i32* %179, align 8
  %181 = add i32 %180, 1
  store i32 %181, i32* %179, align 8
  %182 = zext i32 %180 to i64
  %183 = getelementptr inbounds i8*, i8** %177, i64 %182
  store i8* %174, i8** %183, align 8
  %184 = load %struct.stringlist*, %struct.stringlist** %9, align 8
  %185 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %184, i32 0, i32 0
  %186 = load i8**, i8*** %185, align 8
  %187 = load %struct.stringlist*, %struct.stringlist** %9, align 8
  %188 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %187, i32 0, i32 1
  %189 = load i32, i32* %188, align 8
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds i8*, i8** %186, i64 %190
  store i8* null, i8** %191, align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.394, i64 0, i64 0), i8** %7, align 8
  br label %394

192:                                              ; preds = %71
  %193 = load i8*, i8** %7, align 8
  %194 = load i8, i8* %193, align 1
  %195 = sext i8 %194 to i32
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %204

197:                                              ; preds = %192
  %198 = load i8**, i8*** %4, align 8
  %199 = load i32, i32* %6, align 4
  %200 = add i32 %199, 1
  store i32 %200, i32* %6, align 4
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds i8*, i8** %198, i64 %201
  %203 = load i8*, i8** %202, align 8
  store i8* %203, i8** %10, align 8
  br label %206

204:                                              ; preds = %192
  %205 = load i8*, i8** %7, align 8
  store i8* %205, i8** %10, align 8
  br label %206

206:                                              ; preds = %204, %197
  %207 = load i8*, i8** %10, align 8
  %208 = icmp ne i8* %207, null
  br i1 %208, label %209, label %259

209:                                              ; preds = %206
  %210 = call i16** @__ctype_b_loc() #11
  %211 = load i16*, i16** %210, align 8
  %212 = load i8*, i8** %10, align 8
  %213 = load i8, i8* %212, align 1
  %214 = sext i8 %213 to i32
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds i16, i16* %211, i64 %215
  %217 = load i16, i16* %216, align 2
  %218 = zext i16 %217 to i32
  %219 = and i32 %218, 2048
  %220 = icmp ne i32 %219, 0
  br i1 %220, label %221, label %259

221:                                              ; preds = %209
  %222 = load i8*, i8** %10, align 8
  %223 = call i32 @atoi(i8* %222) #9
  store i32 %223, i32* %11, align 4
  %224 = load i8*, i8** %10, align 8
  %225 = load i8*, i8** %7, align 8
  %226 = icmp eq i8* %224, %225
  br i1 %226, label %227, label %244

227:                                              ; preds = %221
  br label %228

228:                                              ; preds = %240, %227
  %229 = call i16** @__ctype_b_loc() #11
  %230 = load i16*, i16** %229, align 8
  %231 = load i8*, i8** %7, align 8
  %232 = load i8, i8* %231, align 1
  %233 = sext i8 %232 to i32
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds i16, i16* %230, i64 %234
  %236 = load i16, i16* %235, align 2
  %237 = zext i16 %236 to i32
  %238 = and i32 %237, 2048
  %239 = icmp ne i32 %238, 0
  br i1 %239, label %240, label %243

240:                                              ; preds = %228
  %241 = load i8*, i8** %7, align 8
  %242 = getelementptr inbounds i8, i8* %241, i32 1
  store i8* %242, i8** %7, align 8
  br label %228

243:                                              ; preds = %228
  br label %244

244:                                              ; preds = %243, %221
  %245 = load i32, i32* %11, align 4
  %246 = icmp slt i32 %245, 1
  br i1 %246, label %247, label %252

247:                                              ; preds = %244
  %248 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %249 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %248, i32 0, i32 0
  %250 = load i8, i8* %249, align 8
  %251 = sext i8 %250 to i32
  call void (i8*, i32, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i32, ...)*)(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.33.443, i64 0, i64 0), i32 %251)
  store i8 1, i8* %5, align 1
  br label %258

252:                                              ; preds = %244
  %253 = load i32, i32* %11, align 4
  %254 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %255 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %254, i32 0, i32 2
  %256 = load i8*, i8** %255, align 8
  %257 = bitcast i8* %256 to i32*
  store i32 %253, i32* %257, align 4
  br label %258

258:                                              ; preds = %252, %247
  br label %291

259:                                              ; preds = %209, %206
  %260 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %261 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %260, i32 0, i32 4
  %262 = load i8*, i8** %261, align 8
  %263 = icmp ne i8* %262, null
  br i1 %263, label %264, label %274

264:                                              ; preds = %259
  %265 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %266 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %265, i32 0, i32 4
  %267 = load i8*, i8** %266, align 8
  %268 = bitcast i8* %267 to i32*
  %269 = load i32, i32* %268, align 4
  %270 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %271 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %270, i32 0, i32 2
  %272 = load i8*, i8** %271, align 8
  %273 = bitcast i8* %272 to i32*
  store i32 %269, i32* %273, align 4
  br label %279

274:                                              ; preds = %259
  %275 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %276 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %275, i32 0, i32 0
  %277 = load i8, i8* %276, align 8
  %278 = sext i8 %277 to i32
  call void (i8*, i32, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i32, ...)*)(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.34.444, i64 0, i64 0), i32 %278)
  store i8 1, i8* %5, align 1
  br label %279

279:                                              ; preds = %274, %264
  %280 = load i8*, i8** %10, align 8
  %281 = load i8**, i8*** %4, align 8
  %282 = load i32, i32* %6, align 4
  %283 = zext i32 %282 to i64
  %284 = getelementptr inbounds i8*, i8** %281, i64 %283
  %285 = load i8*, i8** %284, align 8
  %286 = icmp eq i8* %280, %285
  br i1 %286, label %287, label %290

287:                                              ; preds = %279
  %288 = load i32, i32* %6, align 4
  %289 = add i32 %288, -1
  store i32 %289, i32* %6, align 4
  br label %290

290:                                              ; preds = %287, %279
  br label %291

291:                                              ; preds = %290, %258
  br label %394

292:                                              ; preds = %71
  %293 = load i8*, i8** %7, align 8
  %294 = load i8, i8* %293, align 1
  %295 = sext i8 %294 to i32
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %304

297:                                              ; preds = %292
  %298 = load i8**, i8*** %4, align 8
  %299 = load i32, i32* %6, align 4
  %300 = add i32 %299, 1
  store i32 %300, i32* %6, align 4
  %301 = zext i32 %300 to i64
  %302 = getelementptr inbounds i8*, i8** %298, i64 %301
  %303 = load i8*, i8** %302, align 8
  store i8* %303, i8** %10, align 8
  br label %306

304:                                              ; preds = %292
  %305 = load i8*, i8** %7, align 8
  store i8* %305, i8** %10, align 8
  br label %306

306:                                              ; preds = %304, %297
  %307 = load i8*, i8** %10, align 8
  %308 = icmp ne i8* %307, null
  br i1 %308, label %309, label %361

309:                                              ; preds = %306
  %310 = load i8*, i8** %10, align 8
  %311 = load i8, i8* %310, align 1
  %312 = sext i8 %311 to i32
  %313 = icmp eq i32 %312, 46
  br i1 %313, label %326, label %314

314:                                              ; preds = %309
  %315 = call i16** @__ctype_b_loc() #11
  %316 = load i16*, i16** %315, align 8
  %317 = load i8*, i8** %10, align 8
  %318 = load i8, i8* %317, align 1
  %319 = sext i8 %318 to i32
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds i16, i16* %316, i64 %320
  %322 = load i16, i16* %321, align 2
  %323 = zext i16 %322 to i32
  %324 = and i32 %323, 2048
  %325 = icmp ne i32 %324, 0
  br i1 %325, label %326, label %361

326:                                              ; preds = %314, %309
  %327 = load i8*, i8** %10, align 8
  %328 = call double @atof(i8* %327) #9
  %329 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %330 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %329, i32 0, i32 2
  %331 = load i8*, i8** %330, align 8
  %332 = bitcast i8* %331 to double*
  store double %328, double* %332, align 8
  %333 = load i8*, i8** %10, align 8
  %334 = load i8*, i8** %7, align 8
  %335 = icmp eq i8* %333, %334
  br i1 %335, label %336, label %360

336:                                              ; preds = %326
  br label %337

337:                                              ; preds = %356, %336
  %338 = load i8*, i8** %7, align 8
  %339 = load i8, i8* %338, align 1
  %340 = sext i8 %339 to i32
  %341 = icmp eq i32 %340, 46
  br i1 %341, label %354, label %342

342:                                              ; preds = %337
  %343 = call i16** @__ctype_b_loc() #11
  %344 = load i16*, i16** %343, align 8
  %345 = load i8*, i8** %7, align 8
  %346 = load i8, i8* %345, align 1
  %347 = sext i8 %346 to i32
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds i16, i16* %344, i64 %348
  %350 = load i16, i16* %349, align 2
  %351 = zext i16 %350 to i32
  %352 = and i32 %351, 2048
  %353 = icmp ne i32 %352, 0
  br label %354

354:                                              ; preds = %342, %337
  %355 = phi i1 [ true, %337 ], [ %353, %342 ]
  br i1 %355, label %356, label %359

356:                                              ; preds = %354
  %357 = load i8*, i8** %7, align 8
  %358 = getelementptr inbounds i8, i8* %357, i32 1
  store i8* %358, i8** %7, align 8
  br label %337

359:                                              ; preds = %354
  br label %360

360:                                              ; preds = %359, %326
  br label %393

361:                                              ; preds = %314, %306
  %362 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %363 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %362, i32 0, i32 4
  %364 = load i8*, i8** %363, align 8
  %365 = icmp ne i8* %364, null
  br i1 %365, label %366, label %376

366:                                              ; preds = %361
  %367 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %368 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %367, i32 0, i32 4
  %369 = load i8*, i8** %368, align 8
  %370 = bitcast i8* %369 to double*
  %371 = load double, double* %370, align 8
  %372 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %373 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %372, i32 0, i32 2
  %374 = load i8*, i8** %373, align 8
  %375 = bitcast i8* %374 to double*
  store double %371, double* %375, align 8
  br label %381

376:                                              ; preds = %361
  %377 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %378 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %377, i32 0, i32 0
  %379 = load i8, i8* %378, align 8
  %380 = sext i8 %379 to i32
  call void (i8*, i32, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i32, ...)*)(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.34.444, i64 0, i64 0), i32 %380)
  store i8 1, i8* %5, align 1
  br label %381

381:                                              ; preds = %376, %366
  %382 = load i8*, i8** %10, align 8
  %383 = load i8**, i8*** %4, align 8
  %384 = load i32, i32* %6, align 4
  %385 = zext i32 %384 to i64
  %386 = getelementptr inbounds i8*, i8** %383, i64 %385
  %387 = load i8*, i8** %386, align 8
  %388 = icmp eq i8* %382, %387
  br i1 %388, label %389, label %392

389:                                              ; preds = %381
  %390 = load i32, i32* %6, align 4
  %391 = add i32 %390, -1
  store i32 %391, i32* %6, align 4
  br label %392

392:                                              ; preds = %389, %381
  br label %393

393:                                              ; preds = %392, %360
  br label %394

394:                                              ; preds = %393, %291, %170, %109, %79, %78
  br label %399

395:                                              ; preds = %62
  br label %396

396:                                              ; preds = %395
  %397 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %398 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %397, i32 1
  store %struct.command_switch* %398, %struct.command_switch** %8, align 8
  br label %56

399:                                              ; preds = %394, %56
  %400 = load %struct.command_switch*, %struct.command_switch** %8, align 8
  %401 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %400, i32 0, i32 0
  %402 = load i8, i8* %401, align 8
  %403 = sext i8 %402 to i32
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %405, label %410

405:                                              ; preds = %399
  %406 = load i8*, i8** %7, align 8
  %407 = getelementptr inbounds i8, i8* %406, i32 1
  store i8* %407, i8** %7, align 8
  %408 = load i8, i8* %406, align 1
  %409 = sext i8 %408 to i32
  call void (i8*, i32, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i32, ...)*)(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35.445, i64 0, i64 0), i32 %409)
  store i8 1, i8* %5, align 1
  br label %410

410:                                              ; preds = %405, %399
  br label %50

411:                                              ; preds = %50
  br label %454

412:                                              ; preds = %38
  %413 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %414 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %413, i32 0, i32 1
  %415 = load i32, i32* %414, align 8
  %416 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %417 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %416, i32 0, i32 2
  %418 = load i32, i32* %417, align 4
  %419 = sub i32 %418, 1
  %420 = icmp eq i32 %415, %419
  br i1 %420, label %421, label %439

421:                                              ; preds = %412
  %422 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %423 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %422, i32 0, i32 2
  %424 = load i32, i32* %423, align 4
  %425 = add i32 %424, 5
  store i32 %425, i32* %423, align 4
  %426 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %427 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %426, i32 0, i32 0
  %428 = load i8**, i8*** %427, align 8
  %429 = bitcast i8** %428 to i8*
  %430 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %431 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %430, i32 0, i32 2
  %432 = load i32, i32* %431, align 4
  %433 = zext i32 %432 to i64
  %434 = mul i64 %433, 8
  %435 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i64, ...)*)(i8* %429, i64 %434)
  %436 = bitcast i8* %435 to i8**
  %437 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %438 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %437, i32 0, i32 0
  store i8** %436, i8*** %438, align 8
  br label %439

439:                                              ; preds = %421, %412
  %440 = load i8**, i8*** %4, align 8
  %441 = load i32, i32* %6, align 4
  %442 = zext i32 %441 to i64
  %443 = getelementptr inbounds i8*, i8** %440, i64 %442
  %444 = load i8*, i8** %443, align 8
  %445 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %446 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %445, i32 0, i32 0
  %447 = load i8**, i8*** %446, align 8
  %448 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %449 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %448, i32 0, i32 1
  %450 = load i32, i32* %449, align 8
  %451 = add i32 %450, 1
  store i32 %451, i32* %449, align 8
  %452 = zext i32 %450 to i64
  %453 = getelementptr inbounds i8*, i8** %447, i64 %452
  store i8* %444, i8** %453, align 8
  br label %454

454:                                              ; preds = %439, %411
  br label %455

455:                                              ; preds = %454
  %456 = load i32, i32* %6, align 4
  %457 = add i32 %456, 1
  store i32 %457, i32* %6, align 4
  br label %34

458:                                              ; preds = %34
  %459 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %460 = icmp ne %struct.stringlist* %459, null
  br i1 %460, label %461, label %470

461:                                              ; preds = %458
  %462 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %463 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %462, i32 0, i32 0
  %464 = load i8**, i8*** %463, align 8
  %465 = load %struct.stringlist*, %struct.stringlist** @other_args, align 8
  %466 = getelementptr inbounds %struct.stringlist, %struct.stringlist* %465, i32 0, i32 1
  %467 = load i32, i32* %466, align 8
  %468 = zext i32 %467 to i64
  %469 = getelementptr inbounds i8*, i8** %464, i64 %468
  store i8* null, i8** %469, align 8
  br label %470

470:                                              ; preds = %461, %458
  %471 = load i8, i8* %5, align 1
  %472 = icmp ne i8 %471, 0
  br i1 %472, label %473, label %474

473:                                              ; preds = %470
  call void @die(i32 1)
  br label %474

474:                                              ; preds = %473, %470
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @print_version() #0 {
  %1 = alloca i8*, align 8
  %2 = load i32, i32* @print_data_base_flag, align 4
  %3 = icmp ne i32 %2, 0
  %4 = zext i1 %3 to i64
  %5 = select i1 %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38.435, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.394, i64 0, i64 0)
  store i8* %5, i8** %1, align 8
  %6 = load i8*, i8** %1, align 8
  %7 = load i8*, i8** @version_string, align 8
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.39.439, i64 0, i64 0), i8* %6, i8* %7)
  %9 = load i8*, i8** @remote_description, align 8
  %10 = icmp ne i8* %9, null
  br i1 %10, label %11, label %19

11:                                               ; preds = %0
  %12 = load i8*, i8** @remote_description, align 8
  %13 = load i8, i8* %12, align 1
  %14 = sext i8 %13 to i32
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = load i8*, i8** @remote_description, align 8
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40.440, i64 0, i64 0), i8* %17)
  br label %19

19:                                               ; preds = %16, %11, %0
  %20 = load i8*, i8** %1, align 8
  %21 = load i8*, i8** %1, align 8
  %22 = load i8*, i8** %1, align 8
  %23 = load i8*, i8** %1, align 8
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @.str.41.441, i64 0, i64 0), i8* %20, i8* %21, i8* %22, i8* %23)
  store i32 1, i32* @printed_version, align 4
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %26 = call i32 @fflush(%struct._IO_FILE* %25)
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @chdir(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @log_working_directory(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca [4096 x i8], align 16
  %4 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  %5 = load i32, i32* %2, align 4
  %6 = icmp ne i32 %5, 0
  %7 = zext i1 %6 to i64
  %8 = select i1 %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44.433, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45.434, i64 0, i64 0)
  store i8* %8, i8** %4, align 8
  %9 = load i32, i32* @log_working_directory.entered, align 4
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %1
  %12 = load i32, i32* %2, align 4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  br label %34

15:                                               ; preds = %11, %1
  store i32 1, i32* @log_working_directory.entered, align 4
  br label %16

16:                                               ; preds = %15
  %17 = load i32, i32* @print_data_base_flag, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %16
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %21 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38.435, i64 0, i64 0), %struct._IO_FILE* %20)
  br label %22

22:                                               ; preds = %19, %16
  %23 = load i8*, i8** %4, align 8
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.46.436, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.395, i64 0, i64 0), i8* %23)
  %25 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i64 0, i64 0
  %26 = call i8* @getwd(i8* %25) #10
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i64 0, i64 0
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.396, i64 0, i64 0), i8* %29)
  %30 = call i32 @puts(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.47.437, i64 0, i64 0))
  br label %34

31:                                               ; preds = %22
  %32 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i64 0, i64 0
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.48.438, i64 0, i64 0), i8* %32)
  br label %34

34:                                               ; preds = %31, %28, %14
  ret void
}

; Function Attrs: nounwind
declare dso_local i8* @mktemp(i8*) #2

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: nounwind
declare dso_local i32 @feof(%struct._IO_FILE*) #2

declare dso_local i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #3

declare dso_local i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #3

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @define_makeflags(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.command_switch*, align 8
  %6 = alloca [200 x i8], align 16
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  store i32 0, i32* %7, align 4
  store %struct.command_switch* getelementptr inbounds ([23 x %struct.command_switch], [23 x %struct.command_switch]* @switches, i64 0, i64 0), %struct.command_switch** %5, align 8
  br label %9

9:                                                ; preds = %250, %2
  %10 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %11 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %10, i32 0, i32 0
  %12 = load i8, i8* %11, align 8
  %13 = sext i8 %12 to i32
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %253

15:                                               ; preds = %9
  %16 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %17 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %16, i32 0, i32 3
  %18 = load i8, i8* %17, align 8
  %19 = lshr i8 %18, 1
  %20 = and i8 %19, 1
  %21 = zext i8 %20 to i32
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %249

23:                                               ; preds = %15
  %24 = load i32, i32* %4, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %34

26:                                               ; preds = %23
  %27 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %28 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %27, i32 0, i32 3
  %29 = load i8, i8* %28, align 8
  %30 = lshr i8 %29, 2
  %31 = and i8 %30, 1
  %32 = zext i8 %31 to i32
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %249, label %34

34:                                               ; preds = %26, %23
  %35 = load i32, i32* %7, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %34
  %38 = load i32, i32* %7, align 4
  %39 = sub i32 %38, 1
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds [200 x i8], [200 x i8]* %6, i64 0, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp eq i32 %43, 32
  br i1 %44, label %45, label %50

45:                                               ; preds = %37, %34
  %46 = load i32, i32* %7, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %7, align 4
  %48 = zext i32 %46 to i64
  %49 = getelementptr inbounds [200 x i8], [200 x i8]* %6, i64 0, i64 %48
  store i8 45, i8* %49, align 1
  br label %50

50:                                               ; preds = %45, %37
  %51 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %52 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %51, i32 0, i32 1
  %53 = load i32, i32* %52, align 4
  switch i32 %53, label %54 [
    i32 5, label %55
    i32 0, label %56
    i32 1, label %56
    i32 3, label %97
    i32 4, label %177
  ]

54:                                               ; preds = %50
  call void @abort() #12
  unreachable

55:                                               ; preds = %50
  br label %248

56:                                               ; preds = %50, %50
  %57 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %58 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %57, i32 0, i32 2
  %59 = load i8*, i8** %58, align 8
  %60 = bitcast i8* %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = icmp ne i32 %61, 0
  %63 = xor i1 %62, true
  %64 = zext i1 %63 to i32
  %65 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %66 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %65, i32 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 1
  %69 = zext i1 %68 to i32
  %70 = icmp eq i32 %64, %69
  br i1 %70, label %71, label %96

71:                                               ; preds = %56
  %72 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %73 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %72, i32 0, i32 5
  %74 = load i8*, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %88, label %76

76:                                               ; preds = %71
  %77 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %78 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %77, i32 0, i32 2
  %79 = load i8*, i8** %78, align 8
  %80 = bitcast i8* %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %83 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %82, i32 0, i32 5
  %84 = load i8*, i8** %83, align 8
  %85 = bitcast i8* %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = icmp ne i32 %81, %86
  br i1 %87, label %88, label %96

88:                                               ; preds = %76, %71
  %89 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %90 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %89, i32 0, i32 0
  %91 = load i8, i8* %90, align 8
  %92 = load i32, i32* %7, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %7, align 4
  %94 = zext i32 %92 to i64
  %95 = getelementptr inbounds [200 x i8], [200 x i8]* %6, i64 0, i64 %94
  store i8 %91, i8* %95, align 1
  br label %96

96:                                               ; preds = %88, %76, %56
  br label %248

97:                                               ; preds = %50
  %98 = load i32, i32* %3, align 4
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %176

100:                                              ; preds = %97
  %101 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %102 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %101, i32 0, i32 5
  %103 = load i8*, i8** %102, align 8
  %104 = icmp ne i8* %103, null
  br i1 %104, label %105, label %118

105:                                              ; preds = %100
  %106 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %107 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %106, i32 0, i32 2
  %108 = load i8*, i8** %107, align 8
  %109 = bitcast i8* %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %112 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %111, i32 0, i32 5
  %113 = load i8*, i8** %112, align 8
  %114 = bitcast i8* %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %110, %115
  br i1 %116, label %117, label %118

117:                                              ; preds = %105
  br label %248

118:                                              ; preds = %105, %100
  %119 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %120 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %119, i32 0, i32 4
  %121 = load i8*, i8** %120, align 8
  %122 = icmp ne i8* %121, null
  br i1 %122, label %123, label %143

123:                                              ; preds = %118
  %124 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %125 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %124, i32 0, i32 2
  %126 = load i8*, i8** %125, align 8
  %127 = bitcast i8* %126 to i32*
  %128 = load i32, i32* %127, align 4
  %129 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %130 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %129, i32 0, i32 4
  %131 = load i8*, i8** %130, align 8
  %132 = bitcast i8* %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %128, %133
  br i1 %134, label %135, label %143

135:                                              ; preds = %123
  %136 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %137 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %136, i32 0, i32 0
  %138 = load i8, i8* %137, align 8
  %139 = load i32, i32* %7, align 4
  %140 = add i32 %139, 1
  store i32 %140, i32* %7, align 4
  %141 = zext i32 %139 to i64
  %142 = getelementptr inbounds [200 x i8], [200 x i8]* %6, i64 0, i64 %141
  store i8 %138, i8* %142, align 1
  br label %174

143:                                              ; preds = %123, %118
  %144 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %145 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %144, i32 0, i32 0
  %146 = load i8, i8* %145, align 8
  %147 = sext i8 %146 to i32
  %148 = icmp eq i32 %147, 106
  br i1 %148, label %149, label %150

149:                                              ; preds = %143
  store i32 1, i32* %8, align 4
  br label %156

150:                                              ; preds = %143
  %151 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %152 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %151, i32 0, i32 2
  %153 = load i8*, i8** %152, align 8
  %154 = bitcast i8* %153 to i32*
  %155 = load i32, i32* %154, align 4
  store i32 %155, i32* %8, align 4
  br label %156

156:                                              ; preds = %150, %149
  %157 = load i32, i32* %7, align 4
  %158 = zext i32 %157 to i64
  %159 = getelementptr inbounds [200 x i8], [200 x i8]* %6, i64 0, i64 %158
  %160 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %161 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %160, i32 0, i32 0
  %162 = load i8, i8* %161, align 8
  %163 = sext i8 %162 to i32
  %164 = load i32, i32* %8, align 4
  %165 = call i32 (i8*, i8*, ...) @sprintf(i8* %159, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36.431, i64 0, i64 0), i32 %163, i32 %164) #10
  %166 = load i32, i32* %7, align 4
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds [200 x i8], [200 x i8]* %6, i64 0, i64 %167
  %169 = call i64 @strlen(i8* %168) #9
  %170 = load i32, i32* %7, align 4
  %171 = zext i32 %170 to i64
  %172 = add i64 %171, %169
  %173 = trunc i64 %172 to i32
  store i32 %173, i32* %7, align 4
  br label %174

174:                                              ; preds = %156, %135
  br label %175

175:                                              ; preds = %174
  br label %176

176:                                              ; preds = %175, %97
  br label %248

177:                                              ; preds = %50
  %178 = load i32, i32* %3, align 4
  %179 = icmp ne i32 %178, 0
  br i1 %179, label %180, label %247

180:                                              ; preds = %177
  %181 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %182 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %181, i32 0, i32 5
  %183 = load i8*, i8** %182, align 8
  %184 = icmp ne i8* %183, null
  br i1 %184, label %185, label %198

185:                                              ; preds = %180
  %186 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %187 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %186, i32 0, i32 2
  %188 = load i8*, i8** %187, align 8
  %189 = bitcast i8* %188 to double*
  %190 = load double, double* %189, align 8
  %191 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %192 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %191, i32 0, i32 5
  %193 = load i8*, i8** %192, align 8
  %194 = bitcast i8* %193 to double*
  %195 = load double, double* %194, align 8
  %196 = fcmp oeq double %190, %195
  br i1 %196, label %197, label %198

197:                                              ; preds = %185
  br label %248

198:                                              ; preds = %185, %180
  %199 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %200 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %199, i32 0, i32 4
  %201 = load i8*, i8** %200, align 8
  %202 = icmp ne i8* %201, null
  br i1 %202, label %203, label %223

203:                                              ; preds = %198
  %204 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %205 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %204, i32 0, i32 2
  %206 = load i8*, i8** %205, align 8
  %207 = bitcast i8* %206 to double*
  %208 = load double, double* %207, align 8
  %209 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %210 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %209, i32 0, i32 4
  %211 = load i8*, i8** %210, align 8
  %212 = bitcast i8* %211 to double*
  %213 = load double, double* %212, align 8
  %214 = fcmp oeq double %208, %213
  br i1 %214, label %215, label %223

215:                                              ; preds = %203
  %216 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %217 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %216, i32 0, i32 0
  %218 = load i8, i8* %217, align 8
  %219 = load i32, i32* %7, align 4
  %220 = add i32 %219, 1
  store i32 %220, i32* %7, align 4
  %221 = zext i32 %219 to i64
  %222 = getelementptr inbounds [200 x i8], [200 x i8]* %6, i64 0, i64 %221
  store i8 %218, i8* %222, align 1
  br label %245

223:                                              ; preds = %203, %198
  %224 = load i32, i32* %7, align 4
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds [200 x i8], [200 x i8]* %6, i64 0, i64 %225
  %227 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %228 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %227, i32 0, i32 0
  %229 = load i8, i8* %228, align 8
  %230 = sext i8 %229 to i32
  %231 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %232 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %231, i32 0, i32 2
  %233 = load i8*, i8** %232, align 8
  %234 = bitcast i8* %233 to double*
  %235 = load double, double* %234, align 8
  %236 = call i32 (i8*, i8*, ...) @sprintf(i8* %226, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37.432, i64 0, i64 0), i32 %230, double %235) #10
  %237 = load i32, i32* %7, align 4
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds [200 x i8], [200 x i8]* %6, i64 0, i64 %238
  %240 = call i64 @strlen(i8* %239) #9
  %241 = load i32, i32* %7, align 4
  %242 = zext i32 %241 to i64
  %243 = add i64 %242, %240
  %244 = trunc i64 %243 to i32
  store i32 %244, i32* %7, align 4
  br label %245

245:                                              ; preds = %223, %215
  br label %246

246:                                              ; preds = %245
  br label %247

247:                                              ; preds = %246, %177
  br label %248

248:                                              ; preds = %247, %197, %176, %117, %96, %55
  br label %249

249:                                              ; preds = %248, %26, %15
  br label %250

250:                                              ; preds = %249
  %251 = load %struct.command_switch*, %struct.command_switch** %5, align 8
  %252 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %251, i32 1
  store %struct.command_switch* %252, %struct.command_switch** %5, align 8
  br label %9

253:                                              ; preds = %9
  %254 = load i32, i32* %7, align 4
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %259

256:                                              ; preds = %253
  %257 = getelementptr inbounds [200 x i8], [200 x i8]* %6, i64 0, i64 1
  store i8 0, i8* %257, align 1
  %258 = getelementptr inbounds [200 x i8], [200 x i8]* %6, i64 0, i64 0
  store i8 0, i8* %258, align 16
  br label %281

259:                                              ; preds = %253
  %260 = load i32, i32* %7, align 4
  %261 = sub i32 %260, 1
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds [200 x i8], [200 x i8]* %6, i64 0, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = sext i8 %264 to i32
  %266 = icmp eq i32 %265, 32
  br i1 %266, label %275, label %267

267:                                              ; preds = %259
  %268 = load i32, i32* %7, align 4
  %269 = sub i32 %268, 1
  %270 = zext i32 %269 to i64
  %271 = getelementptr inbounds [200 x i8], [200 x i8]* %6, i64 0, i64 %270
  %272 = load i8, i8* %271, align 1
  %273 = sext i8 %272 to i32
  %274 = icmp eq i32 %273, 45
  br i1 %274, label %275, label %280

275:                                              ; preds = %267, %259
  %276 = load i32, i32* %7, align 4
  %277 = sub i32 %276, 1
  %278 = zext i32 %277 to i64
  %279 = getelementptr inbounds [200 x i8], [200 x i8]* %6, i64 0, i64 %278
  store i8 0, i8* %279, align 1
  br label %280

280:                                              ; preds = %275, %267
  br label %281

281:                                              ; preds = %280, %256
  %282 = load i32, i32* %7, align 4
  %283 = zext i32 %282 to i64
  %284 = getelementptr inbounds [200 x i8], [200 x i8]* %6, i64 0, i64 %283
  store i8 0, i8* %284, align 1
  %285 = getelementptr inbounds [200 x i8], [200 x i8]* %6, i64 0, i64 1
  %286 = call %struct.variable* (i8*, i32, i8*, i32, i32, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32)* @define_variable to %struct.variable* (i8*, i32, i8*, i32, i32, ...)*)(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14.409, i64 0, i64 0), i32 9, i8* %285, i32 1, i32 0)
  %287 = getelementptr inbounds [200 x i8], [200 x i8]* %6, i64 0, i64 0
  %288 = call %struct.variable* (i8*, i32, i8*, i32, i32, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32)* @define_variable to %struct.variable* (i8*, i32, i8*, i32, i32, ...)*)(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.410, i64 0, i64 0), i32 6, i8* %287, i32 1, i32 0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @decode_env_switches(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.variable*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.command_switch*, align 8
  %8 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %9 = load i8*, i8** %3, align 8
  %10 = load i32, i32* %4, align 4
  %11 = call %struct.variable* (i8*, i32, ...) bitcast (%struct.variable* (i8*, i32)* @lookup_variable to %struct.variable* (i8*, i32, ...)*)(i8* %9, i32 %10)
  store %struct.variable* %11, %struct.variable** %5, align 8
  %12 = load %struct.variable*, %struct.variable** %5, align 8
  %13 = icmp eq %struct.variable* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %2
  %15 = load %struct.variable*, %struct.variable** %5, align 8
  %16 = getelementptr inbounds %struct.variable, %struct.variable* %15, i32 0, i32 2
  %17 = load i8*, i8** %16, align 8
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %14, %2
  br label %231

22:                                               ; preds = %14
  %23 = load %struct.variable*, %struct.variable** %5, align 8
  %24 = getelementptr inbounds %struct.variable, %struct.variable* %23, i32 0, i32 2
  %25 = load i8*, i8** %24, align 8
  store i8* %25, i8** %6, align 8
  br label %26

26:                                               ; preds = %228, %22
  %27 = load i8*, i8** %6, align 8
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %231

31:                                               ; preds = %26
  store %struct.command_switch* getelementptr inbounds ([23 x %struct.command_switch], [23 x %struct.command_switch]* @switches, i64 0, i64 0), %struct.command_switch** %7, align 8
  br label %32

32:                                               ; preds = %224, %31
  %33 = load %struct.command_switch*, %struct.command_switch** %7, align 8
  %34 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %33, i32 0, i32 0
  %35 = load i8, i8* %34, align 8
  %36 = sext i8 %35 to i32
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %227

38:                                               ; preds = %32
  %39 = load %struct.command_switch*, %struct.command_switch** %7, align 8
  %40 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %39, i32 0, i32 0
  %41 = load i8, i8* %40, align 8
  %42 = sext i8 %41 to i32
  %43 = load i8*, i8** %6, align 8
  %44 = load i8, i8* %43, align 1
  %45 = sext i8 %44 to i32
  %46 = icmp eq i32 %42, %45
  br i1 %46, label %47, label %223

47:                                               ; preds = %38
  %48 = load %struct.command_switch*, %struct.command_switch** %7, align 8
  %49 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %48, i32 0, i32 3
  %50 = load i8, i8* %49, align 8
  %51 = and i8 %50, 1
  %52 = zext i8 %51 to i32
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %222

54:                                               ; preds = %47
  %55 = load %struct.command_switch*, %struct.command_switch** %7, align 8
  %56 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  switch i32 %57, label %59 [
    i32 2, label %58
    i32 0, label %60
    i32 1, label %60
    i32 3, label %70
    i32 4, label %141
  ]

58:                                               ; preds = %54
  br label %59

59:                                               ; preds = %58, %54
  call void @abort() #12
  unreachable

60:                                               ; preds = %54, %54
  %61 = load %struct.command_switch*, %struct.command_switch** %7, align 8
  %62 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %61, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  %65 = zext i1 %64 to i32
  %66 = load %struct.command_switch*, %struct.command_switch** %7, align 8
  %67 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %66, i32 0, i32 2
  %68 = load i8*, i8** %67, align 8
  %69 = bitcast i8* %68 to i32*
  store i32 %65, i32* %69, align 4
  br label %221

70:                                               ; preds = %54
  br label %71

71:                                               ; preds = %84, %70
  %72 = call i16** @__ctype_b_loc() #11
  %73 = load i16*, i16** %72, align 8
  %74 = load i8*, i8** %6, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 1
  %76 = load i8, i8* %75, align 1
  %77 = sext i8 %76 to i32
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i16, i16* %73, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = zext i16 %80 to i32
  %82 = and i32 %81, 8192
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %71
  %85 = load i8*, i8** %6, align 8
  %86 = getelementptr inbounds i8, i8* %85, i32 1
  store i8* %86, i8** %6, align 8
  br label %71

87:                                               ; preds = %71
  %88 = call i16** @__ctype_b_loc() #11
  %89 = load i16*, i16** %88, align 8
  %90 = load i8*, i8** %6, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 1
  %92 = load i8, i8* %91, align 1
  %93 = sext i8 %92 to i32
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i16, i16* %89, i64 %94
  %96 = load i16, i16* %95, align 2
  %97 = zext i16 %96 to i32
  %98 = and i32 %97, 2048
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %130

100:                                              ; preds = %87
  %101 = load i8*, i8** %6, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 1
  %103 = call i32 @atoi(i8* %102) #9
  store i32 %103, i32* %8, align 4
  br label %104

104:                                              ; preds = %117, %100
  %105 = call i16** @__ctype_b_loc() #11
  %106 = load i16*, i16** %105, align 8
  %107 = load i8*, i8** %6, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 1
  %109 = load i8, i8* %108, align 1
  %110 = sext i8 %109 to i32
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i16, i16* %106, i64 %111
  %113 = load i16, i16* %112, align 2
  %114 = zext i16 %113 to i32
  %115 = and i32 %114, 2048
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %104
  %118 = load i8*, i8** %6, align 8
  %119 = getelementptr inbounds i8, i8* %118, i32 1
  store i8* %119, i8** %6, align 8
  br label %104

120:                                              ; preds = %104
  %121 = load i32, i32* %8, align 4
  %122 = icmp sge i32 %121, 1
  br i1 %122, label %123, label %129

123:                                              ; preds = %120
  %124 = load i32, i32* %8, align 4
  %125 = load %struct.command_switch*, %struct.command_switch** %7, align 8
  %126 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %125, i32 0, i32 2
  %127 = load i8*, i8** %126, align 8
  %128 = bitcast i8* %127 to i32*
  store i32 %124, i32* %128, align 4
  br label %129

129:                                              ; preds = %123, %120
  br label %140

130:                                              ; preds = %87
  %131 = load %struct.command_switch*, %struct.command_switch** %7, align 8
  %132 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %131, i32 0, i32 4
  %133 = load i8*, i8** %132, align 8
  %134 = bitcast i8* %133 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = load %struct.command_switch*, %struct.command_switch** %7, align 8
  %137 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %136, i32 0, i32 2
  %138 = load i8*, i8** %137, align 8
  %139 = bitcast i8* %138 to i32*
  store i32 %135, i32* %139, align 4
  br label %140

140:                                              ; preds = %130, %129
  br label %221

141:                                              ; preds = %54
  br label %142

142:                                              ; preds = %155, %141
  %143 = call i16** @__ctype_b_loc() #11
  %144 = load i16*, i16** %143, align 8
  %145 = load i8*, i8** %6, align 8
  %146 = getelementptr inbounds i8, i8* %145, i64 1
  %147 = load i8, i8* %146, align 1
  %148 = sext i8 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i16, i16* %144, i64 %149
  %151 = load i16, i16* %150, align 2
  %152 = zext i16 %151 to i32
  %153 = and i32 %152, 8192
  %154 = icmp ne i32 %153, 0
  br i1 %154, label %155, label %158

155:                                              ; preds = %142
  %156 = load i8*, i8** %6, align 8
  %157 = getelementptr inbounds i8, i8* %156, i32 1
  store i8* %157, i8** %6, align 8
  br label %142

158:                                              ; preds = %142
  %159 = load i8*, i8** %6, align 8
  %160 = getelementptr inbounds i8, i8* %159, i64 1
  %161 = load i8, i8* %160, align 1
  %162 = sext i8 %161 to i32
  %163 = icmp eq i32 %162, 46
  br i1 %163, label %177, label %164

164:                                              ; preds = %158
  %165 = call i16** @__ctype_b_loc() #11
  %166 = load i16*, i16** %165, align 8
  %167 = load i8*, i8** %6, align 8
  %168 = getelementptr inbounds i8, i8* %167, i64 1
  %169 = load i8, i8* %168, align 1
  %170 = sext i8 %169 to i32
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds i16, i16* %166, i64 %171
  %173 = load i16, i16* %172, align 2
  %174 = zext i16 %173 to i32
  %175 = and i32 %174, 2048
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %177, label %210

177:                                              ; preds = %164, %158
  %178 = load i8*, i8** %6, align 8
  %179 = getelementptr inbounds i8, i8* %178, i64 1
  %180 = call double @atof(i8* %179) #9
  %181 = load %struct.command_switch*, %struct.command_switch** %7, align 8
  %182 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %181, i32 0, i32 2
  %183 = load i8*, i8** %182, align 8
  %184 = bitcast i8* %183 to double*
  store double %180, double* %184, align 8
  br label %185

185:                                              ; preds = %206, %177
  %186 = load i8*, i8** %6, align 8
  %187 = getelementptr inbounds i8, i8* %186, i64 1
  %188 = load i8, i8* %187, align 1
  %189 = sext i8 %188 to i32
  %190 = icmp eq i32 %189, 46
  br i1 %190, label %204, label %191

191:                                              ; preds = %185
  %192 = call i16** @__ctype_b_loc() #11
  %193 = load i16*, i16** %192, align 8
  %194 = load i8*, i8** %6, align 8
  %195 = getelementptr inbounds i8, i8* %194, i64 1
  %196 = load i8, i8* %195, align 1
  %197 = sext i8 %196 to i32
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds i16, i16* %193, i64 %198
  %200 = load i16, i16* %199, align 2
  %201 = zext i16 %200 to i32
  %202 = and i32 %201, 2048
  %203 = icmp ne i32 %202, 0
  br label %204

204:                                              ; preds = %191, %185
  %205 = phi i1 [ true, %185 ], [ %203, %191 ]
  br i1 %205, label %206, label %209

206:                                              ; preds = %204
  %207 = load i8*, i8** %6, align 8
  %208 = getelementptr inbounds i8, i8* %207, i32 1
  store i8* %208, i8** %6, align 8
  br label %185

209:                                              ; preds = %204
  br label %220

210:                                              ; preds = %164
  %211 = load %struct.command_switch*, %struct.command_switch** %7, align 8
  %212 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %211, i32 0, i32 4
  %213 = load i8*, i8** %212, align 8
  %214 = bitcast i8* %213 to double*
  %215 = load double, double* %214, align 8
  %216 = load %struct.command_switch*, %struct.command_switch** %7, align 8
  %217 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %216, i32 0, i32 2
  %218 = load i8*, i8** %217, align 8
  %219 = bitcast i8* %218 to double*
  store double %215, double* %219, align 8
  br label %220

220:                                              ; preds = %210, %209
  br label %221

221:                                              ; preds = %220, %140, %60
  br label %222

222:                                              ; preds = %221, %47
  br label %223

223:                                              ; preds = %222, %38
  br label %224

224:                                              ; preds = %223
  %225 = load %struct.command_switch*, %struct.command_switch** %7, align 8
  %226 = getelementptr inbounds %struct.command_switch, %struct.command_switch* %225, i32 1
  store %struct.command_switch* %226, %struct.command_switch** %7, align 8
  br label %32

227:                                              ; preds = %32
  br label %228

228:                                              ; preds = %227
  %229 = load i8*, i8** %6, align 8
  %230 = getelementptr inbounds i8, i8* %229, i32 1
  store i8* %230, i8** %6, align 8
  br label %26

231:                                              ; preds = %26, %21
  ret void
}

; Function Attrs: nounwind
declare dso_local i64 @time(i64*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @die(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i8, i8* @die.dying, align 1
  %4 = icmp ne i8 %3, 0
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  store i8 1, i8* @die.dying, align 1
  %6 = load i32, i32* @print_version_flag, align 4
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %5
  %9 = load i32, i32* @printed_version, align 4
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  call void @print_version()
  br label %12

12:                                               ; preds = %11, %8, %5
  %13 = load i32, i32* %2, align 4
  %14 = icmp ne i32 %13, 0
  %15 = zext i1 %14 to i32
  call void (i32, i32, ...) bitcast (void (i32, i32)* @wait_for_children to void (i32, i32, ...)*)(i32 0, i32 %15)
  call void (i32, ...) bitcast (void (i32)* @remove_intermediates to void (i32, ...)*)(i32 0)
  %16 = load i32, i32* @print_directory_flag, align 4
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %12
  call void @log_working_directory(i32 0)
  br label %19

19:                                               ; preds = %18, %12
  br label %20

20:                                               ; preds = %19, %1
  %21 = load i32, i32* %2, align 4
  call void @exit(i32 %21) #12
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal void @print_data_base() #0 {
  %1 = alloca i64, align 8
  %2 = call i64 @time(i64* null) #10
  store i64 %2, i64* %1, align 8
  %3 = call i8* bitcast (i32 (...)* @ctime to i8* (i64*)*)(i64* %1) #10
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.42.429, i64 0, i64 0), i8* %3)
  call void (...) bitcast (void ()* @print_variable_data_base to void (...)*)()
  call void (...) bitcast (void ()* @print_dir_data_base to void (...)*)()
  call void (...) bitcast (void ()* @print_rule_data_base to void (...)*)()
  call void (...) bitcast (void ()* @print_file_data_base to void (...)*)()
  call void (...) bitcast (void ()* @print_vpath_data_base to void (...)*)()
  %5 = call i64 @time(i64* null) #10
  store i64 %5, i64* %1, align 8
  %6 = call i8* bitcast (i32 (...)* @ctime to i8* (i64*)*)(i64* %1) #10
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.43.430, i64 0, i64 0), i8* %6)
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local double @atof(i8*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @alpha_compare(i8** %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i8**, align 8
  store i8** %0, i8*** %4, align 8
  store i8** %1, i8*** %5, align 8
  %6 = load i8**, i8*** %4, align 8
  %7 = load i8*, i8** %6, align 8
  %8 = load i8, i8* %7, align 1
  %9 = sext i8 %8 to i32
  %10 = load i8**, i8*** %5, align 8
  %11 = load i8*, i8** %10, align 8
  %12 = load i8, i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = icmp ne i32 %9, %13
  br i1 %14, label %15, label %25

15:                                               ; preds = %2
  %16 = load i8**, i8*** %4, align 8
  %17 = load i8*, i8** %16, align 8
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = load i8**, i8*** %5, align 8
  %21 = load i8*, i8** %20, align 8
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  %24 = sub nsw i32 %19, %23
  store i32 %24, i32* %3, align 4
  br label %31

25:                                               ; preds = %2
  %26 = load i8**, i8*** %4, align 8
  %27 = load i8*, i8** %26, align 8
  %28 = load i8**, i8*** %5, align 8
  %29 = load i8*, i8** %28, align 8
  %30 = call i32 @strcmp(i8* %27, i8* %29) #9
  store i32 %30, i32* %3, align 4
  br label %31

31:                                               ; preds = %25, %15
  %32 = load i32, i32* %3, align 4
  ret i32 %32
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @collapse_continuations(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %8 = load i8*, i8** %2, align 8
  %9 = call i8* @strchr(i8* %8, i32 10) #9
  store i8* %9, i8** %3, align 8
  %10 = load i8*, i8** %3, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %1
  br label %164

13:                                               ; preds = %1
  %14 = load i8*, i8** %3, align 8
  store i8* %14, i8** %4, align 8
  %15 = load i8*, i8** %4, align 8
  %16 = load i8*, i8** %2, align 8
  %17 = icmp ugt i8* %15, %16
  br i1 %17, label %18, label %29

18:                                               ; preds = %13
  br label %19

19:                                               ; preds = %25, %18
  %20 = load i8*, i8** %4, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 -1
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  %24 = icmp eq i32 %23, 92
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = load i8*, i8** %4, align 8
  %27 = getelementptr inbounds i8, i8* %26, i32 -1
  store i8* %27, i8** %4, align 8
  br label %19

28:                                               ; preds = %19
  br label %29

29:                                               ; preds = %28, %13
  br label %30

30:                                               ; preds = %161, %29
  %31 = load i8*, i8** %3, align 8
  %32 = load i8, i8* %31, align 1
  %33 = sext i8 %32 to i32
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %162

35:                                               ; preds = %30
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 -1
  store i8* %37, i8** %5, align 8
  br label %38

38:                                               ; preds = %66, %35
  %39 = load i8*, i8** %5, align 8
  %40 = load i8*, i8** %2, align 8
  %41 = icmp uge i8* %39, %40
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = load i8*, i8** %5, align 8
  %44 = load i8, i8* %43, align 1
  %45 = sext i8 %44 to i32
  %46 = icmp eq i32 %45, 92
  br label %47

47:                                               ; preds = %42, %38
  %48 = phi i1 [ false, %38 ], [ %46, %42 ]
  br i1 %48, label %49, label %69

49:                                               ; preds = %47
  %50 = load i32, i32* %6, align 4
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %49
  %53 = load i32, i32* %7, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %7, align 4
  br label %55

55:                                               ; preds = %52, %49
  %56 = load i32, i32* %6, align 4
  %57 = icmp ne i32 %56, 0
  %58 = xor i1 %57, true
  %59 = zext i1 %58 to i32
  store i32 %59, i32* %6, align 4
  %60 = load i8*, i8** %3, align 8
  %61 = load i8*, i8** %4, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 -1
  %63 = icmp eq i8* %60, %62
  br i1 %63, label %64, label %65

64:                                               ; preds = %55
  call void @abort() #12
  unreachable

65:                                               ; preds = %55
  br label %66

66:                                               ; preds = %65
  %67 = load i8*, i8** %5, align 8
  %68 = getelementptr inbounds i8, i8* %67, i32 -1
  store i8* %68, i8** %5, align 8
  br label %38

69:                                               ; preds = %47
  br label %70

70:                                               ; preds = %74, %69
  %71 = load i32, i32* %7, align 4
  %72 = add i32 %71, -1
  store i32 %72, i32* %7, align 4
  %73 = icmp ugt i32 %71, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %70
  %75 = load i8*, i8** %4, align 8
  %76 = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %76, i8** %4, align 8
  store i8 92, i8* %75, align 1
  br label %70

77:                                               ; preds = %70
  %78 = load i8*, i8** %3, align 8
  %79 = getelementptr inbounds i8, i8* %78, i32 1
  store i8* %79, i8** %3, align 8
  %80 = load i32, i32* %6, align 4
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %110

82:                                               ; preds = %77
  %83 = load i8*, i8** %3, align 8
  %84 = call i8* @next_token(i8* %83)
  store i8* %84, i8** %3, align 8
  br label %85

85:                                               ; preds = %104, %82
  %86 = load i8*, i8** %4, align 8
  %87 = load i8*, i8** %2, align 8
  %88 = icmp ugt i8* %86, %87
  br i1 %88, label %89, label %102

89:                                               ; preds = %85
  %90 = call i16** @__ctype_b_loc() #11
  %91 = load i16*, i16** %90, align 8
  %92 = load i8*, i8** %4, align 8
  %93 = getelementptr inbounds i8, i8* %92, i64 -1
  %94 = load i8, i8* %93, align 1
  %95 = sext i8 %94 to i32
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i16, i16* %91, i64 %96
  %98 = load i16, i16* %97, align 2
  %99 = zext i16 %98 to i32
  %100 = and i32 %99, 1
  %101 = icmp ne i32 %100, 0
  br label %102

102:                                              ; preds = %89, %85
  %103 = phi i1 [ false, %85 ], [ %101, %89 ]
  br i1 %103, label %104, label %107

104:                                              ; preds = %102
  %105 = load i8*, i8** %4, align 8
  %106 = getelementptr inbounds i8, i8* %105, i32 -1
  store i8* %106, i8** %4, align 8
  br label %85

107:                                              ; preds = %102
  %108 = load i8*, i8** %4, align 8
  %109 = getelementptr inbounds i8, i8* %108, i32 1
  store i8* %109, i8** %4, align 8
  store i8 32, i8* %108, align 1
  br label %113

110:                                              ; preds = %77
  %111 = load i8*, i8** %4, align 8
  %112 = getelementptr inbounds i8, i8* %111, i32 1
  store i8* %112, i8** %4, align 8
  store i8 10, i8* %111, align 1
  br label %113

113:                                              ; preds = %110, %107
  br label %114

114:                                              ; preds = %160, %113
  %115 = load i8*, i8** %3, align 8
  %116 = load i8, i8* %115, align 1
  %117 = sext i8 %116 to i32
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %161

119:                                              ; preds = %114
  %120 = load i8*, i8** %3, align 8
  %121 = load i8, i8* %120, align 1
  %122 = sext i8 %121 to i32
  %123 = icmp eq i32 %122, 92
  br i1 %123, label %124, label %154

124:                                              ; preds = %119
  %125 = load i8*, i8** %3, align 8
  %126 = getelementptr inbounds i8, i8* %125, i64 1
  store i8* %126, i8** %5, align 8
  br label %127

127:                                              ; preds = %132, %124
  %128 = load i8*, i8** %5, align 8
  %129 = load i8, i8* %128, align 1
  %130 = sext i8 %129 to i32
  %131 = icmp eq i32 %130, 92
  br i1 %131, label %132, label %135

132:                                              ; preds = %127
  %133 = load i8*, i8** %5, align 8
  %134 = getelementptr inbounds i8, i8* %133, i32 1
  store i8* %134, i8** %5, align 8
  br label %127

135:                                              ; preds = %127
  %136 = load i8*, i8** %5, align 8
  %137 = load i8, i8* %136, align 1
  %138 = sext i8 %137 to i32
  %139 = icmp eq i32 %138, 10
  br i1 %139, label %140, label %142

140:                                              ; preds = %135
  %141 = load i8*, i8** %5, align 8
  store i8* %141, i8** %3, align 8
  br label %161

142:                                              ; preds = %135
  br label %143

143:                                              ; preds = %147, %142
  %144 = load i8*, i8** %3, align 8
  %145 = load i8*, i8** %5, align 8
  %146 = icmp ult i8* %144, %145
  br i1 %146, label %147, label %153

147:                                              ; preds = %143
  %148 = load i8*, i8** %3, align 8
  %149 = getelementptr inbounds i8, i8* %148, i32 1
  store i8* %149, i8** %3, align 8
  %150 = load i8, i8* %148, align 1
  %151 = load i8*, i8** %4, align 8
  %152 = getelementptr inbounds i8, i8* %151, i32 1
  store i8* %152, i8** %4, align 8
  store i8 %150, i8* %151, align 1
  br label %143

153:                                              ; preds = %143
  br label %160

154:                                              ; preds = %119
  %155 = load i8*, i8** %3, align 8
  %156 = getelementptr inbounds i8, i8* %155, i32 1
  store i8* %156, i8** %3, align 8
  %157 = load i8, i8* %155, align 1
  %158 = load i8*, i8** %4, align 8
  %159 = getelementptr inbounds i8, i8* %158, i32 1
  store i8* %159, i8** %4, align 8
  store i8 %157, i8* %158, align 1
  br label %160

160:                                              ; preds = %154, %153
  br label %114

161:                                              ; preds = %140, %114
  br label %30

162:                                              ; preds = %30
  %163 = load i8*, i8** %4, align 8
  store i8 0, i8* %163, align 1
  br label %164

164:                                              ; preds = %162, %12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @next_token(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  store i8* %4, i8** %3, align 8
  br label %5

5:                                                ; preds = %17, %1
  %6 = call i16** @__ctype_b_loc() #11
  %7 = load i16*, i16** %6, align 8
  %8 = load i8*, i8** %3, align 8
  %9 = load i8, i8* %8, align 1
  %10 = sext i8 %9 to i32
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i16, i16* %7, i64 %11
  %13 = load i16, i16* %12, align 2
  %14 = zext i16 %13 to i32
  %15 = and i32 %14, 1
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %5
  %18 = load i8*, i8** %3, align 8
  %19 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %19, i8** %3, align 8
  br label %5

20:                                               ; preds = %5
  %21 = load i8*, i8** %3, align 8
  ret i8* %21
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @remove_comments(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  br label %7

7:                                                ; preds = %46, %1
  %8 = load i8*, i8** %2, align 8
  %9 = call i8* @strchr(i8* %8, i32 35) #9
  store i8* %9, i8** %3, align 8
  %10 = load i8*, i8** %3, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  br label %55

13:                                               ; preds = %7
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  %14 = load i8*, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 -1
  store i8* %15, i8** %4, align 8
  br label %16

16:                                               ; preds = %38, %13
  %17 = load i8*, i8** %4, align 8
  %18 = load i8*, i8** %2, align 8
  %19 = icmp ugt i8* %17, %18
  br i1 %19, label %20, label %25

20:                                               ; preds = %16
  %21 = load i8*, i8** %4, align 8
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  %24 = icmp eq i32 %23, 92
  br label %25

25:                                               ; preds = %20, %16
  %26 = phi i1 [ false, %16 ], [ %24, %20 ]
  br i1 %26, label %27, label %41

27:                                               ; preds = %25
  %28 = load i32, i32* %5, align 4
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = load i32, i32* %6, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %6, align 4
  br label %33

33:                                               ; preds = %30, %27
  %34 = load i32, i32* %5, align 4
  %35 = icmp ne i32 %34, 0
  %36 = xor i1 %35, true
  %37 = zext i1 %36 to i32
  store i32 %37, i32* %5, align 4
  br label %38

38:                                               ; preds = %33
  %39 = load i8*, i8** %4, align 8
  %40 = getelementptr inbounds i8, i8* %39, i32 -1
  store i8* %40, i8** %4, align 8
  br label %16

41:                                               ; preds = %25
  %42 = load i32, i32* %5, align 4
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = load i8*, i8** %3, align 8
  store i8 0, i8* %45, align 1
  br label %55

46:                                               ; preds = %41
  %47 = load i8*, i8** %3, align 8
  store i8* %47, i8** %2, align 8
  %48 = load i8*, i8** %4, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 1
  %50 = load i32, i32* %6, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %49, i64 %51
  %53 = load i8*, i8** %2, align 8
  %54 = call i8* @strcpy(i8* %52, i8* %53) #10
  br label %7

55:                                               ; preds = %44, %12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @print_spaces(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  br label %3

3:                                                ; preds = %7, %1
  %4 = load i32, i32* %2, align 4
  %5 = add i32 %4, -1
  store i32 %5, i32* %2, align 4
  %6 = icmp ugt i32 %4, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = call i32 @putchar(i32 32)
  br label %3

9:                                                ; preds = %3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @concat(i8* %0, i8* %1, i8* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %11 = load i8*, i8** %4, align 8
  %12 = load i8, i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %3
  %16 = load i8*, i8** %4, align 8
  %17 = call i64 @strlen(i8* %16) #9
  br label %19

18:                                               ; preds = %3
  br label %19

19:                                               ; preds = %18, %15
  %20 = phi i64 [ %17, %15 ], [ 0, %18 ]
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %7, align 4
  %22 = load i8*, i8** %5, align 8
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = load i8*, i8** %5, align 8
  %28 = call i64 @strlen(i8* %27) #9
  br label %30

29:                                               ; preds = %19
  br label %30

30:                                               ; preds = %29, %26
  %31 = phi i64 [ %28, %26 ], [ 0, %29 ]
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %8, align 4
  %33 = load i8*, i8** %6, align 8
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %30
  %38 = load i8*, i8** %6, align 8
  %39 = call i64 @strlen(i8* %38) #9
  br label %41

40:                                               ; preds = %30
  br label %41

41:                                               ; preds = %40, %37
  %42 = phi i64 [ %39, %37 ], [ 0, %40 ]
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %9, align 4
  %44 = load i32, i32* %7, align 4
  %45 = load i32, i32* %8, align 4
  %46 = add i32 %44, %45
  %47 = load i32, i32* %9, align 4
  %48 = add i32 %46, %47
  %49 = add i32 %48, 1
  %50 = call i8* @xmalloc(i32 %49)
  store i8* %50, i8** %10, align 8
  %51 = load i8*, i8** %4, align 8
  %52 = load i8, i8* %51, align 1
  %53 = sext i8 %52 to i32
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %60

55:                                               ; preds = %41
  %56 = load i8*, i8** %10, align 8
  %57 = load i8*, i8** %4, align 8
  %58 = load i32, i32* %7, align 4
  %59 = zext i32 %58 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %56, i8* align 1 %57, i64 %59, i1 false)
  br label %60

60:                                               ; preds = %55, %41
  %61 = load i8*, i8** %5, align 8
  %62 = load i8, i8* %61, align 1
  %63 = sext i8 %62 to i32
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %65, label %73

65:                                               ; preds = %60
  %66 = load i8*, i8** %10, align 8
  %67 = load i32, i32* %7, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* %66, i64 %68
  %70 = load i8*, i8** %5, align 8
  %71 = load i32, i32* %8, align 4
  %72 = zext i32 %71 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* align 1 %70, i64 %72, i1 false)
  br label %73

73:                                               ; preds = %65, %60
  %74 = load i8*, i8** %6, align 8
  %75 = load i8, i8* %74, align 1
  %76 = sext i8 %75 to i32
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %78, label %89

78:                                               ; preds = %73
  %79 = load i8*, i8** %10, align 8
  %80 = load i32, i32* %7, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds i8, i8* %79, i64 %81
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %82, i64 %84
  %86 = load i8*, i8** %6, align 8
  %87 = load i32, i32* %9, align 4
  %88 = zext i32 %87 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %85, i8* align 1 %86, i64 %88, i1 false)
  br label %89

89:                                               ; preds = %78, %73
  %90 = load i8*, i8** %10, align 8
  %91 = load i32, i32* %7, align 4
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %90, i64 %92
  %94 = load i32, i32* %8, align 4
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds i8, i8* %93, i64 %95
  %97 = load i32, i32* %9, align 4
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i8, i8* %96, i64 %98
  store i8 0, i8* %99, align 1
  %100 = load i8*, i8** %10, align 8
  ret i8* %100
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @xmalloc(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  %4 = load i32, i32* %2, align 4
  %5 = zext i32 %4 to i64
  %6 = call noalias i8* @malloc(i64 %5) #10
  store i8* %6, i8** %3, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  call void (i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.456, i64 0, i64 0))
  br label %10

10:                                               ; preds = %9, %1
  %11 = load i8*, i8** %3, align 8
  ret i8* %11
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @fatal(i8* %0, i8* %1, i8* %2, i8* %3, i8* %4, i8* %5) #0 {
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  store i8* %0, i8** %7, align 8
  store i8* %1, i8** %8, align 8
  store i8* %2, i8** %9, align 8
  store i8* %3, i8** %10, align 8
  store i8* %4, i8** %11, align 8
  store i8* %5, i8** %12, align 8
  %13 = load i32, i32* @makelevel, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %6
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %17 = load i8*, i8** @program, align 8
  %18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.459, i64 0, i64 0), i8* %17)
  br label %24

19:                                               ; preds = %6
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %21 = load i8*, i8** @program, align 8
  %22 = load i32, i32* @makelevel, align 4
  %23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.460, i64 0, i64 0), i8* %21, i32 %22)
  br label %24

24:                                               ; preds = %19, %15
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %26 = load i8*, i8** %7, align 8
  %27 = load i8*, i8** %8, align 8
  %28 = load i8*, i8** %9, align 8
  %29 = load i8*, i8** %10, align 8
  %30 = load i8*, i8** %11, align 8
  %31 = load i8*, i8** %12, align 8
  %32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* %26, i8* %27, i8* %28, i8* %29, i8* %30, i8* %31)
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %34 = call i32 @fputs(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.461, i64 0, i64 0), %struct._IO_FILE* %33)
  call void (i32, ...) bitcast (void (i32)* @die to void (i32, ...)*)(i32 1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @message(i8* %0, i8* %1, i8* %2, i8* %3, i8* %4, i8* %5) #0 {
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  store i8* %0, i8** %7, align 8
  store i8* %1, i8** %8, align 8
  store i8* %2, i8** %9, align 8
  store i8* %3, i8** %10, align 8
  store i8* %4, i8** %11, align 8
  store i8* %5, i8** %12, align 8
  %13 = load i32, i32* @makelevel, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %6
  %16 = load i8*, i8** @program, align 8
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.459, i64 0, i64 0), i8* %16)
  br label %22

18:                                               ; preds = %6
  %19 = load i8*, i8** @program, align 8
  %20 = load i32, i32* @makelevel, align 4
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.460, i64 0, i64 0), i8* %19, i32 %20)
  br label %22

22:                                               ; preds = %18, %15
  %23 = load i8*, i8** %7, align 8
  %24 = load i8*, i8** %8, align 8
  %25 = load i8*, i8** %9, align 8
  %26 = load i8*, i8** %10, align 8
  %27 = load i8*, i8** %11, align 8
  %28 = load i8*, i8** %12, align 8
  %29 = call i32 (i8*, ...) @printf(i8* %23, i8* %24, i8* %25, i8* %26, i8* %27, i8* %28)
  %30 = call i32 @putchar(i32 10)
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %32 = call i32 @fflush(%struct._IO_FILE* %31)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @error(i8* %0, i8* %1, i8* %2, i8* %3, i8* %4, i8* %5) #0 {
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  store i8* %0, i8** %7, align 8
  store i8* %1, i8** %8, align 8
  store i8* %2, i8** %9, align 8
  store i8* %3, i8** %10, align 8
  store i8* %4, i8** %11, align 8
  store i8* %5, i8** %12, align 8
  %13 = load i32, i32* @makelevel, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %6
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %17 = load i8*, i8** @program, align 8
  %18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.459, i64 0, i64 0), i8* %17)
  br label %24

19:                                               ; preds = %6
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %21 = load i8*, i8** @program, align 8
  %22 = load i32, i32* @makelevel, align 4
  %23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.460, i64 0, i64 0), i8* %21, i32 %22)
  br label %24

24:                                               ; preds = %19, %15
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %26 = load i8*, i8** %7, align 8
  %27 = load i8*, i8** %8, align 8
  %28 = load i8*, i8** %9, align 8
  %29 = load i8*, i8** %10, align 8
  %30 = load i8*, i8** %11, align 8
  %31 = load i8*, i8** %12, align 8
  %32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* %26, i8* %27, i8* %28, i8* %29, i8* %30, i8* %31)
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %34 = call i32 @putc(i32 10, %struct._IO_FILE* %33)
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %36 = call i32 @fflush(%struct._IO_FILE* %35)
  ret void
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @makefile_error(i8* %0, i32 %1, i8* %2, i8* %3, i8* %4, i8* %5, i8* %6, i8* %7) #0 {
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  store i8* %0, i8** %9, align 8
  store i32 %1, i32* %10, align 4
  store i8* %2, i8** %11, align 8
  store i8* %3, i8** %12, align 8
  store i8* %4, i8** %13, align 8
  store i8* %5, i8** %14, align 8
  store i8* %6, i8** %15, align 8
  store i8* %7, i8** %16, align 8
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %18 = load i8*, i8** %9, align 8
  %19 = load i32, i32* %10, align 4
  %20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.466, i64 0, i64 0), i8* %18, i32 %19)
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %22 = load i8*, i8** %11, align 8
  %23 = load i8*, i8** %12, align 8
  %24 = load i8*, i8** %13, align 8
  %25 = load i8*, i8** %14, align 8
  %26 = load i8*, i8** %15, align 8
  %27 = load i8*, i8** %16, align 8
  %28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* %22, i8* %23, i8* %24, i8* %25, i8* %26, i8* %27)
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %30 = call i32 @putc(i32 10, %struct._IO_FILE* %29)
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %32 = call i32 @fflush(%struct._IO_FILE* %31)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @makefile_fatal(i8* %0, i32 %1, i8* %2, i8* %3, i8* %4, i8* %5, i8* %6, i8* %7) #0 {
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  store i8* %0, i8** %9, align 8
  store i32 %1, i32* %10, align 4
  store i8* %2, i8** %11, align 8
  store i8* %3, i8** %12, align 8
  store i8* %4, i8** %13, align 8
  store i8* %5, i8** %14, align 8
  store i8* %6, i8** %15, align 8
  store i8* %7, i8** %16, align 8
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %18 = load i8*, i8** %9, align 8
  %19 = load i32, i32* %10, align 4
  %20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.466, i64 0, i64 0), i8* %18, i32 %19)
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %22 = load i8*, i8** %11, align 8
  %23 = load i8*, i8** %12, align 8
  %24 = load i8*, i8** %13, align 8
  %25 = load i8*, i8** %14, align 8
  %26 = load i8*, i8** %15, align 8
  %27 = load i8*, i8** %16, align 8
  %28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* %22, i8* %23, i8* %24, i8* %25, i8* %26, i8* %27)
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %30 = call i32 @fputs(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.461, i64 0, i64 0), %struct._IO_FILE* %29)
  call void (i32, ...) bitcast (void (i32)* @die to void (i32, ...)*)(i32 1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @perror_with_name(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32* @__errno_location() #11
  %6 = load i32, i32* %5, align 4
  %7 = load i32, i32* @sys_nerr, align 4
  %8 = icmp slt i32 %6, %7
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = load i8*, i8** %3, align 8
  %11 = load i8*, i8** %4, align 8
  %12 = call i32* @__errno_location() #11
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [0 x i8*], [0 x i8*]* @sys_errlist, i64 0, i64 %14
  %16 = load i8*, i8** %15, align 8
  call void (i8*, i8*, i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, i8*, i8*, ...)*)(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.471, i64 0, i64 0), i8* %10, i8* %11, i8* %16)
  br label %24

17:                                               ; preds = %2
  %18 = load i8*, i8** %3, align 8
  %19 = load i8*, i8** %4, align 8
  %20 = call i32* @__errno_location() #11
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  %23 = inttoptr i64 %22 to i8*
  call void (i8*, i8*, i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, i8*, i8*, ...)*)(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5.472, i64 0, i64 0), i8* %18, i8* %19, i8* %23)
  br label %24

24:                                               ; preds = %17, %9
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @pfatal_with_name(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = call i32* @__errno_location() #11
  %4 = load i32, i32* %3, align 4
  %5 = load i32, i32* @sys_nerr, align 4
  %6 = icmp slt i32 %4, %5
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = load i8*, i8** %2, align 8
  %9 = call i32* @__errno_location() #11
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [0 x i8*], [0 x i8*]* @sys_errlist, i64 0, i64 %11
  %13 = load i8*, i8** %12, align 8
  call void (i8*, i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, i8*, i8*, ...)*)(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.475, i64 0, i64 0), i8* %8, i8* %13)
  br label %20

14:                                               ; preds = %1
  %15 = load i8*, i8** %2, align 8
  %16 = call i32* @__errno_location() #11
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %17 to i64
  %19 = inttoptr i64 %18 to i8*
  call void (i8*, i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, i8*, i8*, ...)*)(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7.476, i64 0, i64 0), i8* %15, i8* %19)
  br label %20

20:                                               ; preds = %14, %7
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @xrealloc(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load i8*, i8** %3, align 8
  %7 = load i32, i32* %4, align 4
  %8 = zext i32 %7 to i64
  %9 = call i8* @realloc(i8* %6, i64 %8) #10
  store i8* %9, i8** %5, align 8
  %10 = load i8*, i8** %5, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void (i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8.456, i64 0, i64 0))
  br label %13

13:                                               ; preds = %12, %2
  %14 = load i8*, i8** %5, align 8
  ret i8* %14
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @savestring(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load i32, i32* %4, align 4
  %7 = add i32 %6, 1
  %8 = call i8* @xmalloc(i32 %7)
  store i8* %8, i8** %5, align 8
  %9 = load i32, i32* %4, align 4
  %10 = icmp ugt i32 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %2
  %12 = load i8*, i8** %5, align 8
  %13 = load i8*, i8** %3, align 8
  %14 = load i32, i32* %4, align 4
  %15 = zext i32 %14 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %13, i64 %15, i1 false)
  br label %16

16:                                               ; preds = %11, %2
  %17 = load i8*, i8** %5, align 8
  %18 = load i32, i32* %4, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  store i8 0, i8* %20, align 1
  %21 = load i8*, i8** %5, align 8
  ret i8* %21
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @sindex(i8* %0, i32 %1, i8* %2, i32 %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i32 %1, i32* %7, align 4
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  %11 = load i32, i32* %7, align 4
  %12 = icmp ult i32 %11, 1
  br i1 %12, label %13, label %17

13:                                               ; preds = %4
  %14 = load i8*, i8** %6, align 8
  %15 = call i64 @strlen(i8* %14) #9
  %16 = trunc i64 %15 to i32
  store i32 %16, i32* %7, align 4
  br label %17

17:                                               ; preds = %13, %4
  %18 = load i32, i32* %9, align 4
  %19 = icmp ult i32 %18, 1
  br i1 %19, label %20, label %24

20:                                               ; preds = %17
  %21 = load i8*, i8** %8, align 8
  %22 = call i64 @strlen(i8* %21) #9
  %23 = trunc i64 %22 to i32
  store i32 %23, i32* %9, align 4
  br label %24

24:                                               ; preds = %20, %17
  store i32 0, i32* %10, align 4
  br label %25

25:                                               ; preds = %59, %24
  %26 = load i32, i32* %10, align 4
  %27 = load i32, i32* %7, align 4
  %28 = icmp ult i32 %26, %27
  br i1 %28, label %29, label %62

29:                                               ; preds = %25
  %30 = load i8*, i8** %6, align 8
  %31 = load i32, i32* %10, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = load i8*, i8** %8, align 8
  %37 = load i8, i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = icmp eq i32 %35, %38
  br i1 %39, label %40, label %58

40:                                               ; preds = %29
  %41 = load i8*, i8** %6, align 8
  %42 = load i32, i32* %10, align 4
  %43 = add i32 %42, 1
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %41, i64 %44
  %46 = load i8*, i8** %8, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 1
  %48 = load i32, i32* %9, align 4
  %49 = sub i32 %48, 1
  %50 = zext i32 %49 to i64
  %51 = call i32 @strncmp(i8* %45, i8* %47, i64 %50) #9
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %40
  %54 = load i8*, i8** %6, align 8
  %55 = load i32, i32* %10, align 4
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %54, i64 %56
  store i8* %57, i8** %5, align 8
  br label %63

58:                                               ; preds = %40, %29
  br label %59

59:                                               ; preds = %58
  %60 = load i32, i32* %10, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %10, align 4
  br label %25

62:                                               ; preds = %25
  store i8* null, i8** %5, align 8
  br label %63

63:                                               ; preds = %62, %53
  %64 = load i8*, i8** %5, align 8
  ret i8* %64
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @lindex(i8* %0, i8* %1, i32 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  br label %8

8:                                                ; preds = %22, %3
  %9 = load i8*, i8** %5, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = icmp ult i8* %9, %10
  br i1 %11, label %12, label %23

12:                                               ; preds = %8
  %13 = load i8*, i8** %5, align 8
  %14 = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %14, i8** %5, align 8
  %15 = load i8, i8* %13, align 1
  %16 = sext i8 %15 to i32
  %17 = load i32, i32* %7, align 4
  %18 = icmp eq i32 %16, %17
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = load i8*, i8** %5, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 -1
  store i8* %21, i8** %4, align 8
  br label %24

22:                                               ; preds = %12
  br label %8

23:                                               ; preds = %8
  store i8* null, i8** %4, align 8
  br label %24

24:                                               ; preds = %23, %19
  %25 = load i8*, i8** %4, align 8
  ret i8* %25
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @end_of_token(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %5 = load i8*, i8** %2, align 8
  store i8* %5, i8** %3, align 8
  store i32 0, i32* %4, align 4
  br label %6

6:                                                ; preds = %56, %1
  %7 = load i8*, i8** %3, align 8
  %8 = load i8, i8* %7, align 1
  %9 = sext i8 %8 to i32
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %29

11:                                               ; preds = %6
  %12 = load i32, i32* %4, align 4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %27, label %14

14:                                               ; preds = %11
  %15 = call i16** @__ctype_b_loc() #11
  %16 = load i16*, i16** %15, align 8
  %17 = load i8*, i8** %3, align 8
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i16, i16* %16, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  %24 = and i32 %23, 1
  %25 = icmp ne i32 %24, 0
  %26 = xor i1 %25, true
  br label %27

27:                                               ; preds = %14, %11
  %28 = phi i1 [ true, %11 ], [ %26, %14 ]
  br label %29

29:                                               ; preds = %27, %6
  %30 = phi i1 [ false, %6 ], [ %28, %27 ]
  br i1 %30, label %31, label %57

31:                                               ; preds = %29
  %32 = load i8*, i8** %3, align 8
  %33 = getelementptr inbounds i8, i8* %32, i32 1
  store i8* %33, i8** %3, align 8
  %34 = load i8, i8* %32, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp eq i32 %35, 92
  br i1 %36, label %37, label %55

37:                                               ; preds = %31
  %38 = load i32, i32* %4, align 4
  %39 = icmp ne i32 %38, 0
  %40 = xor i1 %39, true
  %41 = zext i1 %40 to i32
  store i32 %41, i32* %4, align 4
  br label %42

42:                                               ; preds = %47, %37
  %43 = load i8*, i8** %3, align 8
  %44 = load i8, i8* %43, align 1
  %45 = sext i8 %44 to i32
  %46 = icmp eq i32 %45, 92
  br i1 %46, label %47, label %54

47:                                               ; preds = %42
  %48 = load i32, i32* %4, align 4
  %49 = icmp ne i32 %48, 0
  %50 = xor i1 %49, true
  %51 = zext i1 %50 to i32
  store i32 %51, i32* %4, align 4
  %52 = load i8*, i8** %3, align 8
  %53 = getelementptr inbounds i8, i8* %52, i32 1
  store i8* %53, i8** %3, align 8
  br label %42

54:                                               ; preds = %42
  br label %56

55:                                               ; preds = %31
  store i32 0, i32* %4, align 4
  br label %56

56:                                               ; preds = %55, %54
  br label %6

57:                                               ; preds = %29
  %58 = load i8*, i8** %3, align 8
  ret i8* %58
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @find_next_token(i8** %0, i32* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i8** %0, i8*** %4, align 8
  store i32* %1, i32** %5, align 8
  %8 = load i8**, i8*** %4, align 8
  %9 = load i8*, i8** %8, align 8
  %10 = call i8* @next_token(i8* %9)
  store i8* %10, i8** %6, align 8
  %11 = load i8*, i8** %6, align 8
  %12 = load i8, i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  store i8* null, i8** %3, align 8
  br label %32

16:                                               ; preds = %2
  %17 = load i8*, i8** %6, align 8
  %18 = call i8* @end_of_token(i8* %17)
  store i8* %18, i8** %7, align 8
  %19 = load i8**, i8*** %4, align 8
  store i8* %18, i8** %19, align 8
  %20 = load i32*, i32** %5, align 8
  %21 = icmp ne i32* %20, null
  br i1 %21, label %22, label %30

22:                                               ; preds = %16
  %23 = load i8*, i8** %7, align 8
  %24 = load i8*, i8** %6, align 8
  %25 = ptrtoint i8* %23 to i64
  %26 = ptrtoint i8* %24 to i64
  %27 = sub i64 %25, %26
  %28 = trunc i64 %27 to i32
  %29 = load i32*, i32** %5, align 8
  store i32 %28, i32* %29, align 4
  br label %30

30:                                               ; preds = %22, %16
  %31 = load i8*, i8** %6, align 8
  store i8* %31, i8** %3, align 8
  br label %32

32:                                               ; preds = %30, %15
  %33 = load i8*, i8** %3, align 8
  ret i8* %33
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.dep* @copy_dep_chain(%struct.dep* %0) #0 {
  %2 = alloca %struct.dep*, align 8
  %3 = alloca %struct.dep*, align 8
  %4 = alloca %struct.dep*, align 8
  %5 = alloca %struct.dep*, align 8
  store %struct.dep* %0, %struct.dep** %2, align 8
  store %struct.dep* null, %struct.dep** %4, align 8
  br label %6

6:                                                ; preds = %43, %1
  %7 = load %struct.dep*, %struct.dep** %2, align 8
  %8 = icmp ne %struct.dep* %7, null
  br i1 %8, label %9, label %47

9:                                                ; preds = %6
  %10 = call i8* @xmalloc(i32 32)
  %11 = bitcast i8* %10 to %struct.dep*
  store %struct.dep* %11, %struct.dep** %3, align 8
  %12 = load %struct.dep*, %struct.dep** %3, align 8
  %13 = bitcast %struct.dep* %12 to i8*
  %14 = load %struct.dep*, %struct.dep** %2, align 8
  %15 = bitcast %struct.dep* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %15, i64 32, i1 false)
  %16 = load %struct.dep*, %struct.dep** %3, align 8
  %17 = getelementptr inbounds %struct.dep, %struct.dep* %16, i32 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = icmp ne i8* %18, null
  br i1 %19, label %20, label %32

20:                                               ; preds = %9
  %21 = load %struct.dep*, %struct.dep** %3, align 8
  %22 = getelementptr inbounds %struct.dep, %struct.dep* %21, i32 0, i32 1
  %23 = load i8*, i8** %22, align 8
  %24 = load %struct.dep*, %struct.dep** %3, align 8
  %25 = getelementptr inbounds %struct.dep, %struct.dep* %24, i32 0, i32 1
  %26 = load i8*, i8** %25, align 8
  %27 = call i64 @strlen(i8* %26) #9
  %28 = trunc i64 %27 to i32
  %29 = call i8* @savestring(i8* %23, i32 %28)
  %30 = load %struct.dep*, %struct.dep** %3, align 8
  %31 = getelementptr inbounds %struct.dep, %struct.dep* %30, i32 0, i32 1
  store i8* %29, i8** %31, align 8
  br label %32

32:                                               ; preds = %20, %9
  %33 = load %struct.dep*, %struct.dep** %3, align 8
  %34 = getelementptr inbounds %struct.dep, %struct.dep* %33, i32 0, i32 0
  store %struct.dep* null, %struct.dep** %34, align 8
  %35 = load %struct.dep*, %struct.dep** %4, align 8
  %36 = icmp eq %struct.dep* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %32
  %38 = load %struct.dep*, %struct.dep** %3, align 8
  store %struct.dep* %38, %struct.dep** %5, align 8
  store %struct.dep* %38, %struct.dep** %4, align 8
  br label %43

39:                                               ; preds = %32
  %40 = load %struct.dep*, %struct.dep** %3, align 8
  %41 = load %struct.dep*, %struct.dep** %5, align 8
  %42 = getelementptr inbounds %struct.dep, %struct.dep* %41, i32 0, i32 0
  store %struct.dep* %40, %struct.dep** %42, align 8
  store %struct.dep* %40, %struct.dep** %5, align 8
  br label %43

43:                                               ; preds = %39, %37
  %44 = load %struct.dep*, %struct.dep** %2, align 8
  %45 = getelementptr inbounds %struct.dep, %struct.dep* %44, i32 0, i32 0
  %46 = load %struct.dep*, %struct.dep** %45, align 8
  store %struct.dep* %46, %struct.dep** %2, align 8
  br label %6

47:                                               ; preds = %6
  %48 = load %struct.dep*, %struct.dep** %4, align 8
  ret %struct.dep* %48
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @user_access() #0 {
  %1 = load i32, i32* @user_uid, align 4
  %2 = icmp ne i32 %1, -1
  br i1 %2, label %4, label %3

3:                                                ; preds = %0
  call void @init_access()
  br label %4

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @current_access, align 4
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  br label %19

8:                                                ; preds = %4
  %9 = load i32, i32* @user_uid, align 4
  %10 = call i32 @setuid(i32 %9) #10
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  call void @pfatal_with_name(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.489, i64 0, i64 0))
  br label %13

13:                                               ; preds = %12, %8
  %14 = load i32, i32* @user_gid, align 4
  %15 = call i32 @setgid(i32 %14) #10
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  call void @pfatal_with_name(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10.490, i64 0, i64 0))
  br label %18

18:                                               ; preds = %17, %13
  store i32 1, i32* @current_access, align 4
  br label %19

19:                                               ; preds = %18, %7
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_access() #0 {
  %1 = call i32 @getuid() #10
  store i32 %1, i32* @user_uid, align 4
  %2 = call i32 @getgid() #10
  store i32 %2, i32* @user_gid, align 4
  %3 = call i32 @geteuid() #10
  store i32 %3, i32* @make_uid, align 4
  %4 = call i32 @getegid() #10
  store i32 %4, i32* @make_gid, align 4
  %5 = load i32, i32* @user_uid, align 4
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %16, label %7

7:                                                ; preds = %0
  %8 = load i32, i32* @user_gid, align 4
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %16, label %10

10:                                               ; preds = %7
  %11 = load i32, i32* @make_uid, align 4
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = load i32, i32* @make_gid, align 4
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %16, label %17

16:                                               ; preds = %13, %10, %7, %0
  call void @pfatal_with_name(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11.491, i64 0, i64 0))
  br label %17

17:                                               ; preds = %16, %13
  store i32 0, i32* @current_access, align 4
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @setuid(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @setgid(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @getuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getgid() #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @make_access() #0 {
  %1 = load i32, i32* @user_uid, align 4
  %2 = icmp ne i32 %1, -1
  br i1 %2, label %4, label %3

3:                                                ; preds = %0
  call void @init_access()
  br label %4

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @current_access, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  br label %19

8:                                                ; preds = %4
  %9 = load i32, i32* @make_uid, align 4
  %10 = call i32 @setuid(i32 %9) #10
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  call void @pfatal_with_name(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.489, i64 0, i64 0))
  br label %13

13:                                               ; preds = %12, %8
  %14 = load i32, i32* @make_gid, align 4
  %15 = call i32 @setgid(i32 %14) #10
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  call void @pfatal_with_name(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10.490, i64 0, i64 0))
  br label %18

18:                                               ; preds = %17, %13
  store i32 0, i32* @current_access, align 4
  br label %19

19:                                               ; preds = %18, %7
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @child_access() #0 {
  %1 = load i32, i32* @user_uid, align 4
  %2 = call i32 @setuid(i32 %1) #10
  %3 = icmp slt i32 %2, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %0
  call void @pfatal_with_name(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.489, i64 0, i64 0))
  br label %5

5:                                                ; preds = %4, %0
  %6 = load i32, i32* @user_gid, align 4
  %7 = call i32 @setgid(i32 %6) #10
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  call void @pfatal_with_name(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10.490, i64 0, i64 0))
  br label %10

10:                                               ; preds = %9, %5
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.dep* @read_all_makefiles(i8** %0) #0 {
  %2 = alloca i8**, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.dep*, align 8
  %9 = alloca %struct.dep*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca %struct.dep*, align 8
  %12 = alloca %struct.dep*, align 8
  store i8** %0, i8*** %2, align 8
  store i32 0, i32* %3, align 4
  %13 = load i32, i32* @debug_flag, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %1
  %16 = call i32 @puts(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.502, i64 0, i64 0))
  br label %17

17:                                               ; preds = %15, %1
  %18 = call i8* (i8*, ...) bitcast (i8* (i8*)* @allocated_variable_expand to i8* (i8*, ...)*)(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.503, i64 0, i64 0))
  store i8* %18, i8** %4, align 8
  %19 = load i8*, i8** %4, align 8
  store i8* %19, i8** %6, align 8
  br label %20

20:                                               ; preds = %23, %17
  %21 = call i8* (i8**, i32*, ...) bitcast (i8* (i8**, i32*)* @find_next_token to i8* (i8**, i32*, ...)*)(i8** %6, i32* %7)
  store i8* %21, i8** %5, align 8
  %22 = icmp ne i8* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %20
  %24 = load i8*, i8** %5, align 8
  call void @read_makefile(i8* %24, i32 1)
  br label %20

25:                                               ; preds = %20
  %26 = load i8*, i8** %4, align 8
  call void @free(i8* %26) #10
  %27 = load i8**, i8*** %2, align 8
  %28 = icmp ne i8** %27, null
  br i1 %28, label %29, label %74

29:                                               ; preds = %25
  br label %30

30:                                               ; preds = %66, %29
  %31 = load i8**, i8*** %2, align 8
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %32, null
  br i1 %33, label %34, label %73

34:                                               ; preds = %30
  %35 = load %struct.dep*, %struct.dep** @read_makefiles, align 8
  store %struct.dep* %35, %struct.dep** %8, align 8
  %36 = load i8**, i8*** %2, align 8
  %37 = load i8*, i8** %36, align 8
  call void @read_makefile(i8* %37, i32 0)
  %38 = load %struct.dep*, %struct.dep** @read_makefiles, align 8
  store %struct.dep* %38, %struct.dep** %9, align 8
  br label %39

39:                                               ; preds = %45, %34
  %40 = load %struct.dep*, %struct.dep** %9, align 8
  %41 = getelementptr inbounds %struct.dep, %struct.dep* %40, i32 0, i32 0
  %42 = load %struct.dep*, %struct.dep** %41, align 8
  %43 = load %struct.dep*, %struct.dep** %8, align 8
  %44 = icmp ne %struct.dep* %42, %43
  br i1 %44, label %45, label %49

45:                                               ; preds = %39
  %46 = load %struct.dep*, %struct.dep** %9, align 8
  %47 = getelementptr inbounds %struct.dep, %struct.dep* %46, i32 0, i32 0
  %48 = load %struct.dep*, %struct.dep** %47, align 8
  store %struct.dep* %48, %struct.dep** %9, align 8
  br label %39

49:                                               ; preds = %39
  %50 = load i8**, i8*** %2, align 8
  %51 = load i8*, i8** %50, align 8
  call void @free(i8* %51) #10
  %52 = load %struct.dep*, %struct.dep** %9, align 8
  %53 = getelementptr inbounds %struct.dep, %struct.dep* %52, i32 0, i32 1
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %56, label %62

56:                                               ; preds = %49
  %57 = load %struct.dep*, %struct.dep** %9, align 8
  %58 = getelementptr inbounds %struct.dep, %struct.dep* %57, i32 0, i32 2
  %59 = load %struct.file*, %struct.file** %58, align 8
  %60 = getelementptr inbounds %struct.file, %struct.file* %59, i32 0, i32 1
  %61 = load i8*, i8** %60, align 8
  br label %66

62:                                               ; preds = %49
  %63 = load %struct.dep*, %struct.dep** %9, align 8
  %64 = getelementptr inbounds %struct.dep, %struct.dep* %63, i32 0, i32 1
  %65 = load i8*, i8** %64, align 8
  br label %66

66:                                               ; preds = %62, %56
  %67 = phi i8* [ %61, %56 ], [ %65, %62 ]
  %68 = load i8**, i8*** %2, align 8
  store i8* %67, i8** %68, align 8
  %69 = load i32, i32* %3, align 4
  %70 = add i32 %69, 1
  store i32 %70, i32* %3, align 4
  %71 = load i8**, i8*** %2, align 8
  %72 = getelementptr inbounds i8*, i8** %71, i32 1
  store i8** %72, i8*** %2, align 8
  br label %30

73:                                               ; preds = %30
  br label %74

74:                                               ; preds = %73, %25
  %75 = load i32, i32* %3, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %146

77:                                               ; preds = %74
  store i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @read_all_makefiles.default_makefiles, i64 0, i64 0), i8*** %10, align 8
  br label %78

78:                                               ; preds = %90, %77
  %79 = load i8**, i8*** %10, align 8
  %80 = load i8*, i8** %79, align 8
  %81 = icmp ne i8* %80, null
  br i1 %81, label %82, label %88

82:                                               ; preds = %78
  %83 = load i8**, i8*** %10, align 8
  %84 = load i8*, i8** %83, align 8
  %85 = call i32 (i8*, ...) bitcast (i32 (i8*)* @file_exists_p to i32 (i8*, ...)*)(i8* %84)
  %86 = icmp ne i32 %85, 0
  %87 = xor i1 %86, true
  br label %88

88:                                               ; preds = %82, %78
  %89 = phi i1 [ false, %78 ], [ %87, %82 ]
  br i1 %89, label %90, label %93

90:                                               ; preds = %88
  %91 = load i8**, i8*** %10, align 8
  %92 = getelementptr inbounds i8*, i8** %91, i32 1
  store i8** %92, i8*** %10, align 8
  br label %78

93:                                               ; preds = %88
  %94 = load i8**, i8*** %10, align 8
  %95 = load i8*, i8** %94, align 8
  %96 = icmp ne i8* %95, null
  br i1 %96, label %97, label %100

97:                                               ; preds = %93
  %98 = load i8**, i8*** %10, align 8
  %99 = load i8*, i8** %98, align 8
  call void @read_makefile(i8* %99, i32 0)
  br label %145

100:                                              ; preds = %93
  %101 = load %struct.dep*, %struct.dep** @read_makefiles, align 8
  store %struct.dep* %101, %struct.dep** %11, align 8
  store i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @read_all_makefiles.default_makefiles, i64 0, i64 0), i8*** %10, align 8
  br label %102

102:                                              ; preds = %135, %100
  %103 = load i8**, i8*** %10, align 8
  %104 = load i8*, i8** %103, align 8
  %105 = icmp ne i8* %104, null
  br i1 %105, label %106, label %138

106:                                              ; preds = %102
  %107 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 32)
  %108 = bitcast i8* %107 to %struct.dep*
  store %struct.dep* %108, %struct.dep** %12, align 8
  %109 = load %struct.dep*, %struct.dep** %12, align 8
  %110 = getelementptr inbounds %struct.dep, %struct.dep* %109, i32 0, i32 1
  store i8* null, i8** %110, align 8
  %111 = load i8**, i8*** %10, align 8
  %112 = load i8*, i8** %111, align 8
  %113 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* %112)
  %114 = load %struct.dep*, %struct.dep** %12, align 8
  %115 = getelementptr inbounds %struct.dep, %struct.dep* %114, i32 0, i32 2
  store %struct.file* %113, %struct.file** %115, align 8
  %116 = load %struct.dep*, %struct.dep** %12, align 8
  %117 = getelementptr inbounds %struct.dep, %struct.dep* %116, i32 0, i32 2
  %118 = load %struct.file*, %struct.file** %117, align 8
  %119 = getelementptr inbounds %struct.file, %struct.file* %118, i32 0, i32 12
  %120 = load i16, i16* %119, align 2
  %121 = and i16 %120, -2049
  %122 = or i16 %121, 2048
  store i16 %122, i16* %119, align 2
  %123 = load %struct.dep*, %struct.dep** %12, align 8
  %124 = getelementptr inbounds %struct.dep, %struct.dep* %123, i32 0, i32 3
  store i32 1, i32* %124, align 8
  %125 = load %struct.dep*, %struct.dep** %11, align 8
  %126 = icmp eq %struct.dep* %125, null
  br i1 %126, label %127, label %129

127:                                              ; preds = %106
  %128 = load %struct.dep*, %struct.dep** %12, align 8
  store %struct.dep* %128, %struct.dep** @read_makefiles, align 8
  br label %133

129:                                              ; preds = %106
  %130 = load %struct.dep*, %struct.dep** %12, align 8
  %131 = load %struct.dep*, %struct.dep** %11, align 8
  %132 = getelementptr inbounds %struct.dep, %struct.dep* %131, i32 0, i32 0
  store %struct.dep* %130, %struct.dep** %132, align 8
  br label %133

133:                                              ; preds = %129, %127
  %134 = load %struct.dep*, %struct.dep** %12, align 8
  store %struct.dep* %134, %struct.dep** %11, align 8
  br label %135

135:                                              ; preds = %133
  %136 = load i8**, i8*** %10, align 8
  %137 = getelementptr inbounds i8*, i8** %136, i32 1
  store i8** %137, i8*** %10, align 8
  br label %102

138:                                              ; preds = %102
  %139 = load %struct.dep*, %struct.dep** %11, align 8
  %140 = icmp ne %struct.dep* %139, null
  br i1 %140, label %141, label %144

141:                                              ; preds = %138
  %142 = load %struct.dep*, %struct.dep** %11, align 8
  %143 = getelementptr inbounds %struct.dep, %struct.dep* %142, i32 0, i32 0
  store %struct.dep* null, %struct.dep** %143, align 8
  br label %144

144:                                              ; preds = %141, %138
  br label %145

145:                                              ; preds = %144, %97
  br label %146

146:                                              ; preds = %145, %74
  %147 = load %struct.dep*, %struct.dep** @read_makefiles, align 8
  ret %struct.dep* %147
}

; Function Attrs: noinline nounwind uwtable
define internal void @read_makefile(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca %struct.linebuffer, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct.nameseq*, align 8
  %15 = alloca %struct.dep*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca %struct.conditionals*, align 8
  %27 = alloca %struct.conditionals, align 8
  %28 = alloca i8*, align 8
  %29 = alloca i32, align 4
  %30 = alloca i8*, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i32, align 4
  %33 = alloca %struct.nameseq*, align 8
  %34 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  store i32 200, i32* %7, align 4
  %35 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 200)
  store i8* %35, i8** %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %13, align 4
  store %struct.nameseq* null, %struct.nameseq** %14, align 8
  store i32 1, i32* %16, align 4
  store i32 0, i32* %17, align 4
  store i8* null, i8** %19, align 8
  %36 = load i8*, i8** %3, align 8
  %37 = call %struct._IO_FILE* @fopen(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.507, i64 0, i64 0))
  store %struct._IO_FILE* %37, %struct._IO_FILE** %5, align 8
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %39 = icmp eq %struct._IO_FILE* %38, null
  br i1 %39, label %40, label %80

40:                                               ; preds = %2
  %41 = load i32, i32* %4, align 4
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  %44 = load i32, i32* %4, align 4
  %45 = icmp eq i32 %44, 2
  br i1 %45, label %46, label %80

46:                                               ; preds = %43, %40
  %47 = load i8*, i8** %3, align 8
  %48 = load i8, i8* %47, align 1
  %49 = sext i8 %48 to i32
  %50 = icmp ne i32 %49, 47
  br i1 %50, label %51, label %80

51:                                               ; preds = %46
  store i32 0, i32* %21, align 4
  br label %52

52:                                               ; preds = %76, %51
  %53 = load i8**, i8*** @include_directories.508, align 8
  %54 = load i32, i32* %21, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8*, i8** %53, i64 %55
  %57 = load i8*, i8** %56, align 8
  %58 = icmp ne i8* %57, null
  br i1 %58, label %59, label %79

59:                                               ; preds = %52
  %60 = load i8**, i8*** @include_directories.508, align 8
  %61 = load i32, i32* %21, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i8*, i8** %60, i64 %62
  %64 = load i8*, i8** %63, align 8
  %65 = load i8*, i8** %3, align 8
  %66 = call i8* (i8*, i8*, i8*, ...) bitcast (i8* (i8*, i8*, i8*)* @concat to i8* (i8*, i8*, i8*, ...)*)(i8* %64, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.509, i64 0, i64 0), i8* %65)
  store i8* %66, i8** %22, align 8
  %67 = load i8*, i8** %22, align 8
  %68 = call %struct._IO_FILE* @fopen(i8* %67, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.507, i64 0, i64 0))
  store %struct._IO_FILE* %68, %struct._IO_FILE** %5, align 8
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %70 = icmp ne %struct._IO_FILE* %69, null
  br i1 %70, label %71, label %73

71:                                               ; preds = %59
  %72 = load i8*, i8** %22, align 8
  store i8* %72, i8** %3, align 8
  br label %79

73:                                               ; preds = %59
  %74 = load i8*, i8** %22, align 8
  call void @free(i8* %74) #10
  br label %75

75:                                               ; preds = %73
  br label %76

76:                                               ; preds = %75
  %77 = load i32, i32* %21, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %21, align 4
  br label %52

79:                                               ; preds = %71, %52
  br label %80

80:                                               ; preds = %79, %46, %43, %2
  %81 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 32)
  %82 = bitcast i8* %81 to %struct.dep*
  store %struct.dep* %82, %struct.dep** %15, align 8
  %83 = load %struct.dep*, %struct.dep** @read_makefiles, align 8
  %84 = load %struct.dep*, %struct.dep** %15, align 8
  %85 = getelementptr inbounds %struct.dep, %struct.dep* %84, i32 0, i32 0
  store %struct.dep* %83, %struct.dep** %85, align 8
  %86 = load %struct.dep*, %struct.dep** %15, align 8
  store %struct.dep* %86, %struct.dep** @read_makefiles, align 8
  %87 = load %struct.dep*, %struct.dep** %15, align 8
  %88 = getelementptr inbounds %struct.dep, %struct.dep* %87, i32 0, i32 1
  store i8* null, i8** %88, align 8
  %89 = load i8*, i8** %3, align 8
  %90 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @lookup_file to %struct.file* (i8*, ...)*)(i8* %89)
  %91 = load %struct.dep*, %struct.dep** %15, align 8
  %92 = getelementptr inbounds %struct.dep, %struct.dep* %91, i32 0, i32 2
  store %struct.file* %90, %struct.file** %92, align 8
  %93 = load %struct.dep*, %struct.dep** %15, align 8
  %94 = getelementptr inbounds %struct.dep, %struct.dep* %93, i32 0, i32 2
  %95 = load %struct.file*, %struct.file** %94, align 8
  %96 = icmp eq %struct.file* %95, null
  br i1 %96, label %97, label %116

97:                                               ; preds = %80
  %98 = load i8*, i8** %3, align 8
  %99 = load i8*, i8** %3, align 8
  %100 = call i64 @strlen(i8* %99) #9
  %101 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %98, i64 %100)
  %102 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* %101)
  %103 = load %struct.dep*, %struct.dep** %15, align 8
  %104 = getelementptr inbounds %struct.dep, %struct.dep* %103, i32 0, i32 2
  store %struct.file* %102, %struct.file** %104, align 8
  %105 = load i32, i32* %4, align 4
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %107, label %115

107:                                              ; preds = %97
  %108 = load %struct.dep*, %struct.dep** %15, align 8
  %109 = getelementptr inbounds %struct.dep, %struct.dep* %108, i32 0, i32 2
  %110 = load %struct.file*, %struct.file** %109, align 8
  %111 = getelementptr inbounds %struct.file, %struct.file* %110, i32 0, i32 12
  %112 = load i16, i16* %111, align 2
  %113 = and i16 %112, -2049
  %114 = or i16 %113, 2048
  store i16 %114, i16* %111, align 2
  br label %115

115:                                              ; preds = %107, %97
  br label %116

116:                                              ; preds = %115, %80
  %117 = load %struct.dep*, %struct.dep** %15, align 8
  %118 = getelementptr inbounds %struct.dep, %struct.dep* %117, i32 0, i32 2
  %119 = load %struct.file*, %struct.file** %118, align 8
  %120 = getelementptr inbounds %struct.file, %struct.file* %119, i32 0, i32 1
  %121 = load i8*, i8** %120, align 8
  store i8* %121, i8** %3, align 8
  %122 = load %struct.dep*, %struct.dep** %15, align 8
  %123 = getelementptr inbounds %struct.dep, %struct.dep* %122, i32 0, i32 2
  %124 = load %struct.file*, %struct.file** %123, align 8
  %125 = getelementptr inbounds %struct.file, %struct.file* %124, i32 0, i32 12
  %126 = load i16, i16* %125, align 2
  %127 = and i16 %126, -9
  %128 = or i16 %127, 8
  store i16 %128, i16* %125, align 2
  %129 = load i32, i32* %4, align 4
  %130 = load %struct.dep*, %struct.dep** %15, align 8
  %131 = getelementptr inbounds %struct.dep, %struct.dep* %130, i32 0, i32 3
  store i32 %129, i32* %131, align 8
  store %struct.dep* null, %struct.dep** %15, align 8
  %132 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %133 = icmp eq %struct._IO_FILE* %132, null
  br i1 %133, label %134, label %140

134:                                              ; preds = %116
  %135 = load i32, i32* %4, align 4
  %136 = icmp ne i32 %135, 1
  br i1 %136, label %137, label %139

137:                                              ; preds = %134
  %138 = load i8*, i8** %3, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*)* @perror_with_name to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.510, i64 0, i64 0), i8* %138)
  br label %139

139:                                              ; preds = %137, %134
  br label %902

140:                                              ; preds = %116
  %141 = load i8*, i8** %3, align 8
  store i8* %141, i8** @reading_filename, align 8
  store i32* %16, i32** @reading_lineno_ptr, align 8
  %142 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %6, i32 0, i32 0
  store i32 200, i32* %142, align 8
  %143 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 200)
  %144 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %6, i32 0, i32 1
  store i8* %143, i8** %144, align 8
  br label %145

145:                                              ; preds = %874, %726, %680, %675, %609, %571, %537, %441, %362, %353, %207, %140
  %146 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %147 = call i32 @feof(%struct._IO_FILE* %146) #10
  %148 = icmp ne i32 %147, 0
  %149 = xor i1 %148, true
  br i1 %149, label %150, label %875

150:                                              ; preds = %145
  %151 = load i32, i32* %17, align 4
  %152 = load i32, i32* %16, align 4
  %153 = add i32 %152, %151
  store i32 %153, i32* %16, align 4
  %154 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %155 = load i8*, i8** %3, align 8
  %156 = call i32 @readline(%struct.linebuffer* %6, %struct._IO_FILE* %154, i8* %155)
  store i32 %156, i32* %17, align 4
  %157 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %6, i32 0, i32 1
  %158 = load i8*, i8** %157, align 8
  call void (i8*, ...) bitcast (void (i8*)* @collapse_continuations to void (i8*, ...)*)(i8* %158)
  %159 = load i32, i32* @read_makefile.collapsed_length, align 4
  %160 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %6, i32 0, i32 0
  %161 = load i32, i32* %160, align 8
  %162 = icmp ult i32 %159, %161
  br i1 %162, label %163, label %173

163:                                              ; preds = %150
  %164 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %6, i32 0, i32 0
  %165 = load i32, i32* %164, align 8
  store i32 %165, i32* @read_makefile.collapsed_length, align 4
  %166 = load i8*, i8** @read_makefile.collapsed, align 8
  %167 = icmp ne i8* %166, null
  br i1 %167, label %168, label %170

168:                                              ; preds = %163
  %169 = load i8*, i8** @read_makefile.collapsed, align 8
  call void @free(i8* %169) #10
  br label %170

170:                                              ; preds = %168, %163
  %171 = load i32, i32* @read_makefile.collapsed_length, align 4
  %172 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %171)
  store i8* %172, i8** @read_makefile.collapsed, align 8
  br label %173

173:                                              ; preds = %170, %150
  %174 = load i8*, i8** @read_makefile.collapsed, align 8
  %175 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %6, i32 0, i32 1
  %176 = load i8*, i8** %175, align 8
  %177 = call i8* @strcpy(i8* %174, i8* %176) #10
  %178 = load i8*, i8** @read_makefile.collapsed, align 8
  call void (i8*, ...) bitcast (void (i8*)* @remove_comments to void (i8*, ...)*)(i8* %178)
  %179 = load i8*, i8** @read_makefile.collapsed, align 8
  store i8* %179, i8** %11, align 8
  br label %180

180:                                              ; preds = %192, %173
  %181 = call i16** @__ctype_b_loc() #11
  %182 = load i16*, i16** %181, align 8
  %183 = load i8*, i8** %11, align 8
  %184 = load i8, i8* %183, align 1
  %185 = sext i8 %184 to i32
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds i16, i16* %182, i64 %186
  %188 = load i16, i16* %187, align 2
  %189 = zext i16 %188 to i32
  %190 = and i32 %189, 8192
  %191 = icmp ne i32 %190, 0
  br i1 %191, label %192, label %195

192:                                              ; preds = %180
  %193 = load i8*, i8** %11, align 8
  %194 = getelementptr inbounds i8, i8* %193, i32 1
  store i8* %194, i8** %11, align 8
  br label %180

195:                                              ; preds = %180
  %196 = load i8*, i8** %11, align 8
  %197 = load i8, i8* %196, align 1
  %198 = sext i8 %197 to i32
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %208

200:                                              ; preds = %195
  %201 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %6, i32 0, i32 1
  %202 = load i8*, i8** %201, align 8
  %203 = getelementptr inbounds i8, i8* %202, i64 0
  %204 = load i8, i8* %203, align 1
  %205 = sext i8 %204 to i32
  %206 = icmp ne i32 %205, 9
  br i1 %206, label %207, label %208

207:                                              ; preds = %200
  br label %145

208:                                              ; preds = %200, %195
  %209 = load i8*, i8** %11, align 8
  %210 = getelementptr inbounds i8, i8* %209, i64 5
  %211 = load i8, i8* %210, align 1
  %212 = sext i8 %211 to i32
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %227, label %214

214:                                              ; preds = %208
  %215 = call i16** @__ctype_b_loc() #11
  %216 = load i16*, i16** %215, align 8
  %217 = load i8*, i8** %11, align 8
  %218 = getelementptr inbounds i8, i8* %217, i64 5
  %219 = load i8, i8* %218, align 1
  %220 = sext i8 %219 to i32
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds i16, i16* %216, i64 %221
  %223 = load i16, i16* %222, align 2
  %224 = zext i16 %223 to i32
  %225 = and i32 %224, 1
  %226 = icmp ne i32 %225, 0
  br i1 %226, label %227, label %231

227:                                              ; preds = %214, %208
  %228 = load i8*, i8** %11, align 8
  %229 = call i32 @strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12.511, i64 0, i64 0), i8* %228, i64 5) #9
  %230 = icmp ne i32 %229, 0
  br i1 %230, label %231, label %346

231:                                              ; preds = %227, %214
  %232 = load i8*, i8** %11, align 8
  %233 = getelementptr inbounds i8, i8* %232, i64 6
  %234 = load i8, i8* %233, align 1
  %235 = sext i8 %234 to i32
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %250, label %237

237:                                              ; preds = %231
  %238 = call i16** @__ctype_b_loc() #11
  %239 = load i16*, i16** %238, align 8
  %240 = load i8*, i8** %11, align 8
  %241 = getelementptr inbounds i8, i8* %240, i64 6
  %242 = load i8, i8* %241, align 1
  %243 = sext i8 %242 to i32
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds i16, i16* %239, i64 %244
  %246 = load i16, i16* %245, align 2
  %247 = zext i16 %246 to i32
  %248 = and i32 %247, 1
  %249 = icmp ne i32 %248, 0
  br i1 %249, label %250, label %254

250:                                              ; preds = %237, %231
  %251 = load i8*, i8** %11, align 8
  %252 = call i32 @strncmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13.512, i64 0, i64 0), i8* %251, i64 6) #9
  %253 = icmp ne i32 %252, 0
  br i1 %253, label %254, label %346

254:                                              ; preds = %250, %237
  %255 = load i8*, i8** %11, align 8
  %256 = getelementptr inbounds i8, i8* %255, i64 4
  %257 = load i8, i8* %256, align 1
  %258 = sext i8 %257 to i32
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %273, label %260

260:                                              ; preds = %254
  %261 = call i16** @__ctype_b_loc() #11
  %262 = load i16*, i16** %261, align 8
  %263 = load i8*, i8** %11, align 8
  %264 = getelementptr inbounds i8, i8* %263, i64 4
  %265 = load i8, i8* %264, align 1
  %266 = sext i8 %265 to i32
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds i16, i16* %262, i64 %267
  %269 = load i16, i16* %268, align 2
  %270 = zext i16 %269 to i32
  %271 = and i32 %270, 1
  %272 = icmp ne i32 %271, 0
  br i1 %272, label %273, label %277

273:                                              ; preds = %260, %254
  %274 = load i8*, i8** %11, align 8
  %275 = call i32 @strncmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14.513, i64 0, i64 0), i8* %274, i64 4) #9
  %276 = icmp ne i32 %275, 0
  br i1 %276, label %277, label %346

277:                                              ; preds = %273, %260
  %278 = load i8*, i8** %11, align 8
  %279 = getelementptr inbounds i8, i8* %278, i64 5
  %280 = load i8, i8* %279, align 1
  %281 = sext i8 %280 to i32
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %296, label %283

283:                                              ; preds = %277
  %284 = call i16** @__ctype_b_loc() #11
  %285 = load i16*, i16** %284, align 8
  %286 = load i8*, i8** %11, align 8
  %287 = getelementptr inbounds i8, i8* %286, i64 5
  %288 = load i8, i8* %287, align 1
  %289 = sext i8 %288 to i32
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds i16, i16* %285, i64 %290
  %292 = load i16, i16* %291, align 2
  %293 = zext i16 %292 to i32
  %294 = and i32 %293, 1
  %295 = icmp ne i32 %294, 0
  br i1 %295, label %296, label %300

296:                                              ; preds = %283, %277
  %297 = load i8*, i8** %11, align 8
  %298 = call i32 @strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.514, i64 0, i64 0), i8* %297, i64 5) #9
  %299 = icmp ne i32 %298, 0
  br i1 %299, label %300, label %346

300:                                              ; preds = %296, %283
  %301 = load i8*, i8** %11, align 8
  %302 = getelementptr inbounds i8, i8* %301, i64 4
  %303 = load i8, i8* %302, align 1
  %304 = sext i8 %303 to i32
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %319, label %306

306:                                              ; preds = %300
  %307 = call i16** @__ctype_b_loc() #11
  %308 = load i16*, i16** %307, align 8
  %309 = load i8*, i8** %11, align 8
  %310 = getelementptr inbounds i8, i8* %309, i64 4
  %311 = load i8, i8* %310, align 1
  %312 = sext i8 %311 to i32
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds i16, i16* %308, i64 %313
  %315 = load i16, i16* %314, align 2
  %316 = zext i16 %315 to i32
  %317 = and i32 %316, 1
  %318 = icmp ne i32 %317, 0
  br i1 %318, label %319, label %323

319:                                              ; preds = %306, %300
  %320 = load i8*, i8** %11, align 8
  %321 = call i32 @strncmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.515, i64 0, i64 0), i8* %320, i64 4) #9
  %322 = icmp ne i32 %321, 0
  br i1 %322, label %323, label %346

323:                                              ; preds = %319, %306
  %324 = load i8*, i8** %11, align 8
  %325 = getelementptr inbounds i8, i8* %324, i64 5
  %326 = load i8, i8* %325, align 1
  %327 = sext i8 %326 to i32
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %342, label %329

329:                                              ; preds = %323
  %330 = call i16** @__ctype_b_loc() #11
  %331 = load i16*, i16** %330, align 8
  %332 = load i8*, i8** %11, align 8
  %333 = getelementptr inbounds i8, i8* %332, i64 5
  %334 = load i8, i8* %333, align 1
  %335 = sext i8 %334 to i32
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds i16, i16* %331, i64 %336
  %338 = load i16, i16* %337, align 2
  %339 = zext i16 %338 to i32
  %340 = and i32 %339, 1
  %341 = icmp ne i32 %340, 0
  br i1 %341, label %342, label %359

342:                                              ; preds = %329, %323
  %343 = load i8*, i8** %11, align 8
  %344 = call i32 @strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17.516, i64 0, i64 0), i8* %343, i64 5) #9
  %345 = icmp ne i32 %344, 0
  br i1 %345, label %359, label %346

346:                                              ; preds = %342, %319, %296, %273, %250, %227
  %347 = load i8*, i8** %11, align 8
  %348 = load i8*, i8** %3, align 8
  %349 = load i32, i32* %16, align 4
  %350 = call i32 @conditional_line(i8* %347, i8* %348, i32 %349)
  store i32 %350, i32* %23, align 4
  %351 = load i32, i32* %23, align 4
  %352 = icmp sge i32 %351, 0
  br i1 %352, label %353, label %355

353:                                              ; preds = %346
  %354 = load i32, i32* %23, align 4
  store i32 %354, i32* %13, align 4
  br label %145

355:                                              ; preds = %346
  %356 = load i8*, i8** %3, align 8
  %357 = load i32, i32* %16, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, ...)*)(i8* %356, i32 %357, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18.517, i64 0, i64 0))
  br label %358

358:                                              ; preds = %355
  br label %359

359:                                              ; preds = %358, %342, %329
  %360 = load i32, i32* %13, align 4
  %361 = icmp ne i32 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %359
  br label %145

363:                                              ; preds = %359
  %364 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %6, i32 0, i32 1
  %365 = load i8*, i8** %364, align 8
  %366 = getelementptr inbounds i8, i8* %365, i64 0
  %367 = load i8, i8* %366, align 1
  %368 = sext i8 %367 to i32
  %369 = icmp eq i32 %368, 9
  br i1 %369, label %370, label %418

370:                                              ; preds = %363
  %371 = load %struct.nameseq*, %struct.nameseq** %14, align 8
  %372 = icmp eq %struct.nameseq* %371, null
  br i1 %372, label %373, label %376

373:                                              ; preds = %370
  %374 = load i8*, i8** %3, align 8
  %375 = load i32, i32* %16, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, ...)*)(i8* %374, i32 %375, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.19.518, i64 0, i64 0))
  br label %376

376:                                              ; preds = %373, %370
  %377 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %6, i32 0, i32 1
  %378 = load i8*, i8** %377, align 8
  store i8* %378, i8** %11, align 8
  %379 = load i32, i32* %9, align 4
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %383

381:                                              ; preds = %376
  %382 = load i32, i32* %16, align 4
  store i32 %382, i32* %10, align 4
  br label %383

383:                                              ; preds = %381, %376
  %384 = load i8*, i8** %11, align 8
  %385 = call i64 @strlen(i8* %384) #9
  %386 = trunc i64 %385 to i32
  store i32 %386, i32* %24, align 4
  %387 = load i32, i32* %24, align 4
  %388 = add i32 %387, 1
  %389 = load i32, i32* %9, align 4
  %390 = add i32 %388, %389
  %391 = load i32, i32* %7, align 4
  %392 = icmp ugt i32 %390, %391
  br i1 %392, label %393, label %402

393:                                              ; preds = %383
  %394 = load i32, i32* %24, align 4
  %395 = add i32 %394, 1
  %396 = load i32, i32* %9, align 4
  %397 = add i32 %395, %396
  %398 = mul i32 %397, 2
  store i32 %398, i32* %7, align 4
  %399 = load i8*, i8** %8, align 8
  %400 = load i32, i32* %7, align 4
  %401 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i32, ...)*)(i8* %399, i32 %400)
  store i8* %401, i8** %8, align 8
  br label %402

402:                                              ; preds = %393, %383
  %403 = load i8*, i8** %8, align 8
  %404 = load i32, i32* %9, align 4
  %405 = zext i32 %404 to i64
  %406 = getelementptr inbounds i8, i8* %403, i64 %405
  %407 = load i8*, i8** %11, align 8
  %408 = load i32, i32* %24, align 4
  %409 = zext i32 %408 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %406, i8* align 1 %407, i64 %409, i1 false)
  %410 = load i32, i32* %24, align 4
  %411 = load i32, i32* %9, align 4
  %412 = add i32 %411, %410
  store i32 %412, i32* %9, align 4
  %413 = load i8*, i8** %8, align 8
  %414 = load i32, i32* %9, align 4
  %415 = add i32 %414, 1
  store i32 %415, i32* %9, align 4
  %416 = zext i32 %414 to i64
  %417 = getelementptr inbounds i8, i8* %413, i64 %416
  store i8 10, i8* %417, align 1
  br label %873

418:                                              ; preds = %363
  %419 = load i8*, i8** %11, align 8
  %420 = getelementptr inbounds i8, i8* %419, i64 6
  %421 = load i8, i8* %420, align 1
  %422 = sext i8 %421 to i32
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %437, label %424

424:                                              ; preds = %418
  %425 = call i16** @__ctype_b_loc() #11
  %426 = load i16*, i16** %425, align 8
  %427 = load i8*, i8** %11, align 8
  %428 = getelementptr inbounds i8, i8* %427, i64 6
  %429 = load i8, i8* %428, align 1
  %430 = sext i8 %429 to i32
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds i16, i16* %426, i64 %431
  %433 = load i16, i16* %432, align 2
  %434 = zext i16 %433 to i32
  %435 = and i32 %434, 1
  %436 = icmp ne i32 %435, 0
  br i1 %436, label %437, label %457

437:                                              ; preds = %424, %418
  %438 = load i8*, i8** %11, align 8
  %439 = call i32 @strncmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20.519, i64 0, i64 0), i8* %438, i64 6) #9
  %440 = icmp ne i32 %439, 0
  br i1 %440, label %457, label %441

441:                                              ; preds = %437
  %442 = load i8*, i8** %11, align 8
  %443 = getelementptr inbounds i8, i8* %442, i64 6
  %444 = call i8* (i8*, ...) bitcast (i8* (i8*)* @next_token to i8* (i8*, ...)*)(i8* %443)
  store i8* %444, i8** %12, align 8
  %445 = load i8*, i8** %12, align 8
  %446 = call i8* (i8*, ...) bitcast (i8* (i8*)* @end_of_token to i8* (i8*, ...)*)(i8* %445)
  store i8* %446, i8** %11, align 8
  %447 = load i8*, i8** %12, align 8
  %448 = load i8*, i8** %11, align 8
  %449 = load i8*, i8** %12, align 8
  %450 = ptrtoint i8* %448 to i64
  %451 = ptrtoint i8* %449 to i64
  %452 = sub i64 %450, %451
  %453 = load i32, i32* %16, align 4
  %454 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %455 = load i8*, i8** %3, align 8
  %456 = call i32 (i8*, i64, i32, i32, %struct._IO_FILE*, i8*, ...) bitcast (i32 (i8*, i32, i32, i32, %struct._IO_FILE*, i8*)* @do_define to i32 (i8*, i64, i32, i32, %struct._IO_FILE*, i8*, ...)*)(i8* %447, i64 %452, i32 2, i32 %453, %struct._IO_FILE* %454, i8* %455)
  store i32 %456, i32* %16, align 4
  br label %145

457:                                              ; preds = %437, %424
  %458 = load i8*, i8** %11, align 8
  %459 = getelementptr inbounds i8, i8* %458, i64 5
  %460 = load i8, i8* %459, align 1
  %461 = sext i8 %460 to i32
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %476, label %463

463:                                              ; preds = %457
  %464 = call i16** @__ctype_b_loc() #11
  %465 = load i16*, i16** %464, align 8
  %466 = load i8*, i8** %11, align 8
  %467 = getelementptr inbounds i8, i8* %466, i64 5
  %468 = load i8, i8* %467, align 1
  %469 = sext i8 %468 to i32
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds i16, i16* %465, i64 %470
  %472 = load i16, i16* %471, align 2
  %473 = zext i16 %472 to i32
  %474 = and i32 %473, 1
  %475 = icmp ne i32 %474, 0
  br i1 %475, label %476, label %483

476:                                              ; preds = %463, %457
  %477 = load i8*, i8** %11, align 8
  %478 = call i32 @strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21.520, i64 0, i64 0), i8* %477, i64 5) #9
  %479 = icmp ne i32 %478, 0
  br i1 %479, label %483, label %480

480:                                              ; preds = %476
  %481 = load i8*, i8** %3, align 8
  %482 = load i32, i32* %16, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, ...)*)(i8* %481, i32 %482, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22.521, i64 0, i64 0))
  br label %871

483:                                              ; preds = %476, %463
  %484 = load i8*, i8** %11, align 8
  %485 = getelementptr inbounds i8, i8* %484, i64 8
  %486 = load i8, i8* %485, align 1
  %487 = sext i8 %486 to i32
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %502, label %489

489:                                              ; preds = %483
  %490 = call i16** @__ctype_b_loc() #11
  %491 = load i16*, i16** %490, align 8
  %492 = load i8*, i8** %11, align 8
  %493 = getelementptr inbounds i8, i8* %492, i64 8
  %494 = load i8, i8* %493, align 1
  %495 = sext i8 %494 to i32
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds i16, i16* %491, i64 %496
  %498 = load i16, i16* %497, align 2
  %499 = zext i16 %498 to i32
  %500 = and i32 %499, 1
  %501 = icmp ne i32 %500, 0
  br i1 %501, label %502, label %538

502:                                              ; preds = %489, %483
  %503 = load i8*, i8** %11, align 8
  %504 = call i32 @strncmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23.522, i64 0, i64 0), i8* %503, i64 8) #9
  %505 = icmp ne i32 %504, 0
  br i1 %505, label %538, label %506

506:                                              ; preds = %502
  %507 = load i8*, i8** %11, align 8
  %508 = getelementptr inbounds i8, i8* %507, i64 8
  %509 = call i8* (i8*, ...) bitcast (i8* (i8*)* @next_token to i8* (i8*, ...)*)(i8* %508)
  store i8* %509, i8** %12, align 8
  %510 = load i8*, i8** %12, align 8
  %511 = icmp eq i8* %510, null
  br i1 %511, label %512, label %515

512:                                              ; preds = %506
  %513 = load i8*, i8** %3, align 8
  %514 = load i32, i32* %16, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_error to void (i8*, i32, i8*, ...)*)(i8* %513, i32 %514, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24.523, i64 0, i64 0))
  br label %515

515:                                              ; preds = %512, %506
  %516 = load i8*, i8** %12, align 8
  %517 = call i32 @strncmp(i8* %516, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20.519, i64 0, i64 0), i64 6) #9
  %518 = icmp ne i32 %517, 0
  br i1 %518, label %529, label %519

519:                                              ; preds = %515
  %520 = load i8*, i8** %12, align 8
  %521 = call i8* (i8*, ...) bitcast (i8* (i8*)* @end_of_token to i8* (i8*, ...)*)(i8* %520)
  store i8* %521, i8** %12, align 8
  %522 = call i8* (i8**, i32*, ...) bitcast (i8* (i8**, i32*)* @find_next_token to i8* (i8**, i32*, ...)*)(i8** %12, i32* %25)
  store i8* %522, i8** %11, align 8
  %523 = load i8*, i8** %11, align 8
  %524 = load i32, i32* %25, align 4
  %525 = load i32, i32* %16, align 4
  %526 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %527 = load i8*, i8** %3, align 8
  %528 = call i32 @do_define(i8* %523, i32 %524, i32 5, i32 %525, %struct._IO_FILE* %526, i8* %527)
  store i32 %528, i32* %16, align 4
  br label %537

529:                                              ; preds = %515
  %530 = load i8*, i8** %12, align 8
  %531 = call i32 (i8*, i32, ...) bitcast (i32 (i8*, i32)* @try_variable_definition to i32 (i8*, i32, ...)*)(i8* %530, i32 5)
  %532 = icmp ne i32 %531, 0
  br i1 %532, label %536, label %533

533:                                              ; preds = %529
  %534 = load i8*, i8** %3, align 8
  %535 = load i32, i32* %16, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_error to void (i8*, i32, i8*, ...)*)(i8* %534, i32 %535, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25.524, i64 0, i64 0))
  br label %536

536:                                              ; preds = %533, %529
  br label %537

537:                                              ; preds = %536, %519
  br label %145

538:                                              ; preds = %502, %489
  %539 = load i8*, i8** %11, align 8
  %540 = getelementptr inbounds i8, i8* %539, i64 7
  %541 = load i8, i8* %540, align 1
  %542 = sext i8 %541 to i32
  %543 = icmp eq i32 %542, 0
  br i1 %543, label %557, label %544

544:                                              ; preds = %538
  %545 = call i16** @__ctype_b_loc() #11
  %546 = load i16*, i16** %545, align 8
  %547 = load i8*, i8** %11, align 8
  %548 = getelementptr inbounds i8, i8* %547, i64 7
  %549 = load i8, i8* %548, align 1
  %550 = sext i8 %549 to i32
  %551 = sext i32 %550 to i64
  %552 = getelementptr inbounds i16, i16* %546, i64 %551
  %553 = load i16, i16* %552, align 2
  %554 = zext i16 %553 to i32
  %555 = and i32 %554, 1
  %556 = icmp ne i32 %555, 0
  br i1 %556, label %557, label %614

557:                                              ; preds = %544, %538
  %558 = load i8*, i8** %11, align 8
  %559 = call i32 @strncmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26.525, i64 0, i64 0), i8* %558, i64 7) #9
  %560 = icmp ne i32 %559, 0
  br i1 %560, label %614, label %561

561:                                              ; preds = %557
  %562 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  store %struct.conditionals* %562, %struct.conditionals** %26, align 8
  %563 = load i8*, i8** %11, align 8
  %564 = getelementptr inbounds i8, i8* %563, i64 8
  %565 = call i8* (i8*, ...) bitcast (i8* (i8*)* @next_token to i8* (i8*, ...)*)(i8* %564)
  %566 = call i8* (i8*, ...) bitcast (i8* (i8*)* @allocated_variable_expand to i8* (i8*, ...)*)(i8* %565)
  store i8* %566, i8** %11, align 8
  %567 = load i8*, i8** %11, align 8
  %568 = load i8, i8* %567, align 1
  %569 = sext i8 %568 to i32
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %571, label %574

571:                                              ; preds = %561
  %572 = load i8*, i8** %3, align 8
  %573 = load i32, i32* %16, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_error to void (i8*, i32, i8*, ...)*)(i8* %572, i32 %573, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.27.526, i64 0, i64 0))
  br label %145

574:                                              ; preds = %561
  %575 = load i8*, i8** %11, align 8
  %576 = call i8* (i8*, ...) bitcast (i8* (i8*)* @end_of_token to i8* (i8*, ...)*)(i8* %575)
  store i8* %576, i8** %12, align 8
  %577 = load i8*, i8** %12, align 8
  %578 = load i8, i8* %577, align 1
  %579 = sext i8 %578 to i32
  %580 = icmp ne i32 %579, 0
  br i1 %580, label %581, label %593

581:                                              ; preds = %574
  %582 = load i8*, i8** %12, align 8
  %583 = getelementptr inbounds i8, i8* %582, i32 1
  store i8* %583, i8** %12, align 8
  store i8 0, i8* %582, align 1
  %584 = load i8*, i8** %12, align 8
  %585 = call i8* (i8*, ...) bitcast (i8* (i8*)* @next_token to i8* (i8*, ...)*)(i8* %584)
  %586 = load i8, i8* %585, align 1
  %587 = sext i8 %586 to i32
  %588 = icmp ne i32 %587, 0
  br i1 %588, label %589, label %592

589:                                              ; preds = %581
  %590 = load i8*, i8** %3, align 8
  %591 = load i32, i32* %16, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_error to void (i8*, i32, i8*, ...)*)(i8* %590, i32 %591, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.527, i64 0, i64 0))
  br label %592

592:                                              ; preds = %589, %581
  br label %593

593:                                              ; preds = %592, %574
  %594 = bitcast %struct.conditionals* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %594, i8 0, i64 16, i1 false)
  store %struct.conditionals* %27, %struct.conditionals** @conditionals, align 8
  br label %595

595:                                              ; preds = %593
  %596 = load %struct.nameseq*, %struct.nameseq** %14, align 8
  %597 = load i8*, i8** %19, align 8
  %598 = load i8*, i8** %20, align 8
  %599 = load %struct.dep*, %struct.dep** %15, align 8
  %600 = load i32, i32* %10, align 4
  %601 = load i8*, i8** %8, align 8
  %602 = load i32, i32* %9, align 4
  %603 = load i32, i32* %18, align 4
  %604 = load i8*, i8** %3, align 8
  %605 = load i32, i32* %16, align 4
  %606 = load i32, i32* %4, align 4
  %607 = icmp ne i32 %606, 1
  %608 = zext i1 %607 to i32
  call void @record_files(%struct.nameseq* %596, i8* %597, i8* %598, %struct.dep* %599, i32 %600, i8* %601, i32 %602, i32 %603, i8* %604, i32 %605, i32 %608)
  store %struct.nameseq* null, %struct.nameseq** %14, align 8
  store i32 0, i32* %9, align 4
  store i8* null, i8** %19, align 8
  br label %609

609:                                              ; preds = %595
  %610 = load i8*, i8** %11, align 8
  call void @read_makefile(i8* %610, i32 2)
  %611 = load i8*, i8** %11, align 8
  call void @free(i8* %611) #10
  %612 = load %struct.conditionals*, %struct.conditionals** %26, align 8
  store %struct.conditionals* %612, %struct.conditionals** @conditionals, align 8
  %613 = load i8*, i8** %3, align 8
  store i8* %613, i8** @reading_filename, align 8
  store i32* %16, i32** @reading_lineno_ptr, align 8
  br label %145

614:                                              ; preds = %557, %544
  %615 = load i8*, i8** %11, align 8
  %616 = getelementptr inbounds i8, i8* %615, i64 5
  %617 = load i8, i8* %616, align 1
  %618 = sext i8 %617 to i32
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %633, label %620

620:                                              ; preds = %614
  %621 = call i16** @__ctype_b_loc() #11
  %622 = load i16*, i16** %621, align 8
  %623 = load i8*, i8** %11, align 8
  %624 = getelementptr inbounds i8, i8* %623, i64 5
  %625 = load i8, i8* %624, align 1
  %626 = sext i8 %625 to i32
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds i16, i16* %622, i64 %627
  %629 = load i16, i16* %628, align 2
  %630 = zext i16 %629 to i32
  %631 = and i32 %630, 1
  %632 = icmp ne i32 %631, 0
  br i1 %632, label %633, label %676

633:                                              ; preds = %620, %614
  %634 = load i8*, i8** %11, align 8
  %635 = call i32 @strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29.528, i64 0, i64 0), i8* %634, i64 5) #9
  %636 = icmp ne i32 %635, 0
  br i1 %636, label %676, label %637

637:                                              ; preds = %633
  %638 = load i8*, i8** %11, align 8
  %639 = getelementptr inbounds i8, i8* %638, i64 5
  %640 = call i8* (i8*, ...) bitcast (i8* (i8*)* @variable_expand to i8* (i8*, ...)*)(i8* %639)
  store i8* %640, i8** %12, align 8
  %641 = call i8* (i8**, i32*, ...) bitcast (i8* (i8**, i32*)* @find_next_token to i8* (i8**, i32*, ...)*)(i8** %12, i32* %29)
  store i8* %641, i8** %11, align 8
  %642 = load i8*, i8** %11, align 8
  %643 = icmp ne i8* %642, null
  br i1 %643, label %644, label %662

644:                                              ; preds = %637
  %645 = load i8*, i8** %11, align 8
  %646 = load i32, i32* %29, align 4
  %647 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i32, ...)*)(i8* %645, i32 %646)
  store i8* %647, i8** %28, align 8
  %648 = call i8* (i8**, i32*, ...) bitcast (i8* (i8**, i32*)* @find_next_token to i8* (i8**, i32*, ...)*)(i8** %12, i32* %29)
  store i8* %648, i8** %11, align 8
  %649 = load i8*, i8** %11, align 8
  %650 = icmp ne i8* %649, null
  br i1 %650, label %651, label %661

651:                                              ; preds = %644
  %652 = load i8*, i8** %11, align 8
  %653 = load i32, i32* %29, align 4
  %654 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i32, ...)*)(i8* %652, i32 %653)
  store i8* %654, i8** %11, align 8
  %655 = call i8* (i8**, i32*, ...) bitcast (i8* (i8**, i32*)* @find_next_token to i8* (i8**, i32*, ...)*)(i8** %12, i32* null)
  %656 = icmp ne i8* %655, null
  br i1 %656, label %657, label %660

657:                                              ; preds = %651
  %658 = load i8*, i8** %3, align 8
  %659 = load i32, i32* %16, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_error to void (i8*, i32, i8*, ...)*)(i8* %658, i32 %659, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.30.529, i64 0, i64 0))
  br label %660

660:                                              ; preds = %657, %651
  br label %661

661:                                              ; preds = %660, %644
  br label %663

662:                                              ; preds = %637
  store i8* null, i8** %28, align 8
  br label %663

663:                                              ; preds = %662, %661
  %664 = load i8*, i8** %28, align 8
  %665 = load i8*, i8** %11, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*)* @construct_vpath_list to void (i8*, i8*, ...)*)(i8* %664, i8* %665)
  %666 = load i8*, i8** %28, align 8
  %667 = icmp ne i8* %666, null
  br i1 %667, label %668, label %670

668:                                              ; preds = %663
  %669 = load i8*, i8** %28, align 8
  call void @free(i8* %669) #10
  br label %670

670:                                              ; preds = %668, %663
  %671 = load i8*, i8** %11, align 8
  %672 = icmp ne i8* %671, null
  br i1 %672, label %673, label %675

673:                                              ; preds = %670
  %674 = load i8*, i8** %11, align 8
  call void @free(i8* %674) #10
  br label %675

675:                                              ; preds = %673, %670
  br label %145

676:                                              ; preds = %633, %620
  %677 = load i8*, i8** %11, align 8
  %678 = call i32 (i8*, i32, ...) bitcast (i32 (i8*, i32)* @try_variable_definition to i32 (i8*, i32, ...)*)(i8* %677, i32 2)
  %679 = icmp ne i32 %678, 0
  br i1 %679, label %680, label %681

680:                                              ; preds = %676
  br label %145

681:                                              ; preds = %676
  br label %682

682:                                              ; preds = %681
  %683 = load %struct.nameseq*, %struct.nameseq** %14, align 8
  %684 = load i8*, i8** %19, align 8
  %685 = load i8*, i8** %20, align 8
  %686 = load %struct.dep*, %struct.dep** %15, align 8
  %687 = load i32, i32* %10, align 4
  %688 = load i8*, i8** %8, align 8
  %689 = load i32, i32* %9, align 4
  %690 = load i32, i32* %18, align 4
  %691 = load i8*, i8** %3, align 8
  %692 = load i32, i32* %16, align 4
  %693 = load i32, i32* %4, align 4
  %694 = icmp ne i32 %693, 1
  %695 = zext i1 %694 to i32
  call void @record_files(%struct.nameseq* %683, i8* %684, i8* %685, %struct.dep* %686, i32 %687, i8* %688, i32 %689, i32 %690, i8* %691, i32 %692, i32 %695)
  store %struct.nameseq* null, %struct.nameseq** %14, align 8
  store i32 0, i32* %9, align 4
  store i8* null, i8** %19, align 8
  br label %696

696:                                              ; preds = %682
  %697 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %6, i32 0, i32 1
  %698 = load i8*, i8** %697, align 8
  %699 = call i8* @find_semicolon(i8* %698)
  store i8* %699, i8** %30, align 8
  %700 = load i8*, i8** %30, align 8
  %701 = icmp ne i8* %700, null
  br i1 %701, label %702, label %704

702:                                              ; preds = %696
  %703 = load i8*, i8** %30, align 8
  store i8 0, i8* %703, align 1
  br label %704

704:                                              ; preds = %702, %696
  %705 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %6, i32 0, i32 1
  %706 = load i8*, i8** %705, align 8
  %707 = call i8* (i8*, ...) bitcast (i8* (i8*)* @variable_expand to i8* (i8*, ...)*)(i8* %706)
  store i8* %707, i8** %11, align 8
  %708 = load i8*, i8** %30, align 8
  %709 = icmp eq i8* %708, null
  br i1 %709, label %710, label %713

710:                                              ; preds = %704
  %711 = load i8*, i8** %11, align 8
  %712 = call i8* @find_semicolon(i8* %711)
  store i8* %712, i8** %30, align 8
  br label %713

713:                                              ; preds = %710, %704
  %714 = load i8*, i8** %30, align 8
  %715 = icmp ne i8* %714, null
  br i1 %715, label %716, label %718

716:                                              ; preds = %713
  %717 = load i8*, i8** %30, align 8
  store i8 0, i8* %717, align 1
  br label %718

718:                                              ; preds = %716, %713
  %719 = load i8*, i8** %11, align 8
  call void (i8*, ...) bitcast (void (i8*)* @remove_comments to void (i8*, ...)*)(i8* %719)
  %720 = load i8*, i8** %11, align 8
  %721 = call i8* (i8*, ...) bitcast (i8* (i8*)* @next_token to i8* (i8*, ...)*)(i8* %720)
  store i8* %721, i8** %12, align 8
  %722 = load i8*, i8** %12, align 8
  %723 = load i8, i8* %722, align 1
  %724 = sext i8 %723 to i32
  %725 = icmp eq i32 %724, 0
  br i1 %725, label %726, label %727

726:                                              ; preds = %718
  br label %145

727:                                              ; preds = %718
  %728 = load i8*, i8** %12, align 8
  %729 = load i8, i8* %728, align 1
  %730 = sext i8 %729 to i32
  %731 = icmp eq i32 %730, 58
  br i1 %731, label %732, label %735

732:                                              ; preds = %727
  %733 = load i8*, i8** %3, align 8
  %734 = load i32, i32* %16, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, ...)*)(i8* %733, i32 %734, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.31.530, i64 0, i64 0))
  br label %735

735:                                              ; preds = %732, %727
  br label %736

736:                                              ; preds = %735
  %737 = call %struct.nameseq* (i8**, i32, i64, ...) bitcast (%struct.nameseq* (i8**, i32, i32)* @parse_file_seq to %struct.nameseq* (i8**, i32, i64, ...)*)(i8** %12, i32 58, i64 16)
  %738 = call %struct.nameseq* (%struct.nameseq*, i64, ...) bitcast (%struct.nameseq* (%struct.nameseq*, i32)* @multi_glob to %struct.nameseq* (%struct.nameseq*, i64, ...)*)(%struct.nameseq* %737, i64 16)
  store %struct.nameseq* %738, %struct.nameseq** %14, align 8
  %739 = load i8*, i8** %12, align 8
  %740 = getelementptr inbounds i8, i8* %739, i32 1
  store i8* %740, i8** %12, align 8
  %741 = load i8, i8* %739, align 1
  %742 = sext i8 %741 to i32
  %743 = icmp eq i32 %742, 0
  br i1 %743, label %744, label %747

744:                                              ; preds = %736
  %745 = load i8*, i8** %3, align 8
  %746 = load i32, i32* %16, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, ...)*)(i8* %745, i32 %746, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32.535, i64 0, i64 0))
  br label %747

747:                                              ; preds = %744, %736
  %748 = load i8*, i8** %12, align 8
  %749 = load i8, i8* %748, align 1
  %750 = sext i8 %749 to i32
  %751 = icmp eq i32 %750, 58
  %752 = zext i1 %751 to i32
  store i32 %752, i32* %18, align 4
  %753 = load i32, i32* %18, align 4
  %754 = icmp ne i32 %753, 0
  br i1 %754, label %755, label %758

755:                                              ; preds = %747
  %756 = load i8*, i8** %12, align 8
  %757 = getelementptr inbounds i8, i8* %756, i32 1
  store i8* %757, i8** %12, align 8
  br label %758

758:                                              ; preds = %755, %747
  %759 = load i8*, i8** %12, align 8
  %760 = call i8* @strchr(i8* %759, i32 58) #9
  store i8* %760, i8** %11, align 8
  br label %761

761:                                              ; preds = %794, %758
  %762 = load i8*, i8** %11, align 8
  %763 = icmp ne i8* %762, null
  br i1 %763, label %764, label %770

764:                                              ; preds = %761
  %765 = load i8*, i8** %11, align 8
  %766 = getelementptr inbounds i8, i8* %765, i64 -1
  %767 = load i8, i8* %766, align 1
  %768 = sext i8 %767 to i32
  %769 = icmp eq i32 %768, 92
  br label %770

770:                                              ; preds = %764, %761
  %771 = phi i1 [ false, %761 ], [ %769, %764 ]
  br i1 %771, label %772, label %795

772:                                              ; preds = %770
  %773 = load i8*, i8** %11, align 8
  %774 = getelementptr inbounds i8, i8* %773, i64 -1
  store i8* %774, i8** %31, align 8
  store i32 0, i32* %32, align 4
  br label %775

775:                                              ; preds = %781, %772
  %776 = load i8*, i8** %31, align 8
  %777 = getelementptr inbounds i8, i8* %776, i32 -1
  store i8* %777, i8** %31, align 8
  %778 = load i8, i8* %776, align 1
  %779 = sext i8 %778 to i32
  %780 = icmp eq i32 %779, 92
  br i1 %780, label %781, label %786

781:                                              ; preds = %775
  %782 = load i32, i32* %32, align 4
  %783 = icmp ne i32 %782, 0
  %784 = xor i1 %783, true
  %785 = zext i1 %784 to i32
  store i32 %785, i32* %32, align 4
  br label %775

786:                                              ; preds = %775
  %787 = load i32, i32* %32, align 4
  %788 = icmp ne i32 %787, 0
  br i1 %788, label %789, label %793

789:                                              ; preds = %786
  %790 = load i8*, i8** %11, align 8
  %791 = getelementptr inbounds i8, i8* %790, i64 1
  %792 = call i8* @strchr(i8* %791, i32 58) #9
  store i8* %792, i8** %11, align 8
  br label %794

793:                                              ; preds = %786
  br label %795

794:                                              ; preds = %789
  br label %761

795:                                              ; preds = %793, %770
  %796 = load i8*, i8** %11, align 8
  %797 = icmp ne i8* %796, null
  br i1 %797, label %798, label %828

798:                                              ; preds = %795
  %799 = call %struct.nameseq* (i8**, i32, i64, ...) bitcast (%struct.nameseq* (i8**, i32, i32)* @parse_file_seq to %struct.nameseq* (i8**, i32, i64, ...)*)(i8** %12, i32 58, i64 16)
  store %struct.nameseq* %799, %struct.nameseq** %33, align 8
  %800 = load i8*, i8** %12, align 8
  %801 = getelementptr inbounds i8, i8* %800, i32 1
  store i8* %801, i8** %12, align 8
  %802 = load %struct.nameseq*, %struct.nameseq** %33, align 8
  %803 = icmp eq %struct.nameseq* %802, null
  br i1 %803, label %804, label %807

804:                                              ; preds = %798
  %805 = load i8*, i8** %3, align 8
  %806 = load i32, i32* %16, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, ...)*)(i8* %805, i32 %806, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.536, i64 0, i64 0))
  br label %816

807:                                              ; preds = %798
  %808 = load %struct.nameseq*, %struct.nameseq** %33, align 8
  %809 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %808, i32 0, i32 0
  %810 = load %struct.nameseq*, %struct.nameseq** %809, align 8
  %811 = icmp ne %struct.nameseq* %810, null
  br i1 %811, label %812, label %815

812:                                              ; preds = %807
  %813 = load i8*, i8** %3, align 8
  %814 = load i32, i32* %16, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, ...)*)(i8* %813, i32 %814, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.34.537, i64 0, i64 0))
  br label %815

815:                                              ; preds = %812, %807
  br label %816

816:                                              ; preds = %815, %804
  %817 = load %struct.nameseq*, %struct.nameseq** %33, align 8
  %818 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %817, i32 0, i32 1
  %819 = load i8*, i8** %818, align 8
  store i8* %819, i8** %19, align 8
  %820 = load i8*, i8** %19, align 8
  %821 = call i8* @find_percent(i8* %820)
  store i8* %821, i8** %20, align 8
  %822 = load i8*, i8** %20, align 8
  %823 = icmp eq i8* %822, null
  br i1 %823, label %824, label %827

824:                                              ; preds = %816
  %825 = load i8*, i8** %3, align 8
  %826 = load i32, i32* %16, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, ...)*)(i8* %825, i32 %826, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.35.540, i64 0, i64 0))
  br label %827

827:                                              ; preds = %824, %816
  br label %829

828:                                              ; preds = %795
  store i8* null, i8** %19, align 8
  br label %829

829:                                              ; preds = %828, %827
  %830 = call %struct.nameseq* (i8**, i32, i64, ...) bitcast (%struct.nameseq* (i8**, i32, i32)* @parse_file_seq to %struct.nameseq* (i8**, i32, i64, ...)*)(i8** %12, i32 0, i64 32)
  %831 = call %struct.nameseq* (%struct.nameseq*, i64, ...) bitcast (%struct.nameseq* (%struct.nameseq*, i32)* @multi_glob to %struct.nameseq* (%struct.nameseq*, i64, ...)*)(%struct.nameseq* %830, i64 32)
  %832 = bitcast %struct.nameseq* %831 to %struct.dep*
  store %struct.dep* %832, %struct.dep** %15, align 8
  store i32 0, i32* %9, align 4
  %833 = load i8*, i8** %30, align 8
  %834 = icmp ne i8* %833, null
  br i1 %834, label %835, label %866

835:                                              ; preds = %829
  %836 = load i8*, i8** %30, align 8
  %837 = getelementptr inbounds i8, i8* %836, i64 1
  %838 = call i64 @strlen(i8* %837) #9
  %839 = trunc i64 %838 to i32
  store i32 %839, i32* %34, align 4
  %840 = load i32, i32* %16, align 4
  store i32 %840, i32* %10, align 4
  %841 = load i32, i32* %34, align 4
  %842 = add i32 %841, 2
  %843 = load i32, i32* %7, align 4
  %844 = icmp ugt i32 %842, %843
  br i1 %844, label %845, label %852

845:                                              ; preds = %835
  %846 = load i32, i32* %34, align 4
  %847 = add i32 %846, 2
  %848 = mul i32 %847, 2
  store i32 %848, i32* %7, align 4
  %849 = load i8*, i8** %8, align 8
  %850 = load i32, i32* %7, align 4
  %851 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i32, ...)*)(i8* %849, i32 %850)
  store i8* %851, i8** %8, align 8
  br label %852

852:                                              ; preds = %845, %835
  %853 = load i8*, i8** %8, align 8
  %854 = load i8*, i8** %30, align 8
  %855 = getelementptr inbounds i8, i8* %854, i64 1
  %856 = load i32, i32* %34, align 4
  %857 = zext i32 %856 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %853, i8* align 1 %855, i64 %857, i1 false)
  %858 = load i32, i32* %34, align 4
  %859 = load i32, i32* %9, align 4
  %860 = add i32 %859, %858
  store i32 %860, i32* %9, align 4
  %861 = load i8*, i8** %8, align 8
  %862 = load i32, i32* %9, align 4
  %863 = add i32 %862, 1
  store i32 %863, i32* %9, align 4
  %864 = zext i32 %862 to i64
  %865 = getelementptr inbounds i8, i8* %861, i64 %864
  store i8 10, i8* %865, align 1
  br label %866

866:                                              ; preds = %852, %829
  br label %867

867:                                              ; preds = %866
  br label %868

868:                                              ; preds = %867
  br label %869

869:                                              ; preds = %868
  br label %870

870:                                              ; preds = %869
  br label %871

871:                                              ; preds = %870, %480
  br label %872

872:                                              ; preds = %871
  br label %873

873:                                              ; preds = %872, %402
  br label %874

874:                                              ; preds = %873
  br label %145

875:                                              ; preds = %145
  %876 = load i32, i32* %13, align 4
  %877 = icmp ne i32 %876, 0
  br i1 %877, label %878, label %881

878:                                              ; preds = %875
  %879 = load i8*, i8** %3, align 8
  %880 = load i32, i32* %16, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, ...)*)(i8* %879, i32 %880, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36.541, i64 0, i64 0))
  br label %881

881:                                              ; preds = %878, %875
  br label %882

882:                                              ; preds = %881
  %883 = load %struct.nameseq*, %struct.nameseq** %14, align 8
  %884 = load i8*, i8** %19, align 8
  %885 = load i8*, i8** %20, align 8
  %886 = load %struct.dep*, %struct.dep** %15, align 8
  %887 = load i32, i32* %10, align 4
  %888 = load i8*, i8** %8, align 8
  %889 = load i32, i32* %9, align 4
  %890 = load i32, i32* %18, align 4
  %891 = load i8*, i8** %3, align 8
  %892 = load i32, i32* %16, align 4
  %893 = load i32, i32* %4, align 4
  %894 = icmp ne i32 %893, 1
  %895 = zext i1 %894 to i32
  call void @record_files(%struct.nameseq* %883, i8* %884, i8* %885, %struct.dep* %886, i32 %887, i8* %888, i32 %889, i32 %890, i8* %891, i32 %892, i32 %895)
  store %struct.nameseq* null, %struct.nameseq** %14, align 8
  store i32 0, i32* %9, align 4
  store i8* null, i8** %19, align 8
  br label %896

896:                                              ; preds = %882
  %897 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %6, i32 0, i32 1
  %898 = load i8*, i8** %897, align 8
  call void @free(i8* %898) #10
  %899 = load i8*, i8** %8, align 8
  call void @free(i8* %899) #10
  %900 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %901 = call i32 @fclose(%struct._IO_FILE* %900)
  store i8* null, i8** @reading_filename, align 8
  store i32* null, i32** @reading_lineno_ptr, align 8
  br label %902

902:                                              ; preds = %896, %139
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @readline(%struct.linebuffer* %0, %struct._IO_FILE* %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.linebuffer*, align 8
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store %struct.linebuffer* %0, %struct.linebuffer** %5, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %6, align 8
  store i8* %2, i8** %7, align 8
  %18 = load %struct.linebuffer*, %struct.linebuffer** %5, align 8
  %19 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %18, i32 0, i32 1
  %20 = load i8*, i8** %19, align 8
  store i8* %20, i8** %8, align 8
  %21 = load %struct.linebuffer*, %struct.linebuffer** %5, align 8
  %22 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %21, i32 0, i32 1
  %23 = load i8*, i8** %22, align 8
  store i8* %23, i8** %9, align 8
  %24 = load i8*, i8** %9, align 8
  %25 = load %struct.linebuffer*, %struct.linebuffer** %5, align 8
  %26 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %24, i64 %28
  store i8* %29, i8** %10, align 8
  store i32 0, i32* %12, align 4
  store i32 0, i32* %14, align 4
  %30 = load i8*, i8** %9, align 8
  store i8 0, i8* %30, align 1
  br label %31

31:                                               ; preds = %176, %66, %3
  %32 = load i8*, i8** %9, align 8
  %33 = load i8*, i8** %10, align 8
  %34 = load i8*, i8** %9, align 8
  %35 = ptrtoint i8* %33 to i64
  %36 = ptrtoint i8* %34 to i64
  %37 = sub i64 %35, %36
  %38 = trunc i64 %37 to i32
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %40 = call i8* @fgets(i8* %32, i32 %38, %struct._IO_FILE* %39)
  %41 = icmp eq i8* %40, null
  br i1 %41, label %42, label %51

42:                                               ; preds = %31
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %44 = call i32 @feof(%struct._IO_FILE* %43) #10
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = load i32, i32* %14, align 4
  store i32 %47, i32* %4, align 4
  br label %177

48:                                               ; preds = %42
  %49 = load i8*, i8** %7, align 8
  call void (i8*, ...) bitcast (void (i8*)* @pfatal_with_name to void (i8*, ...)*)(i8* %49)
  br label %50

50:                                               ; preds = %48
  br label %51

51:                                               ; preds = %50, %31
  %52 = load i8*, i8** %9, align 8
  %53 = call i64 @strlen(i8* %52) #9
  %54 = trunc i64 %53 to i32
  store i32 %54, i32* %11, align 4
  %55 = load i32, i32* %11, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %66, label %57

57:                                               ; preds = %51
  %58 = load i32, i32* %11, align 4
  %59 = load i8*, i8** %9, align 8
  %60 = sext i32 %58 to i64
  %61 = getelementptr inbounds i8, i8* %59, i64 %60
  store i8* %61, i8** %9, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 -1
  %63 = load i8, i8* %62, align 1
  %64 = sext i8 %63 to i32
  %65 = icmp ne i32 %64, 10
  br i1 %65, label %66, label %97

66:                                               ; preds = %57, %51
  %67 = load i8*, i8** %9, align 8
  %68 = load i8*, i8** %8, align 8
  %69 = ptrtoint i8* %67 to i64
  %70 = ptrtoint i8* %68 to i64
  %71 = sub i64 %69, %70
  %72 = trunc i64 %71 to i32
  store i32 %72, i32* %16, align 4
  %73 = load %struct.linebuffer*, %struct.linebuffer** %5, align 8
  %74 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %73, i32 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = mul i32 %75, 2
  store i32 %76, i32* %74, align 8
  %77 = load i8*, i8** %8, align 8
  %78 = load %struct.linebuffer*, %struct.linebuffer** %5, align 8
  %79 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i32, ...)*)(i8* %77, i32 %80)
  store i8* %81, i8** %8, align 8
  %82 = load i8*, i8** %8, align 8
  %83 = load i32, i32* %16, align 4
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %82, i64 %84
  store i8* %85, i8** %9, align 8
  %86 = load i8*, i8** %8, align 8
  %87 = load %struct.linebuffer*, %struct.linebuffer** %5, align 8
  %88 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %87, i32 0, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds i8, i8* %86, i64 %90
  store i8* %91, i8** %10, align 8
  %92 = load i8*, i8** %8, align 8
  %93 = load %struct.linebuffer*, %struct.linebuffer** %5, align 8
  %94 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %93, i32 0, i32 1
  store i8* %92, i8** %94, align 8
  %95 = load i8*, i8** %9, align 8
  store i8 0, i8* %95, align 1
  %96 = load i32, i32* %11, align 4
  store i32 %96, i32* %12, align 4
  br label %31

97:                                               ; preds = %57
  %98 = load i32, i32* %14, align 4
  %99 = add i32 %98, 1
  store i32 %99, i32* %14, align 4
  %100 = load i32, i32* %11, align 4
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %110

102:                                              ; preds = %97
  %103 = load i8*, i8** %9, align 8
  %104 = load i8*, i8** %8, align 8
  %105 = icmp ugt i8* %103, %104
  br i1 %105, label %106, label %110

106:                                              ; preds = %102
  %107 = load i32, i32* %12, align 4
  %108 = load i32, i32* %11, align 4
  %109 = add nsw i32 %108, %107
  store i32 %109, i32* %11, align 4
  br label %110

110:                                              ; preds = %106, %102, %97
  %111 = load i32, i32* %11, align 4
  store i32 %111, i32* %12, align 4
  store i32 0, i32* %15, align 4
  %112 = load i8*, i8** %9, align 8
  %113 = getelementptr inbounds i8, i8* %112, i64 -2
  store i8* %113, i8** %13, align 8
  br label %114

114:                                              ; preds = %130, %110
  %115 = load i32, i32* %11, align 4
  %116 = add nsw i32 %115, -1
  store i32 %116, i32* %11, align 4
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %118, label %133

118:                                              ; preds = %114
  %119 = load i8*, i8** %13, align 8
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %121, 92
  br i1 %122, label %123, label %128

123:                                              ; preds = %118
  %124 = load i32, i32* %15, align 4
  %125 = icmp ne i32 %124, 0
  %126 = xor i1 %125, true
  %127 = zext i1 %126 to i32
  store i32 %127, i32* %15, align 4
  br label %129

128:                                              ; preds = %118
  br label %133

129:                                              ; preds = %123
  br label %130

130:                                              ; preds = %129
  %131 = load i8*, i8** %13, align 8
  %132 = getelementptr inbounds i8, i8* %131, i32 -1
  store i8* %132, i8** %13, align 8
  br label %114

133:                                              ; preds = %128, %114
  %134 = load i32, i32* %15, align 4
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %140, label %136

136:                                              ; preds = %133
  %137 = load i8*, i8** %9, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 -1
  store i8 0, i8* %138, align 1
  %139 = load i32, i32* %14, align 4
  store i32 %139, i32* %4, align 4
  br label %177

140:                                              ; preds = %133
  %141 = load i8*, i8** %10, align 8
  %142 = load i8*, i8** %9, align 8
  %143 = ptrtoint i8* %141 to i64
  %144 = ptrtoint i8* %142 to i64
  %145 = sub i64 %143, %144
  %146 = icmp sle i64 %145, 1
  br i1 %146, label %147, label %176

147:                                              ; preds = %140
  %148 = load i8*, i8** %9, align 8
  %149 = load i8*, i8** %8, align 8
  %150 = ptrtoint i8* %148 to i64
  %151 = ptrtoint i8* %149 to i64
  %152 = sub i64 %150, %151
  %153 = trunc i64 %152 to i32
  store i32 %153, i32* %17, align 4
  %154 = load %struct.linebuffer*, %struct.linebuffer** %5, align 8
  %155 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %154, i32 0, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = mul i32 %156, 2
  store i32 %157, i32* %155, align 8
  %158 = load i8*, i8** %8, align 8
  %159 = load %struct.linebuffer*, %struct.linebuffer** %5, align 8
  %160 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %159, i32 0, i32 0
  %161 = load i32, i32* %160, align 8
  %162 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i32, ...)*)(i8* %158, i32 %161)
  store i8* %162, i8** %8, align 8
  %163 = load i8*, i8** %8, align 8
  %164 = load i32, i32* %17, align 4
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds i8, i8* %163, i64 %165
  store i8* %166, i8** %9, align 8
  %167 = load i8*, i8** %8, align 8
  %168 = load %struct.linebuffer*, %struct.linebuffer** %5, align 8
  %169 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %168, i32 0, i32 0
  %170 = load i32, i32* %169, align 8
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds i8, i8* %167, i64 %171
  store i8* %172, i8** %10, align 8
  %173 = load i8*, i8** %8, align 8
  %174 = load %struct.linebuffer*, %struct.linebuffer** %5, align 8
  %175 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %174, i32 0, i32 1
  store i8* %173, i8** %175, align 8
  br label %176

176:                                              ; preds = %147, %140
  br label %31

177:                                              ; preds = %136, %46
  %178 = load i32, i32* %4, align 4
  ret i32 %178
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @conditional_line(i8* %0, i8* %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.variable*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  %19 = load i8*, i8** %5, align 8
  %20 = load i8, i8* %19, align 1
  %21 = sext i8 %20 to i32
  %22 = icmp eq i32 %21, 105
  br i1 %22, label %23, label %69

23:                                               ; preds = %3
  %24 = load i8*, i8** %5, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 2
  %26 = load i8, i8* %25, align 1
  %27 = sext i8 %26 to i32
  %28 = icmp eq i32 %27, 110
  %29 = zext i1 %28 to i32
  store i32 %29, i32* %8, align 4
  %30 = load i32, i32* %8, align 4
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %50

32:                                               ; preds = %23
  %33 = load i8*, i8** %5, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 3
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = icmp eq i32 %36, 100
  %38 = zext i1 %37 to i64
  %39 = select i1 %37, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13.512, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.514, i64 0, i64 0)
  store i8* %39, i8** %9, align 8
  %40 = load i8*, i8** %9, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 3
  %42 = load i8, i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp eq i32 %43, 100
  %45 = zext i1 %44 to i64
  %46 = select i1 %44, i32 7, i32 6
  %47 = load i8*, i8** %5, align 8
  %48 = sext i32 %46 to i64
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  store i8* %49, i8** %5, align 8
  br label %68

50:                                               ; preds = %23
  %51 = load i8*, i8** %5, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 2
  %53 = load i8, i8* %52, align 1
  %54 = sext i8 %53 to i32
  %55 = icmp eq i32 %54, 100
  %56 = zext i1 %55 to i64
  %57 = select i1 %55, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12.511, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14.513, i64 0, i64 0)
  store i8* %57, i8** %9, align 8
  %58 = load i8*, i8** %9, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = sext i8 %60 to i32
  %62 = icmp eq i32 %61, 100
  %63 = zext i1 %62 to i64
  %64 = select i1 %62, i32 6, i32 5
  %65 = load i8*, i8** %5, align 8
  %66 = sext i32 %64 to i64
  %67 = getelementptr inbounds i8, i8* %65, i64 %66
  store i8* %67, i8** %5, align 8
  br label %68

68:                                               ; preds = %50, %32
  br label %87

69:                                               ; preds = %3
  %70 = load i8*, i8** %5, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 1
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %73, 110
  %75 = zext i1 %74 to i32
  store i32 %75, i32* %8, align 4
  %76 = load i32, i32* %8, align 4
  %77 = icmp ne i32 %76, 0
  %78 = zext i1 %77 to i64
  %79 = select i1 %77, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17.516, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.515, i64 0, i64 0)
  store i8* %79, i8** %9, align 8
  %80 = load i32, i32* %8, align 4
  %81 = icmp ne i32 %80, 0
  %82 = zext i1 %81 to i64
  %83 = select i1 %81, i32 5, i32 4
  %84 = load i8*, i8** %5, align 8
  %85 = sext i32 %83 to i64
  %86 = getelementptr inbounds i8, i8* %84, i64 %85
  store i8* %86, i8** %5, align 8
  br label %87

87:                                               ; preds = %69, %68
  %88 = load i8*, i8** %5, align 8
  %89 = call i8* (i8*, ...) bitcast (i8* (i8*)* @next_token to i8* (i8*, ...)*)(i8* %88)
  store i8* %89, i8** %5, align 8
  %90 = load i8*, i8** %9, align 8
  %91 = load i8, i8* %90, align 1
  %92 = sext i8 %91 to i32
  %93 = icmp eq i32 %92, 101
  br i1 %93, label %94, label %166

94:                                               ; preds = %87
  %95 = load i8*, i8** %5, align 8
  %96 = load i8, i8* %95, align 1
  %97 = sext i8 %96 to i32
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %94
  %100 = load i8*, i8** %6, align 8
  %101 = load i32, i32* %7, align 4
  %102 = load i8*, i8** %9, align 8
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_error to void (i8*, i32, i8*, i8*, ...)*)(i8* %100, i32 %101, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.37.558, i64 0, i64 0), i8* %102)
  br label %103

103:                                              ; preds = %99, %94
  %104 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %105 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %104, i32 0, i32 0
  %106 = load i32, i32* %105, align 8
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %103
  %109 = load i8*, i8** %6, align 8
  %110 = load i32, i32* %7, align 4
  %111 = load i8*, i8** %9, align 8
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, i8*, ...)*)(i8* %109, i32 %110, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38.559, i64 0, i64 0), i8* %111)
  br label %112

112:                                              ; preds = %108, %103
  %113 = load i32, i32* %8, align 4
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %115, label %120

115:                                              ; preds = %112
  %116 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %117 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %116, i32 0, i32 0
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, -1
  store i32 %119, i32* %117, align 8
  br label %144

120:                                              ; preds = %112
  %121 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %122 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %121, i32 0, i32 2
  %123 = load i8*, i8** %122, align 8
  %124 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %125 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %124, i32 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = sub i32 %126, 1
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds i8, i8* %123, i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = icmp ne i8 %130, 0
  %132 = xor i1 %131, true
  %133 = zext i1 %132 to i32
  %134 = trunc i32 %133 to i8
  %135 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %136 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %135, i32 0, i32 2
  %137 = load i8*, i8** %136, align 8
  %138 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %139 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %138, i32 0, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = sub i32 %140, 1
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %137, i64 %142
  store i8 %134, i8* %143, align 1
  br label %144

144:                                              ; preds = %120, %115
  store i32 0, i32* %10, align 4
  br label %145

145:                                              ; preds = %162, %144
  %146 = load i32, i32* %10, align 4
  %147 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %148 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %147, i32 0, i32 0
  %149 = load i32, i32* %148, align 8
  %150 = icmp ult i32 %146, %149
  br i1 %150, label %151, label %165

151:                                              ; preds = %145
  %152 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %153 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %152, i32 0, i32 2
  %154 = load i8*, i8** %153, align 8
  %155 = load i32, i32* %10, align 4
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds i8, i8* %154, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = icmp ne i8 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %151
  store i32 1, i32* %4, align 4
  br label %582

161:                                              ; preds = %151
  br label %162

162:                                              ; preds = %161
  %163 = load i32, i32* %10, align 4
  %164 = add i32 %163, 1
  store i32 %164, i32* %10, align 4
  br label %145

165:                                              ; preds = %145
  store i32 0, i32* %4, align 4
  br label %582

166:                                              ; preds = %87
  %167 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %168 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %167, i32 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %180

171:                                              ; preds = %166
  %172 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %173 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %172, i32 0, i32 1
  store i32 5, i32* %173, align 4
  %174 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %175 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %174, i32 0, i32 1
  %176 = load i32, i32* %175, align 4
  %177 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %176)
  %178 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %179 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %178, i32 0, i32 2
  store i8* %177, i8** %179, align 8
  br label %180

180:                                              ; preds = %171, %166
  %181 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %182 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %181, i32 0, i32 0
  %183 = load i32, i32* %182, align 8
  %184 = add i32 %183, 1
  store i32 %184, i32* %182, align 8
  %185 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %186 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %185, i32 0, i32 0
  %187 = load i32, i32* %186, align 8
  %188 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %189 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %188, i32 0, i32 1
  %190 = load i32, i32* %189, align 4
  %191 = icmp ugt i32 %187, %190
  br i1 %191, label %192, label %206

192:                                              ; preds = %180
  %193 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %194 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %193, i32 0, i32 1
  %195 = load i32, i32* %194, align 4
  %196 = add i32 %195, 5
  store i32 %196, i32* %194, align 4
  %197 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %198 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %197, i32 0, i32 2
  %199 = load i8*, i8** %198, align 8
  %200 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %201 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %200, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i32, ...)*)(i8* %199, i32 %202)
  %204 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %205 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %204, i32 0, i32 2
  store i8* %203, i8** %205, align 8
  br label %206

206:                                              ; preds = %192, %180
  %207 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %208 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %207, i32 0, i32 0
  %209 = load i32, i32* %208, align 8
  %210 = icmp ugt i32 %209, 1
  br i1 %210, label %211, label %234

211:                                              ; preds = %206
  %212 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %213 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %212, i32 0, i32 2
  %214 = load i8*, i8** %213, align 8
  %215 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %216 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %215, i32 0, i32 0
  %217 = load i32, i32* %216, align 8
  %218 = sub i32 %217, 2
  %219 = zext i32 %218 to i64
  %220 = getelementptr inbounds i8, i8* %214, i64 %219
  %221 = load i8, i8* %220, align 1
  %222 = sext i8 %221 to i32
  %223 = icmp ne i32 %222, 0
  br i1 %223, label %224, label %234

224:                                              ; preds = %211
  %225 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %226 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %225, i32 0, i32 2
  %227 = load i8*, i8** %226, align 8
  %228 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %229 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %228, i32 0, i32 0
  %230 = load i32, i32* %229, align 8
  %231 = sub i32 %230, 1
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds i8, i8* %227, i64 %232
  store i8 1, i8* %233, align 1
  br label %560

234:                                              ; preds = %211, %206
  %235 = load i8*, i8** %9, align 8
  %236 = load i32, i32* %8, align 4
  %237 = icmp ne i32 %236, 0
  %238 = zext i1 %237 to i64
  %239 = select i1 %237, i32 3, i32 2
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds i8, i8* %235, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = sext i8 %242 to i32
  %244 = icmp eq i32 %243, 100
  br i1 %244, label %245, label %290

245:                                              ; preds = %234
  %246 = load i8*, i8** %5, align 8
  %247 = call i8* (i8*, ...) bitcast (i8* (i8*)* @end_of_token to i8* (i8*, ...)*)(i8* %246)
  store i8* %247, i8** %12, align 8
  %248 = load i8*, i8** %12, align 8
  %249 = load i8*, i8** %5, align 8
  %250 = ptrtoint i8* %248 to i64
  %251 = ptrtoint i8* %249 to i64
  %252 = sub i64 %250, %251
  %253 = trunc i64 %252 to i32
  store i32 %253, i32* %10, align 4
  %254 = load i8*, i8** %12, align 8
  %255 = call i8* (i8*, ...) bitcast (i8* (i8*)* @next_token to i8* (i8*, ...)*)(i8* %254)
  store i8* %255, i8** %12, align 8
  %256 = load i8*, i8** %12, align 8
  %257 = load i8, i8* %256, align 1
  %258 = sext i8 %257 to i32
  %259 = icmp ne i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %245
  store i32 -1, i32* %4, align 4
  br label %582

261:                                              ; preds = %245
  %262 = load i8*, i8** %5, align 8
  %263 = load i32, i32* %10, align 4
  %264 = call %struct.variable* (i8*, i32, ...) bitcast (%struct.variable* (i8*, i32)* @lookup_variable to %struct.variable* (i8*, i32, ...)*)(i8* %262, i32 %263)
  store %struct.variable* %264, %struct.variable** %11, align 8
  %265 = load %struct.variable*, %struct.variable** %11, align 8
  %266 = icmp ne %struct.variable* %265, null
  br i1 %266, label %267, label %274

267:                                              ; preds = %261
  %268 = load %struct.variable*, %struct.variable** %11, align 8
  %269 = getelementptr inbounds %struct.variable, %struct.variable* %268, i32 0, i32 2
  %270 = load i8*, i8** %269, align 8
  %271 = load i8, i8* %270, align 1
  %272 = sext i8 %271 to i32
  %273 = icmp ne i32 %272, 0
  br label %274

274:                                              ; preds = %267, %261
  %275 = phi i1 [ false, %261 ], [ %273, %267 ]
  %276 = zext i1 %275 to i32
  %277 = load i32, i32* %8, align 4
  %278 = icmp eq i32 %276, %277
  %279 = zext i1 %278 to i32
  %280 = trunc i32 %279 to i8
  %281 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %282 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %281, i32 0, i32 2
  %283 = load i8*, i8** %282, align 8
  %284 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %285 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %284, i32 0, i32 0
  %286 = load i32, i32* %285, align 8
  %287 = sub i32 %286, 1
  %288 = zext i32 %287 to i64
  %289 = getelementptr inbounds i8, i8* %283, i64 %288
  store i8 %280, i8* %289, align 1
  br label %559

290:                                              ; preds = %234
  %291 = load i8*, i8** %5, align 8
  %292 = load i8, i8* %291, align 1
  %293 = sext i8 %292 to i32
  %294 = icmp eq i32 %293, 40
  br i1 %294, label %295, label %296

295:                                              ; preds = %290
  br label %300

296:                                              ; preds = %290
  %297 = load i8*, i8** %5, align 8
  %298 = load i8, i8* %297, align 1
  %299 = sext i8 %298 to i32
  br label %300

300:                                              ; preds = %296, %295
  %301 = phi i32 [ 44, %295 ], [ %299, %296 ]
  %302 = trunc i32 %301 to i8
  store i8 %302, i8* %16, align 1
  %303 = load i8, i8* %16, align 1
  %304 = sext i8 %303 to i32
  %305 = icmp ne i32 %304, 44
  br i1 %305, label %306, label %315

306:                                              ; preds = %300
  %307 = load i8, i8* %16, align 1
  %308 = sext i8 %307 to i32
  %309 = icmp ne i32 %308, 34
  br i1 %309, label %310, label %315

310:                                              ; preds = %306
  %311 = load i8, i8* %16, align 1
  %312 = sext i8 %311 to i32
  %313 = icmp ne i32 %312, 39
  br i1 %313, label %314, label %315

314:                                              ; preds = %310
  store i32 -1, i32* %4, align 4
  br label %582

315:                                              ; preds = %310, %306, %300
  %316 = load i8*, i8** %5, align 8
  %317 = getelementptr inbounds i8, i8* %316, i32 1
  store i8* %317, i8** %5, align 8
  store i8* %317, i8** %13, align 8
  %318 = load i8, i8* %16, align 1
  %319 = sext i8 %318 to i32
  %320 = icmp eq i32 %319, 44
  br i1 %320, label %321, label %359

321:                                              ; preds = %315
  store i32 0, i32* %17, align 4
  br label %322

322:                                              ; preds = %355, %321
  %323 = load i8*, i8** %5, align 8
  %324 = load i8, i8* %323, align 1
  %325 = sext i8 %324 to i32
  %326 = icmp ne i32 %325, 0
  br i1 %326, label %327, label %358

327:                                              ; preds = %322
  %328 = load i8*, i8** %5, align 8
  %329 = load i8, i8* %328, align 1
  %330 = sext i8 %329 to i32
  %331 = icmp eq i32 %330, 40
  br i1 %331, label %332, label %335

332:                                              ; preds = %327
  %333 = load i32, i32* %17, align 4
  %334 = add nsw i32 %333, 1
  store i32 %334, i32* %17, align 4
  br label %354

335:                                              ; preds = %327
  %336 = load i8*, i8** %5, align 8
  %337 = load i8, i8* %336, align 1
  %338 = sext i8 %337 to i32
  %339 = icmp eq i32 %338, 41
  br i1 %339, label %340, label %343

340:                                              ; preds = %335
  %341 = load i32, i32* %17, align 4
  %342 = add nsw i32 %341, -1
  store i32 %342, i32* %17, align 4
  br label %353

343:                                              ; preds = %335
  %344 = load i8*, i8** %5, align 8
  %345 = load i8, i8* %344, align 1
  %346 = sext i8 %345 to i32
  %347 = icmp eq i32 %346, 44
  br i1 %347, label %348, label %352

348:                                              ; preds = %343
  %349 = load i32, i32* %17, align 4
  %350 = icmp sle i32 %349, 0
  br i1 %350, label %351, label %352

351:                                              ; preds = %348
  br label %358

352:                                              ; preds = %348, %343
  br label %353

353:                                              ; preds = %352, %340
  br label %354

354:                                              ; preds = %353, %332
  br label %355

355:                                              ; preds = %354
  %356 = load i8*, i8** %5, align 8
  %357 = getelementptr inbounds i8, i8* %356, i32 1
  store i8* %357, i8** %5, align 8
  br label %322

358:                                              ; preds = %351, %322
  br label %378

359:                                              ; preds = %315
  br label %360

360:                                              ; preds = %374, %359
  %361 = load i8*, i8** %5, align 8
  %362 = load i8, i8* %361, align 1
  %363 = sext i8 %362 to i32
  %364 = icmp ne i32 %363, 0
  br i1 %364, label %365, label %372

365:                                              ; preds = %360
  %366 = load i8*, i8** %5, align 8
  %367 = load i8, i8* %366, align 1
  %368 = sext i8 %367 to i32
  %369 = load i8, i8* %16, align 1
  %370 = sext i8 %369 to i32
  %371 = icmp ne i32 %368, %370
  br label %372

372:                                              ; preds = %365, %360
  %373 = phi i1 [ false, %360 ], [ %371, %365 ]
  br i1 %373, label %374, label %377

374:                                              ; preds = %372
  %375 = load i8*, i8** %5, align 8
  %376 = getelementptr inbounds i8, i8* %375, i32 1
  store i8* %376, i8** %5, align 8
  br label %360

377:                                              ; preds = %372
  br label %378

378:                                              ; preds = %377, %358
  %379 = load i8*, i8** %5, align 8
  %380 = load i8, i8* %379, align 1
  %381 = sext i8 %380 to i32
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %384

383:                                              ; preds = %378
  store i32 -1, i32* %4, align 4
  br label %582

384:                                              ; preds = %378
  %385 = load i8*, i8** %5, align 8
  %386 = getelementptr inbounds i8, i8* %385, i32 1
  store i8* %386, i8** %5, align 8
  store i8 0, i8* %385, align 1
  %387 = load i8*, i8** %13, align 8
  %388 = call i8* (i8*, ...) bitcast (i8* (i8*)* @variable_expand to i8* (i8*, ...)*)(i8* %387)
  store i8* %388, i8** %14, align 8
  %389 = load i8*, i8** %14, align 8
  %390 = call i64 @strlen(i8* %389) #9
  %391 = trunc i64 %390 to i32
  store i32 %391, i32* %15, align 4
  %392 = load i32, i32* %15, align 4
  %393 = add i32 %392, 1
  %394 = zext i32 %393 to i64
  %395 = alloca i8, i64 %394, align 16
  store i8* %395, i8** %13, align 8
  %396 = load i8*, i8** %13, align 8
  %397 = load i8*, i8** %14, align 8
  %398 = load i32, i32* %15, align 4
  %399 = add i32 %398, 1
  %400 = zext i32 %399 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %396, i8* align 1 %397, i64 %400, i1 false)
  %401 = load i8, i8* %16, align 1
  %402 = sext i8 %401 to i32
  %403 = icmp ne i32 %402, 44
  br i1 %403, label %404, label %407

404:                                              ; preds = %384
  %405 = load i8*, i8** %5, align 8
  %406 = call i8* (i8*, ...) bitcast (i8* (i8*)* @next_token to i8* (i8*, ...)*)(i8* %405)
  store i8* %406, i8** %5, align 8
  br label %407

407:                                              ; preds = %404, %384
  %408 = load i8, i8* %16, align 1
  %409 = sext i8 %408 to i32
  %410 = icmp eq i32 %409, 44
  br i1 %410, label %411, label %412

411:                                              ; preds = %407
  br label %416

412:                                              ; preds = %407
  %413 = load i8*, i8** %5, align 8
  %414 = load i8, i8* %413, align 1
  %415 = sext i8 %414 to i32
  br label %416

416:                                              ; preds = %412, %411
  %417 = phi i32 [ 41, %411 ], [ %415, %412 ]
  %418 = trunc i32 %417 to i8
  store i8 %418, i8* %16, align 1
  %419 = load i8, i8* %16, align 1
  %420 = sext i8 %419 to i32
  %421 = icmp ne i32 %420, 41
  br i1 %421, label %422, label %431

422:                                              ; preds = %416
  %423 = load i8, i8* %16, align 1
  %424 = sext i8 %423 to i32
  %425 = icmp ne i32 %424, 34
  br i1 %425, label %426, label %431

426:                                              ; preds = %422
  %427 = load i8, i8* %16, align 1
  %428 = sext i8 %427 to i32
  %429 = icmp ne i32 %428, 39
  br i1 %429, label %430, label %431

430:                                              ; preds = %426
  store i32 -1, i32* %4, align 4
  br label %582

431:                                              ; preds = %426, %422, %416
  %432 = load i8, i8* %16, align 1
  %433 = sext i8 %432 to i32
  %434 = icmp eq i32 %433, 41
  br i1 %434, label %435, label %471

435:                                              ; preds = %431
  store i32 0, i32* %18, align 4
  %436 = load i8*, i8** %5, align 8
  %437 = call i8* (i8*, ...) bitcast (i8* (i8*)* @next_token to i8* (i8*, ...)*)(i8* %436)
  store i8* %437, i8** %14, align 8
  %438 = load i8*, i8** %14, align 8
  store i8* %438, i8** %5, align 8
  br label %439

439:                                              ; preds = %467, %435
  %440 = load i8*, i8** %5, align 8
  %441 = load i8, i8* %440, align 1
  %442 = sext i8 %441 to i32
  %443 = icmp ne i32 %442, 0
  br i1 %443, label %444, label %470

444:                                              ; preds = %439
  %445 = load i8*, i8** %5, align 8
  %446 = load i8, i8* %445, align 1
  %447 = sext i8 %446 to i32
  %448 = icmp eq i32 %447, 40
  br i1 %448, label %449, label %452

449:                                              ; preds = %444
  %450 = load i32, i32* %18, align 4
  %451 = add nsw i32 %450, 1
  store i32 %451, i32* %18, align 4
  br label %466

452:                                              ; preds = %444
  %453 = load i8*, i8** %5, align 8
  %454 = load i8, i8* %453, align 1
  %455 = sext i8 %454 to i32
  %456 = icmp eq i32 %455, 41
  br i1 %456, label %457, label %465

457:                                              ; preds = %452
  %458 = load i32, i32* %18, align 4
  %459 = icmp sle i32 %458, 0
  br i1 %459, label %460, label %461

460:                                              ; preds = %457
  br label %470

461:                                              ; preds = %457
  %462 = load i32, i32* %18, align 4
  %463 = add nsw i32 %462, -1
  store i32 %463, i32* %18, align 4
  br label %464

464:                                              ; preds = %461
  br label %465

465:                                              ; preds = %464, %452
  br label %466

466:                                              ; preds = %465, %449
  br label %467

467:                                              ; preds = %466
  %468 = load i8*, i8** %5, align 8
  %469 = getelementptr inbounds i8, i8* %468, i32 1
  store i8* %469, i8** %5, align 8
  br label %439

470:                                              ; preds = %460, %439
  br label %493

471:                                              ; preds = %431
  %472 = load i8*, i8** %5, align 8
  %473 = getelementptr inbounds i8, i8* %472, i32 1
  store i8* %473, i8** %5, align 8
  %474 = load i8*, i8** %5, align 8
  store i8* %474, i8** %14, align 8
  br label %475

475:                                              ; preds = %489, %471
  %476 = load i8*, i8** %5, align 8
  %477 = load i8, i8* %476, align 1
  %478 = sext i8 %477 to i32
  %479 = icmp ne i32 %478, 0
  br i1 %479, label %480, label %487

480:                                              ; preds = %475
  %481 = load i8*, i8** %5, align 8
  %482 = load i8, i8* %481, align 1
  %483 = sext i8 %482 to i32
  %484 = load i8, i8* %16, align 1
  %485 = sext i8 %484 to i32
  %486 = icmp ne i32 %483, %485
  br label %487

487:                                              ; preds = %480, %475
  %488 = phi i1 [ false, %475 ], [ %486, %480 ]
  br i1 %488, label %489, label %492

489:                                              ; preds = %487
  %490 = load i8*, i8** %5, align 8
  %491 = getelementptr inbounds i8, i8* %490, i32 1
  store i8* %491, i8** %5, align 8
  br label %475

492:                                              ; preds = %487
  br label %493

493:                                              ; preds = %492, %470
  %494 = load i8*, i8** %5, align 8
  %495 = load i8, i8* %494, align 1
  %496 = sext i8 %495 to i32
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %498, label %499

498:                                              ; preds = %493
  store i32 -1, i32* %4, align 4
  br label %582

499:                                              ; preds = %493
  %500 = load i8*, i8** %5, align 8
  store i8 0, i8* %500, align 1
  %501 = load i8*, i8** %5, align 8
  %502 = getelementptr inbounds i8, i8* %501, i32 1
  store i8* %502, i8** %5, align 8
  %503 = call i8* (i8*, ...) bitcast (i8* (i8*)* @next_token to i8* (i8*, ...)*)(i8* %502)
  store i8* %503, i8** %5, align 8
  %504 = load i8*, i8** %5, align 8
  %505 = load i8, i8* %504, align 1
  %506 = sext i8 %505 to i32
  %507 = icmp ne i32 %506, 0
  br i1 %507, label %508, label %512

508:                                              ; preds = %499
  %509 = load i8*, i8** %6, align 8
  %510 = load i32, i32* %7, align 4
  %511 = load i8*, i8** %9, align 8
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_error to void (i8*, i32, i8*, i8*, ...)*)(i8* %509, i32 %510, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.37.558, i64 0, i64 0), i8* %511)
  br label %512

512:                                              ; preds = %508, %499
  %513 = load i8*, i8** %14, align 8
  %514 = call i8* (i8*, ...) bitcast (i8* (i8*)* @variable_expand to i8* (i8*, ...)*)(i8* %513)
  store i8* %514, i8** %14, align 8
  %515 = load i8*, i8** %13, align 8
  %516 = load i8*, i8** %14, align 8
  %517 = icmp eq i8* %515, %516
  br i1 %517, label %543, label %518

518:                                              ; preds = %512
  %519 = load i8*, i8** %13, align 8
  %520 = load i8, i8* %519, align 1
  %521 = sext i8 %520 to i32
  %522 = load i8*, i8** %14, align 8
  %523 = load i8, i8* %522, align 1
  %524 = sext i8 %523 to i32
  %525 = icmp eq i32 %521, %524
  br i1 %525, label %526, label %541

526:                                              ; preds = %518
  %527 = load i8*, i8** %13, align 8
  %528 = load i8, i8* %527, align 1
  %529 = sext i8 %528 to i32
  %530 = icmp eq i32 %529, 0
  br i1 %530, label %539, label %531

531:                                              ; preds = %526
  %532 = load i8*, i8** %13, align 8
  %533 = getelementptr inbounds i8, i8* %532, i64 1
  %534 = load i8*, i8** %14, align 8
  %535 = getelementptr inbounds i8, i8* %534, i64 1
  %536 = call i32 @strcmp(i8* %533, i8* %535) #9
  %537 = icmp ne i32 %536, 0
  %538 = xor i1 %537, true
  br label %539

539:                                              ; preds = %531, %526
  %540 = phi i1 [ true, %526 ], [ %538, %531 ]
  br label %541

541:                                              ; preds = %539, %518
  %542 = phi i1 [ false, %518 ], [ %540, %539 ]
  br label %543

543:                                              ; preds = %541, %512
  %544 = phi i1 [ true, %512 ], [ %542, %541 ]
  %545 = zext i1 %544 to i32
  %546 = load i32, i32* %8, align 4
  %547 = icmp eq i32 %545, %546
  %548 = zext i1 %547 to i32
  %549 = trunc i32 %548 to i8
  %550 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %551 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %550, i32 0, i32 2
  %552 = load i8*, i8** %551, align 8
  %553 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %554 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %553, i32 0, i32 0
  %555 = load i32, i32* %554, align 8
  %556 = sub i32 %555, 1
  %557 = zext i32 %556 to i64
  %558 = getelementptr inbounds i8, i8* %552, i64 %557
  store i8 %549, i8* %558, align 1
  br label %559

559:                                              ; preds = %543, %274
  br label %560

560:                                              ; preds = %559, %224
  store i32 0, i32* %10, align 4
  br label %561

561:                                              ; preds = %578, %560
  %562 = load i32, i32* %10, align 4
  %563 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %564 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %563, i32 0, i32 0
  %565 = load i32, i32* %564, align 8
  %566 = icmp ult i32 %562, %565
  br i1 %566, label %567, label %581

567:                                              ; preds = %561
  %568 = load %struct.conditionals*, %struct.conditionals** @conditionals, align 8
  %569 = getelementptr inbounds %struct.conditionals, %struct.conditionals* %568, i32 0, i32 2
  %570 = load i8*, i8** %569, align 8
  %571 = load i32, i32* %10, align 4
  %572 = zext i32 %571 to i64
  %573 = getelementptr inbounds i8, i8* %570, i64 %572
  %574 = load i8, i8* %573, align 1
  %575 = icmp ne i8 %574, 0
  br i1 %575, label %576, label %577

576:                                              ; preds = %567
  store i32 1, i32* %4, align 4
  br label %582

577:                                              ; preds = %567
  br label %578

578:                                              ; preds = %577
  %579 = load i32, i32* %10, align 4
  %580 = add i32 %579, 1
  store i32 %580, i32* %10, align 4
  br label %561

581:                                              ; preds = %561
  store i32 0, i32* %4, align 4
  br label %582

582:                                              ; preds = %581, %576, %498, %430, %383, %314, %260, %165, %160
  %583 = load i32, i32* %4, align 4
  ret i32 %583
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @do_define(i8* %0, i32 %1, i32 %2, i32 %3, %struct._IO_FILE* %4, i8* %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct._IO_FILE*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %struct.linebuffer, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  store i8* %0, i8** %8, align 8
  store i32 %1, i32* %9, align 4
  store i32 %2, i32* %10, align 4
  store i32 %3, i32* %11, align 4
  store %struct._IO_FILE* %4, %struct._IO_FILE** %12, align 8
  store i8* %5, i8** %13, align 8
  store i32 0, i32* %15, align 4
  store i32 100, i32* %16, align 4
  %21 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 100)
  store i8* %21, i8** %17, align 8
  store i32 0, i32* %18, align 4
  %22 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %14, i32 0, i32 0
  store i32 200, i32* %22, align 8
  %23 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 200)
  %24 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %14, i32 0, i32 1
  store i8* %23, i8** %24, align 8
  br label %25

25:                                               ; preds = %130, %6
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %27 = call i32 @feof(%struct._IO_FILE* %26) #10
  %28 = icmp ne i32 %27, 0
  %29 = xor i1 %28, true
  br i1 %29, label %30, label %131

30:                                               ; preds = %25
  %31 = load i32, i32* %15, align 4
  %32 = load i32, i32* %11, align 4
  %33 = add i32 %32, %31
  store i32 %33, i32* %11, align 4
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %35 = load i8*, i8** %13, align 8
  %36 = call i32 @readline(%struct.linebuffer* %14, %struct._IO_FILE* %34, i8* %35)
  store i32 %36, i32* %15, align 4
  %37 = getelementptr inbounds %struct.linebuffer, %struct.linebuffer* %14, i32 0, i32 1
  %38 = load i8*, i8** %37, align 8
  %39 = call i8* (i8*, ...) bitcast (i8* (i8*)* @next_token to i8* (i8*, ...)*)(i8* %38)
  store i8* %39, i8** %19, align 8
  %40 = load i8*, i8** %19, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 5
  %42 = load i8, i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %58, label %45

45:                                               ; preds = %30
  %46 = call i16** @__ctype_b_loc() #11
  %47 = load i16*, i16** %46, align 8
  %48 = load i8*, i8** %19, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 5
  %50 = load i8, i8* %49, align 1
  %51 = sext i8 %50 to i32
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i16, i16* %47, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = zext i16 %54 to i32
  %56 = and i32 %55, 1
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %95

58:                                               ; preds = %45, %30
  %59 = load i8*, i8** %19, align 8
  %60 = call i32 @strncmp(i8* %59, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21.520, i64 0, i64 0), i64 5) #9
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %95, label %62

62:                                               ; preds = %58
  %63 = load i8*, i8** %19, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 5
  store i8* %64, i8** %19, align 8
  %65 = load i8*, i8** %19, align 8
  call void (i8*, ...) bitcast (void (i8*)* @collapse_continuations to void (i8*, ...)*)(i8* %65)
  %66 = load i8*, i8** %19, align 8
  call void (i8*, ...) bitcast (void (i8*)* @remove_comments to void (i8*, ...)*)(i8* %66)
  %67 = load i8*, i8** %19, align 8
  %68 = call i8* (i8*, ...) bitcast (i8* (i8*)* @next_token to i8* (i8*, ...)*)(i8* %67)
  %69 = load i8, i8* %68, align 1
  %70 = sext i8 %69 to i32
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %62
  %73 = load i8*, i8** %13, align 8
  %74 = load i32, i32* %11, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_error to void (i8*, i32, i8*, ...)*)(i8* %73, i32 %74, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.39.556, i64 0, i64 0))
  br label %75

75:                                               ; preds = %72, %62
  %76 = load i32, i32* %18, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %75
  %79 = load i8*, i8** %17, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 0
  store i8 0, i8* %80, align 1
  br label %87

81:                                               ; preds = %75
  %82 = load i8*, i8** %17, align 8
  %83 = load i32, i32* %18, align 4
  %84 = sub i32 %83, 1
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %82, i64 %85
  store i8 0, i8* %86, align 1
  br label %87

87:                                               ; preds = %81, %78
  %88 = load i8*, i8** %8, align 8
  %89 = load i32, i32* %9, align 4
  %90 = load i8*, i8** %17, align 8
  %91 = load i32, i32* %10, align 4
  %92 = call %struct.variable* (i8*, i32, i8*, i32, i32, ...) bitcast (%struct.variable* (i8*, i32, i8*, i32, i32)* @define_variable to %struct.variable* (i8*, i32, i8*, i32, i32, ...)*)(i8* %88, i32 %89, i8* %90, i32 %91, i32 1)
  %93 = load i8*, i8** %17, align 8
  call void @free(i8* %93) #10
  %94 = load i32, i32* %11, align 4
  store i32 %94, i32* %7, align 4
  br label %134

95:                                               ; preds = %58, %45
  %96 = load i8*, i8** %19, align 8
  %97 = call i64 @strlen(i8* %96) #9
  %98 = trunc i64 %97 to i32
  store i32 %98, i32* %20, align 4
  %99 = load i32, i32* %18, align 4
  %100 = load i32, i32* %20, align 4
  %101 = add i32 %99, %100
  %102 = add i32 %101, 1
  %103 = load i32, i32* %16, align 4
  %104 = icmp ugt i32 %102, %103
  br i1 %104, label %105, label %114

105:                                              ; preds = %95
  %106 = load i32, i32* %18, align 4
  %107 = load i32, i32* %20, align 4
  %108 = add i32 %106, %107
  %109 = mul i32 %108, 2
  store i32 %109, i32* %16, align 4
  %110 = load i8*, i8** %17, align 8
  %111 = load i32, i32* %16, align 4
  %112 = add i32 %111, 1
  %113 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i32, ...)*)(i8* %110, i32 %112)
  store i8* %113, i8** %17, align 8
  br label %114

114:                                              ; preds = %105, %95
  %115 = load i8*, i8** %17, align 8
  %116 = load i32, i32* %18, align 4
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %115, i64 %117
  %119 = load i8*, i8** %19, align 8
  %120 = load i32, i32* %20, align 4
  %121 = zext i32 %120 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %118, i8* align 1 %119, i64 %121, i1 false)
  %122 = load i32, i32* %20, align 4
  %123 = load i32, i32* %18, align 4
  %124 = add i32 %123, %122
  store i32 %124, i32* %18, align 4
  %125 = load i8*, i8** %17, align 8
  %126 = load i32, i32* %18, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %18, align 4
  %128 = zext i32 %126 to i64
  %129 = getelementptr inbounds i8, i8* %125, i64 %128
  store i8 10, i8* %129, align 1
  br label %130

130:                                              ; preds = %114
  br label %25

131:                                              ; preds = %25
  %132 = load i8*, i8** %13, align 8
  %133 = load i32, i32* %11, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, ...)*)(i8* %132, i32 %133, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.40.557, i64 0, i64 0))
  store i32 0, i32* %7, align 4
  br label %134

134:                                              ; preds = %131, %87
  %135 = load i32, i32* %7, align 4
  ret i32 %135
}

; Function Attrs: noinline nounwind uwtable
define internal void @record_files(%struct.nameseq* %0, i8* %1, i8* %2, %struct.dep* %3, i32 %4, i8* %5, i32 %6, i32 %7, i8* %8, i32 %9, i32 %10) #0 {
  %12 = alloca %struct.nameseq*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca %struct.dep*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %struct.nameseq*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i8**, align 8
  %28 = alloca i8**, align 8
  %29 = alloca %struct.commands*, align 8
  %30 = alloca i8*, align 8
  %31 = alloca %struct.file*, align 8
  %32 = alloca %struct.dep*, align 8
  %33 = alloca %struct.dep*, align 8
  %34 = alloca i8*, align 8
  %35 = alloca i8*, align 8
  %36 = alloca i8*, align 8
  %37 = alloca i8*, align 8
  %38 = alloca i8*, align 8
  %39 = alloca i8*, align 8
  %40 = alloca i32, align 4
  %41 = alloca %struct.dep*, align 8
  %42 = alloca i32, align 4
  store %struct.nameseq* %0, %struct.nameseq** %12, align 8
  store i8* %1, i8** %13, align 8
  store i8* %2, i8** %14, align 8
  store %struct.dep* %3, %struct.dep** %15, align 8
  store i32 %4, i32* %16, align 4
  store i8* %5, i8** %17, align 8
  store i32 %6, i32* %18, align 4
  store i32 %7, i32* %19, align 4
  store i8* %8, i8** %20, align 8
  store i32 %9, i32* %21, align 4
  store i32 %10, i32* %22, align 4
  store i32 0, i32* %24, align 4
  store i8** null, i8*** %27, align 8
  store i8** null, i8*** %28, align 8
  %43 = load i32, i32* %18, align 4
  %44 = icmp ugt i32 %43, 0
  br i1 %44, label %45, label %61

45:                                               ; preds = %11
  %46 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 56)
  %47 = bitcast i8* %46 to %struct.commands*
  store %struct.commands* %47, %struct.commands** %29, align 8
  %48 = load i8*, i8** %20, align 8
  %49 = load %struct.commands*, %struct.commands** %29, align 8
  %50 = getelementptr inbounds %struct.commands, %struct.commands* %49, i32 0, i32 0
  store i8* %48, i8** %50, align 8
  %51 = load i32, i32* %16, align 4
  %52 = load %struct.commands*, %struct.commands** %29, align 8
  %53 = getelementptr inbounds %struct.commands, %struct.commands* %52, i32 0, i32 1
  store i32 %51, i32* %53, align 8
  %54 = load i8*, i8** %17, align 8
  %55 = load i32, i32* %18, align 4
  %56 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i32, ...)*)(i8* %54, i32 %55)
  %57 = load %struct.commands*, %struct.commands** %29, align 8
  %58 = getelementptr inbounds %struct.commands, %struct.commands* %57, i32 0, i32 2
  store i8* %56, i8** %58, align 8
  %59 = load %struct.commands*, %struct.commands** %29, align 8
  %60 = getelementptr inbounds %struct.commands, %struct.commands* %59, i32 0, i32 4
  store i8** null, i8*** %60, align 8
  br label %62

61:                                               ; preds = %11
  store %struct.commands* null, %struct.commands** %29, align 8
  br label %62

62:                                               ; preds = %61, %45
  br label %63

63:                                               ; preds = %712, %62
  %64 = load %struct.nameseq*, %struct.nameseq** %12, align 8
  %65 = icmp ne %struct.nameseq* %64, null
  br i1 %65, label %66, label %714

66:                                               ; preds = %63
  %67 = load %struct.nameseq*, %struct.nameseq** %12, align 8
  %68 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %67, i32 0, i32 1
  %69 = load i8*, i8** %68, align 8
  store i8* %69, i8** %30, align 8
  %70 = load %struct.nameseq*, %struct.nameseq** %12, align 8
  %71 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %70, i32 0, i32 0
  %72 = load %struct.nameseq*, %struct.nameseq** %71, align 8
  store %struct.nameseq* %72, %struct.nameseq** %23, align 8
  %73 = load %struct.nameseq*, %struct.nameseq** %12, align 8
  %74 = bitcast %struct.nameseq* %73 to i8*
  call void @free(i8* %74) #10
  %75 = load i8*, i8** %30, align 8
  %76 = call i8* @find_percent(i8* %75)
  store i8* %76, i8** %34, align 8
  %77 = load i8*, i8** %34, align 8
  %78 = icmp ne i8* %77, null
  %79 = zext i1 %78 to i32
  %80 = load i32, i32* %24, align 4
  %81 = or i32 %80, %79
  store i32 %81, i32* %24, align 4
  %82 = load i32, i32* %24, align 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %90

84:                                               ; preds = %66
  %85 = load i8*, i8** %13, align 8
  %86 = icmp ne i8* %85, null
  br i1 %86, label %87, label %90

87:                                               ; preds = %84
  %88 = load i8*, i8** %20, align 8
  %89 = load i32, i32* %21, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, ...)*)(i8* %88, i32 %89, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.41.546, i64 0, i64 0))
  br label %90

90:                                               ; preds = %87, %84, %66
  %91 = load i32, i32* %24, align 4
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %99

93:                                               ; preds = %90
  %94 = load i8*, i8** %34, align 8
  %95 = icmp eq i8* %94, null
  br i1 %95, label %96, label %99

96:                                               ; preds = %93
  %97 = load i8*, i8** %20, align 8
  %98 = load i32, i32* %21, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, ...)*)(i8* %97, i32 %98, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.42.547, i64 0, i64 0))
  br label %99

99:                                               ; preds = %96, %93, %90
  %100 = load i32, i32* %24, align 4
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %102, label %146

102:                                              ; preds = %99
  %103 = load i8**, i8*** %27, align 8
  %104 = icmp eq i8** %103, null
  br i1 %104, label %105, label %110

105:                                              ; preds = %102
  store i32 5, i32* %25, align 4
  %106 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 40)
  %107 = bitcast i8* %106 to i8**
  store i8** %107, i8*** %27, align 8
  %108 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 40)
  %109 = bitcast i8* %108 to i8**
  store i8** %109, i8*** %28, align 8
  store i32 0, i32* %26, align 4
  br label %133

110:                                              ; preds = %102
  %111 = load i32, i32* %26, align 4
  %112 = load i32, i32* %25, align 4
  %113 = sub i32 %112, 1
  %114 = icmp eq i32 %111, %113
  br i1 %114, label %115, label %132

115:                                              ; preds = %110
  %116 = load i32, i32* %25, align 4
  %117 = add i32 %116, 5
  store i32 %117, i32* %25, align 4
  %118 = load i8**, i8*** %27, align 8
  %119 = bitcast i8** %118 to i8*
  %120 = load i32, i32* %25, align 4
  %121 = zext i32 %120 to i64
  %122 = mul i64 %121, 8
  %123 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i64, ...)*)(i8* %119, i64 %122)
  %124 = bitcast i8* %123 to i8**
  store i8** %124, i8*** %27, align 8
  %125 = load i8**, i8*** %28, align 8
  %126 = bitcast i8** %125 to i8*
  %127 = load i32, i32* %25, align 4
  %128 = zext i32 %127 to i64
  %129 = mul i64 %128, 8
  %130 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i64, ...)*)(i8* %126, i64 %129)
  %131 = bitcast i8* %130 to i8**
  store i8** %131, i8*** %28, align 8
  br label %132

132:                                              ; preds = %115, %110
  br label %133

133:                                              ; preds = %132, %105
  %134 = load i8*, i8** %30, align 8
  %135 = load i8**, i8*** %27, align 8
  %136 = load i32, i32* %26, align 4
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds i8*, i8** %135, i64 %137
  store i8* %134, i8** %138, align 8
  %139 = load i8*, i8** %34, align 8
  %140 = load i8**, i8*** %28, align 8
  %141 = load i32, i32* %26, align 4
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds i8*, i8** %140, i64 %142
  store i8* %139, i8** %143, align 8
  %144 = load i32, i32* %26, align 4
  %145 = add i32 %144, 1
  store i32 %145, i32* %26, align 4
  br label %712

146:                                              ; preds = %99
  %147 = load %struct.nameseq*, %struct.nameseq** %23, align 8
  %148 = icmp ne %struct.nameseq* %147, null
  br i1 %148, label %149, label %152

149:                                              ; preds = %146
  %150 = load %struct.dep*, %struct.dep** %15, align 8
  %151 = call %struct.dep* (%struct.dep*, ...) bitcast (%struct.dep* (%struct.dep*)* @copy_dep_chain to %struct.dep* (%struct.dep*, ...)*)(%struct.dep* %150)
  br label %154

152:                                              ; preds = %146
  %153 = load %struct.dep*, %struct.dep** %15, align 8
  br label %154

154:                                              ; preds = %152, %149
  %155 = phi %struct.dep* [ %151, %149 ], [ %153, %152 ]
  store %struct.dep* %155, %struct.dep** %33, align 8
  %156 = load i8*, i8** %13, align 8
  %157 = icmp ne i8* %156, null
  br i1 %157, label %158, label %209

158:                                              ; preds = %154
  %159 = load i8*, i8** %13, align 8
  %160 = load i8*, i8** %14, align 8
  %161 = load i8*, i8** %30, align 8
  %162 = call i32 (i8*, i8*, i8*, ...) bitcast (i32 (i8*, i8*, i8*)* @pattern_matches to i32 (i8*, i8*, i8*, ...)*)(i8* %159, i8* %160, i8* %161)
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %167, label %164

164:                                              ; preds = %158
  %165 = load i8*, i8** %20, align 8
  %166 = load i32, i32* %21, align 4
  call void (i8*, i32, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_error to void (i8*, i32, i8*, ...)*)(i8* %165, i32 %166, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.43.548, i64 0, i64 0))
  store %struct.dep* null, %struct.dep** %33, align 8
  br label %208

167:                                              ; preds = %158
  %168 = call i8* (i8*, ...) bitcast (i8* (i8*)* @variable_expand to i8* (i8*, ...)*)(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7.544, i64 0, i64 0))
  store i8* %168, i8** %35, align 8
  %169 = load %struct.dep*, %struct.dep** %33, align 8
  store %struct.dep* %169, %struct.dep** %32, align 8
  br label %170

170:                                              ; preds = %203, %167
  %171 = load %struct.dep*, %struct.dep** %32, align 8
  %172 = icmp ne %struct.dep* %171, null
  br i1 %172, label %173, label %207

173:                                              ; preds = %170
  %174 = load %struct.dep*, %struct.dep** %32, align 8
  %175 = getelementptr inbounds %struct.dep, %struct.dep* %174, i32 0, i32 1
  %176 = load i8*, i8** %175, align 8
  %177 = call i8* @find_percent(i8* %176)
  store i8* %177, i8** %37, align 8
  %178 = load i8*, i8** %37, align 8
  %179 = icmp eq i8* %178, null
  br i1 %179, label %180, label %181

180:                                              ; preds = %173
  br label %203

181:                                              ; preds = %173
  %182 = load i8*, i8** %35, align 8
  %183 = load i8*, i8** %30, align 8
  %184 = load i8*, i8** %13, align 8
  %185 = load %struct.dep*, %struct.dep** %32, align 8
  %186 = getelementptr inbounds %struct.dep, %struct.dep* %185, i32 0, i32 1
  %187 = load i8*, i8** %186, align 8
  %188 = load i8*, i8** %14, align 8
  %189 = load i8*, i8** %37, align 8
  %190 = call i8* (i8*, i8*, i8*, i8*, i8*, i8*, ...) bitcast (i8* (i8*, i8*, i8*, i8*, i8*, i8*)* @patsubst_expand to i8* (i8*, i8*, i8*, i8*, i8*, i8*, ...)*)(i8* %182, i8* %183, i8* %184, i8* %187, i8* %188, i8* %189)
  store i8* %190, i8** %36, align 8
  %191 = load %struct.dep*, %struct.dep** %32, align 8
  %192 = getelementptr inbounds %struct.dep, %struct.dep* %191, i32 0, i32 1
  %193 = load i8*, i8** %192, align 8
  call void @free(i8* %193) #10
  %194 = load i8*, i8** %35, align 8
  %195 = load i8*, i8** %36, align 8
  %196 = load i8*, i8** %35, align 8
  %197 = ptrtoint i8* %195 to i64
  %198 = ptrtoint i8* %196 to i64
  %199 = sub i64 %197, %198
  %200 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %194, i64 %199)
  %201 = load %struct.dep*, %struct.dep** %32, align 8
  %202 = getelementptr inbounds %struct.dep, %struct.dep* %201, i32 0, i32 1
  store i8* %200, i8** %202, align 8
  br label %203

203:                                              ; preds = %181, %180
  %204 = load %struct.dep*, %struct.dep** %32, align 8
  %205 = getelementptr inbounds %struct.dep, %struct.dep* %204, i32 0, i32 0
  %206 = load %struct.dep*, %struct.dep** %205, align 8
  store %struct.dep* %206, %struct.dep** %32, align 8
  br label %170

207:                                              ; preds = %170
  br label %208

208:                                              ; preds = %207, %164
  br label %209

209:                                              ; preds = %208, %154
  %210 = load i32, i32* %19, align 4
  %211 = icmp ne i32 %210, 0
  br i1 %211, label %370, label %212

212:                                              ; preds = %209
  %213 = load i8*, i8** %30, align 8
  %214 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* %213)
  store %struct.file* %214, %struct.file** %31, align 8
  %215 = load %struct.file*, %struct.file** %31, align 8
  %216 = getelementptr inbounds %struct.file, %struct.file* %215, i32 0, i32 12
  %217 = load i16, i16* %216, align 2
  %218 = lshr i16 %217, 2
  %219 = and i16 %218, 1
  %220 = zext i16 %219 to i32
  %221 = icmp ne i32 %220, 0
  br i1 %221, label %222, label %228

222:                                              ; preds = %212
  %223 = load i8*, i8** %20, align 8
  %224 = load i32, i32* %21, align 4
  %225 = load %struct.file*, %struct.file** %31, align 8
  %226 = getelementptr inbounds %struct.file, %struct.file* %225, i32 0, i32 1
  %227 = load i8*, i8** %226, align 8
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, i8*, ...)*)(i8* %223, i32 %224, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.44.549, i64 0, i64 0), i8* %227)
  br label %228

228:                                              ; preds = %222, %212
  %229 = load %struct.commands*, %struct.commands** %29, align 8
  %230 = icmp ne %struct.commands* %229, null
  br i1 %230, label %231, label %243

231:                                              ; preds = %228
  %232 = load %struct.commands*, %struct.commands** %29, align 8
  %233 = load %struct.file*, %struct.file** %31, align 8
  %234 = getelementptr inbounds %struct.file, %struct.file* %233, i32 0, i32 3
  %235 = load %struct.commands*, %struct.commands** %234, align 8
  %236 = icmp eq %struct.commands* %232, %235
  br i1 %236, label %237, label %243

237:                                              ; preds = %231
  %238 = load i8*, i8** %20, align 8
  %239 = load i32, i32* %21, align 4
  %240 = load %struct.file*, %struct.file** %31, align 8
  %241 = getelementptr inbounds %struct.file, %struct.file* %240, i32 0, i32 1
  %242 = load i8*, i8** %241, align 8
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_error to void (i8*, i32, i8*, i8*, ...)*)(i8* %238, i32 %239, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.45.550, i64 0, i64 0), i8* %242)
  br label %283

243:                                              ; preds = %231, %228
  %244 = load %struct.commands*, %struct.commands** %29, align 8
  %245 = icmp ne %struct.commands* %244, null
  br i1 %245, label %246, label %282

246:                                              ; preds = %243
  %247 = load %struct.file*, %struct.file** %31, align 8
  %248 = getelementptr inbounds %struct.file, %struct.file* %247, i32 0, i32 3
  %249 = load %struct.commands*, %struct.commands** %248, align 8
  %250 = icmp ne %struct.commands* %249, null
  br i1 %250, label %251, label %282

251:                                              ; preds = %246
  %252 = load %struct.file*, %struct.file** %31, align 8
  %253 = getelementptr inbounds %struct.file, %struct.file* %252, i32 0, i32 12
  %254 = load i16, i16* %253, align 2
  %255 = lshr i16 %254, 7
  %256 = and i16 %255, 1
  %257 = zext i16 %256 to i32
  %258 = icmp ne i32 %257, 0
  br i1 %258, label %259, label %282

259:                                              ; preds = %251
  %260 = load %struct.commands*, %struct.commands** %29, align 8
  %261 = getelementptr inbounds %struct.commands, %struct.commands* %260, i32 0, i32 0
  %262 = load i8*, i8** %261, align 8
  %263 = load %struct.commands*, %struct.commands** %29, align 8
  %264 = getelementptr inbounds %struct.commands, %struct.commands* %263, i32 0, i32 1
  %265 = load i32, i32* %264, align 8
  %266 = load %struct.file*, %struct.file** %31, align 8
  %267 = getelementptr inbounds %struct.file, %struct.file* %266, i32 0, i32 1
  %268 = load i8*, i8** %267, align 8
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_error to void (i8*, i32, i8*, i8*, ...)*)(i8* %262, i32 %265, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.46.551, i64 0, i64 0), i8* %268)
  %269 = load %struct.file*, %struct.file** %31, align 8
  %270 = getelementptr inbounds %struct.file, %struct.file* %269, i32 0, i32 3
  %271 = load %struct.commands*, %struct.commands** %270, align 8
  %272 = getelementptr inbounds %struct.commands, %struct.commands* %271, i32 0, i32 0
  %273 = load i8*, i8** %272, align 8
  %274 = load %struct.file*, %struct.file** %31, align 8
  %275 = getelementptr inbounds %struct.file, %struct.file* %274, i32 0, i32 3
  %276 = load %struct.commands*, %struct.commands** %275, align 8
  %277 = getelementptr inbounds %struct.commands, %struct.commands* %276, i32 0, i32 1
  %278 = load i32, i32* %277, align 8
  %279 = load %struct.file*, %struct.file** %31, align 8
  %280 = getelementptr inbounds %struct.file, %struct.file* %279, i32 0, i32 1
  %281 = load i8*, i8** %280, align 8
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_error to void (i8*, i32, i8*, i8*, ...)*)(i8* %273, i32 %278, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.47.552, i64 0, i64 0), i8* %281)
  br label %282

282:                                              ; preds = %259, %251, %246, %243
  br label %283

283:                                              ; preds = %282, %237
  %284 = load %struct.file*, %struct.file** %31, align 8
  %285 = getelementptr inbounds %struct.file, %struct.file* %284, i32 0, i32 12
  %286 = load i16, i16* %285, align 2
  %287 = and i16 %286, -129
  %288 = or i16 %287, 128
  store i16 %288, i16* %285, align 2
  %289 = load %struct.file*, %struct.file** %31, align 8
  %290 = load %struct.file*, %struct.file** @default_file, align 8
  %291 = icmp eq %struct.file* %289, %290
  br i1 %291, label %292, label %301

292:                                              ; preds = %283
  %293 = load %struct.dep*, %struct.dep** %33, align 8
  %294 = icmp eq %struct.dep* %293, null
  br i1 %294, label %295, label %301

295:                                              ; preds = %292
  %296 = load %struct.commands*, %struct.commands** %29, align 8
  %297 = icmp eq %struct.commands* %296, null
  br i1 %297, label %298, label %301

298:                                              ; preds = %295
  %299 = load %struct.file*, %struct.file** %31, align 8
  %300 = getelementptr inbounds %struct.file, %struct.file* %299, i32 0, i32 3
  store %struct.commands* null, %struct.commands** %300, align 8
  br label %301

301:                                              ; preds = %298, %295, %292, %283
  %302 = load %struct.commands*, %struct.commands** %29, align 8
  %303 = icmp ne %struct.commands* %302, null
  br i1 %303, label %304, label %308

304:                                              ; preds = %301
  %305 = load %struct.commands*, %struct.commands** %29, align 8
  %306 = load %struct.file*, %struct.file** %31, align 8
  %307 = getelementptr inbounds %struct.file, %struct.file* %306, i32 0, i32 3
  store %struct.commands* %305, %struct.commands** %307, align 8
  br label %308

308:                                              ; preds = %304, %301
  %309 = load %struct.file*, %struct.file** %31, align 8
  %310 = load %struct.file*, %struct.file** @suffix_file, align 8
  %311 = icmp eq %struct.file* %309, %310
  br i1 %311, label %312, label %318

312:                                              ; preds = %308
  %313 = load %struct.dep*, %struct.dep** %33, align 8
  %314 = icmp eq %struct.dep* %313, null
  br i1 %314, label %315, label %318

315:                                              ; preds = %312
  %316 = load %struct.file*, %struct.file** %31, align 8
  %317 = getelementptr inbounds %struct.file, %struct.file* %316, i32 0, i32 2
  store %struct.dep* null, %struct.dep** %317, align 8
  br label %345

318:                                              ; preds = %312, %308
  %319 = load %struct.file*, %struct.file** %31, align 8
  %320 = getelementptr inbounds %struct.file, %struct.file* %319, i32 0, i32 2
  %321 = load %struct.dep*, %struct.dep** %320, align 8
  %322 = icmp ne %struct.dep* %321, null
  br i1 %322, label %323, label %340

323:                                              ; preds = %318
  %324 = load %struct.file*, %struct.file** %31, align 8
  %325 = getelementptr inbounds %struct.file, %struct.file* %324, i32 0, i32 2
  %326 = load %struct.dep*, %struct.dep** %325, align 8
  store %struct.dep* %326, %struct.dep** %32, align 8
  br label %327

327:                                              ; preds = %332, %323
  %328 = load %struct.dep*, %struct.dep** %32, align 8
  %329 = getelementptr inbounds %struct.dep, %struct.dep* %328, i32 0, i32 0
  %330 = load %struct.dep*, %struct.dep** %329, align 8
  %331 = icmp ne %struct.dep* %330, null
  br i1 %331, label %332, label %336

332:                                              ; preds = %327
  %333 = load %struct.dep*, %struct.dep** %32, align 8
  %334 = getelementptr inbounds %struct.dep, %struct.dep* %333, i32 0, i32 0
  %335 = load %struct.dep*, %struct.dep** %334, align 8
  store %struct.dep* %335, %struct.dep** %32, align 8
  br label %327

336:                                              ; preds = %327
  %337 = load %struct.dep*, %struct.dep** %33, align 8
  %338 = load %struct.dep*, %struct.dep** %32, align 8
  %339 = getelementptr inbounds %struct.dep, %struct.dep* %338, i32 0, i32 0
  store %struct.dep* %337, %struct.dep** %339, align 8
  br label %344

340:                                              ; preds = %318
  %341 = load %struct.dep*, %struct.dep** %33, align 8
  %342 = load %struct.file*, %struct.file** %31, align 8
  %343 = getelementptr inbounds %struct.file, %struct.file* %342, i32 0, i32 2
  store %struct.dep* %341, %struct.dep** %343, align 8
  br label %344

344:                                              ; preds = %340, %336
  br label %345

345:                                              ; preds = %344, %315
  %346 = load %struct.file*, %struct.file** %31, align 8
  %347 = getelementptr inbounds %struct.file, %struct.file* %346, i32 0, i32 2
  %348 = load %struct.dep*, %struct.dep** %347, align 8
  call void @uniquize_deps(%struct.dep* %348)
  %349 = load i8*, i8** %13, align 8
  %350 = icmp ne i8* %349, null
  br i1 %350, label %351, label %369

351:                                              ; preds = %345
  %352 = call i8* (i8*, ...) bitcast (i8* (i8*)* @variable_expand to i8* (i8*, ...)*)(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7.544, i64 0, i64 0))
  store i8* %352, i8** %38, align 8
  %353 = load i8*, i8** %38, align 8
  %354 = load i8*, i8** %30, align 8
  %355 = load i8*, i8** %13, align 8
  %356 = load i8*, i8** @record_files.percent, align 8
  %357 = load i8*, i8** %14, align 8
  %358 = load i8*, i8** @record_files.percent, align 8
  %359 = call i8* (i8*, i8*, i8*, i8*, i8*, i8*, ...) bitcast (i8* (i8*, i8*, i8*, i8*, i8*, i8*)* @patsubst_expand to i8* (i8*, i8*, i8*, i8*, i8*, i8*, ...)*)(i8* %353, i8* %354, i8* %355, i8* %356, i8* %357, i8* %358)
  store i8* %359, i8** %39, align 8
  %360 = load i8*, i8** %38, align 8
  %361 = load i8*, i8** %39, align 8
  %362 = load i8*, i8** %38, align 8
  %363 = ptrtoint i8* %361 to i64
  %364 = ptrtoint i8* %362 to i64
  %365 = sub i64 %363, %364
  %366 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %360, i64 %365)
  %367 = load %struct.file*, %struct.file** %31, align 8
  %368 = getelementptr inbounds %struct.file, %struct.file* %367, i32 0, i32 4
  store i8* %366, i8** %368, align 8
  br label %369

369:                                              ; preds = %351, %345
  br label %416

370:                                              ; preds = %209
  %371 = load i8*, i8** %30, align 8
  %372 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @lookup_file to %struct.file* (i8*, ...)*)(i8* %371)
  store %struct.file* %372, %struct.file** %31, align 8
  %373 = load %struct.file*, %struct.file** %31, align 8
  %374 = icmp ne %struct.file* %373, null
  br i1 %374, label %375, label %397

375:                                              ; preds = %370
  %376 = load %struct.file*, %struct.file** %31, align 8
  %377 = getelementptr inbounds %struct.file, %struct.file* %376, i32 0, i32 12
  %378 = load i16, i16* %377, align 2
  %379 = lshr i16 %378, 7
  %380 = and i16 %379, 1
  %381 = zext i16 %380 to i32
  %382 = icmp ne i32 %381, 0
  br i1 %382, label %383, label %397

383:                                              ; preds = %375
  %384 = load %struct.file*, %struct.file** %31, align 8
  %385 = getelementptr inbounds %struct.file, %struct.file* %384, i32 0, i32 12
  %386 = load i16, i16* %385, align 2
  %387 = lshr i16 %386, 2
  %388 = and i16 %387, 1
  %389 = zext i16 %388 to i32
  %390 = icmp ne i32 %389, 0
  br i1 %390, label %397, label %391

391:                                              ; preds = %383
  %392 = load i8*, i8** %20, align 8
  %393 = load i32, i32* %21, align 4
  %394 = load %struct.file*, %struct.file** %31, align 8
  %395 = getelementptr inbounds %struct.file, %struct.file* %394, i32 0, i32 1
  %396 = load i8*, i8** %395, align 8
  call void (i8*, i32, i8*, i8*, ...) bitcast (void (i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*)* @makefile_fatal to void (i8*, i32, i8*, i8*, ...)*)(i8* %392, i32 %393, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.44.549, i64 0, i64 0), i8* %396)
  br label %397

397:                                              ; preds = %391, %383, %375, %370
  %398 = load i8*, i8** %30, align 8
  %399 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* %398)
  store %struct.file* %399, %struct.file** %31, align 8
  %400 = load %struct.file*, %struct.file** %31, align 8
  %401 = getelementptr inbounds %struct.file, %struct.file* %400, i32 0, i32 12
  %402 = load i16, i16* %401, align 2
  %403 = and i16 %402, -129
  %404 = or i16 %403, 128
  store i16 %404, i16* %401, align 2
  %405 = load %struct.file*, %struct.file** %31, align 8
  %406 = getelementptr inbounds %struct.file, %struct.file* %405, i32 0, i32 12
  %407 = load i16, i16* %406, align 2
  %408 = and i16 %407, -5
  %409 = or i16 %408, 4
  store i16 %409, i16* %406, align 2
  %410 = load %struct.dep*, %struct.dep** %33, align 8
  %411 = load %struct.file*, %struct.file** %31, align 8
  %412 = getelementptr inbounds %struct.file, %struct.file* %411, i32 0, i32 2
  store %struct.dep* %410, %struct.dep** %412, align 8
  %413 = load %struct.commands*, %struct.commands** %29, align 8
  %414 = load %struct.file*, %struct.file** %31, align 8
  %415 = getelementptr inbounds %struct.file, %struct.file* %414, i32 0, i32 3
  store %struct.commands* %413, %struct.commands** %415, align 8
  br label %416

416:                                              ; preds = %397, %369
  %417 = load %struct.file*, %struct.file** %31, align 8
  %418 = icmp ne %struct.file* %417, null
  br i1 %418, label %419, label %449

419:                                              ; preds = %416
  %420 = load i8*, i8** %30, align 8
  %421 = load %struct.file*, %struct.file** %31, align 8
  %422 = getelementptr inbounds %struct.file, %struct.file* %421, i32 0, i32 1
  %423 = load i8*, i8** %422, align 8
  %424 = icmp ne i8* %420, %423
  br i1 %424, label %425, label %449

425:                                              ; preds = %419
  %426 = load %struct.file*, %struct.file** %31, align 8
  %427 = getelementptr inbounds %struct.file, %struct.file* %426, i32 0, i32 1
  %428 = load i8*, i8** %427, align 8
  %429 = load i8*, i8** %30, align 8
  %430 = getelementptr inbounds i8, i8* %429, i64 2
  %431 = icmp eq i8* %428, %430
  br i1 %431, label %432, label %444

432:                                              ; preds = %425
  %433 = load i8*, i8** %30, align 8
  %434 = getelementptr inbounds i8, i8* %433, i64 0
  %435 = load i8, i8* %434, align 1
  %436 = sext i8 %435 to i32
  %437 = icmp eq i32 %436, 46
  br i1 %437, label %438, label %444

438:                                              ; preds = %432
  %439 = load i8*, i8** %30, align 8
  %440 = getelementptr inbounds i8, i8* %439, i64 1
  %441 = load i8, i8* %440, align 1
  %442 = sext i8 %441 to i32
  %443 = icmp eq i32 %442, 47
  br i1 %443, label %449, label %444

444:                                              ; preds = %438, %432, %425
  %445 = load i8*, i8** %30, align 8
  call void @free(i8* %445) #10
  %446 = load %struct.file*, %struct.file** %31, align 8
  %447 = getelementptr inbounds %struct.file, %struct.file* %446, i32 0, i32 1
  %448 = load i8*, i8** %447, align 8
  store i8* %448, i8** %30, align 8
  br label %449

449:                                              ; preds = %444, %438, %419, %416
  %450 = load %struct.file*, %struct.file** @default_goal_file, align 8
  %451 = icmp eq %struct.file* %450, null
  br i1 %451, label %452, label %711

452:                                              ; preds = %449
  %453 = load i32, i32* %22, align 4
  %454 = icmp ne i32 %453, 0
  br i1 %454, label %455, label %711

455:                                              ; preds = %452
  %456 = load i8*, i8** %30, align 8
  %457 = load i8, i8* %456, align 1
  %458 = sext i8 %457 to i32
  %459 = icmp ne i32 %458, 46
  br i1 %459, label %464, label %460

460:                                              ; preds = %455
  %461 = load i8*, i8** %30, align 8
  %462 = call i8* @strchr(i8* %461, i32 47) #9
  %463 = icmp ne i8* %462, null
  br i1 %463, label %464, label %711

464:                                              ; preds = %460, %455
  store i32 0, i32* %40, align 4
  %465 = load %struct.file*, %struct.file** @suffix_file, align 8
  %466 = getelementptr inbounds %struct.file, %struct.file* %465, i32 0, i32 2
  %467 = load %struct.dep*, %struct.dep** %466, align 8
  store %struct.dep* %467, %struct.dep** %32, align 8
  br label %468

468:                                              ; preds = %701, %464
  %469 = load %struct.dep*, %struct.dep** %32, align 8
  %470 = icmp ne %struct.dep* %469, null
  br i1 %470, label %471, label %705

471:                                              ; preds = %468
  %472 = load %struct.dep*, %struct.dep** %32, align 8
  %473 = getelementptr inbounds %struct.dep, %struct.dep* %472, i32 0, i32 1
  %474 = load i8*, i8** %473, align 8
  %475 = icmp eq i8* %474, null
  br i1 %475, label %476, label %482

476:                                              ; preds = %471
  %477 = load %struct.dep*, %struct.dep** %32, align 8
  %478 = getelementptr inbounds %struct.dep, %struct.dep* %477, i32 0, i32 2
  %479 = load %struct.file*, %struct.file** %478, align 8
  %480 = getelementptr inbounds %struct.file, %struct.file* %479, i32 0, i32 1
  %481 = load i8*, i8** %480, align 8
  br label %486

482:                                              ; preds = %471
  %483 = load %struct.dep*, %struct.dep** %32, align 8
  %484 = getelementptr inbounds %struct.dep, %struct.dep* %483, i32 0, i32 1
  %485 = load i8*, i8** %484, align 8
  br label %486

486:                                              ; preds = %482, %476
  %487 = phi i8* [ %481, %476 ], [ %485, %482 ]
  %488 = load i8, i8* %487, align 1
  %489 = sext i8 %488 to i32
  %490 = icmp ne i32 %489, 46
  br i1 %490, label %491, label %561

491:                                              ; preds = %486
  %492 = load i8*, i8** %30, align 8
  %493 = load %struct.dep*, %struct.dep** %32, align 8
  %494 = getelementptr inbounds %struct.dep, %struct.dep* %493, i32 0, i32 1
  %495 = load i8*, i8** %494, align 8
  %496 = icmp eq i8* %495, null
  br i1 %496, label %497, label %503

497:                                              ; preds = %491
  %498 = load %struct.dep*, %struct.dep** %32, align 8
  %499 = getelementptr inbounds %struct.dep, %struct.dep* %498, i32 0, i32 2
  %500 = load %struct.file*, %struct.file** %499, align 8
  %501 = getelementptr inbounds %struct.file, %struct.file* %500, i32 0, i32 1
  %502 = load i8*, i8** %501, align 8
  br label %507

503:                                              ; preds = %491
  %504 = load %struct.dep*, %struct.dep** %32, align 8
  %505 = getelementptr inbounds %struct.dep, %struct.dep* %504, i32 0, i32 1
  %506 = load i8*, i8** %505, align 8
  br label %507

507:                                              ; preds = %503, %497
  %508 = phi i8* [ %502, %497 ], [ %506, %503 ]
  %509 = icmp eq i8* %492, %508
  br i1 %509, label %560, label %510

510:                                              ; preds = %507
  %511 = load i8*, i8** %30, align 8
  %512 = load i8, i8* %511, align 1
  %513 = sext i8 %512 to i32
  %514 = load %struct.dep*, %struct.dep** %32, align 8
  %515 = getelementptr inbounds %struct.dep, %struct.dep* %514, i32 0, i32 1
  %516 = load i8*, i8** %515, align 8
  %517 = icmp eq i8* %516, null
  br i1 %517, label %518, label %524

518:                                              ; preds = %510
  %519 = load %struct.dep*, %struct.dep** %32, align 8
  %520 = getelementptr inbounds %struct.dep, %struct.dep* %519, i32 0, i32 2
  %521 = load %struct.file*, %struct.file** %520, align 8
  %522 = getelementptr inbounds %struct.file, %struct.file* %521, i32 0, i32 1
  %523 = load i8*, i8** %522, align 8
  br label %528

524:                                              ; preds = %510
  %525 = load %struct.dep*, %struct.dep** %32, align 8
  %526 = getelementptr inbounds %struct.dep, %struct.dep* %525, i32 0, i32 1
  %527 = load i8*, i8** %526, align 8
  br label %528

528:                                              ; preds = %524, %518
  %529 = phi i8* [ %523, %518 ], [ %527, %524 ]
  %530 = load i8, i8* %529, align 1
  %531 = sext i8 %530 to i32
  %532 = icmp eq i32 %513, %531
  br i1 %532, label %533, label %561

533:                                              ; preds = %528
  %534 = load i8*, i8** %30, align 8
  %535 = load i8, i8* %534, align 1
  %536 = sext i8 %535 to i32
  %537 = icmp eq i32 %536, 0
  br i1 %537, label %560, label %538

538:                                              ; preds = %533
  %539 = load i8*, i8** %30, align 8
  %540 = getelementptr inbounds i8, i8* %539, i64 1
  %541 = load %struct.dep*, %struct.dep** %32, align 8
  %542 = getelementptr inbounds %struct.dep, %struct.dep* %541, i32 0, i32 1
  %543 = load i8*, i8** %542, align 8
  %544 = icmp eq i8* %543, null
  br i1 %544, label %545, label %551

545:                                              ; preds = %538
  %546 = load %struct.dep*, %struct.dep** %32, align 8
  %547 = getelementptr inbounds %struct.dep, %struct.dep* %546, i32 0, i32 2
  %548 = load %struct.file*, %struct.file** %547, align 8
  %549 = getelementptr inbounds %struct.file, %struct.file* %548, i32 0, i32 1
  %550 = load i8*, i8** %549, align 8
  br label %555

551:                                              ; preds = %538
  %552 = load %struct.dep*, %struct.dep** %32, align 8
  %553 = getelementptr inbounds %struct.dep, %struct.dep* %552, i32 0, i32 1
  %554 = load i8*, i8** %553, align 8
  br label %555

555:                                              ; preds = %551, %545
  %556 = phi i8* [ %550, %545 ], [ %554, %551 ]
  %557 = getelementptr inbounds i8, i8* %556, i64 1
  %558 = call i32 @strcmp(i8* %540, i8* %557) #9
  %559 = icmp ne i32 %558, 0
  br i1 %559, label %561, label %560

560:                                              ; preds = %555, %533, %507
  store i32 1, i32* %40, align 4
  br label %705

561:                                              ; preds = %555, %528, %486
  %562 = load %struct.file*, %struct.file** @suffix_file, align 8
  %563 = getelementptr inbounds %struct.file, %struct.file* %562, i32 0, i32 2
  %564 = load %struct.dep*, %struct.dep** %563, align 8
  store %struct.dep* %564, %struct.dep** %41, align 8
  br label %565

565:                                              ; preds = %692, %561
  %566 = load %struct.dep*, %struct.dep** %41, align 8
  %567 = icmp ne %struct.dep* %566, null
  br i1 %567, label %568, label %696

568:                                              ; preds = %565
  %569 = load %struct.dep*, %struct.dep** %41, align 8
  %570 = getelementptr inbounds %struct.dep, %struct.dep* %569, i32 0, i32 1
  %571 = load i8*, i8** %570, align 8
  %572 = icmp eq i8* %571, null
  br i1 %572, label %573, label %579

573:                                              ; preds = %568
  %574 = load %struct.dep*, %struct.dep** %41, align 8
  %575 = getelementptr inbounds %struct.dep, %struct.dep* %574, i32 0, i32 2
  %576 = load %struct.file*, %struct.file** %575, align 8
  %577 = getelementptr inbounds %struct.file, %struct.file* %576, i32 0, i32 1
  %578 = load i8*, i8** %577, align 8
  br label %583

579:                                              ; preds = %568
  %580 = load %struct.dep*, %struct.dep** %41, align 8
  %581 = getelementptr inbounds %struct.dep, %struct.dep* %580, i32 0, i32 1
  %582 = load i8*, i8** %581, align 8
  br label %583

583:                                              ; preds = %579, %573
  %584 = phi i8* [ %578, %573 ], [ %582, %579 ]
  %585 = call i64 @strlen(i8* %584) #9
  %586 = trunc i64 %585 to i32
  store i32 %586, i32* %42, align 4
  %587 = load i8*, i8** %30, align 8
  %588 = load %struct.dep*, %struct.dep** %41, align 8
  %589 = getelementptr inbounds %struct.dep, %struct.dep* %588, i32 0, i32 1
  %590 = load i8*, i8** %589, align 8
  %591 = icmp eq i8* %590, null
  br i1 %591, label %592, label %598

592:                                              ; preds = %583
  %593 = load %struct.dep*, %struct.dep** %41, align 8
  %594 = getelementptr inbounds %struct.dep, %struct.dep* %593, i32 0, i32 2
  %595 = load %struct.file*, %struct.file** %594, align 8
  %596 = getelementptr inbounds %struct.file, %struct.file* %595, i32 0, i32 1
  %597 = load i8*, i8** %596, align 8
  br label %602

598:                                              ; preds = %583
  %599 = load %struct.dep*, %struct.dep** %41, align 8
  %600 = getelementptr inbounds %struct.dep, %struct.dep* %599, i32 0, i32 1
  %601 = load i8*, i8** %600, align 8
  br label %602

602:                                              ; preds = %598, %592
  %603 = phi i8* [ %597, %592 ], [ %601, %598 ]
  %604 = load i32, i32* %42, align 4
  %605 = zext i32 %604 to i64
  %606 = call i32 @strncmp(i8* %587, i8* %603, i64 %605) #9
  %607 = icmp ne i32 %606, 0
  br i1 %607, label %608, label %609

608:                                              ; preds = %602
  br label %692

609:                                              ; preds = %602
  %610 = load i8*, i8** %30, align 8
  %611 = load i32, i32* %42, align 4
  %612 = zext i32 %611 to i64
  %613 = getelementptr inbounds i8, i8* %610, i64 %612
  %614 = load %struct.dep*, %struct.dep** %32, align 8
  %615 = getelementptr inbounds %struct.dep, %struct.dep* %614, i32 0, i32 1
  %616 = load i8*, i8** %615, align 8
  %617 = icmp eq i8* %616, null
  br i1 %617, label %618, label %624

618:                                              ; preds = %609
  %619 = load %struct.dep*, %struct.dep** %32, align 8
  %620 = getelementptr inbounds %struct.dep, %struct.dep* %619, i32 0, i32 2
  %621 = load %struct.file*, %struct.file** %620, align 8
  %622 = getelementptr inbounds %struct.file, %struct.file* %621, i32 0, i32 1
  %623 = load i8*, i8** %622, align 8
  br label %628

624:                                              ; preds = %609
  %625 = load %struct.dep*, %struct.dep** %32, align 8
  %626 = getelementptr inbounds %struct.dep, %struct.dep* %625, i32 0, i32 1
  %627 = load i8*, i8** %626, align 8
  br label %628

628:                                              ; preds = %624, %618
  %629 = phi i8* [ %623, %618 ], [ %627, %624 ]
  %630 = icmp eq i8* %613, %629
  br i1 %630, label %690, label %631

631:                                              ; preds = %628
  %632 = load i8*, i8** %30, align 8
  %633 = load i32, i32* %42, align 4
  %634 = zext i32 %633 to i64
  %635 = getelementptr inbounds i8, i8* %632, i64 %634
  %636 = load i8, i8* %635, align 1
  %637 = sext i8 %636 to i32
  %638 = load %struct.dep*, %struct.dep** %32, align 8
  %639 = getelementptr inbounds %struct.dep, %struct.dep* %638, i32 0, i32 1
  %640 = load i8*, i8** %639, align 8
  %641 = icmp eq i8* %640, null
  br i1 %641, label %642, label %648

642:                                              ; preds = %631
  %643 = load %struct.dep*, %struct.dep** %32, align 8
  %644 = getelementptr inbounds %struct.dep, %struct.dep* %643, i32 0, i32 2
  %645 = load %struct.file*, %struct.file** %644, align 8
  %646 = getelementptr inbounds %struct.file, %struct.file* %645, i32 0, i32 1
  %647 = load i8*, i8** %646, align 8
  br label %652

648:                                              ; preds = %631
  %649 = load %struct.dep*, %struct.dep** %32, align 8
  %650 = getelementptr inbounds %struct.dep, %struct.dep* %649, i32 0, i32 1
  %651 = load i8*, i8** %650, align 8
  br label %652

652:                                              ; preds = %648, %642
  %653 = phi i8* [ %647, %642 ], [ %651, %648 ]
  %654 = load i8, i8* %653, align 1
  %655 = sext i8 %654 to i32
  %656 = icmp eq i32 %637, %655
  br i1 %656, label %657, label %691

657:                                              ; preds = %652
  %658 = load i8*, i8** %30, align 8
  %659 = load i32, i32* %42, align 4
  %660 = zext i32 %659 to i64
  %661 = getelementptr inbounds i8, i8* %658, i64 %660
  %662 = load i8, i8* %661, align 1
  %663 = sext i8 %662 to i32
  %664 = icmp eq i32 %663, 0
  br i1 %664, label %690, label %665

665:                                              ; preds = %657
  %666 = load i8*, i8** %30, align 8
  %667 = load i32, i32* %42, align 4
  %668 = zext i32 %667 to i64
  %669 = getelementptr inbounds i8, i8* %666, i64 %668
  %670 = getelementptr inbounds i8, i8* %669, i64 1
  %671 = load %struct.dep*, %struct.dep** %32, align 8
  %672 = getelementptr inbounds %struct.dep, %struct.dep* %671, i32 0, i32 1
  %673 = load i8*, i8** %672, align 8
  %674 = icmp eq i8* %673, null
  br i1 %674, label %675, label %681

675:                                              ; preds = %665
  %676 = load %struct.dep*, %struct.dep** %32, align 8
  %677 = getelementptr inbounds %struct.dep, %struct.dep* %676, i32 0, i32 2
  %678 = load %struct.file*, %struct.file** %677, align 8
  %679 = getelementptr inbounds %struct.file, %struct.file* %678, i32 0, i32 1
  %680 = load i8*, i8** %679, align 8
  br label %685

681:                                              ; preds = %665
  %682 = load %struct.dep*, %struct.dep** %32, align 8
  %683 = getelementptr inbounds %struct.dep, %struct.dep* %682, i32 0, i32 1
  %684 = load i8*, i8** %683, align 8
  br label %685

685:                                              ; preds = %681, %675
  %686 = phi i8* [ %680, %675 ], [ %684, %681 ]
  %687 = getelementptr inbounds i8, i8* %686, i64 1
  %688 = call i32 @strcmp(i8* %670, i8* %687) #9
  %689 = icmp ne i32 %688, 0
  br i1 %689, label %691, label %690

690:                                              ; preds = %685, %657, %628
  store i32 1, i32* %40, align 4
  br label %696

691:                                              ; preds = %685, %652
  br label %692

692:                                              ; preds = %691, %608
  %693 = load %struct.dep*, %struct.dep** %41, align 8
  %694 = getelementptr inbounds %struct.dep, %struct.dep* %693, i32 0, i32 0
  %695 = load %struct.dep*, %struct.dep** %694, align 8
  store %struct.dep* %695, %struct.dep** %41, align 8
  br label %565

696:                                              ; preds = %690, %565
  %697 = load i32, i32* %40, align 4
  %698 = icmp ne i32 %697, 0
  br i1 %698, label %699, label %700

699:                                              ; preds = %696
  br label %705

700:                                              ; preds = %696
  br label %701

701:                                              ; preds = %700
  %702 = load %struct.dep*, %struct.dep** %32, align 8
  %703 = getelementptr inbounds %struct.dep, %struct.dep* %702, i32 0, i32 0
  %704 = load %struct.dep*, %struct.dep** %703, align 8
  store %struct.dep* %704, %struct.dep** %32, align 8
  br label %468

705:                                              ; preds = %699, %560, %468
  %706 = load i32, i32* %40, align 4
  %707 = icmp ne i32 %706, 0
  br i1 %707, label %710, label %708

708:                                              ; preds = %705
  %709 = load %struct.file*, %struct.file** %31, align 8
  store %struct.file* %709, %struct.file** @default_goal_file, align 8
  br label %710

710:                                              ; preds = %708, %705
  br label %711

711:                                              ; preds = %710, %460, %452, %449
  br label %712

712:                                              ; preds = %711, %133
  %713 = load %struct.nameseq*, %struct.nameseq** %23, align 8
  store %struct.nameseq* %713, %struct.nameseq** %12, align 8
  br label %63

714:                                              ; preds = %63
  %715 = load i32, i32* %24, align 4
  %716 = icmp ne i32 %715, 0
  br i1 %716, label %717, label %733

717:                                              ; preds = %714
  %718 = load i8**, i8*** %27, align 8
  %719 = load i32, i32* %26, align 4
  %720 = zext i32 %719 to i64
  %721 = getelementptr inbounds i8*, i8** %718, i64 %720
  store i8* null, i8** %721, align 8
  %722 = load i8**, i8*** %28, align 8
  %723 = load i32, i32* %26, align 4
  %724 = zext i32 %723 to i64
  %725 = getelementptr inbounds i8*, i8** %722, i64 %724
  store i8* null, i8** %725, align 8
  %726 = load i8**, i8*** %27, align 8
  %727 = load i8**, i8*** %28, align 8
  %728 = load i32, i32* %19, align 4
  %729 = load %struct.dep*, %struct.dep** %15, align 8
  %730 = load %struct.commands*, %struct.commands** %29, align 8
  call void (i8**, i8**, i32, %struct.dep*, %struct.commands*, i32, ...) bitcast (void (i8**, i8**, i32, %struct.dep*, %struct.commands*, i32)* @create_pattern_rule to void (i8**, i8**, i32, %struct.dep*, %struct.commands*, i32, ...)*)(i8** %726, i8** %727, i32 %728, %struct.dep* %729, %struct.commands* %730, i32 1)
  %731 = load i8**, i8*** %28, align 8
  %732 = bitcast i8** %731 to i8*
  call void @free(i8* %732) #10
  br label %733

733:                                              ; preds = %717, %714
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @find_semicolon(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %10 = load i8*, i8** %3, align 8
  %11 = call i8* @strchr(i8* %10, i32 59) #9
  store i8* %11, i8** %4, align 8
  br label %12

12:                                               ; preds = %45, %1
  %13 = load i8*, i8** %4, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %12
  %16 = load i8*, i8** %4, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 -1
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp eq i32 %19, 92
  br label %21

21:                                               ; preds = %15, %12
  %22 = phi i1 [ false, %12 ], [ %20, %15 ]
  br i1 %22, label %23, label %46

23:                                               ; preds = %21
  %24 = load i8*, i8** %4, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 -1
  store i8* %25, i8** %6, align 8
  store i32 0, i32* %7, align 4
  br label %26

26:                                               ; preds = %32, %23
  %27 = load i8*, i8** %6, align 8
  %28 = getelementptr inbounds i8, i8* %27, i32 -1
  store i8* %28, i8** %6, align 8
  %29 = load i8, i8* %27, align 1
  %30 = sext i8 %29 to i32
  %31 = icmp eq i32 %30, 92
  br i1 %31, label %32, label %37

32:                                               ; preds = %26
  %33 = load i32, i32* %7, align 4
  %34 = icmp ne i32 %33, 0
  %35 = xor i1 %34, true
  %36 = zext i1 %35 to i32
  store i32 %36, i32* %7, align 4
  br label %26

37:                                               ; preds = %26
  %38 = load i32, i32* %7, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %37
  %41 = load i8*, i8** %4, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 1
  %43 = call i8* @strchr(i8* %42, i32 59) #9
  store i8* %43, i8** %4, align 8
  br label %45

44:                                               ; preds = %37
  br label %46

45:                                               ; preds = %40
  br label %12

46:                                               ; preds = %44, %21
  %47 = load i8*, i8** %4, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  store i8* null, i8** %2, align 8
  br label %95

50:                                               ; preds = %46
  %51 = load i8*, i8** %3, align 8
  %52 = load i8*, i8** %4, align 8
  %53 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @lindex to i8* (i8*, i8*, i32, ...)*)(i8* %51, i8* %52, i32 35)
  store i8* %53, i8** %5, align 8
  br label %54

54:                                               ; preds = %88, %50
  %55 = load i8*, i8** %5, align 8
  %56 = icmp ne i8* %55, null
  br i1 %56, label %57, label %63

57:                                               ; preds = %54
  %58 = load i8*, i8** %5, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 -1
  %60 = load i8, i8* %59, align 1
  %61 = sext i8 %60 to i32
  %62 = icmp eq i32 %61, 92
  br label %63

63:                                               ; preds = %57, %54
  %64 = phi i1 [ false, %54 ], [ %62, %57 ]
  br i1 %64, label %65, label %89

65:                                               ; preds = %63
  %66 = load i8*, i8** %5, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 -1
  store i8* %67, i8** %8, align 8
  store i32 0, i32* %9, align 4
  br label %68

68:                                               ; preds = %74, %65
  %69 = load i8*, i8** %8, align 8
  %70 = getelementptr inbounds i8, i8* %69, i32 -1
  store i8* %70, i8** %8, align 8
  %71 = load i8, i8* %69, align 1
  %72 = sext i8 %71 to i32
  %73 = icmp eq i32 %72, 92
  br i1 %73, label %74, label %79

74:                                               ; preds = %68
  %75 = load i32, i32* %9, align 4
  %76 = icmp ne i32 %75, 0
  %77 = xor i1 %76, true
  %78 = zext i1 %77 to i32
  store i32 %78, i32* %9, align 4
  br label %68

79:                                               ; preds = %68
  %80 = load i32, i32* %9, align 4
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %87

82:                                               ; preds = %79
  %83 = load i8*, i8** %5, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 1
  %85 = load i8*, i8** %4, align 8
  %86 = call i8* (i8*, i8*, i32, ...) bitcast (i8* (i8*, i8*, i32)* @lindex to i8* (i8*, i8*, i32, ...)*)(i8* %84, i8* %85, i32 35)
  store i8* %86, i8** %5, align 8
  br label %88

87:                                               ; preds = %79
  br label %89

88:                                               ; preds = %82
  br label %54

89:                                               ; preds = %87, %63
  %90 = load i8*, i8** %5, align 8
  %91 = icmp eq i8* %90, null
  br i1 %91, label %92, label %94

92:                                               ; preds = %89
  %93 = load i8*, i8** %4, align 8
  store i8* %93, i8** %2, align 8
  br label %95

94:                                               ; preds = %89
  store i8* null, i8** %2, align 8
  br label %95

95:                                               ; preds = %94, %92, %49
  %96 = load i8*, i8** %2, align 8
  ret i8* %96
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.nameseq* @parse_file_seq(i8** %0, i32 %1, i32 %2) #0 {
  %4 = alloca i8**, align 8
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca %struct.nameseq*, align 8
  %8 = alloca %struct.nameseq*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = trunc i32 %1 to i8
  store i8** %0, i8*** %4, align 8
  store i8 %13, i8* %5, align 1
  store i32 %2, i32* %6, align 4
  store %struct.nameseq* null, %struct.nameseq** %7, align 8
  %14 = load i8**, i8*** %4, align 8
  %15 = load i8*, i8** %14, align 8
  store i8* %15, i8** %9, align 8
  br label %16

16:                                               ; preds = %91, %3
  %17 = load i8*, i8** %9, align 8
  %18 = call i8* (i8*, ...) bitcast (i8* (i8*)* @next_token to i8* (i8*, ...)*)(i8* %17)
  store i8* %18, i8** %9, align 8
  %19 = load i8*, i8** %9, align 8
  %20 = load i8, i8* %19, align 1
  %21 = sext i8 %20 to i32
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %16
  br label %111

24:                                               ; preds = %16
  %25 = load i8*, i8** %9, align 8
  %26 = load i8, i8* %25, align 1
  %27 = sext i8 %26 to i32
  %28 = load i8, i8* %5, align 1
  %29 = sext i8 %28 to i32
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %24
  br label %111

32:                                               ; preds = %24
  %33 = load i8*, i8** %9, align 8
  store i8* %33, i8** %10, align 8
  br label %34

34:                                               ; preds = %90, %32
  %35 = load i8*, i8** %9, align 8
  %36 = getelementptr inbounds i8, i8* %35, i32 1
  store i8* %36, i8** %9, align 8
  %37 = load i8, i8* %35, align 1
  %38 = sext i8 %37 to i32
  store i32 %38, i32* %12, align 4
  %39 = load i32, i32* %12, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %34
  br label %91

42:                                               ; preds = %34
  %43 = load i32, i32* %12, align 4
  %44 = icmp eq i32 %43, 92
  br i1 %44, label %45, label %72

45:                                               ; preds = %42
  %46 = load i8*, i8** %9, align 8
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i32
  %49 = icmp eq i32 %48, 92
  br i1 %49, label %69, label %50

50:                                               ; preds = %45
  %51 = call i16** @__ctype_b_loc() #11
  %52 = load i16*, i16** %51, align 8
  %53 = load i8*, i8** %9, align 8
  %54 = load i8, i8* %53, align 1
  %55 = sext i8 %54 to i32
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %52, i64 %56
  %58 = load i16, i16* %57, align 2
  %59 = zext i16 %58 to i32
  %60 = and i32 %59, 1
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %69, label %62

62:                                               ; preds = %50
  %63 = load i8*, i8** %9, align 8
  %64 = load i8, i8* %63, align 1
  %65 = sext i8 %64 to i32
  %66 = load i8, i8* %5, align 1
  %67 = sext i8 %66 to i32
  %68 = icmp eq i32 %65, %67
  br i1 %68, label %69, label %72

69:                                               ; preds = %62, %50, %45
  %70 = load i8*, i8** %9, align 8
  %71 = getelementptr inbounds i8, i8* %70, i32 1
  store i8* %71, i8** %9, align 8
  br label %89

72:                                               ; preds = %62, %42
  %73 = call i16** @__ctype_b_loc() #11
  %74 = load i16*, i16** %73, align 8
  %75 = load i32, i32* %12, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i16, i16* %74, i64 %76
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i32
  %80 = and i32 %79, 1
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %87, label %82

82:                                               ; preds = %72
  %83 = load i32, i32* %12, align 4
  %84 = load i8, i8* %5, align 1
  %85 = sext i8 %84 to i32
  %86 = icmp eq i32 %83, %85
  br i1 %86, label %87, label %88

87:                                               ; preds = %82, %72
  br label %91

88:                                               ; preds = %82
  br label %89

89:                                               ; preds = %88, %69
  br label %90

90:                                               ; preds = %89
  br label %34

91:                                               ; preds = %87, %41
  %92 = load i8*, i8** %9, align 8
  %93 = getelementptr inbounds i8, i8* %92, i32 -1
  store i8* %93, i8** %9, align 8
  %94 = load i8*, i8** %10, align 8
  %95 = load i8*, i8** %9, align 8
  %96 = load i8*, i8** %10, align 8
  %97 = ptrtoint i8* %95 to i64
  %98 = ptrtoint i8* %96 to i64
  %99 = sub i64 %97, %98
  %100 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %94, i64 %99)
  store i8* %100, i8** %11, align 8
  %101 = load i32, i32* %6, align 4
  %102 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %101)
  %103 = bitcast i8* %102 to %struct.nameseq*
  store %struct.nameseq* %103, %struct.nameseq** %8, align 8
  %104 = load i8*, i8** %11, align 8
  %105 = load %struct.nameseq*, %struct.nameseq** %8, align 8
  %106 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %105, i32 0, i32 1
  store i8* %104, i8** %106, align 8
  %107 = load %struct.nameseq*, %struct.nameseq** %7, align 8
  %108 = load %struct.nameseq*, %struct.nameseq** %8, align 8
  %109 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %108, i32 0, i32 0
  store %struct.nameseq* %107, %struct.nameseq** %109, align 8
  %110 = load %struct.nameseq*, %struct.nameseq** %8, align 8
  store %struct.nameseq* %110, %struct.nameseq** %7, align 8
  br label %16

111:                                              ; preds = %31, %23
  %112 = load i8*, i8** %9, align 8
  %113 = load i8**, i8*** %4, align 8
  store i8* %112, i8** %113, align 8
  %114 = load %struct.nameseq*, %struct.nameseq** %7, align 8
  ret %struct.nameseq* %114
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.nameseq* @multi_glob(%struct.nameseq* %0, i32 %1) #0 {
  %3 = alloca %struct.nameseq*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.nameseq*, align 8
  %6 = alloca %struct.nameseq*, align 8
  %7 = alloca %struct.nameseq*, align 8
  %8 = alloca %struct.glob_t, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca %struct.passwd*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %struct.passwd*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.nameseq*, align 8
  store %struct.nameseq* %0, %struct.nameseq** %3, align 8
  store i32 %1, i32* %4, align 4
  store %struct.nameseq* null, %struct.nameseq** %5, align 8
  %19 = load %struct.nameseq*, %struct.nameseq** %3, align 8
  store %struct.nameseq* %19, %struct.nameseq** %6, align 8
  br label %20

20:                                               ; preds = %213, %2
  %21 = load %struct.nameseq*, %struct.nameseq** %6, align 8
  %22 = icmp ne %struct.nameseq* %21, null
  br i1 %22, label %23, label %215

23:                                               ; preds = %20
  %24 = load %struct.nameseq*, %struct.nameseq** %6, align 8
  %25 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %24, i32 0, i32 0
  %26 = load %struct.nameseq*, %struct.nameseq** %25, align 8
  store %struct.nameseq* %26, %struct.nameseq** %7, align 8
  %27 = load %struct.nameseq*, %struct.nameseq** %6, align 8
  %28 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %27, i32 0, i32 1
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 0
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = icmp eq i32 %32, 126
  br i1 %33, label %34, label %166

34:                                               ; preds = %23
  %35 = load %struct.nameseq*, %struct.nameseq** %6, align 8
  %36 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %35, i32 0, i32 1
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 1
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %40, 47
  br i1 %41, label %50, label %42

42:                                               ; preds = %34
  %43 = load %struct.nameseq*, %struct.nameseq** %6, align 8
  %44 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %43, i32 0, i32 1
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i32
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %109

50:                                               ; preds = %42, %34
  %51 = call i8* (i8*, ...) bitcast (i8* (i8*)* @allocated_variable_expand to i8* (i8*, ...)*)(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.542, i64 0, i64 0))
  store i8* %51, i8** %9, align 8
  %52 = load i8*, i8** %9, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 0
  %54 = load i8, i8* %53, align 1
  %55 = sext i8 %54 to i32
  %56 = icmp ne i32 %55, 0
  %57 = zext i1 %56 to i32
  store i32 %57, i32* %10, align 4
  %58 = load i32, i32* %10, align 4
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %50
  %61 = load i8*, i8** %9, align 8
  call void @free(i8* %61) #10
  %62 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.543, i64 0, i64 0)) #10
  store i8* %62, i8** %9, align 8
  br label %63

63:                                               ; preds = %60, %50
  %64 = load i8*, i8** %9, align 8
  %65 = icmp eq i8* %64, null
  br i1 %65, label %72, label %66

66:                                               ; preds = %63
  %67 = load i8*, i8** %9, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 0
  %69 = load i8, i8* %68, align 1
  %70 = sext i8 %69 to i32
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %87

72:                                               ; preds = %66, %63
  %73 = call i8* @getlogin()
  store i8* %73, i8** %11, align 8
  store i8* null, i8** %9, align 8
  %74 = load i8*, i8** %11, align 8
  %75 = icmp ne i8* %74, null
  br i1 %75, label %76, label %86

76:                                               ; preds = %72
  %77 = load i8*, i8** %11, align 8
  %78 = call %struct.passwd* @getpwnam(i8* %77)
  store %struct.passwd* %78, %struct.passwd** %12, align 8
  %79 = load %struct.passwd*, %struct.passwd** %12, align 8
  %80 = icmp ne %struct.passwd* %79, null
  br i1 %80, label %81, label %85

81:                                               ; preds = %76
  %82 = load %struct.passwd*, %struct.passwd** %12, align 8
  %83 = getelementptr inbounds %struct.passwd, %struct.passwd* %82, i32 0, i32 5
  %84 = load i8*, i8** %83, align 8
  store i8* %84, i8** %9, align 8
  br label %85

85:                                               ; preds = %81, %76
  br label %86

86:                                               ; preds = %85, %72
  br label %87

87:                                               ; preds = %86, %66
  %88 = load i8*, i8** %9, align 8
  %89 = icmp ne i8* %88, null
  br i1 %89, label %90, label %108

90:                                               ; preds = %87
  %91 = load i8*, i8** %9, align 8
  %92 = load %struct.nameseq*, %struct.nameseq** %6, align 8
  %93 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %92, i32 0, i32 1
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 1
  %96 = call i8* (i8*, i8*, i8*, ...) bitcast (i8* (i8*, i8*, i8*)* @concat to i8* (i8*, i8*, i8*, ...)*)(i8* %91, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7.544, i64 0, i64 0), i8* %95)
  store i8* %96, i8** %13, align 8
  %97 = load i32, i32* %10, align 4
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %90
  %100 = load i8*, i8** %9, align 8
  call void @free(i8* %100) #10
  br label %101

101:                                              ; preds = %99, %90
  %102 = load %struct.nameseq*, %struct.nameseq** %6, align 8
  %103 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %102, i32 0, i32 1
  %104 = load i8*, i8** %103, align 8
  call void @free(i8* %104) #10
  %105 = load i8*, i8** %13, align 8
  %106 = load %struct.nameseq*, %struct.nameseq** %6, align 8
  %107 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %106, i32 0, i32 1
  store i8* %105, i8** %107, align 8
  br label %108

108:                                              ; preds = %101, %87
  br label %165

109:                                              ; preds = %42
  %110 = load %struct.nameseq*, %struct.nameseq** %6, align 8
  %111 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %110, i32 0, i32 1
  %112 = load i8*, i8** %111, align 8
  %113 = getelementptr inbounds i8, i8* %112, i64 1
  %114 = call i8* @strchr(i8* %113, i32 47) #9
  store i8* %114, i8** %15, align 8
  %115 = load i8*, i8** %15, align 8
  %116 = icmp ne i8* %115, null
  br i1 %116, label %117, label %119

117:                                              ; preds = %109
  %118 = load i8*, i8** %15, align 8
  store i8 0, i8* %118, align 1
  br label %119

119:                                              ; preds = %117, %109
  %120 = load %struct.nameseq*, %struct.nameseq** %6, align 8
  %121 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %120, i32 0, i32 1
  %122 = load i8*, i8** %121, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 1
  %124 = call %struct.passwd* @getpwnam(i8* %123)
  store %struct.passwd* %124, %struct.passwd** %14, align 8
  %125 = load %struct.passwd*, %struct.passwd** %14, align 8
  %126 = icmp ne %struct.passwd* %125, null
  br i1 %126, label %127, label %158

127:                                              ; preds = %119
  %128 = load i8*, i8** %15, align 8
  %129 = icmp eq i8* %128, null
  br i1 %129, label %130, label %144

130:                                              ; preds = %127
  %131 = load %struct.nameseq*, %struct.nameseq** %6, align 8
  %132 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %131, i32 0, i32 1
  %133 = load i8*, i8** %132, align 8
  call void @free(i8* %133) #10
  %134 = load %struct.passwd*, %struct.passwd** %14, align 8
  %135 = getelementptr inbounds %struct.passwd, %struct.passwd* %134, i32 0, i32 5
  %136 = load i8*, i8** %135, align 8
  %137 = load %struct.passwd*, %struct.passwd** %14, align 8
  %138 = getelementptr inbounds %struct.passwd, %struct.passwd* %137, i32 0, i32 5
  %139 = load i8*, i8** %138, align 8
  %140 = call i64 @strlen(i8* %139) #9
  %141 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %136, i64 %140)
  %142 = load %struct.nameseq*, %struct.nameseq** %6, align 8
  %143 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %142, i32 0, i32 1
  store i8* %141, i8** %143, align 8
  br label %157

144:                                              ; preds = %127
  %145 = load %struct.passwd*, %struct.passwd** %14, align 8
  %146 = getelementptr inbounds %struct.passwd, %struct.passwd* %145, i32 0, i32 5
  %147 = load i8*, i8** %146, align 8
  %148 = load i8*, i8** %15, align 8
  %149 = getelementptr inbounds i8, i8* %148, i64 1
  %150 = call i8* (i8*, i8*, i8*, ...) bitcast (i8* (i8*, i8*, i8*)* @concat to i8* (i8*, i8*, i8*, ...)*)(i8* %147, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.509, i64 0, i64 0), i8* %149)
  store i8* %150, i8** %16, align 8
  %151 = load %struct.nameseq*, %struct.nameseq** %6, align 8
  %152 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %151, i32 0, i32 1
  %153 = load i8*, i8** %152, align 8
  call void @free(i8* %153) #10
  %154 = load i8*, i8** %16, align 8
  %155 = load %struct.nameseq*, %struct.nameseq** %6, align 8
  %156 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %155, i32 0, i32 1
  store i8* %154, i8** %156, align 8
  br label %157

157:                                              ; preds = %144, %130
  br label %164

158:                                              ; preds = %119
  %159 = load i8*, i8** %15, align 8
  %160 = icmp ne i8* %159, null
  br i1 %160, label %161, label %163

161:                                              ; preds = %158
  %162 = load i8*, i8** %15, align 8
  store i8 47, i8* %162, align 1
  br label %163

163:                                              ; preds = %161, %158
  br label %164

164:                                              ; preds = %163, %157
  br label %165

165:                                              ; preds = %164, %108
  br label %166

166:                                              ; preds = %165, %23
  %167 = load %struct.nameseq*, %struct.nameseq** %6, align 8
  %168 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %167, i32 0, i32 1
  %169 = load i8*, i8** %168, align 8
  %170 = call i32 @glob(i8* %169, i32 16, i32 (i8*, i32)* null, %struct.glob_t* %8) #10
  switch i32 %170, label %207 [
    i32 0, label %171
    i32 1, label %206
  ]

171:                                              ; preds = %166
  store i32 0, i32* %17, align 4
  br label %172

172:                                              ; preds = %202, %171
  %173 = load i32, i32* %17, align 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %8, i32 0, i32 0
  %176 = load i64, i64* %175, align 8
  %177 = icmp ult i64 %174, %176
  br i1 %177, label %178, label %205

178:                                              ; preds = %172
  %179 = load i32, i32* %4, align 4
  %180 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %179)
  %181 = bitcast i8* %180 to %struct.nameseq*
  store %struct.nameseq* %181, %struct.nameseq** %18, align 8
  %182 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %8, i32 0, i32 1
  %183 = load i8**, i8*** %182, align 8
  %184 = load i32, i32* %17, align 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds i8*, i8** %183, i64 %185
  %187 = load i8*, i8** %186, align 8
  %188 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %8, i32 0, i32 1
  %189 = load i8**, i8*** %188, align 8
  %190 = load i32, i32* %17, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds i8*, i8** %189, i64 %191
  %193 = load i8*, i8** %192, align 8
  %194 = call i64 @strlen(i8* %193) #9
  %195 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %187, i64 %194)
  %196 = load %struct.nameseq*, %struct.nameseq** %18, align 8
  %197 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %196, i32 0, i32 1
  store i8* %195, i8** %197, align 8
  %198 = load %struct.nameseq*, %struct.nameseq** %5, align 8
  %199 = load %struct.nameseq*, %struct.nameseq** %18, align 8
  %200 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %199, i32 0, i32 0
  store %struct.nameseq* %198, %struct.nameseq** %200, align 8
  %201 = load %struct.nameseq*, %struct.nameseq** %18, align 8
  store %struct.nameseq* %201, %struct.nameseq** %5, align 8
  br label %202

202:                                              ; preds = %178
  %203 = load i32, i32* %17, align 4
  %204 = add nsw i32 %203, 1
  store i32 %204, i32* %17, align 4
  br label %172

205:                                              ; preds = %172
  call void @globfree(%struct.glob_t* %8) #10
  br label %212

206:                                              ; preds = %166
  call void (i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, ...)*)(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9.545, i64 0, i64 0))
  br label %212

207:                                              ; preds = %166
  %208 = load %struct.nameseq*, %struct.nameseq** %5, align 8
  %209 = load %struct.nameseq*, %struct.nameseq** %6, align 8
  %210 = getelementptr inbounds %struct.nameseq, %struct.nameseq* %209, i32 0, i32 0
  store %struct.nameseq* %208, %struct.nameseq** %210, align 8
  %211 = load %struct.nameseq*, %struct.nameseq** %6, align 8
  store %struct.nameseq* %211, %struct.nameseq** %5, align 8
  br label %212

212:                                              ; preds = %207, %206, %205
  br label %213

213:                                              ; preds = %212
  %214 = load %struct.nameseq*, %struct.nameseq** %7, align 8
  store %struct.nameseq* %214, %struct.nameseq** %6, align 8
  br label %20

215:                                              ; preds = %20
  %216 = load %struct.nameseq*, %struct.nameseq** %5, align 8
  ret %struct.nameseq* %216
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @find_percent(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = call i64 @strlen(i8* %7) #9
  %9 = trunc i64 %8 to i32
  store i32 %9, i32* %4, align 4
  %10 = load i8*, i8** %3, align 8
  store i8* %10, i8** %5, align 8
  br label %11

11:                                               ; preds = %87, %1
  %12 = load i8*, i8** %5, align 8
  %13 = call i8* @strchr(i8* %12, i32 37) #9
  store i8* %13, i8** %5, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %15, label %88

15:                                               ; preds = %11
  %16 = load i8*, i8** %5, align 8
  %17 = load i8*, i8** %3, align 8
  %18 = icmp ugt i8* %16, %17
  br i1 %18, label %19, label %85

19:                                               ; preds = %15
  %20 = load i8*, i8** %5, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 -1
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  %24 = icmp eq i32 %23, 92
  br i1 %24, label %25, label %85

25:                                               ; preds = %19
  store i32 -2, i32* %6, align 4
  br label %26

26:                                               ; preds = %43, %25
  %27 = load i8*, i8** %5, align 8
  %28 = load i32, i32* %6, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %27, i64 %29
  %31 = load i8*, i8** %3, align 8
  %32 = icmp uge i8* %30, %31
  br i1 %32, label %33, label %41

33:                                               ; preds = %26
  %34 = load i8*, i8** %5, align 8
  %35 = load i32, i32* %6, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %34, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i32
  %40 = icmp eq i32 %39, 92
  br label %41

41:                                               ; preds = %33, %26
  %42 = phi i1 [ false, %26 ], [ %40, %33 ]
  br i1 %42, label %43, label %46

43:                                               ; preds = %41
  %44 = load i32, i32* %6, align 4
  %45 = add nsw i32 %44, -1
  store i32 %45, i32* %6, align 4
  br label %26

46:                                               ; preds = %41
  %47 = load i32, i32* %6, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %6, align 4
  %49 = load i8*, i8** %5, align 8
  %50 = load i32, i32* %6, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %49, i64 %51
  %53 = load i8*, i8** %5, align 8
  %54 = load i32, i32* %6, align 4
  %55 = sdiv i32 %54, 2
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %53, i64 %56
  %58 = load i32, i32* %4, align 4
  %59 = zext i32 %58 to i64
  %60 = load i8*, i8** %5, align 8
  %61 = load i8*, i8** %3, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = ptrtoint i8* %61 to i64
  %64 = sub i64 %62, %63
  %65 = sub nsw i64 %59, %64
  %66 = load i32, i32* %6, align 4
  %67 = sdiv i32 %66, 2
  %68 = sext i32 %67 to i64
  %69 = sub nsw i64 %65, %68
  %70 = add nsw i64 %69, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %57, i64 %70, i1 false)
  %71 = load i32, i32* %6, align 4
  %72 = sdiv i32 %71, 2
  %73 = load i8*, i8** %5, align 8
  %74 = sext i32 %72 to i64
  %75 = getelementptr inbounds i8, i8* %73, i64 %74
  store i8* %75, i8** %5, align 8
  %76 = load i32, i32* %6, align 4
  %77 = srem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %46
  %80 = load i8*, i8** %5, align 8
  store i8* %80, i8** %2, align 8
  br label %89

81:                                               ; preds = %46
  %82 = load i8*, i8** %5, align 8
  %83 = getelementptr inbounds i8, i8* %82, i32 1
  store i8* %83, i8** %5, align 8
  br label %84

84:                                               ; preds = %81
  br label %87

85:                                               ; preds = %19, %15
  %86 = load i8*, i8** %5, align 8
  store i8* %86, i8** %2, align 8
  br label %89

87:                                               ; preds = %84
  br label %11

88:                                               ; preds = %11
  store i8* null, i8** %2, align 8
  br label %89

89:                                               ; preds = %88, %85, %79
  %90 = load i8*, i8** %2, align 8
  ret i8* %90
}

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

declare dso_local i8* @getlogin() #3

declare dso_local %struct.passwd* @getpwnam(i8*) #3

; Function Attrs: nounwind
declare dso_local i32 @glob(i8*, i32, i32 (i8*, i32)*, %struct.glob_t*) #2

; Function Attrs: nounwind
declare dso_local void @globfree(%struct.glob_t*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uniquize_deps(%struct.dep* %0) #0 {
  %2 = alloca %struct.dep*, align 8
  %3 = alloca %struct.dep*, align 8
  %4 = alloca %struct.dep*, align 8
  %5 = alloca %struct.dep*, align 8
  %6 = alloca %struct.dep*, align 8
  store %struct.dep* %0, %struct.dep** %2, align 8
  %7 = load %struct.dep*, %struct.dep** %2, align 8
  store %struct.dep* %7, %struct.dep** %3, align 8
  br label %8

8:                                                ; preds = %187, %1
  %9 = load %struct.dep*, %struct.dep** %3, align 8
  %10 = icmp ne %struct.dep* %9, null
  br i1 %10, label %11, label %191

11:                                               ; preds = %8
  %12 = load %struct.dep*, %struct.dep** %3, align 8
  store %struct.dep* %12, %struct.dep** %4, align 8
  %13 = load %struct.dep*, %struct.dep** %3, align 8
  %14 = getelementptr inbounds %struct.dep, %struct.dep* %13, i32 0, i32 0
  %15 = load %struct.dep*, %struct.dep** %14, align 8
  store %struct.dep* %15, %struct.dep** %5, align 8
  br label %16

16:                                               ; preds = %185, %11
  %17 = load %struct.dep*, %struct.dep** %5, align 8
  %18 = icmp ne %struct.dep* %17, null
  br i1 %18, label %19, label %186

19:                                               ; preds = %16
  %20 = load %struct.dep*, %struct.dep** %3, align 8
  %21 = getelementptr inbounds %struct.dep, %struct.dep* %20, i32 0, i32 1
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %30

24:                                               ; preds = %19
  %25 = load %struct.dep*, %struct.dep** %3, align 8
  %26 = getelementptr inbounds %struct.dep, %struct.dep* %25, i32 0, i32 2
  %27 = load %struct.file*, %struct.file** %26, align 8
  %28 = getelementptr inbounds %struct.file, %struct.file* %27, i32 0, i32 1
  %29 = load i8*, i8** %28, align 8
  br label %34

30:                                               ; preds = %19
  %31 = load %struct.dep*, %struct.dep** %3, align 8
  %32 = getelementptr inbounds %struct.dep, %struct.dep* %31, i32 0, i32 1
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %30, %24
  %35 = phi i8* [ %29, %24 ], [ %33, %30 ]
  %36 = load %struct.dep*, %struct.dep** %5, align 8
  %37 = getelementptr inbounds %struct.dep, %struct.dep* %36, i32 0, i32 1
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %46

40:                                               ; preds = %34
  %41 = load %struct.dep*, %struct.dep** %5, align 8
  %42 = getelementptr inbounds %struct.dep, %struct.dep* %41, i32 0, i32 2
  %43 = load %struct.file*, %struct.file** %42, align 8
  %44 = getelementptr inbounds %struct.file, %struct.file* %43, i32 0, i32 1
  %45 = load i8*, i8** %44, align 8
  br label %50

46:                                               ; preds = %34
  %47 = load %struct.dep*, %struct.dep** %5, align 8
  %48 = getelementptr inbounds %struct.dep, %struct.dep* %47, i32 0, i32 1
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %46, %40
  %51 = phi i8* [ %45, %40 ], [ %49, %46 ]
  %52 = icmp eq i8* %35, %51
  br i1 %52, label %148, label %53

53:                                               ; preds = %50
  %54 = load %struct.dep*, %struct.dep** %3, align 8
  %55 = getelementptr inbounds %struct.dep, %struct.dep* %54, i32 0, i32 1
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %58, label %64

58:                                               ; preds = %53
  %59 = load %struct.dep*, %struct.dep** %3, align 8
  %60 = getelementptr inbounds %struct.dep, %struct.dep* %59, i32 0, i32 2
  %61 = load %struct.file*, %struct.file** %60, align 8
  %62 = getelementptr inbounds %struct.file, %struct.file* %61, i32 0, i32 1
  %63 = load i8*, i8** %62, align 8
  br label %68

64:                                               ; preds = %53
  %65 = load %struct.dep*, %struct.dep** %3, align 8
  %66 = getelementptr inbounds %struct.dep, %struct.dep* %65, i32 0, i32 1
  %67 = load i8*, i8** %66, align 8
  br label %68

68:                                               ; preds = %64, %58
  %69 = phi i8* [ %63, %58 ], [ %67, %64 ]
  %70 = load i8, i8* %69, align 1
  %71 = sext i8 %70 to i32
  %72 = load %struct.dep*, %struct.dep** %5, align 8
  %73 = getelementptr inbounds %struct.dep, %struct.dep* %72, i32 0, i32 1
  %74 = load i8*, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %76, label %82

76:                                               ; preds = %68
  %77 = load %struct.dep*, %struct.dep** %5, align 8
  %78 = getelementptr inbounds %struct.dep, %struct.dep* %77, i32 0, i32 2
  %79 = load %struct.file*, %struct.file** %78, align 8
  %80 = getelementptr inbounds %struct.file, %struct.file* %79, i32 0, i32 1
  %81 = load i8*, i8** %80, align 8
  br label %86

82:                                               ; preds = %68
  %83 = load %struct.dep*, %struct.dep** %5, align 8
  %84 = getelementptr inbounds %struct.dep, %struct.dep* %83, i32 0, i32 1
  %85 = load i8*, i8** %84, align 8
  br label %86

86:                                               ; preds = %82, %76
  %87 = phi i8* [ %81, %76 ], [ %85, %82 ]
  %88 = load i8, i8* %87, align 1
  %89 = sext i8 %88 to i32
  %90 = icmp eq i32 %71, %89
  br i1 %90, label %91, label %180

91:                                               ; preds = %86
  %92 = load %struct.dep*, %struct.dep** %3, align 8
  %93 = getelementptr inbounds %struct.dep, %struct.dep* %92, i32 0, i32 1
  %94 = load i8*, i8** %93, align 8
  %95 = icmp eq i8* %94, null
  br i1 %95, label %96, label %102

96:                                               ; preds = %91
  %97 = load %struct.dep*, %struct.dep** %3, align 8
  %98 = getelementptr inbounds %struct.dep, %struct.dep* %97, i32 0, i32 2
  %99 = load %struct.file*, %struct.file** %98, align 8
  %100 = getelementptr inbounds %struct.file, %struct.file* %99, i32 0, i32 1
  %101 = load i8*, i8** %100, align 8
  br label %106

102:                                              ; preds = %91
  %103 = load %struct.dep*, %struct.dep** %3, align 8
  %104 = getelementptr inbounds %struct.dep, %struct.dep* %103, i32 0, i32 1
  %105 = load i8*, i8** %104, align 8
  br label %106

106:                                              ; preds = %102, %96
  %107 = phi i8* [ %101, %96 ], [ %105, %102 ]
  %108 = load i8, i8* %107, align 1
  %109 = sext i8 %108 to i32
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %148, label %111

111:                                              ; preds = %106
  %112 = load %struct.dep*, %struct.dep** %3, align 8
  %113 = getelementptr inbounds %struct.dep, %struct.dep* %112, i32 0, i32 1
  %114 = load i8*, i8** %113, align 8
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %122

116:                                              ; preds = %111
  %117 = load %struct.dep*, %struct.dep** %3, align 8
  %118 = getelementptr inbounds %struct.dep, %struct.dep* %117, i32 0, i32 2
  %119 = load %struct.file*, %struct.file** %118, align 8
  %120 = getelementptr inbounds %struct.file, %struct.file* %119, i32 0, i32 1
  %121 = load i8*, i8** %120, align 8
  br label %126

122:                                              ; preds = %111
  %123 = load %struct.dep*, %struct.dep** %3, align 8
  %124 = getelementptr inbounds %struct.dep, %struct.dep* %123, i32 0, i32 1
  %125 = load i8*, i8** %124, align 8
  br label %126

126:                                              ; preds = %122, %116
  %127 = phi i8* [ %121, %116 ], [ %125, %122 ]
  %128 = getelementptr inbounds i8, i8* %127, i64 1
  %129 = load %struct.dep*, %struct.dep** %5, align 8
  %130 = getelementptr inbounds %struct.dep, %struct.dep* %129, i32 0, i32 1
  %131 = load i8*, i8** %130, align 8
  %132 = icmp eq i8* %131, null
  br i1 %132, label %133, label %139

133:                                              ; preds = %126
  %134 = load %struct.dep*, %struct.dep** %5, align 8
  %135 = getelementptr inbounds %struct.dep, %struct.dep* %134, i32 0, i32 2
  %136 = load %struct.file*, %struct.file** %135, align 8
  %137 = getelementptr inbounds %struct.file, %struct.file* %136, i32 0, i32 1
  %138 = load i8*, i8** %137, align 8
  br label %143

139:                                              ; preds = %126
  %140 = load %struct.dep*, %struct.dep** %5, align 8
  %141 = getelementptr inbounds %struct.dep, %struct.dep* %140, i32 0, i32 1
  %142 = load i8*, i8** %141, align 8
  br label %143

143:                                              ; preds = %139, %133
  %144 = phi i8* [ %138, %133 ], [ %142, %139 ]
  %145 = getelementptr inbounds i8, i8* %144, i64 1
  %146 = call i32 @strcmp(i8* %128, i8* %145) #9
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %180, label %148

148:                                              ; preds = %143, %106, %50
  %149 = load %struct.dep*, %struct.dep** %5, align 8
  %150 = getelementptr inbounds %struct.dep, %struct.dep* %149, i32 0, i32 0
  %151 = load %struct.dep*, %struct.dep** %150, align 8
  store %struct.dep* %151, %struct.dep** %6, align 8
  %152 = load %struct.dep*, %struct.dep** %6, align 8
  %153 = load %struct.dep*, %struct.dep** %4, align 8
  %154 = getelementptr inbounds %struct.dep, %struct.dep* %153, i32 0, i32 0
  store %struct.dep* %152, %struct.dep** %154, align 8
  %155 = load %struct.dep*, %struct.dep** %5, align 8
  %156 = getelementptr inbounds %struct.dep, %struct.dep* %155, i32 0, i32 1
  %157 = load i8*, i8** %156, align 8
  %158 = icmp ne i8* %157, null
  br i1 %158, label %159, label %171

159:                                              ; preds = %148
  %160 = load %struct.dep*, %struct.dep** %5, align 8
  %161 = getelementptr inbounds %struct.dep, %struct.dep* %160, i32 0, i32 1
  %162 = load i8*, i8** %161, align 8
  %163 = load %struct.dep*, %struct.dep** %3, align 8
  %164 = getelementptr inbounds %struct.dep, %struct.dep* %163, i32 0, i32 1
  %165 = load i8*, i8** %164, align 8
  %166 = icmp ne i8* %162, %165
  br i1 %166, label %167, label %171

167:                                              ; preds = %159
  %168 = load %struct.dep*, %struct.dep** %5, align 8
  %169 = getelementptr inbounds %struct.dep, %struct.dep* %168, i32 0, i32 1
  %170 = load i8*, i8** %169, align 8
  call void @free(i8* %170) #10
  br label %171

171:                                              ; preds = %167, %159, %148
  %172 = load %struct.dep*, %struct.dep** %5, align 8
  %173 = load %struct.dep*, %struct.dep** %3, align 8
  %174 = icmp ne %struct.dep* %172, %173
  br i1 %174, label %175, label %178

175:                                              ; preds = %171
  %176 = load %struct.dep*, %struct.dep** %5, align 8
  %177 = bitcast %struct.dep* %176 to i8*
  call void @free(i8* %177) #10
  br label %178

178:                                              ; preds = %175, %171
  %179 = load %struct.dep*, %struct.dep** %6, align 8
  store %struct.dep* %179, %struct.dep** %5, align 8
  br label %185

180:                                              ; preds = %143, %86
  %181 = load %struct.dep*, %struct.dep** %5, align 8
  store %struct.dep* %181, %struct.dep** %4, align 8
  %182 = load %struct.dep*, %struct.dep** %5, align 8
  %183 = getelementptr inbounds %struct.dep, %struct.dep* %182, i32 0, i32 0
  %184 = load %struct.dep*, %struct.dep** %183, align 8
  store %struct.dep* %184, %struct.dep** %5, align 8
  br label %185

185:                                              ; preds = %180, %178
  br label %16

186:                                              ; preds = %16
  br label %187

187:                                              ; preds = %186
  %188 = load %struct.dep*, %struct.dep** %3, align 8
  %189 = getelementptr inbounds %struct.dep, %struct.dep* %188, i32 0, i32 0
  %190 = load %struct.dep*, %struct.dep** %189, align 8
  store %struct.dep* %190, %struct.dep** %3, align 8
  br label %8

191:                                              ; preds = %8
  ret void
}

declare dso_local i8* @fgets(i8*, i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @construct_include_path(i8** %0) #0 {
  %2 = alloca i8**, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.stat, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8**, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store i8** %0, i8*** %2, align 8
  store i32 4, i32* %5, align 4
  store i32 5, i32* %6, align 4
  %11 = load i32, i32* %5, align 4
  %12 = add i32 5, %11
  %13 = zext i32 %12 to i64
  %14 = mul i64 %13, 8
  %15 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 %14)
  %16 = bitcast i8* %15 to i8**
  store i8** %16, i8*** %7, align 8
  store i32 0, i32* %8, align 4
  %17 = load i8**, i8*** %2, align 8
  %18 = icmp ne i8** %17, null
  br i1 %18, label %19, label %62

19:                                               ; preds = %1
  br label %20

20:                                               ; preds = %60, %19
  %21 = load i8**, i8*** %2, align 8
  %22 = load i8*, i8** %21, align 8
  %23 = icmp ne i8* %22, null
  br i1 %23, label %24, label %61

24:                                               ; preds = %20
  %25 = load i8**, i8*** %2, align 8
  %26 = getelementptr inbounds i8*, i8** %25, i32 1
  store i8** %26, i8*** %2, align 8
  %27 = load i8*, i8** %25, align 8
  store i8* %27, i8** %9, align 8
  %28 = load i8*, i8** %9, align 8
  %29 = call i32 @stat(i8* %28, %struct.stat* %4) #10
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %60

31:                                               ; preds = %24
  %32 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 61440
  %35 = icmp eq i32 %34, 16384
  br i1 %35, label %36, label %60

36:                                               ; preds = %31
  %37 = load i32, i32* %8, align 4
  %38 = load i32, i32* %6, align 4
  %39 = sub i32 %38, 1
  %40 = icmp eq i32 %37, %39
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  %42 = load i32, i32* %6, align 4
  %43 = add i32 %42, 5
  store i32 %43, i32* %6, align 4
  %44 = load i8**, i8*** %7, align 8
  %45 = bitcast i8** %44 to i8*
  %46 = load i32, i32* %6, align 4
  %47 = load i32, i32* %5, align 4
  %48 = add i32 %46, %47
  %49 = zext i32 %48 to i64
  %50 = mul i64 %49, 8
  %51 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i64, ...)*)(i8* %45, i64 %50)
  %52 = bitcast i8* %51 to i8**
  store i8** %52, i8*** %7, align 8
  br label %53

53:                                               ; preds = %41, %36
  %54 = load i8*, i8** %9, align 8
  %55 = load i8**, i8*** %7, align 8
  %56 = load i32, i32* %8, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %8, align 4
  %58 = zext i32 %56 to i64
  %59 = getelementptr inbounds i8*, i8** %55, i64 %58
  store i8* %54, i8** %59, align 8
  br label %60

60:                                               ; preds = %53, %31, %24
  br label %20

61:                                               ; preds = %20
  br label %62

62:                                               ; preds = %61, %1
  store i32 0, i32* %3, align 4
  br label %63

63:                                               ; preds = %92, %62
  %64 = load i32, i32* %3, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds [4 x i8*], [4 x i8*]* @default_include_directories, i64 0, i64 %65
  %67 = load i8*, i8** %66, align 8
  %68 = icmp ne i8* %67, null
  br i1 %68, label %69, label %95

69:                                               ; preds = %63
  %70 = load i32, i32* %3, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds [4 x i8*], [4 x i8*]* @default_include_directories, i64 0, i64 %71
  %73 = load i8*, i8** %72, align 8
  %74 = call i32 @stat(i8* %73, %struct.stat* %4) #10
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %91

76:                                               ; preds = %69
  %77 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = and i32 %78, 61440
  %80 = icmp eq i32 %79, 16384
  br i1 %80, label %81, label %91

81:                                               ; preds = %76
  %82 = load i32, i32* %3, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds [4 x i8*], [4 x i8*]* @default_include_directories, i64 0, i64 %83
  %85 = load i8*, i8** %84, align 8
  %86 = load i8**, i8*** %7, align 8
  %87 = load i32, i32* %8, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %8, align 4
  %89 = zext i32 %87 to i64
  %90 = getelementptr inbounds i8*, i8** %86, i64 %89
  store i8* %85, i8** %90, align 8
  br label %91

91:                                               ; preds = %81, %76, %69
  br label %92

92:                                               ; preds = %91
  %93 = load i32, i32* %3, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %3, align 4
  br label %63

95:                                               ; preds = %63
  %96 = load i8**, i8*** %7, align 8
  %97 = load i32, i32* %8, align 4
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i8*, i8** %96, i64 %98
  store i8* null, i8** %99, align 8
  store i32 0, i32* @max_incl_len, align 4
  store i32 0, i32* %3, align 4
  br label %100

100:                                              ; preds = %144, %95
  %101 = load i32, i32* %3, align 4
  %102 = load i32, i32* %8, align 4
  %103 = icmp ult i32 %101, %102
  br i1 %103, label %104, label %147

104:                                              ; preds = %100
  %105 = load i8**, i8*** %7, align 8
  %106 = load i32, i32* %3, align 4
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds i8*, i8** %105, i64 %107
  %109 = load i8*, i8** %108, align 8
  %110 = call i64 @strlen(i8* %109) #9
  %111 = trunc i64 %110 to i32
  store i32 %111, i32* %10, align 4
  %112 = load i8**, i8*** %7, align 8
  %113 = load i32, i32* %3, align 4
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds i8*, i8** %112, i64 %114
  %116 = load i8*, i8** %115, align 8
  %117 = load i32, i32* %10, align 4
  %118 = sub i32 %117, 1
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds i8, i8* %116, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = sext i8 %121 to i32
  %123 = icmp eq i32 %122, 47
  br i1 %123, label %124, label %137

124:                                              ; preds = %104
  %125 = load i8**, i8*** %7, align 8
  %126 = load i32, i32* %3, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds i8*, i8** %125, i64 %127
  %129 = load i8*, i8** %128, align 8
  %130 = load i32, i32* %10, align 4
  %131 = sub i32 %130, 1
  %132 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i32, ...)*)(i8* %129, i32 %131)
  %133 = load i8**, i8*** %7, align 8
  %134 = load i32, i32* %3, align 4
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds i8*, i8** %133, i64 %135
  store i8* %132, i8** %136, align 8
  br label %137

137:                                              ; preds = %124, %104
  %138 = load i32, i32* %10, align 4
  %139 = load i32, i32* @max_incl_len, align 4
  %140 = icmp ugt i32 %138, %139
  br i1 %140, label %141, label %143

141:                                              ; preds = %137
  %142 = load i32, i32* %10, align 4
  store i32 %142, i32* @max_incl_len, align 4
  br label %143

143:                                              ; preds = %141, %137
  br label %144

144:                                              ; preds = %143
  %145 = load i32, i32* %3, align 4
  %146 = add i32 %145, 1
  store i32 %146, i32* %3, align 4
  br label %100

147:                                              ; preds = %100
  %148 = load i8**, i8*** %7, align 8
  store i8** %148, i8*** @include_directories.508, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @update_goal_chain(%struct.dep* %0, i32 %1) #0 {
  %3 = alloca %struct.dep*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.dep*, align 8
  %11 = alloca %struct.dep*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  store %struct.dep* %0, %struct.dep** %3, align 8
  store i32 %1, i32* %4, align 4
  %15 = load i32, i32* @touch_flag, align 4
  store i32 %15, i32* %5, align 4
  %16 = load i32, i32* @question_flag, align 4
  store i32 %16, i32* %6, align 4
  %17 = load i32, i32* @just_print_flag, align 4
  store i32 %17, i32* %7, align 4
  %18 = load i32, i32* @job_slots, align 4
  store i32 %18, i32* %8, align 4
  store i32 -1, i32* %9, align 4
  %19 = load %struct.dep*, %struct.dep** %3, align 8
  %20 = call %struct.dep* (%struct.dep*, ...) bitcast (%struct.dep* (%struct.dep*)* @copy_dep_chain to %struct.dep* (%struct.dep*, ...)*)(%struct.dep* %19)
  store %struct.dep* %20, %struct.dep** %3, align 8
  %21 = load i32, i32* %4, align 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %2
  store i32 1, i32* @job_slots, align 4
  br label %24

24:                                               ; preds = %23, %2
  br label %25

25:                                               ; preds = %296, %24
  %26 = load %struct.dep*, %struct.dep** %3, align 8
  %27 = icmp ne %struct.dep* %26, null
  br i1 %27, label %28, label %297

28:                                               ; preds = %25
  call void (i32, i32, ...) bitcast (void (i32, i32)* @wait_for_children to void (i32, i32, ...)*)(i32 1, i32 0)
  store %struct.dep* null, %struct.dep** %11, align 8
  %29 = load %struct.dep*, %struct.dep** %3, align 8
  store %struct.dep* %29, %struct.dep** %10, align 8
  br label %30

30:                                               ; preds = %295, %28
  %31 = load %struct.dep*, %struct.dep** %10, align 8
  %32 = icmp ne %struct.dep* %31, null
  br i1 %32, label %33, label %296

33:                                               ; preds = %30
  %34 = load i32, i32* %4, align 4
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %56

36:                                               ; preds = %33
  %37 = load %struct.dep*, %struct.dep** %10, align 8
  %38 = getelementptr inbounds %struct.dep, %struct.dep* %37, i32 0, i32 2
  %39 = load %struct.file*, %struct.file** %38, align 8
  %40 = getelementptr inbounds %struct.file, %struct.file* %39, i32 0, i32 6
  %41 = load i64, i64* %40, align 8
  %42 = icmp ne i64 %41, 0
  br i1 %42, label %43, label %49

43:                                               ; preds = %36
  %44 = load %struct.dep*, %struct.dep** %10, align 8
  %45 = getelementptr inbounds %struct.dep, %struct.dep* %44, i32 0, i32 2
  %46 = load %struct.file*, %struct.file** %45, align 8
  %47 = getelementptr inbounds %struct.file, %struct.file* %46, i32 0, i32 6
  %48 = load i64, i64* %47, align 8
  br label %54

49:                                               ; preds = %36
  %50 = load %struct.dep*, %struct.dep** %10, align 8
  %51 = getelementptr inbounds %struct.dep, %struct.dep* %50, i32 0, i32 2
  %52 = load %struct.file*, %struct.file** %51, align 8
  %53 = call i64 @f_mtime(%struct.file* %52, i32 0)
  br label %54

54:                                               ; preds = %49, %43
  %55 = phi i64 [ %48, %43 ], [ %53, %49 ]
  br label %76

56:                                               ; preds = %33
  %57 = load %struct.dep*, %struct.dep** %10, align 8
  %58 = getelementptr inbounds %struct.dep, %struct.dep* %57, i32 0, i32 2
  %59 = load %struct.file*, %struct.file** %58, align 8
  %60 = getelementptr inbounds %struct.file, %struct.file* %59, i32 0, i32 6
  %61 = load i64, i64* %60, align 8
  %62 = icmp ne i64 %61, 0
  br i1 %62, label %63, label %69

63:                                               ; preds = %56
  %64 = load %struct.dep*, %struct.dep** %10, align 8
  %65 = getelementptr inbounds %struct.dep, %struct.dep* %64, i32 0, i32 2
  %66 = load %struct.file*, %struct.file** %65, align 8
  %67 = getelementptr inbounds %struct.file, %struct.file* %66, i32 0, i32 6
  %68 = load i64, i64* %67, align 8
  br label %74

69:                                               ; preds = %56
  %70 = load %struct.dep*, %struct.dep** %10, align 8
  %71 = getelementptr inbounds %struct.dep, %struct.dep* %70, i32 0, i32 2
  %72 = load %struct.file*, %struct.file** %71, align 8
  %73 = call i64 @f_mtime(%struct.file* %72, i32 1)
  br label %74

74:                                               ; preds = %69, %63
  %75 = phi i64 [ %68, %63 ], [ %73, %69 ]
  br label %76

76:                                               ; preds = %74, %54
  %77 = phi i64 [ %55, %54 ], [ %75, %74 ]
  store i64 %77, i64* %13, align 8
  br label %78

78:                                               ; preds = %85, %76
  %79 = load %struct.dep*, %struct.dep** %10, align 8
  %80 = getelementptr inbounds %struct.dep, %struct.dep* %79, i32 0, i32 2
  %81 = load %struct.file*, %struct.file** %80, align 8
  %82 = getelementptr inbounds %struct.file, %struct.file* %81, i32 0, i32 8
  %83 = load %struct.file*, %struct.file** %82, align 8
  %84 = icmp ne %struct.file* %83, null
  br i1 %84, label %85, label %93

85:                                               ; preds = %78
  %86 = load %struct.dep*, %struct.dep** %10, align 8
  %87 = getelementptr inbounds %struct.dep, %struct.dep* %86, i32 0, i32 2
  %88 = load %struct.file*, %struct.file** %87, align 8
  %89 = getelementptr inbounds %struct.file, %struct.file* %88, i32 0, i32 8
  %90 = load %struct.file*, %struct.file** %89, align 8
  %91 = load %struct.dep*, %struct.dep** %10, align 8
  %92 = getelementptr inbounds %struct.dep, %struct.dep* %91, i32 0, i32 2
  store %struct.file* %90, %struct.file** %92, align 8
  br label %78

93:                                               ; preds = %78
  %94 = load i32, i32* %4, align 4
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %96, label %112

96:                                               ; preds = %93
  %97 = load %struct.dep*, %struct.dep** %10, align 8
  %98 = getelementptr inbounds %struct.dep, %struct.dep* %97, i32 0, i32 2
  %99 = load %struct.file*, %struct.file** %98, align 8
  %100 = getelementptr inbounds %struct.file, %struct.file* %99, i32 0, i32 12
  %101 = load i16, i16* %100, align 2
  %102 = lshr i16 %101, 8
  %103 = and i16 %102, 1
  %104 = zext i16 %103 to i32
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %106, label %110

106:                                              ; preds = %96
  %107 = load i32, i32* %5, align 4
  store i32 %107, i32* @touch_flag, align 4
  %108 = load i32, i32* %6, align 4
  store i32 %108, i32* @question_flag, align 4
  %109 = load i32, i32* %7, align 4
  store i32 %109, i32* @just_print_flag, align 4
  br label %111

110:                                              ; preds = %96
  store i32 0, i32* @just_print_flag, align 4
  store i32 0, i32* @question_flag, align 4
  store i32 0, i32* @touch_flag, align 4
  br label %111

111:                                              ; preds = %110, %106
  br label %112

112:                                              ; preds = %111, %93
  %113 = load %struct.dep*, %struct.dep** %10, align 8
  %114 = getelementptr inbounds %struct.dep, %struct.dep* %113, i32 0, i32 2
  %115 = load %struct.file*, %struct.file** %114, align 8
  %116 = load i32, i32* %4, align 4
  %117 = icmp ne i32 %116, 0
  %118 = zext i1 %117 to i64
  %119 = select i1 %117, i32 1, i32 0
  %120 = call i32 @update_file(%struct.file* %115, i32 %119)
  store i32 %120, i32* %12, align 4
  br label %121

121:                                              ; preds = %128, %112
  %122 = load %struct.dep*, %struct.dep** %10, align 8
  %123 = getelementptr inbounds %struct.dep, %struct.dep* %122, i32 0, i32 2
  %124 = load %struct.file*, %struct.file** %123, align 8
  %125 = getelementptr inbounds %struct.file, %struct.file* %124, i32 0, i32 8
  %126 = load %struct.file*, %struct.file** %125, align 8
  %127 = icmp ne %struct.file* %126, null
  br i1 %127, label %128, label %136

128:                                              ; preds = %121
  %129 = load %struct.dep*, %struct.dep** %10, align 8
  %130 = getelementptr inbounds %struct.dep, %struct.dep* %129, i32 0, i32 2
  %131 = load %struct.file*, %struct.file** %130, align 8
  %132 = getelementptr inbounds %struct.file, %struct.file* %131, i32 0, i32 8
  %133 = load %struct.file*, %struct.file** %132, align 8
  %134 = load %struct.dep*, %struct.dep** %10, align 8
  %135 = getelementptr inbounds %struct.dep, %struct.dep* %134, i32 0, i32 2
  store %struct.file* %133, %struct.file** %135, align 8
  br label %121

136:                                              ; preds = %121
  %137 = load i32, i32* %12, align 4
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %149, label %139

139:                                              ; preds = %136
  %140 = load %struct.dep*, %struct.dep** %10, align 8
  %141 = getelementptr inbounds %struct.dep, %struct.dep* %140, i32 0, i32 2
  %142 = load %struct.file*, %struct.file** %141, align 8
  %143 = getelementptr inbounds %struct.file, %struct.file* %142, i32 0, i32 12
  %144 = load i16, i16* %143, align 2
  %145 = lshr i16 %144, 6
  %146 = and i16 %145, 1
  %147 = zext i16 %146 to i32
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %149, label %290

149:                                              ; preds = %139, %136
  store i32 0, i32* %14, align 4
  %150 = load i32, i32* %9, align 4
  %151 = icmp slt i32 %150, 1
  br i1 %151, label %152, label %244

152:                                              ; preds = %149
  %153 = load %struct.dep*, %struct.dep** %10, align 8
  %154 = getelementptr inbounds %struct.dep, %struct.dep* %153, i32 0, i32 2
  %155 = load %struct.file*, %struct.file** %154, align 8
  %156 = getelementptr inbounds %struct.file, %struct.file* %155, i32 0, i32 11
  %157 = load i16, i16* %156, align 8
  %158 = sext i16 %157 to i32
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %160, label %170

160:                                              ; preds = %152
  store i32 1, i32* %9, align 4
  %161 = load i32, i32* @keep_going_flag, align 4
  %162 = icmp ne i32 %161, 0
  br i1 %162, label %167, label %163

163:                                              ; preds = %160
  %164 = load i32, i32* %4, align 4
  %165 = icmp ne i32 %164, 0
  %166 = xor i1 %165, true
  br label %167

167:                                              ; preds = %163, %160
  %168 = phi i1 [ false, %160 ], [ %166, %163 ]
  %169 = zext i1 %168 to i32
  store i32 %169, i32* %14, align 4
  br label %243

170:                                              ; preds = %152
  %171 = load i32, i32* %4, align 4
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %173, label %193

173:                                              ; preds = %170
  %174 = load %struct.dep*, %struct.dep** %10, align 8
  %175 = getelementptr inbounds %struct.dep, %struct.dep* %174, i32 0, i32 2
  %176 = load %struct.file*, %struct.file** %175, align 8
  %177 = getelementptr inbounds %struct.file, %struct.file* %176, i32 0, i32 6
  %178 = load i64, i64* %177, align 8
  %179 = icmp ne i64 %178, 0
  br i1 %179, label %180, label %186

180:                                              ; preds = %173
  %181 = load %struct.dep*, %struct.dep** %10, align 8
  %182 = getelementptr inbounds %struct.dep, %struct.dep* %181, i32 0, i32 2
  %183 = load %struct.file*, %struct.file** %182, align 8
  %184 = getelementptr inbounds %struct.file, %struct.file* %183, i32 0, i32 6
  %185 = load i64, i64* %184, align 8
  br label %191

186:                                              ; preds = %173
  %187 = load %struct.dep*, %struct.dep** %10, align 8
  %188 = getelementptr inbounds %struct.dep, %struct.dep* %187, i32 0, i32 2
  %189 = load %struct.file*, %struct.file** %188, align 8
  %190 = call i64 @f_mtime(%struct.file* %189, i32 0)
  br label %191

191:                                              ; preds = %186, %180
  %192 = phi i64 [ %185, %180 ], [ %190, %186 ]
  br label %213

193:                                              ; preds = %170
  %194 = load %struct.dep*, %struct.dep** %10, align 8
  %195 = getelementptr inbounds %struct.dep, %struct.dep* %194, i32 0, i32 2
  %196 = load %struct.file*, %struct.file** %195, align 8
  %197 = getelementptr inbounds %struct.file, %struct.file* %196, i32 0, i32 6
  %198 = load i64, i64* %197, align 8
  %199 = icmp ne i64 %198, 0
  br i1 %199, label %200, label %206

200:                                              ; preds = %193
  %201 = load %struct.dep*, %struct.dep** %10, align 8
  %202 = getelementptr inbounds %struct.dep, %struct.dep* %201, i32 0, i32 2
  %203 = load %struct.file*, %struct.file** %202, align 8
  %204 = getelementptr inbounds %struct.file, %struct.file* %203, i32 0, i32 6
  %205 = load i64, i64* %204, align 8
  br label %211

206:                                              ; preds = %193
  %207 = load %struct.dep*, %struct.dep** %10, align 8
  %208 = getelementptr inbounds %struct.dep, %struct.dep* %207, i32 0, i32 2
  %209 = load %struct.file*, %struct.file** %208, align 8
  %210 = call i64 @f_mtime(%struct.file* %209, i32 1)
  br label %211

211:                                              ; preds = %206, %200
  %212 = phi i64 [ %205, %200 ], [ %210, %206 ]
  br label %213

213:                                              ; preds = %211, %191
  %214 = phi i64 [ %192, %191 ], [ %212, %211 ]
  %215 = load i64, i64* %13, align 8
  %216 = icmp ne i64 %214, %215
  br i1 %216, label %217, label %242

217:                                              ; preds = %213
  %218 = load i32, i32* %4, align 4
  %219 = icmp ne i32 %218, 0
  br i1 %219, label %220, label %226

220:                                              ; preds = %217
  %221 = load i32, i32* @just_print_flag, align 4
  %222 = icmp ne i32 %221, 0
  br i1 %222, label %227, label %223

223:                                              ; preds = %220
  %224 = load i32, i32* @question_flag, align 4
  %225 = icmp ne i32 %224, 0
  br i1 %225, label %227, label %226

226:                                              ; preds = %223, %217
  store i32 0, i32* %9, align 4
  br label %227

227:                                              ; preds = %226, %223, %220
  %228 = load i32, i32* %4, align 4
  %229 = icmp ne i32 %228, 0
  br i1 %229, label %230, label %241

230:                                              ; preds = %227
  %231 = load %struct.dep*, %struct.dep** %10, align 8
  %232 = getelementptr inbounds %struct.dep, %struct.dep* %231, i32 0, i32 2
  %233 = load %struct.file*, %struct.file** %232, align 8
  %234 = getelementptr inbounds %struct.file, %struct.file* %233, i32 0, i32 12
  %235 = load i16, i16* %234, align 2
  %236 = lshr i16 %235, 11
  %237 = and i16 %236, 1
  %238 = zext i16 %237 to i32
  %239 = icmp ne i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %230
  store i32 1, i32* %14, align 4
  br label %241

241:                                              ; preds = %240, %230, %227
  br label %242

242:                                              ; preds = %241, %213
  br label %243

243:                                              ; preds = %242, %167
  br label %244

244:                                              ; preds = %243, %149
  %245 = load %struct.dep*, %struct.dep** %10, align 8
  %246 = getelementptr inbounds %struct.dep, %struct.dep* %245, i32 0, i32 2
  %247 = load %struct.file*, %struct.file** %246, align 8
  %248 = getelementptr inbounds %struct.file, %struct.file* %247, i32 0, i32 7
  %249 = load %struct.file*, %struct.file** %248, align 8
  %250 = load %struct.dep*, %struct.dep** %10, align 8
  %251 = getelementptr inbounds %struct.dep, %struct.dep* %250, i32 0, i32 2
  store %struct.file* %249, %struct.file** %251, align 8
  %252 = load i32, i32* %14, align 4
  %253 = icmp ne i32 %252, 0
  br i1 %253, label %259, label %254

254:                                              ; preds = %244
  %255 = load %struct.dep*, %struct.dep** %10, align 8
  %256 = getelementptr inbounds %struct.dep, %struct.dep* %255, i32 0, i32 2
  %257 = load %struct.file*, %struct.file** %256, align 8
  %258 = icmp eq %struct.file* %257, null
  br i1 %258, label %259, label %285

259:                                              ; preds = %254, %244
  %260 = load %struct.dep*, %struct.dep** %11, align 8
  %261 = icmp eq %struct.dep* %260, null
  br i1 %261, label %262, label %266

262:                                              ; preds = %259
  %263 = load %struct.dep*, %struct.dep** %10, align 8
  %264 = getelementptr inbounds %struct.dep, %struct.dep* %263, i32 0, i32 0
  %265 = load %struct.dep*, %struct.dep** %264, align 8
  store %struct.dep* %265, %struct.dep** %3, align 8
  br label %272

266:                                              ; preds = %259
  %267 = load %struct.dep*, %struct.dep** %10, align 8
  %268 = getelementptr inbounds %struct.dep, %struct.dep* %267, i32 0, i32 0
  %269 = load %struct.dep*, %struct.dep** %268, align 8
  %270 = load %struct.dep*, %struct.dep** %11, align 8
  %271 = getelementptr inbounds %struct.dep, %struct.dep* %270, i32 0, i32 0
  store %struct.dep* %269, %struct.dep** %271, align 8
  br label %272

272:                                              ; preds = %266, %262
  %273 = load %struct.dep*, %struct.dep** %10, align 8
  %274 = bitcast %struct.dep* %273 to i8*
  call void @free(i8* %274) #10
  %275 = load %struct.dep*, %struct.dep** %11, align 8
  %276 = icmp eq %struct.dep* %275, null
  br i1 %276, label %277, label %279

277:                                              ; preds = %272
  %278 = load %struct.dep*, %struct.dep** %3, align 8
  br label %283

279:                                              ; preds = %272
  %280 = load %struct.dep*, %struct.dep** %11, align 8
  %281 = getelementptr inbounds %struct.dep, %struct.dep* %280, i32 0, i32 0
  %282 = load %struct.dep*, %struct.dep** %281, align 8
  br label %283

283:                                              ; preds = %279, %277
  %284 = phi %struct.dep* [ %278, %277 ], [ %282, %279 ]
  store %struct.dep* %284, %struct.dep** %10, align 8
  br label %285

285:                                              ; preds = %283, %254
  %286 = load i32, i32* %14, align 4
  %287 = icmp ne i32 %286, 0
  br i1 %287, label %288, label %289

288:                                              ; preds = %285
  br label %296

289:                                              ; preds = %285
  br label %295

290:                                              ; preds = %139
  %291 = load %struct.dep*, %struct.dep** %10, align 8
  store %struct.dep* %291, %struct.dep** %11, align 8
  %292 = load %struct.dep*, %struct.dep** %10, align 8
  %293 = getelementptr inbounds %struct.dep, %struct.dep* %292, i32 0, i32 0
  %294 = load %struct.dep*, %struct.dep** %293, align 8
  store %struct.dep* %294, %struct.dep** %10, align 8
  br label %295

295:                                              ; preds = %290, %289
  br label %30

296:                                              ; preds = %288, %30
  br label %25

297:                                              ; preds = %25
  %298 = load i32, i32* %4, align 4
  %299 = icmp ne i32 %298, 0
  br i1 %299, label %300, label %305

300:                                              ; preds = %297
  %301 = load i32, i32* %5, align 4
  store i32 %301, i32* @touch_flag, align 4
  %302 = load i32, i32* %6, align 4
  store i32 %302, i32* @question_flag, align 4
  %303 = load i32, i32* %7, align 4
  store i32 %303, i32* @just_print_flag, align 4
  %304 = load i32, i32* %8, align 4
  store i32 %304, i32* @job_slots, align 4
  br label %305

305:                                              ; preds = %300, %297
  %306 = load i32, i32* %9, align 4
  ret i32 %306
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @f_mtime(%struct.file* %0, i32 %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.file*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct.file*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  store %struct.file* %0, %struct.file** %4, align 8
  store i32 %1, i32* %5, align 4
  %14 = load %struct.file*, %struct.file** %4, align 8
  %15 = getelementptr inbounds %struct.file, %struct.file* %14, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = call i32 (i8*, ...) bitcast (i32 (i8*)* @ar_name to i32 (i8*, ...)*)(i8* %16)
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %135

19:                                               ; preds = %2
  store i32 0, i32* %10, align 4
  %20 = load %struct.file*, %struct.file** %4, align 8
  %21 = getelementptr inbounds %struct.file, %struct.file* %20, i32 0, i32 1
  %22 = load i8*, i8** %21, align 8
  call void (i8*, i8**, i8**, ...) bitcast (void (i8*, i8**, i8**)* @ar_parse_name to void (i8*, i8**, i8**, ...)*)(i8* %22, i8** %7, i8** %8)
  %23 = load i8*, i8** %7, align 8
  %24 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @lookup_file to %struct.file* (i8*, ...)*)(i8* %23)
  store %struct.file* %24, %struct.file** %9, align 8
  %25 = load %struct.file*, %struct.file** %9, align 8
  %26 = icmp eq %struct.file* %25, null
  br i1 %26, label %27, label %30

27:                                               ; preds = %19
  %28 = load i8*, i8** %7, align 8
  %29 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* %28)
  store %struct.file* %29, %struct.file** %9, align 8
  store i32 1, i32* %10, align 4
  br label %30

30:                                               ; preds = %27, %19
  %31 = load %struct.file*, %struct.file** %9, align 8
  %32 = load i32, i32* %5, align 4
  %33 = call i64 @f_mtime(%struct.file* %31, i32 %32)
  store i64 %33, i64* %6, align 8
  br label %34

34:                                               ; preds = %39, %30
  %35 = load %struct.file*, %struct.file** %9, align 8
  %36 = getelementptr inbounds %struct.file, %struct.file* %35, i32 0, i32 8
  %37 = load %struct.file*, %struct.file** %36, align 8
  %38 = icmp ne %struct.file* %37, null
  br i1 %38, label %39, label %43

39:                                               ; preds = %34
  %40 = load %struct.file*, %struct.file** %9, align 8
  %41 = getelementptr inbounds %struct.file, %struct.file* %40, i32 0, i32 8
  %42 = load %struct.file*, %struct.file** %41, align 8
  store %struct.file* %42, %struct.file** %9, align 8
  br label %34

43:                                               ; preds = %34
  %44 = load i32, i32* %5, align 4
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %120

46:                                               ; preds = %43
  %47 = load %struct.file*, %struct.file** %9, align 8
  %48 = getelementptr inbounds %struct.file, %struct.file* %47, i32 0, i32 1
  %49 = load i8*, i8** %48, align 8
  %50 = load i8*, i8** %7, align 8
  %51 = call i32 @strcmp(i8* %49, i8* %50) #9
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %120

53:                                               ; preds = %46
  %54 = load i32, i32* %10, align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = load i8*, i8** %7, align 8
  call void @free(i8* %57) #10
  store i32 1, i32* %10, align 4
  br label %58

58:                                               ; preds = %56, %53
  %59 = load %struct.file*, %struct.file** %9, align 8
  %60 = getelementptr inbounds %struct.file, %struct.file* %59, i32 0, i32 1
  %61 = load i8*, i8** %60, align 8
  store i8* %61, i8** %7, align 8
  %62 = load i8*, i8** %7, align 8
  %63 = call i64 @strlen(i8* %62) #9
  %64 = trunc i64 %63 to i32
  store i32 %64, i32* %11, align 4
  %65 = load i8*, i8** %8, align 8
  %66 = call i64 @strlen(i8* %65) #9
  %67 = trunc i64 %66 to i32
  store i32 %67, i32* %12, align 4
  %68 = load %struct.file*, %struct.file** %4, align 8
  %69 = getelementptr inbounds %struct.file, %struct.file* %68, i32 0, i32 1
  %70 = load i8*, i8** %69, align 8
  call void @free(i8* %70) #10
  %71 = load i32, i32* %11, align 4
  %72 = add i32 %71, 1
  %73 = load i32, i32* %12, align 4
  %74 = add i32 %72, %73
  %75 = add i32 %74, 2
  %76 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %75)
  %77 = load %struct.file*, %struct.file** %4, align 8
  %78 = getelementptr inbounds %struct.file, %struct.file* %77, i32 0, i32 1
  store i8* %76, i8** %78, align 8
  %79 = load %struct.file*, %struct.file** %4, align 8
  %80 = getelementptr inbounds %struct.file, %struct.file* %79, i32 0, i32 1
  %81 = load i8*, i8** %80, align 8
  %82 = load i8*, i8** %7, align 8
  %83 = load i32, i32* %11, align 4
  %84 = zext i32 %83 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* align 1 %82, i64 %84, i1 false)
  %85 = load %struct.file*, %struct.file** %4, align 8
  %86 = getelementptr inbounds %struct.file, %struct.file* %85, i32 0, i32 1
  %87 = load i8*, i8** %86, align 8
  %88 = load i32, i32* %11, align 4
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i8, i8* %87, i64 %89
  store i8 40, i8* %90, align 1
  %91 = load %struct.file*, %struct.file** %4, align 8
  %92 = getelementptr inbounds %struct.file, %struct.file* %91, i32 0, i32 1
  %93 = load i8*, i8** %92, align 8
  %94 = load i32, i32* %11, align 4
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds i8, i8* %93, i64 %95
  %97 = getelementptr inbounds i8, i8* %96, i64 1
  %98 = load i8*, i8** %8, align 8
  %99 = load i32, i32* %12, align 4
  %100 = zext i32 %99 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %97, i8* align 1 %98, i64 %100, i1 false)
  %101 = load %struct.file*, %struct.file** %4, align 8
  %102 = getelementptr inbounds %struct.file, %struct.file* %101, i32 0, i32 1
  %103 = load i8*, i8** %102, align 8
  %104 = load i32, i32* %11, align 4
  %105 = add i32 %104, 1
  %106 = load i32, i32* %12, align 4
  %107 = add i32 %105, %106
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %103, i64 %108
  store i8 41, i8* %109, align 1
  %110 = load %struct.file*, %struct.file** %4, align 8
  %111 = getelementptr inbounds %struct.file, %struct.file* %110, i32 0, i32 1
  %112 = load i8*, i8** %111, align 8
  %113 = load i32, i32* %11, align 4
  %114 = add i32 %113, 1
  %115 = load i32, i32* %12, align 4
  %116 = add i32 %114, %115
  %117 = add i32 %116, 1
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds i8, i8* %112, i64 %118
  store i8 0, i8* %119, align 1
  br label %120

120:                                              ; preds = %58, %46, %43
  %121 = load i32, i32* %10, align 4
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %120
  %124 = load i8*, i8** %7, align 8
  call void @free(i8* %124) #10
  br label %125

125:                                              ; preds = %123, %120
  %126 = load i8*, i8** %8, align 8
  call void @free(i8* %126) #10
  %127 = load i64, i64* %6, align 8
  %128 = icmp eq i64 %127, -1
  br i1 %128, label %129, label %130

129:                                              ; preds = %125
  store i64 -1, i64* %3, align 8
  br label %209

130:                                              ; preds = %125
  %131 = load %struct.file*, %struct.file** %4, align 8
  %132 = getelementptr inbounds %struct.file, %struct.file* %131, i32 0, i32 1
  %133 = load i8*, i8** %132, align 8
  %134 = call i64 (i8*, ...) bitcast (i64 (i8*)* @ar_member_date to i64 (i8*, ...)*)(i8* %133)
  store i64 %134, i64* %6, align 8
  br label %196

135:                                              ; preds = %2
  %136 = load %struct.file*, %struct.file** %4, align 8
  %137 = getelementptr inbounds %struct.file, %struct.file* %136, i32 0, i32 1
  %138 = load i8*, i8** %137, align 8
  %139 = call i64 @name_mtime(i8* %138)
  store i64 %139, i64* %6, align 8
  %140 = load i64, i64* %6, align 8
  %141 = icmp eq i64 %140, -1
  br i1 %141, label %142, label %195

142:                                              ; preds = %135
  %143 = load i32, i32* %5, align 4
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %145, label %195

145:                                              ; preds = %142
  %146 = load %struct.file*, %struct.file** %4, align 8
  %147 = getelementptr inbounds %struct.file, %struct.file* %146, i32 0, i32 1
  %148 = load i8*, i8** %147, align 8
  store i8* %148, i8** %13, align 8
  %149 = call i32 (i8**, ...) bitcast (i32 (i8**)* @vpath_search to i32 (i8**, ...)*)(i8** %13)
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %151, label %177

151:                                              ; preds = %145
  %152 = load %struct.file*, %struct.file** %4, align 8
  %153 = load i8*, i8** %13, align 8
  call void (%struct.file*, i8*, ...) bitcast (void (%struct.file*, i8*)* @rename_file to void (%struct.file*, i8*, ...)*)(%struct.file* %152, i8* %153)
  br label %154

154:                                              ; preds = %159, %151
  %155 = load %struct.file*, %struct.file** %4, align 8
  %156 = getelementptr inbounds %struct.file, %struct.file* %155, i32 0, i32 8
  %157 = load %struct.file*, %struct.file** %156, align 8
  %158 = icmp ne %struct.file* %157, null
  br i1 %158, label %159, label %163

159:                                              ; preds = %154
  %160 = load %struct.file*, %struct.file** %4, align 8
  %161 = getelementptr inbounds %struct.file, %struct.file* %160, i32 0, i32 8
  %162 = load %struct.file*, %struct.file** %161, align 8
  store %struct.file* %162, %struct.file** %4, align 8
  br label %154

163:                                              ; preds = %154
  %164 = load %struct.file*, %struct.file** %4, align 8
  %165 = getelementptr inbounds %struct.file, %struct.file* %164, i32 0, i32 6
  %166 = load i64, i64* %165, align 8
  %167 = icmp ne i64 %166, 0
  br i1 %167, label %168, label %172

168:                                              ; preds = %163
  %169 = load %struct.file*, %struct.file** %4, align 8
  %170 = getelementptr inbounds %struct.file, %struct.file* %169, i32 0, i32 6
  %171 = load i64, i64* %170, align 8
  br label %175

172:                                              ; preds = %163
  %173 = load %struct.file*, %struct.file** %4, align 8
  %174 = call i64 @f_mtime(%struct.file* %173, i32 1)
  br label %175

175:                                              ; preds = %172, %168
  %176 = phi i64 [ %171, %168 ], [ %174, %172 ]
  store i64 %176, i64* %3, align 8
  br label %209

177:                                              ; preds = %145
  %178 = load i8*, i8** %13, align 8
  %179 = getelementptr inbounds i8, i8* %178, i64 0
  %180 = load i8, i8* %179, align 1
  %181 = sext i8 %180 to i32
  %182 = icmp eq i32 %181, 45
  br i1 %182, label %183, label %193

183:                                              ; preds = %177
  %184 = load i8*, i8** %13, align 8
  %185 = getelementptr inbounds i8, i8* %184, i64 1
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %187, 108
  br i1 %188, label %189, label %193

189:                                              ; preds = %183
  %190 = load i8*, i8** %13, align 8
  %191 = getelementptr inbounds i8, i8* %190, i64 2
  %192 = call i64 @library_file_mtime(i8* %191)
  store i64 %192, i64* %6, align 8
  br label %193

193:                                              ; preds = %189, %183, %177
  br label %194

194:                                              ; preds = %193
  br label %195

195:                                              ; preds = %194, %142, %135
  br label %196

196:                                              ; preds = %195, %130
  br label %197

197:                                              ; preds = %200, %196
  %198 = load %struct.file*, %struct.file** %4, align 8
  %199 = icmp ne %struct.file* %198, null
  br i1 %199, label %200, label %207

200:                                              ; preds = %197
  %201 = load i64, i64* %6, align 8
  %202 = load %struct.file*, %struct.file** %4, align 8
  %203 = getelementptr inbounds %struct.file, %struct.file* %202, i32 0, i32 6
  store i64 %201, i64* %203, align 8
  %204 = load %struct.file*, %struct.file** %4, align 8
  %205 = getelementptr inbounds %struct.file, %struct.file* %204, i32 0, i32 7
  %206 = load %struct.file*, %struct.file** %205, align 8
  store %struct.file* %206, %struct.file** %4, align 8
  br label %197

207:                                              ; preds = %197
  %208 = load i64, i64* %6, align 8
  store i64 %208, i64* %3, align 8
  br label %209

209:                                              ; preds = %207, %175, %129
  %210 = load i64, i64* %3, align 8
  ret i64 %210
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @update_file(%struct.file* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.file*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.file*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.dep*, align 8
  %11 = alloca i8, align 1
  store %struct.file* %0, %struct.file** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 0, i32* %6, align 4
  %12 = load i32, i32* @files_remade, align 4
  store i32 %12, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %13 = load %struct.file*, %struct.file** %4, align 8
  store %struct.file* %13, %struct.file** %7, align 8
  br label %14

14:                                               ; preds = %115, %2
  %15 = load %struct.file*, %struct.file** %7, align 8
  %16 = icmp ne %struct.file* %15, null
  br i1 %16, label %17, label %119

17:                                               ; preds = %14
  %18 = load %struct.file*, %struct.file** %7, align 8
  %19 = getelementptr inbounds %struct.file, %struct.file* %18, i32 0, i32 12
  %20 = load i16, i16* %19, align 2
  %21 = and i16 %20, 3
  %22 = zext i16 %21 to i32
  %23 = icmp eq i32 %22, 0
  %24 = zext i1 %23 to i32
  %25 = trunc i32 %24 to i8
  store i8 %25, i8* %11, align 1
  %26 = load %struct.file*, %struct.file** %7, align 8
  %27 = load i32, i32* %5, align 4
  %28 = call i32 @update_file_1(%struct.file* %26, i32 %27)
  %29 = load i32, i32* %6, align 4
  %30 = or i32 %29, %28
  store i32 %30, i32* %6, align 4
  br label %31

31:                                               ; preds = %36, %17
  %32 = load %struct.file*, %struct.file** %7, align 8
  %33 = getelementptr inbounds %struct.file, %struct.file* %32, i32 0, i32 8
  %34 = load %struct.file*, %struct.file** %33, align 8
  %35 = icmp ne %struct.file* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %31
  %37 = load %struct.file*, %struct.file** %7, align 8
  %38 = getelementptr inbounds %struct.file, %struct.file* %37, i32 0, i32 8
  %39 = load %struct.file*, %struct.file** %38, align 8
  store %struct.file* %39, %struct.file** %7, align 8
  br label %31

40:                                               ; preds = %31
  %41 = load %struct.file*, %struct.file** %7, align 8
  %42 = getelementptr inbounds %struct.file, %struct.file* %41, i32 0, i32 5
  %43 = load %struct.dep*, %struct.dep** %42, align 8
  store %struct.dep* %43, %struct.dep** %10, align 8
  br label %44

44:                                               ; preds = %87, %40
  %45 = load %struct.dep*, %struct.dep** %10, align 8
  %46 = icmp ne %struct.dep* %45, null
  br i1 %46, label %47, label %91

47:                                               ; preds = %44
  %48 = load %struct.file*, %struct.file** %7, align 8
  %49 = getelementptr inbounds %struct.file, %struct.file* %48, i32 0, i32 12
  %50 = load i16, i16* %49, align 2
  %51 = and i16 %50, 3
  %52 = zext i16 %51 to i32
  %53 = load %struct.dep*, %struct.dep** %10, align 8
  %54 = getelementptr inbounds %struct.dep, %struct.dep* %53, i32 0, i32 2
  %55 = load %struct.file*, %struct.file** %54, align 8
  %56 = getelementptr inbounds %struct.file, %struct.file* %55, i32 0, i32 12
  %57 = trunc i32 %52 to i16
  %58 = load i16, i16* %56, align 2
  %59 = and i16 %57, 3
  %60 = and i16 %58, -4
  %61 = or i16 %60, %59
  store i16 %61, i16* %56, align 2
  %62 = zext i16 %59 to i32
  %63 = load %struct.file*, %struct.file** %7, align 8
  %64 = getelementptr inbounds %struct.file, %struct.file* %63, i32 0, i32 11
  %65 = load i16, i16* %64, align 8
  %66 = load %struct.dep*, %struct.dep** %10, align 8
  %67 = getelementptr inbounds %struct.dep, %struct.dep* %66, i32 0, i32 2
  %68 = load %struct.file*, %struct.file** %67, align 8
  %69 = getelementptr inbounds %struct.file, %struct.file* %68, i32 0, i32 11
  store i16 %65, i16* %69, align 8
  %70 = load %struct.file*, %struct.file** %7, align 8
  %71 = getelementptr inbounds %struct.file, %struct.file* %70, i32 0, i32 12
  %72 = load i16, i16* %71, align 2
  %73 = lshr i16 %72, 6
  %74 = and i16 %73, 1
  %75 = zext i16 %74 to i32
  %76 = load %struct.dep*, %struct.dep** %10, align 8
  %77 = getelementptr inbounds %struct.dep, %struct.dep* %76, i32 0, i32 2
  %78 = load %struct.file*, %struct.file** %77, align 8
  %79 = getelementptr inbounds %struct.file, %struct.file* %78, i32 0, i32 12
  %80 = trunc i32 %75 to i16
  %81 = load i16, i16* %79, align 2
  %82 = and i16 %80, 1
  %83 = shl i16 %82, 6
  %84 = and i16 %81, -65
  %85 = or i16 %84, %83
  store i16 %85, i16* %79, align 2
  %86 = zext i16 %82 to i32
  br label %87

87:                                               ; preds = %47
  %88 = load %struct.dep*, %struct.dep** %10, align 8
  %89 = getelementptr inbounds %struct.dep, %struct.dep* %88, i32 0, i32 0
  %90 = load %struct.dep*, %struct.dep** %89, align 8
  store %struct.dep* %90, %struct.dep** %10, align 8
  br label %44

91:                                               ; preds = %44
  %92 = load i32, i32* %6, align 4
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %99

94:                                               ; preds = %91
  %95 = load i32, i32* @keep_going_flag, align 4
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = load i32, i32* %6, align 4
  store i32 %98, i32* %3, align 4
  br label %164

99:                                               ; preds = %94, %91
  %100 = load i8, i8* %11, align 1
  %101 = sext i8 %100 to i32
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %110

103:                                              ; preds = %99
  %104 = load %struct.file*, %struct.file** %7, align 8
  %105 = getelementptr inbounds %struct.file, %struct.file* %104, i32 0, i32 12
  %106 = load i16, i16* %105, align 2
  %107 = and i16 %106, 3
  %108 = zext i16 %107 to i32
  %109 = icmp eq i32 %108, 3
  br label %110

110:                                              ; preds = %103, %99
  %111 = phi i1 [ false, %99 ], [ %109, %103 ]
  %112 = zext i1 %111 to i32
  %113 = load i32, i32* %9, align 4
  %114 = or i32 %113, %112
  store i32 %114, i32* %9, align 4
  br label %115

115:                                              ; preds = %110
  %116 = load %struct.file*, %struct.file** %7, align 8
  %117 = getelementptr inbounds %struct.file, %struct.file* %116, i32 0, i32 7
  %118 = load %struct.file*, %struct.file** %117, align 8
  store %struct.file* %118, %struct.file** %7, align 8
  br label %14

119:                                              ; preds = %14
  %120 = load i32, i32* %6, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %162

122:                                              ; preds = %119
  %123 = load i32, i32* @files_remade, align 4
  %124 = load i32, i32* %8, align 4
  %125 = icmp eq i32 %123, %124
  br i1 %125, label %126, label %162

126:                                              ; preds = %122
  %127 = load i32, i32* %9, align 4
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %162

129:                                              ; preds = %126
  %130 = load i32, i32* %5, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %162

132:                                              ; preds = %129
  %133 = load i32, i32* @silent_flag, align 4
  %134 = icmp ne i32 %133, 0
  br i1 %134, label %162, label %135

135:                                              ; preds = %132
  %136 = load i32, i32* @question_flag, align 4
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %162, label %138

138:                                              ; preds = %135
  %139 = load %struct.file*, %struct.file** %4, align 8
  %140 = getelementptr inbounds %struct.file, %struct.file* %139, i32 0, i32 12
  %141 = load i16, i16* %140, align 2
  %142 = lshr i16 %141, 9
  %143 = and i16 %142, 1
  %144 = zext i16 %143 to i32
  %145 = icmp ne i32 %144, 0
  br i1 %145, label %151, label %146

146:                                              ; preds = %138
  %147 = load %struct.file*, %struct.file** %4, align 8
  %148 = getelementptr inbounds %struct.file, %struct.file* %147, i32 0, i32 3
  %149 = load %struct.commands*, %struct.commands** %148, align 8
  %150 = icmp eq %struct.commands* %149, null
  br i1 %150, label %151, label %155

151:                                              ; preds = %146, %138
  %152 = load %struct.file*, %struct.file** %4, align 8
  %153 = getelementptr inbounds %struct.file, %struct.file* %152, i32 0, i32 1
  %154 = load i8*, i8** %153, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @message to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.569, i64 0, i64 0), i8* %154)
  br label %159

155:                                              ; preds = %146
  %156 = load %struct.file*, %struct.file** %4, align 8
  %157 = getelementptr inbounds %struct.file, %struct.file* %156, i32 0, i32 1
  %158 = load i8*, i8** %157, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @message to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.570, i64 0, i64 0), i8* %158)
  br label %159

159:                                              ; preds = %155, %151
  %160 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %161 = call i32 @fflush(%struct._IO_FILE* %160)
  br label %162

162:                                              ; preds = %159, %135, %132, %129, %126, %122, %119
  %163 = load i32, i32* %6, align 4
  store i32 %163, i32* %3, align 4
  br label %164

164:                                              ; preds = %162, %97
  %165 = load i32, i32* %3, align 4
  ret i32 %165
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @update_file_1(%struct.file* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.file*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.dep*, align 8
  %12 = alloca %struct.dep*, align 8
  %13 = alloca i8, align 1
  %14 = alloca i64, align 8
  %15 = alloca %struct.file*, align 8
  %16 = alloca i64, align 8
  %17 = alloca %struct.file*, align 8
  %18 = alloca i64, align 8
  store %struct.file* %0, %struct.file** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 0, i32* %10, align 4
  store i8 0, i8* %13, align 1
  %19 = load i32, i32* @debug_flag, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %2
  %22 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %22)
  %23 = load %struct.file*, %struct.file** %4, align 8
  %24 = getelementptr inbounds %struct.file, %struct.file* %23, i32 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2.571, i64 0, i64 0), i8* %25)
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %28 = call i32 @fflush(%struct._IO_FILE* %27)
  br label %30

29:                                               ; preds = %2
  br label %30

30:                                               ; preds = %29, %21
  %31 = load %struct.file*, %struct.file** %4, align 8
  %32 = getelementptr inbounds %struct.file, %struct.file* %31, i32 0, i32 12
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 6
  %35 = and i16 %34, 1
  %36 = zext i16 %35 to i32
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %74

38:                                               ; preds = %30
  %39 = load %struct.file*, %struct.file** %4, align 8
  %40 = getelementptr inbounds %struct.file, %struct.file* %39, i32 0, i32 11
  %41 = load i16, i16* %40, align 8
  %42 = sext i16 %41 to i32
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %61

44:                                               ; preds = %38
  %45 = load i32, i32* @debug_flag, align 4
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %55

47:                                               ; preds = %44
  %48 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %48)
  %49 = load %struct.file*, %struct.file** %4, align 8
  %50 = getelementptr inbounds %struct.file, %struct.file* %49, i32 0, i32 1
  %51 = load i8*, i8** %50, align 8
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3.572, i64 0, i64 0), i8* %51)
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %54 = call i32 @fflush(%struct._IO_FILE* %53)
  br label %56

55:                                               ; preds = %44
  br label %56

56:                                               ; preds = %55, %47
  %57 = load %struct.file*, %struct.file** %4, align 8
  %58 = getelementptr inbounds %struct.file, %struct.file* %57, i32 0, i32 11
  %59 = load i16, i16* %58, align 8
  %60 = sext i16 %59 to i32
  store i32 %60, i32* %3, align 4
  br label %1000

61:                                               ; preds = %38
  %62 = load i32, i32* @debug_flag, align 4
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %72

64:                                               ; preds = %61
  %65 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %65)
  %66 = load %struct.file*, %struct.file** %4, align 8
  %67 = getelementptr inbounds %struct.file, %struct.file* %66, i32 0, i32 1
  %68 = load i8*, i8** %67, align 8
  %69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4.573, i64 0, i64 0), i8* %68)
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %71 = call i32 @fflush(%struct._IO_FILE* %70)
  br label %73

72:                                               ; preds = %61
  br label %73

73:                                               ; preds = %72, %64
  store i32 0, i32* %3, align 4
  br label %1000

74:                                               ; preds = %30
  %75 = load %struct.file*, %struct.file** %4, align 8
  %76 = getelementptr inbounds %struct.file, %struct.file* %75, i32 0, i32 12
  %77 = load i16, i16* %76, align 2
  %78 = and i16 %77, 3
  %79 = zext i16 %78 to i32
  switch i32 %79, label %111 [
    i32 0, label %80
    i32 1, label %80
    i32 2, label %81
    i32 3, label %94
  ]

80:                                               ; preds = %74, %74
  br label %112

81:                                               ; preds = %74
  %82 = load i32, i32* @debug_flag, align 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %92

84:                                               ; preds = %81
  %85 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %85)
  %86 = load %struct.file*, %struct.file** %4, align 8
  %87 = getelementptr inbounds %struct.file, %struct.file* %86, i32 0, i32 1
  %88 = load i8*, i8** %87, align 8
  %89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5.574, i64 0, i64 0), i8* %88)
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %91 = call i32 @fflush(%struct._IO_FILE* %90)
  br label %93

92:                                               ; preds = %81
  br label %93

93:                                               ; preds = %92, %84
  store i32 0, i32* %3, align 4
  br label %1000

94:                                               ; preds = %74
  %95 = load i32, i32* @debug_flag, align 4
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %97, label %105

97:                                               ; preds = %94
  %98 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %98)
  %99 = load %struct.file*, %struct.file** %4, align 8
  %100 = getelementptr inbounds %struct.file, %struct.file* %99, i32 0, i32 1
  %101 = load i8*, i8** %100, align 8
  %102 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.575, i64 0, i64 0), i8* %101)
  %103 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %104 = call i32 @fflush(%struct._IO_FILE* %103)
  br label %106

105:                                              ; preds = %94
  br label %106

106:                                              ; preds = %105, %97
  %107 = load %struct.file*, %struct.file** %4, align 8
  %108 = getelementptr inbounds %struct.file, %struct.file* %107, i32 0, i32 11
  %109 = load i16, i16* %108, align 8
  %110 = sext i16 %109 to i32
  store i32 %110, i32* %3, align 4
  br label %1000

111:                                              ; preds = %74
  call void @abort() #12
  unreachable

112:                                              ; preds = %80
  %113 = load i32, i32* %5, align 4
  %114 = add i32 %113, 1
  store i32 %114, i32* %5, align 4
  %115 = load %struct.file*, %struct.file** %4, align 8
  %116 = getelementptr inbounds %struct.file, %struct.file* %115, i32 0, i32 12
  %117 = load i16, i16* %116, align 2
  %118 = and i16 %117, -33
  %119 = or i16 %118, 32
  store i16 %119, i16* %116, align 2
  %120 = load %struct.file*, %struct.file** %4, align 8
  %121 = getelementptr inbounds %struct.file, %struct.file* %120, i32 0, i32 6
  %122 = load i64, i64* %121, align 8
  %123 = icmp ne i64 %122, 0
  br i1 %123, label %124, label %128

124:                                              ; preds = %112
  %125 = load %struct.file*, %struct.file** %4, align 8
  %126 = getelementptr inbounds %struct.file, %struct.file* %125, i32 0, i32 6
  %127 = load i64, i64* %126, align 8
  br label %131

128:                                              ; preds = %112
  %129 = load %struct.file*, %struct.file** %4, align 8
  %130 = call i64 @f_mtime(%struct.file* %129, i32 1)
  br label %131

131:                                              ; preds = %128, %124
  %132 = phi i64 [ %127, %124 ], [ %130, %128 ]
  store i64 %132, i64* %6, align 8
  br label %133

133:                                              ; preds = %138, %131
  %134 = load %struct.file*, %struct.file** %4, align 8
  %135 = getelementptr inbounds %struct.file, %struct.file* %134, i32 0, i32 8
  %136 = load %struct.file*, %struct.file** %135, align 8
  %137 = icmp ne %struct.file* %136, null
  br i1 %137, label %138, label %142

138:                                              ; preds = %133
  %139 = load %struct.file*, %struct.file** %4, align 8
  %140 = getelementptr inbounds %struct.file, %struct.file* %139, i32 0, i32 8
  %141 = load %struct.file*, %struct.file** %140, align 8
  store %struct.file* %141, %struct.file** %4, align 8
  br label %133

142:                                              ; preds = %133
  %143 = load i64, i64* %6, align 8
  %144 = icmp eq i64 %143, -1
  %145 = zext i1 %144 to i32
  store i32 %145, i32* %7, align 4
  %146 = load i32, i32* %7, align 4
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %148, label %161

148:                                              ; preds = %142
  %149 = load i32, i32* @debug_flag, align 4
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %151, label %159

151:                                              ; preds = %148
  %152 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %152)
  %153 = load %struct.file*, %struct.file** %4, align 8
  %154 = getelementptr inbounds %struct.file, %struct.file* %153, i32 0, i32 1
  %155 = load i8*, i8** %154, align 8
  %156 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7.576, i64 0, i64 0), i8* %155)
  %157 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %158 = call i32 @fflush(%struct._IO_FILE* %157)
  br label %160

159:                                              ; preds = %148
  br label %160

160:                                              ; preds = %159, %151
  br label %161

161:                                              ; preds = %160, %142
  %162 = load i32, i32* %7, align 4
  store i32 %162, i32* %8, align 4
  %163 = load %struct.file*, %struct.file** %4, align 8
  %164 = getelementptr inbounds %struct.file, %struct.file* %163, i32 0, i32 12
  %165 = load i16, i16* %164, align 2
  %166 = lshr i16 %165, 9
  %167 = and i16 %166, 1
  %168 = zext i16 %167 to i32
  %169 = icmp ne i32 %168, 0
  br i1 %169, label %246, label %170

170:                                              ; preds = %161
  %171 = load %struct.file*, %struct.file** %4, align 8
  %172 = getelementptr inbounds %struct.file, %struct.file* %171, i32 0, i32 3
  %173 = load %struct.commands*, %struct.commands** %172, align 8
  %174 = icmp eq %struct.commands* %173, null
  br i1 %174, label %175, label %246

175:                                              ; preds = %170
  %176 = load %struct.file*, %struct.file** %4, align 8
  %177 = getelementptr inbounds %struct.file, %struct.file* %176, i32 0, i32 12
  %178 = load i16, i16* %177, align 2
  %179 = lshr i16 %178, 4
  %180 = and i16 %179, 1
  %181 = zext i16 %180 to i32
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %246, label %183

183:                                              ; preds = %175
  %184 = load %struct.file*, %struct.file** %4, align 8
  %185 = load i32, i32* %5, align 4
  %186 = call i32 (%struct.file*, i32, ...) bitcast (i32 (%struct.file*, i32)* @try_implicit_rule to i32 (%struct.file*, i32, ...)*)(%struct.file* %184, i32 %185)
  %187 = icmp ne i32 %186, 0
  br i1 %187, label %188, label %201

188:                                              ; preds = %183
  %189 = load i32, i32* @debug_flag, align 4
  %190 = icmp ne i32 %189, 0
  br i1 %190, label %191, label %199

191:                                              ; preds = %188
  %192 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %192)
  %193 = load %struct.file*, %struct.file** %4, align 8
  %194 = getelementptr inbounds %struct.file, %struct.file* %193, i32 0, i32 1
  %195 = load i8*, i8** %194, align 8
  %196 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8.577, i64 0, i64 0), i8* %195)
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %198 = call i32 @fflush(%struct._IO_FILE* %197)
  br label %200

199:                                              ; preds = %188
  br label %200

200:                                              ; preds = %199, %191
  br label %240

201:                                              ; preds = %183
  %202 = load i32, i32* @debug_flag, align 4
  %203 = icmp ne i32 %202, 0
  br i1 %203, label %204, label %212

204:                                              ; preds = %201
  %205 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %205)
  %206 = load %struct.file*, %struct.file** %4, align 8
  %207 = getelementptr inbounds %struct.file, %struct.file* %206, i32 0, i32 1
  %208 = load i8*, i8** %207, align 8
  %209 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9.578, i64 0, i64 0), i8* %208)
  %210 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %211 = call i32 @fflush(%struct._IO_FILE* %210)
  br label %213

212:                                              ; preds = %201
  br label %213

213:                                              ; preds = %212, %204
  %214 = load %struct.file*, %struct.file** @default_file, align 8
  %215 = icmp ne %struct.file* %214, null
  br i1 %215, label %216, label %239

216:                                              ; preds = %213
  %217 = load %struct.file*, %struct.file** @default_file, align 8
  %218 = getelementptr inbounds %struct.file, %struct.file* %217, i32 0, i32 3
  %219 = load %struct.commands*, %struct.commands** %218, align 8
  %220 = icmp ne %struct.commands* %219, null
  br i1 %220, label %221, label %239

221:                                              ; preds = %216
  %222 = load i32, i32* @debug_flag, align 4
  %223 = icmp ne i32 %222, 0
  br i1 %223, label %224, label %232

224:                                              ; preds = %221
  %225 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %225)
  %226 = load %struct.file*, %struct.file** %4, align 8
  %227 = getelementptr inbounds %struct.file, %struct.file* %226, i32 0, i32 1
  %228 = load i8*, i8** %227, align 8
  %229 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.10.579, i64 0, i64 0), i8* %228)
  %230 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %231 = call i32 @fflush(%struct._IO_FILE* %230)
  br label %233

232:                                              ; preds = %221
  br label %233

233:                                              ; preds = %232, %224
  %234 = load %struct.file*, %struct.file** @default_file, align 8
  %235 = getelementptr inbounds %struct.file, %struct.file* %234, i32 0, i32 3
  %236 = load %struct.commands*, %struct.commands** %235, align 8
  %237 = load %struct.file*, %struct.file** %4, align 8
  %238 = getelementptr inbounds %struct.file, %struct.file* %237, i32 0, i32 3
  store %struct.commands* %236, %struct.commands** %238, align 8
  br label %239

239:                                              ; preds = %233, %216, %213
  br label %240

240:                                              ; preds = %239, %200
  %241 = load %struct.file*, %struct.file** %4, align 8
  %242 = getelementptr inbounds %struct.file, %struct.file* %241, i32 0, i32 12
  %243 = load i16, i16* %242, align 2
  %244 = and i16 %243, -17
  %245 = or i16 %244, 16
  store i16 %245, i16* %242, align 2
  br label %246

246:                                              ; preds = %240, %175, %170, %161
  store %struct.dep* null, %struct.dep** %12, align 8
  %247 = load %struct.file*, %struct.file** %4, align 8
  %248 = getelementptr inbounds %struct.file, %struct.file* %247, i32 0, i32 2
  %249 = load %struct.dep*, %struct.dep** %248, align 8
  store %struct.dep* %249, %struct.dep** %11, align 8
  br label %250

250:                                              ; preds = %427, %331, %246
  %251 = load %struct.dep*, %struct.dep** %11, align 8
  %252 = icmp ne %struct.dep* %251, null
  br i1 %252, label %253, label %432

253:                                              ; preds = %250
  %254 = load %struct.dep*, %struct.dep** %11, align 8
  %255 = getelementptr inbounds %struct.dep, %struct.dep* %254, i32 0, i32 2
  %256 = load %struct.file*, %struct.file** %255, align 8
  %257 = getelementptr inbounds %struct.file, %struct.file* %256, i32 0, i32 6
  %258 = load i64, i64* %257, align 8
  %259 = icmp ne i64 %258, 0
  br i1 %259, label %260, label %266

260:                                              ; preds = %253
  %261 = load %struct.dep*, %struct.dep** %11, align 8
  %262 = getelementptr inbounds %struct.dep, %struct.dep* %261, i32 0, i32 2
  %263 = load %struct.file*, %struct.file** %262, align 8
  %264 = getelementptr inbounds %struct.file, %struct.file* %263, i32 0, i32 6
  %265 = load i64, i64* %264, align 8
  br label %271

266:                                              ; preds = %253
  %267 = load %struct.dep*, %struct.dep** %11, align 8
  %268 = getelementptr inbounds %struct.dep, %struct.dep* %267, i32 0, i32 2
  %269 = load %struct.file*, %struct.file** %268, align 8
  %270 = call i64 @f_mtime(%struct.file* %269, i32 1)
  br label %271

271:                                              ; preds = %266, %260
  %272 = phi i64 [ %265, %260 ], [ %270, %266 ]
  store i64 %272, i64* %14, align 8
  br label %273

273:                                              ; preds = %280, %271
  %274 = load %struct.dep*, %struct.dep** %11, align 8
  %275 = getelementptr inbounds %struct.dep, %struct.dep* %274, i32 0, i32 2
  %276 = load %struct.file*, %struct.file** %275, align 8
  %277 = getelementptr inbounds %struct.file, %struct.file* %276, i32 0, i32 8
  %278 = load %struct.file*, %struct.file** %277, align 8
  %279 = icmp ne %struct.file* %278, null
  br i1 %279, label %280, label %288

280:                                              ; preds = %273
  %281 = load %struct.dep*, %struct.dep** %11, align 8
  %282 = getelementptr inbounds %struct.dep, %struct.dep* %281, i32 0, i32 2
  %283 = load %struct.file*, %struct.file** %282, align 8
  %284 = getelementptr inbounds %struct.file, %struct.file* %283, i32 0, i32 8
  %285 = load %struct.file*, %struct.file** %284, align 8
  %286 = load %struct.dep*, %struct.dep** %11, align 8
  %287 = getelementptr inbounds %struct.dep, %struct.dep* %286, i32 0, i32 2
  store %struct.file* %285, %struct.file** %287, align 8
  br label %273

288:                                              ; preds = %273
  %289 = load %struct.dep*, %struct.dep** %11, align 8
  %290 = getelementptr inbounds %struct.dep, %struct.dep* %289, i32 0, i32 2
  %291 = load %struct.file*, %struct.file** %290, align 8
  %292 = getelementptr inbounds %struct.file, %struct.file* %291, i32 0, i32 12
  %293 = load i16, i16* %292, align 2
  %294 = lshr i16 %293, 5
  %295 = and i16 %294, 1
  %296 = zext i16 %295 to i32
  %297 = icmp ne i32 %296, 0
  br i1 %297, label %298, label %332

298:                                              ; preds = %288
  %299 = load %struct.file*, %struct.file** %4, align 8
  %300 = getelementptr inbounds %struct.file, %struct.file* %299, i32 0, i32 1
  %301 = load i8*, i8** %300, align 8
  %302 = load %struct.dep*, %struct.dep** %11, align 8
  %303 = getelementptr inbounds %struct.dep, %struct.dep* %302, i32 0, i32 2
  %304 = load %struct.file*, %struct.file** %303, align 8
  %305 = getelementptr inbounds %struct.file, %struct.file* %304, i32 0, i32 1
  %306 = load i8*, i8** %305, align 8
  call void (i8*, i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, i8*, ...)*)(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.11.580, i64 0, i64 0), i8* %301, i8* %306)
  %307 = load %struct.dep*, %struct.dep** %12, align 8
  %308 = icmp eq %struct.dep* %307, null
  br i1 %308, label %309, label %320

309:                                              ; preds = %298
  %310 = load %struct.dep*, %struct.dep** %11, align 8
  %311 = getelementptr inbounds %struct.dep, %struct.dep* %310, i32 0, i32 0
  %312 = load %struct.dep*, %struct.dep** %311, align 8
  %313 = load %struct.file*, %struct.file** %4, align 8
  %314 = getelementptr inbounds %struct.file, %struct.file* %313, i32 0, i32 2
  store %struct.dep* %312, %struct.dep** %314, align 8
  %315 = load %struct.dep*, %struct.dep** %11, align 8
  %316 = bitcast %struct.dep* %315 to i8*
  call void @free(i8* %316) #10
  %317 = load %struct.file*, %struct.file** %4, align 8
  %318 = getelementptr inbounds %struct.file, %struct.file* %317, i32 0, i32 2
  %319 = load %struct.dep*, %struct.dep** %318, align 8
  store %struct.dep* %319, %struct.dep** %11, align 8
  br label %331

320:                                              ; preds = %298
  %321 = load %struct.dep*, %struct.dep** %11, align 8
  %322 = getelementptr inbounds %struct.dep, %struct.dep* %321, i32 0, i32 0
  %323 = load %struct.dep*, %struct.dep** %322, align 8
  %324 = load %struct.dep*, %struct.dep** %12, align 8
  %325 = getelementptr inbounds %struct.dep, %struct.dep* %324, i32 0, i32 0
  store %struct.dep* %323, %struct.dep** %325, align 8
  %326 = load %struct.dep*, %struct.dep** %11, align 8
  %327 = bitcast %struct.dep* %326 to i8*
  call void @free(i8* %327) #10
  %328 = load %struct.dep*, %struct.dep** %12, align 8
  %329 = getelementptr inbounds %struct.dep, %struct.dep* %328, i32 0, i32 0
  %330 = load %struct.dep*, %struct.dep** %329, align 8
  store %struct.dep* %330, %struct.dep** %11, align 8
  br label %331

331:                                              ; preds = %320, %309
  br label %250

332:                                              ; preds = %288
  %333 = load %struct.file*, %struct.file** %4, align 8
  %334 = load %struct.dep*, %struct.dep** %11, align 8
  %335 = getelementptr inbounds %struct.dep, %struct.dep* %334, i32 0, i32 2
  %336 = load %struct.file*, %struct.file** %335, align 8
  %337 = getelementptr inbounds %struct.file, %struct.file* %336, i32 0, i32 10
  store %struct.file* %333, %struct.file** %337, align 8
  %338 = load %struct.dep*, %struct.dep** %11, align 8
  %339 = getelementptr inbounds %struct.dep, %struct.dep* %338, i32 0, i32 2
  %340 = load %struct.file*, %struct.file** %339, align 8
  %341 = load i32, i32* %5, align 4
  %342 = load i64, i64* %6, align 8
  %343 = call i32 @check_dep(%struct.file* %340, i32 %341, i64 %342, i32* %8)
  %344 = load i32, i32* %10, align 4
  %345 = or i32 %344, %343
  store i32 %345, i32* %10, align 4
  br label %346

346:                                              ; preds = %353, %332
  %347 = load %struct.dep*, %struct.dep** %11, align 8
  %348 = getelementptr inbounds %struct.dep, %struct.dep* %347, i32 0, i32 2
  %349 = load %struct.file*, %struct.file** %348, align 8
  %350 = getelementptr inbounds %struct.file, %struct.file* %349, i32 0, i32 8
  %351 = load %struct.file*, %struct.file** %350, align 8
  %352 = icmp ne %struct.file* %351, null
  br i1 %352, label %353, label %361

353:                                              ; preds = %346
  %354 = load %struct.dep*, %struct.dep** %11, align 8
  %355 = getelementptr inbounds %struct.dep, %struct.dep* %354, i32 0, i32 2
  %356 = load %struct.file*, %struct.file** %355, align 8
  %357 = getelementptr inbounds %struct.file, %struct.file* %356, i32 0, i32 8
  %358 = load %struct.file*, %struct.file** %357, align 8
  %359 = load %struct.dep*, %struct.dep** %11, align 8
  %360 = getelementptr inbounds %struct.dep, %struct.dep* %359, i32 0, i32 2
  store %struct.file* %358, %struct.file** %360, align 8
  br label %346

361:                                              ; preds = %346
  %362 = load %struct.dep*, %struct.dep** %11, align 8
  %363 = getelementptr inbounds %struct.dep, %struct.dep* %362, i32 0, i32 2
  %364 = load %struct.file*, %struct.file** %363, align 8
  store %struct.file* %364, %struct.file** %15, align 8
  br label %365

365:                                              ; preds = %389, %361
  %366 = load %struct.file*, %struct.file** %15, align 8
  %367 = getelementptr inbounds %struct.file, %struct.file* %366, i32 0, i32 12
  %368 = load i16, i16* %367, align 2
  %369 = and i16 %368, 3
  %370 = zext i16 %369 to i32
  %371 = icmp eq i32 %370, 2
  br i1 %371, label %379, label %372

372:                                              ; preds = %365
  %373 = load %struct.file*, %struct.file** %15, align 8
  %374 = getelementptr inbounds %struct.file, %struct.file* %373, i32 0, i32 12
  %375 = load i16, i16* %374, align 2
  %376 = and i16 %375, 3
  %377 = zext i16 %376 to i32
  %378 = icmp eq i32 %377, 1
  br label %379

379:                                              ; preds = %372, %365
  %380 = phi i1 [ true, %365 ], [ %378, %372 ]
  %381 = zext i1 %380 to i32
  %382 = load i8, i8* %13, align 1
  %383 = sext i8 %382 to i32
  %384 = or i32 %383, %381
  %385 = trunc i32 %384 to i8
  store i8 %385, i8* %13, align 1
  %386 = load %struct.file*, %struct.file** %15, align 8
  %387 = getelementptr inbounds %struct.file, %struct.file* %386, i32 0, i32 7
  %388 = load %struct.file*, %struct.file** %387, align 8
  store %struct.file* %388, %struct.file** %15, align 8
  br label %389

389:                                              ; preds = %379
  %390 = load %struct.file*, %struct.file** %15, align 8
  %391 = icmp ne %struct.file* %390, null
  br i1 %391, label %365, label %392

392:                                              ; preds = %389
  %393 = load i32, i32* %10, align 4
  %394 = icmp ne i32 %393, 0
  br i1 %394, label %395, label %399

395:                                              ; preds = %392
  %396 = load i32, i32* @keep_going_flag, align 4
  %397 = icmp ne i32 %396, 0
  br i1 %397, label %399, label %398

398:                                              ; preds = %395
  br label %432

399:                                              ; preds = %395, %392
  %400 = load i8, i8* %13, align 1
  %401 = icmp ne i8 %400, 0
  br i1 %401, label %427, label %402

402:                                              ; preds = %399
  %403 = load %struct.dep*, %struct.dep** %11, align 8
  %404 = getelementptr inbounds %struct.dep, %struct.dep* %403, i32 0, i32 2
  %405 = load %struct.file*, %struct.file** %404, align 8
  %406 = getelementptr inbounds %struct.file, %struct.file* %405, i32 0, i32 6
  %407 = load i64, i64* %406, align 8
  %408 = icmp ne i64 %407, 0
  br i1 %408, label %409, label %415

409:                                              ; preds = %402
  %410 = load %struct.dep*, %struct.dep** %11, align 8
  %411 = getelementptr inbounds %struct.dep, %struct.dep* %410, i32 0, i32 2
  %412 = load %struct.file*, %struct.file** %411, align 8
  %413 = getelementptr inbounds %struct.file, %struct.file* %412, i32 0, i32 6
  %414 = load i64, i64* %413, align 8
  br label %420

415:                                              ; preds = %402
  %416 = load %struct.dep*, %struct.dep** %11, align 8
  %417 = getelementptr inbounds %struct.dep, %struct.dep* %416, i32 0, i32 2
  %418 = load %struct.file*, %struct.file** %417, align 8
  %419 = call i64 @f_mtime(%struct.file* %418, i32 1)
  br label %420

420:                                              ; preds = %415, %409
  %421 = phi i64 [ %414, %409 ], [ %419, %415 ]
  %422 = load i64, i64* %14, align 8
  %423 = icmp ne i64 %421, %422
  %424 = zext i1 %423 to i32
  %425 = load %struct.dep*, %struct.dep** %11, align 8
  %426 = getelementptr inbounds %struct.dep, %struct.dep* %425, i32 0, i32 3
  store i32 %424, i32* %426, align 8
  br label %427

427:                                              ; preds = %420, %399
  %428 = load %struct.dep*, %struct.dep** %11, align 8
  store %struct.dep* %428, %struct.dep** %12, align 8
  %429 = load %struct.dep*, %struct.dep** %11, align 8
  %430 = getelementptr inbounds %struct.dep, %struct.dep* %429, i32 0, i32 0
  %431 = load %struct.dep*, %struct.dep** %430, align 8
  store %struct.dep* %431, %struct.dep** %11, align 8
  br label %250

432:                                              ; preds = %398, %250
  %433 = load i32, i32* %8, align 4
  %434 = icmp ne i32 %433, 0
  br i1 %434, label %435, label %603

435:                                              ; preds = %432
  %436 = load %struct.file*, %struct.file** %4, align 8
  %437 = getelementptr inbounds %struct.file, %struct.file* %436, i32 0, i32 2
  %438 = load %struct.dep*, %struct.dep** %437, align 8
  store %struct.dep* %438, %struct.dep** %11, align 8
  br label %439

439:                                              ; preds = %598, %435
  %440 = load %struct.dep*, %struct.dep** %11, align 8
  %441 = icmp ne %struct.dep* %440, null
  br i1 %441, label %442, label %602

442:                                              ; preds = %439
  %443 = load %struct.dep*, %struct.dep** %11, align 8
  %444 = getelementptr inbounds %struct.dep, %struct.dep* %443, i32 0, i32 2
  %445 = load %struct.file*, %struct.file** %444, align 8
  %446 = getelementptr inbounds %struct.file, %struct.file* %445, i32 0, i32 12
  %447 = load i16, i16* %446, align 2
  %448 = lshr i16 %447, 10
  %449 = and i16 %448, 1
  %450 = zext i16 %449 to i32
  %451 = icmp ne i32 %450, 0
  br i1 %451, label %452, label %597

452:                                              ; preds = %442
  %453 = load %struct.dep*, %struct.dep** %11, align 8
  %454 = getelementptr inbounds %struct.dep, %struct.dep* %453, i32 0, i32 2
  %455 = load %struct.file*, %struct.file** %454, align 8
  %456 = getelementptr inbounds %struct.file, %struct.file* %455, i32 0, i32 6
  %457 = load i64, i64* %456, align 8
  %458 = icmp ne i64 %457, 0
  br i1 %458, label %459, label %465

459:                                              ; preds = %452
  %460 = load %struct.dep*, %struct.dep** %11, align 8
  %461 = getelementptr inbounds %struct.dep, %struct.dep* %460, i32 0, i32 2
  %462 = load %struct.file*, %struct.file** %461, align 8
  %463 = getelementptr inbounds %struct.file, %struct.file* %462, i32 0, i32 6
  %464 = load i64, i64* %463, align 8
  br label %470

465:                                              ; preds = %452
  %466 = load %struct.dep*, %struct.dep** %11, align 8
  %467 = getelementptr inbounds %struct.dep, %struct.dep* %466, i32 0, i32 2
  %468 = load %struct.file*, %struct.file** %467, align 8
  %469 = call i64 @f_mtime(%struct.file* %468, i32 1)
  br label %470

470:                                              ; preds = %465, %459
  %471 = phi i64 [ %464, %459 ], [ %469, %465 ]
  store i64 %471, i64* %16, align 8
  br label %472

472:                                              ; preds = %479, %470
  %473 = load %struct.dep*, %struct.dep** %11, align 8
  %474 = getelementptr inbounds %struct.dep, %struct.dep* %473, i32 0, i32 2
  %475 = load %struct.file*, %struct.file** %474, align 8
  %476 = getelementptr inbounds %struct.file, %struct.file* %475, i32 0, i32 8
  %477 = load %struct.file*, %struct.file** %476, align 8
  %478 = icmp ne %struct.file* %477, null
  br i1 %478, label %479, label %487

479:                                              ; preds = %472
  %480 = load %struct.dep*, %struct.dep** %11, align 8
  %481 = getelementptr inbounds %struct.dep, %struct.dep* %480, i32 0, i32 2
  %482 = load %struct.file*, %struct.file** %481, align 8
  %483 = getelementptr inbounds %struct.file, %struct.file* %482, i32 0, i32 8
  %484 = load %struct.file*, %struct.file** %483, align 8
  %485 = load %struct.dep*, %struct.dep** %11, align 8
  %486 = getelementptr inbounds %struct.dep, %struct.dep* %485, i32 0, i32 2
  store %struct.file* %484, %struct.file** %486, align 8
  br label %472

487:                                              ; preds = %472
  %488 = load %struct.file*, %struct.file** %4, align 8
  %489 = load %struct.dep*, %struct.dep** %11, align 8
  %490 = getelementptr inbounds %struct.dep, %struct.dep* %489, i32 0, i32 2
  %491 = load %struct.file*, %struct.file** %490, align 8
  %492 = getelementptr inbounds %struct.file, %struct.file* %491, i32 0, i32 10
  store %struct.file* %488, %struct.file** %492, align 8
  %493 = load %struct.dep*, %struct.dep** %11, align 8
  %494 = getelementptr inbounds %struct.dep, %struct.dep* %493, i32 0, i32 2
  %495 = load %struct.file*, %struct.file** %494, align 8
  %496 = load i32, i32* %5, align 4
  %497 = call i32 @update_file(%struct.file* %495, i32 %496)
  %498 = load i32, i32* %10, align 4
  %499 = or i32 %498, %497
  store i32 %499, i32* %10, align 4
  br label %500

500:                                              ; preds = %507, %487
  %501 = load %struct.dep*, %struct.dep** %11, align 8
  %502 = getelementptr inbounds %struct.dep, %struct.dep* %501, i32 0, i32 2
  %503 = load %struct.file*, %struct.file** %502, align 8
  %504 = getelementptr inbounds %struct.file, %struct.file* %503, i32 0, i32 8
  %505 = load %struct.file*, %struct.file** %504, align 8
  %506 = icmp ne %struct.file* %505, null
  br i1 %506, label %507, label %515

507:                                              ; preds = %500
  %508 = load %struct.dep*, %struct.dep** %11, align 8
  %509 = getelementptr inbounds %struct.dep, %struct.dep* %508, i32 0, i32 2
  %510 = load %struct.file*, %struct.file** %509, align 8
  %511 = getelementptr inbounds %struct.file, %struct.file* %510, i32 0, i32 8
  %512 = load %struct.file*, %struct.file** %511, align 8
  %513 = load %struct.dep*, %struct.dep** %11, align 8
  %514 = getelementptr inbounds %struct.dep, %struct.dep* %513, i32 0, i32 2
  store %struct.file* %512, %struct.file** %514, align 8
  br label %500

515:                                              ; preds = %500
  %516 = load %struct.dep*, %struct.dep** %11, align 8
  %517 = getelementptr inbounds %struct.dep, %struct.dep* %516, i32 0, i32 2
  %518 = load %struct.file*, %struct.file** %517, align 8
  store %struct.file* %518, %struct.file** %17, align 8
  br label %519

519:                                              ; preds = %543, %515
  %520 = load %struct.file*, %struct.file** %17, align 8
  %521 = getelementptr inbounds %struct.file, %struct.file* %520, i32 0, i32 12
  %522 = load i16, i16* %521, align 2
  %523 = and i16 %522, 3
  %524 = zext i16 %523 to i32
  %525 = icmp eq i32 %524, 2
  br i1 %525, label %533, label %526

526:                                              ; preds = %519
  %527 = load %struct.file*, %struct.file** %17, align 8
  %528 = getelementptr inbounds %struct.file, %struct.file* %527, i32 0, i32 12
  %529 = load i16, i16* %528, align 2
  %530 = and i16 %529, 3
  %531 = zext i16 %530 to i32
  %532 = icmp eq i32 %531, 1
  br label %533

533:                                              ; preds = %526, %519
  %534 = phi i1 [ true, %519 ], [ %532, %526 ]
  %535 = zext i1 %534 to i32
  %536 = load i8, i8* %13, align 1
  %537 = sext i8 %536 to i32
  %538 = or i32 %537, %535
  %539 = trunc i32 %538 to i8
  store i8 %539, i8* %13, align 1
  %540 = load %struct.file*, %struct.file** %17, align 8
  %541 = getelementptr inbounds %struct.file, %struct.file* %540, i32 0, i32 7
  %542 = load %struct.file*, %struct.file** %541, align 8
  store %struct.file* %542, %struct.file** %17, align 8
  br label %543

543:                                              ; preds = %533
  %544 = load %struct.file*, %struct.file** %17, align 8
  %545 = icmp ne %struct.file* %544, null
  br i1 %545, label %519, label %546

546:                                              ; preds = %543
  %547 = load i32, i32* %10, align 4
  %548 = icmp ne i32 %547, 0
  br i1 %548, label %549, label %553

549:                                              ; preds = %546
  %550 = load i32, i32* @keep_going_flag, align 4
  %551 = icmp ne i32 %550, 0
  br i1 %551, label %553, label %552

552:                                              ; preds = %549
  br label %602

553:                                              ; preds = %549, %546
  %554 = load i8, i8* %13, align 1
  %555 = icmp ne i8 %554, 0
  br i1 %555, label %596, label %556

556:                                              ; preds = %553
  %557 = load %struct.file*, %struct.file** %4, align 8
  %558 = getelementptr inbounds %struct.file, %struct.file* %557, i32 0, i32 12
  %559 = load i16, i16* %558, align 2
  %560 = lshr i16 %559, 9
  %561 = and i16 %560, 1
  %562 = zext i16 %561 to i32
  %563 = icmp ne i32 %562, 0
  br i1 %563, label %564, label %569

564:                                              ; preds = %556
  %565 = load %struct.file*, %struct.file** %4, align 8
  %566 = getelementptr inbounds %struct.file, %struct.file* %565, i32 0, i32 3
  %567 = load %struct.commands*, %struct.commands** %566, align 8
  %568 = icmp ne %struct.commands* %567, null
  br i1 %568, label %591, label %569

569:                                              ; preds = %564, %556
  %570 = load %struct.dep*, %struct.dep** %11, align 8
  %571 = getelementptr inbounds %struct.dep, %struct.dep* %570, i32 0, i32 2
  %572 = load %struct.file*, %struct.file** %571, align 8
  %573 = getelementptr inbounds %struct.file, %struct.file* %572, i32 0, i32 6
  %574 = load i64, i64* %573, align 8
  %575 = icmp ne i64 %574, 0
  br i1 %575, label %576, label %582

576:                                              ; preds = %569
  %577 = load %struct.dep*, %struct.dep** %11, align 8
  %578 = getelementptr inbounds %struct.dep, %struct.dep* %577, i32 0, i32 2
  %579 = load %struct.file*, %struct.file** %578, align 8
  %580 = getelementptr inbounds %struct.file, %struct.file* %579, i32 0, i32 6
  %581 = load i64, i64* %580, align 8
  br label %587

582:                                              ; preds = %569
  %583 = load %struct.dep*, %struct.dep** %11, align 8
  %584 = getelementptr inbounds %struct.dep, %struct.dep* %583, i32 0, i32 2
  %585 = load %struct.file*, %struct.file** %584, align 8
  %586 = call i64 @f_mtime(%struct.file* %585, i32 1)
  br label %587

587:                                              ; preds = %582, %576
  %588 = phi i64 [ %581, %576 ], [ %586, %582 ]
  %589 = load i64, i64* %16, align 8
  %590 = icmp ne i64 %588, %589
  br label %591

591:                                              ; preds = %587, %564
  %592 = phi i1 [ true, %564 ], [ %590, %587 ]
  %593 = zext i1 %592 to i32
  %594 = load %struct.dep*, %struct.dep** %11, align 8
  %595 = getelementptr inbounds %struct.dep, %struct.dep* %594, i32 0, i32 3
  store i32 %593, i32* %595, align 8
  br label %596

596:                                              ; preds = %591, %553
  br label %597

597:                                              ; preds = %596, %442
  br label %598

598:                                              ; preds = %597
  %599 = load %struct.dep*, %struct.dep** %11, align 8
  %600 = getelementptr inbounds %struct.dep, %struct.dep* %599, i32 0, i32 0
  %601 = load %struct.dep*, %struct.dep** %600, align 8
  store %struct.dep* %601, %struct.dep** %11, align 8
  br label %439

602:                                              ; preds = %552, %439
  br label %603

603:                                              ; preds = %602, %432
  %604 = load %struct.file*, %struct.file** %4, align 8
  %605 = getelementptr inbounds %struct.file, %struct.file* %604, i32 0, i32 12
  %606 = load i16, i16* %605, align 2
  %607 = and i16 %606, -33
  store i16 %607, i16* %605, align 2
  %608 = load i32, i32* @debug_flag, align 4
  %609 = icmp ne i32 %608, 0
  br i1 %609, label %610, label %618

610:                                              ; preds = %603
  %611 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %611)
  %612 = load %struct.file*, %struct.file** %4, align 8
  %613 = getelementptr inbounds %struct.file, %struct.file* %612, i32 0, i32 1
  %614 = load i8*, i8** %613, align 8
  %615 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.581, i64 0, i64 0), i8* %614)
  %616 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %617 = call i32 @fflush(%struct._IO_FILE* %616)
  br label %619

618:                                              ; preds = %603
  br label %619

619:                                              ; preds = %618, %610
  %620 = load i8, i8* %13, align 1
  %621 = icmp ne i8 %620, 0
  br i1 %621, label %622, label %642

622:                                              ; preds = %619
  %623 = load %struct.file*, %struct.file** %4, align 8
  %624 = getelementptr inbounds %struct.file, %struct.file* %623, i32 0, i32 12
  %625 = load i16, i16* %624, align 2
  %626 = and i16 %625, -4
  %627 = or i16 %626, 1
  store i16 %627, i16* %624, align 2
  %628 = load i32, i32* %5, align 4
  %629 = add i32 %628, -1
  store i32 %629, i32* %5, align 4
  %630 = load i32, i32* @debug_flag, align 4
  %631 = icmp ne i32 %630, 0
  br i1 %631, label %632, label %640

632:                                              ; preds = %622
  %633 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %633)
  %634 = load %struct.file*, %struct.file** %4, align 8
  %635 = getelementptr inbounds %struct.file, %struct.file* %634, i32 0, i32 1
  %636 = load i8*, i8** %635, align 8
  %637 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13.582, i64 0, i64 0), i8* %636)
  %638 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %639 = call i32 @fflush(%struct._IO_FILE* %638)
  br label %641

640:                                              ; preds = %622
  br label %641

641:                                              ; preds = %640, %632
  store i32 0, i32* %3, align 4
  br label %1000

642:                                              ; preds = %619
  %643 = load i32, i32* %10, align 4
  %644 = icmp ne i32 %643, 0
  br i1 %644, label %645, label %691

645:                                              ; preds = %642
  %646 = load %struct.file*, %struct.file** %4, align 8
  %647 = getelementptr inbounds %struct.file, %struct.file* %646, i32 0, i32 12
  %648 = load i16, i16* %647, align 2
  %649 = and i16 %648, -4
  %650 = or i16 %649, 3
  store i16 %650, i16* %647, align 2
  %651 = load i32, i32* %10, align 4
  %652 = trunc i32 %651 to i16
  %653 = load %struct.file*, %struct.file** %4, align 8
  %654 = getelementptr inbounds %struct.file, %struct.file* %653, i32 0, i32 11
  store i16 %652, i16* %654, align 8
  %655 = load %struct.file*, %struct.file** %4, align 8
  %656 = getelementptr inbounds %struct.file, %struct.file* %655, i32 0, i32 12
  %657 = load i16, i16* %656, align 2
  %658 = and i16 %657, -65
  %659 = or i16 %658, 64
  store i16 %659, i16* %656, align 2
  %660 = load i32, i32* %5, align 4
  %661 = add i32 %660, -1
  store i32 %661, i32* %5, align 4
  %662 = load i32, i32* @debug_flag, align 4
  %663 = icmp ne i32 %662, 0
  br i1 %663, label %664, label %672

664:                                              ; preds = %645
  %665 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %665)
  %666 = load %struct.file*, %struct.file** %4, align 8
  %667 = getelementptr inbounds %struct.file, %struct.file* %666, i32 0, i32 1
  %668 = load i8*, i8** %667, align 8
  %669 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14.583, i64 0, i64 0), i8* %668)
  %670 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %671 = call i32 @fflush(%struct._IO_FILE* %670)
  br label %673

672:                                              ; preds = %645
  br label %673

673:                                              ; preds = %672, %664
  %674 = load i32, i32* %5, align 4
  %675 = icmp eq i32 %674, 0
  br i1 %675, label %676, label %689

676:                                              ; preds = %673
  %677 = load i32, i32* @keep_going_flag, align 4
  %678 = icmp ne i32 %677, 0
  br i1 %678, label %679, label %689

679:                                              ; preds = %676
  %680 = load i32, i32* @just_print_flag, align 4
  %681 = icmp ne i32 %680, 0
  br i1 %681, label %689, label %682

682:                                              ; preds = %679
  %683 = load i32, i32* @question_flag, align 4
  %684 = icmp ne i32 %683, 0
  br i1 %684, label %689, label %685

685:                                              ; preds = %682
  %686 = load %struct.file*, %struct.file** %4, align 8
  %687 = getelementptr inbounds %struct.file, %struct.file* %686, i32 0, i32 1
  %688 = load i8*, i8** %687, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.15.584, i64 0, i64 0), i8* %688)
  br label %689

689:                                              ; preds = %685, %682, %679, %676, %673
  %690 = load i32, i32* %10, align 4
  store i32 %690, i32* %3, align 4
  br label %1000

691:                                              ; preds = %642
  %692 = load %struct.file*, %struct.file** %4, align 8
  %693 = getelementptr inbounds %struct.file, %struct.file* %692, i32 0, i32 12
  %694 = load i16, i16* %693, align 2
  %695 = and i16 %694, -4
  store i16 %695, i16* %693, align 2
  store i32 0, i32* %9, align 4
  %696 = load %struct.file*, %struct.file** %4, align 8
  %697 = getelementptr inbounds %struct.file, %struct.file* %696, i32 0, i32 2
  %698 = load %struct.dep*, %struct.dep** %697, align 8
  store %struct.dep* %698, %struct.dep** %11, align 8
  br label %699

699:                                              ; preds = %828, %691
  %700 = load %struct.dep*, %struct.dep** %11, align 8
  %701 = icmp ne %struct.dep* %700, null
  br i1 %701, label %702, label %832

702:                                              ; preds = %699
  %703 = load %struct.dep*, %struct.dep** %11, align 8
  %704 = getelementptr inbounds %struct.dep, %struct.dep* %703, i32 0, i32 2
  %705 = load %struct.file*, %struct.file** %704, align 8
  %706 = getelementptr inbounds %struct.file, %struct.file* %705, i32 0, i32 6
  %707 = load i64, i64* %706, align 8
  %708 = icmp ne i64 %707, 0
  br i1 %708, label %709, label %715

709:                                              ; preds = %702
  %710 = load %struct.dep*, %struct.dep** %11, align 8
  %711 = getelementptr inbounds %struct.dep, %struct.dep* %710, i32 0, i32 2
  %712 = load %struct.file*, %struct.file** %711, align 8
  %713 = getelementptr inbounds %struct.file, %struct.file* %712, i32 0, i32 6
  %714 = load i64, i64* %713, align 8
  br label %720

715:                                              ; preds = %702
  %716 = load %struct.dep*, %struct.dep** %11, align 8
  %717 = getelementptr inbounds %struct.dep, %struct.dep* %716, i32 0, i32 2
  %718 = load %struct.file*, %struct.file** %717, align 8
  %719 = call i64 @f_mtime(%struct.file* %718, i32 1)
  br label %720

720:                                              ; preds = %715, %709
  %721 = phi i64 [ %714, %709 ], [ %719, %715 ]
  store i64 %721, i64* %18, align 8
  br label %722

722:                                              ; preds = %729, %720
  %723 = load %struct.dep*, %struct.dep** %11, align 8
  %724 = getelementptr inbounds %struct.dep, %struct.dep* %723, i32 0, i32 2
  %725 = load %struct.file*, %struct.file** %724, align 8
  %726 = getelementptr inbounds %struct.file, %struct.file* %725, i32 0, i32 8
  %727 = load %struct.file*, %struct.file** %726, align 8
  %728 = icmp ne %struct.file* %727, null
  br i1 %728, label %729, label %737

729:                                              ; preds = %722
  %730 = load %struct.dep*, %struct.dep** %11, align 8
  %731 = getelementptr inbounds %struct.dep, %struct.dep* %730, i32 0, i32 2
  %732 = load %struct.file*, %struct.file** %731, align 8
  %733 = getelementptr inbounds %struct.file, %struct.file* %732, i32 0, i32 8
  %734 = load %struct.file*, %struct.file** %733, align 8
  %735 = load %struct.dep*, %struct.dep** %11, align 8
  %736 = getelementptr inbounds %struct.dep, %struct.dep* %735, i32 0, i32 2
  store %struct.file* %734, %struct.file** %736, align 8
  br label %722

737:                                              ; preds = %722
  %738 = load i64, i64* %18, align 8
  %739 = icmp eq i64 %738, -1
  br i1 %739, label %740, label %751

740:                                              ; preds = %737
  %741 = load %struct.dep*, %struct.dep** %11, align 8
  %742 = getelementptr inbounds %struct.dep, %struct.dep* %741, i32 0, i32 2
  %743 = load %struct.file*, %struct.file** %742, align 8
  %744 = getelementptr inbounds %struct.file, %struct.file* %743, i32 0, i32 12
  %745 = load i16, i16* %744, align 2
  %746 = lshr i16 %745, 10
  %747 = and i16 %746, 1
  %748 = zext i16 %747 to i32
  %749 = icmp ne i32 %748, 0
  br i1 %749, label %751, label %750

750:                                              ; preds = %740
  store i32 1, i32* %8, align 4
  br label %751

751:                                              ; preds = %750, %740, %737
  %752 = load %struct.dep*, %struct.dep** %11, align 8
  %753 = getelementptr inbounds %struct.dep, %struct.dep* %752, i32 0, i32 3
  %754 = load i32, i32* %753, align 8
  %755 = load i32, i32* %9, align 4
  %756 = or i32 %755, %754
  store i32 %756, i32* %9, align 4
  %757 = load i32, i32* %7, align 4
  %758 = icmp ne i32 %757, 0
  br i1 %758, label %763, label %759

759:                                              ; preds = %751
  %760 = load i64, i64* %18, align 8
  %761 = load i64, i64* %6, align 8
  %762 = icmp sgt i64 %760, %761
  br label %763

763:                                              ; preds = %759, %751
  %764 = phi i1 [ true, %751 ], [ %762, %759 ]
  %765 = zext i1 %764 to i32
  %766 = load %struct.dep*, %struct.dep** %11, align 8
  %767 = getelementptr inbounds %struct.dep, %struct.dep* %766, i32 0, i32 3
  %768 = load i32, i32* %767, align 8
  %769 = or i32 %768, %765
  store i32 %769, i32* %767, align 8
  %770 = load i32, i32* @debug_flag, align 4
  %771 = icmp ne i32 %770, 0
  br i1 %771, label %772, label %827

772:                                              ; preds = %763
  %773 = load i32, i32* %7, align 4
  %774 = icmp ne i32 %773, 0
  br i1 %774, label %827, label %775

775:                                              ; preds = %772
  %776 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %776)
  %777 = load i64, i64* %18, align 8
  %778 = icmp eq i64 %777, -1
  br i1 %778, label %779, label %797

779:                                              ; preds = %775
  %780 = load %struct.dep*, %struct.dep** %11, align 8
  %781 = getelementptr inbounds %struct.dep, %struct.dep* %780, i32 0, i32 1
  %782 = load i8*, i8** %781, align 8
  %783 = icmp eq i8* %782, null
  br i1 %783, label %784, label %790

784:                                              ; preds = %779
  %785 = load %struct.dep*, %struct.dep** %11, align 8
  %786 = getelementptr inbounds %struct.dep, %struct.dep* %785, i32 0, i32 2
  %787 = load %struct.file*, %struct.file** %786, align 8
  %788 = getelementptr inbounds %struct.file, %struct.file* %787, i32 0, i32 1
  %789 = load i8*, i8** %788, align 8
  br label %794

790:                                              ; preds = %779
  %791 = load %struct.dep*, %struct.dep** %11, align 8
  %792 = getelementptr inbounds %struct.dep, %struct.dep* %791, i32 0, i32 1
  %793 = load i8*, i8** %792, align 8
  br label %794

794:                                              ; preds = %790, %784
  %795 = phi i8* [ %789, %784 ], [ %793, %790 ]
  %796 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.16.585, i64 0, i64 0), i8* %795)
  br label %824

797:                                              ; preds = %775
  %798 = load %struct.dep*, %struct.dep** %11, align 8
  %799 = getelementptr inbounds %struct.dep, %struct.dep* %798, i32 0, i32 1
  %800 = load i8*, i8** %799, align 8
  %801 = icmp eq i8* %800, null
  br i1 %801, label %802, label %808

802:                                              ; preds = %797
  %803 = load %struct.dep*, %struct.dep** %11, align 8
  %804 = getelementptr inbounds %struct.dep, %struct.dep* %803, i32 0, i32 2
  %805 = load %struct.file*, %struct.file** %804, align 8
  %806 = getelementptr inbounds %struct.file, %struct.file* %805, i32 0, i32 1
  %807 = load i8*, i8** %806, align 8
  br label %812

808:                                              ; preds = %797
  %809 = load %struct.dep*, %struct.dep** %11, align 8
  %810 = getelementptr inbounds %struct.dep, %struct.dep* %809, i32 0, i32 1
  %811 = load i8*, i8** %810, align 8
  br label %812

812:                                              ; preds = %808, %802
  %813 = phi i8* [ %807, %802 ], [ %811, %808 ]
  %814 = load %struct.dep*, %struct.dep** %11, align 8
  %815 = getelementptr inbounds %struct.dep, %struct.dep* %814, i32 0, i32 3
  %816 = load i32, i32* %815, align 8
  %817 = icmp ne i32 %816, 0
  %818 = zext i1 %817 to i64
  %819 = select i1 %817, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18.586, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19.587, i64 0, i64 0)
  %820 = load %struct.file*, %struct.file** %4, align 8
  %821 = getelementptr inbounds %struct.file, %struct.file* %820, i32 0, i32 1
  %822 = load i8*, i8** %821, align 8
  %823 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17.588, i64 0, i64 0), i8* %813, i8* %819, i8* %822)
  br label %824

824:                                              ; preds = %812, %794
  %825 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %826 = call i32 @fflush(%struct._IO_FILE* %825)
  br label %827

827:                                              ; preds = %824, %772, %763
  br label %828

828:                                              ; preds = %827
  %829 = load %struct.dep*, %struct.dep** %11, align 8
  %830 = getelementptr inbounds %struct.dep, %struct.dep* %829, i32 0, i32 0
  %831 = load %struct.dep*, %struct.dep** %830, align 8
  store %struct.dep* %831, %struct.dep** %11, align 8
  br label %699

832:                                              ; preds = %699
  %833 = load i32, i32* %5, align 4
  %834 = add i32 %833, -1
  store i32 %834, i32* %5, align 4
  %835 = load %struct.file*, %struct.file** %4, align 8
  %836 = getelementptr inbounds %struct.file, %struct.file* %835, i32 0, i32 12
  %837 = load i16, i16* %836, align 2
  %838 = lshr i16 %837, 2
  %839 = and i16 %838, 1
  %840 = zext i16 %839 to i32
  %841 = icmp ne i32 %840, 0
  br i1 %841, label %842, label %860

842:                                              ; preds = %832
  %843 = load %struct.file*, %struct.file** %4, align 8
  %844 = getelementptr inbounds %struct.file, %struct.file* %843, i32 0, i32 2
  %845 = load %struct.dep*, %struct.dep** %844, align 8
  %846 = icmp eq %struct.dep* %845, null
  br i1 %846, label %847, label %860

847:                                              ; preds = %842
  store i32 1, i32* %8, align 4
  %848 = load i32, i32* @debug_flag, align 4
  %849 = icmp ne i32 %848, 0
  br i1 %849, label %850, label %858

850:                                              ; preds = %847
  %851 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %851)
  %852 = load %struct.file*, %struct.file** %4, align 8
  %853 = getelementptr inbounds %struct.file, %struct.file* %852, i32 0, i32 1
  %854 = load i8*, i8** %853, align 8
  %855 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.20.589, i64 0, i64 0), i8* %854)
  %856 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %857 = call i32 @fflush(%struct._IO_FILE* %856)
  br label %859

858:                                              ; preds = %847
  br label %859

859:                                              ; preds = %858, %850
  br label %890

860:                                              ; preds = %842, %832
  %861 = load %struct.file*, %struct.file** %4, align 8
  %862 = getelementptr inbounds %struct.file, %struct.file* %861, i32 0, i32 12
  %863 = load i16, i16* %862, align 2
  %864 = lshr i16 %863, 7
  %865 = and i16 %864, 1
  %866 = zext i16 %865 to i32
  %867 = icmp ne i32 %866, 0
  br i1 %867, label %868, label %889

868:                                              ; preds = %860
  %869 = load i32, i32* %9, align 4
  %870 = icmp ne i32 %869, 0
  br i1 %870, label %889, label %871

871:                                              ; preds = %868
  %872 = load %struct.file*, %struct.file** %4, align 8
  %873 = getelementptr inbounds %struct.file, %struct.file* %872, i32 0, i32 3
  %874 = load %struct.commands*, %struct.commands** %873, align 8
  %875 = icmp eq %struct.commands* %874, null
  br i1 %875, label %876, label %889

876:                                              ; preds = %871
  store i32 0, i32* %8, align 4
  %877 = load i32, i32* @debug_flag, align 4
  %878 = icmp ne i32 %877, 0
  br i1 %878, label %879, label %887

879:                                              ; preds = %876
  %880 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %880)
  %881 = load %struct.file*, %struct.file** %4, align 8
  %882 = getelementptr inbounds %struct.file, %struct.file* %881, i32 0, i32 1
  %883 = load i8*, i8** %882, align 8
  %884 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.21.590, i64 0, i64 0), i8* %883)
  %885 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %886 = call i32 @fflush(%struct._IO_FILE* %885)
  br label %888

887:                                              ; preds = %876
  br label %888

888:                                              ; preds = %887, %879
  br label %889

889:                                              ; preds = %888, %871, %868, %860
  br label %890

890:                                              ; preds = %889, %859
  %891 = load i32, i32* %8, align 4
  %892 = icmp ne i32 %891, 0
  br i1 %892, label %918, label %893

893:                                              ; preds = %890
  %894 = load i32, i32* @debug_flag, align 4
  %895 = icmp ne i32 %894, 0
  br i1 %895, label %896, label %904

896:                                              ; preds = %893
  %897 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %897)
  %898 = load %struct.file*, %struct.file** %4, align 8
  %899 = getelementptr inbounds %struct.file, %struct.file* %898, i32 0, i32 1
  %900 = load i8*, i8** %899, align 8
  %901 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.22.591, i64 0, i64 0), i8* %900)
  %902 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %903 = call i32 @fflush(%struct._IO_FILE* %902)
  br label %905

904:                                              ; preds = %893
  br label %905

905:                                              ; preds = %904, %896
  %906 = load %struct.file*, %struct.file** %4, align 8
  %907 = getelementptr inbounds %struct.file, %struct.file* %906, i32 0, i32 12
  %908 = load i16, i16* %907, align 2
  %909 = and i16 %908, -4
  %910 = or i16 %909, 3
  store i16 %910, i16* %907, align 2
  %911 = load %struct.file*, %struct.file** %4, align 8
  %912 = getelementptr inbounds %struct.file, %struct.file* %911, i32 0, i32 11
  store i16 0, i16* %912, align 8
  %913 = load %struct.file*, %struct.file** %4, align 8
  %914 = getelementptr inbounds %struct.file, %struct.file* %913, i32 0, i32 12
  %915 = load i16, i16* %914, align 2
  %916 = and i16 %915, -65
  %917 = or i16 %916, 64
  store i16 %917, i16* %914, align 2
  store i32 0, i32* %3, align 4
  br label %1000

918:                                              ; preds = %890
  %919 = load i32, i32* @debug_flag, align 4
  %920 = icmp ne i32 %919, 0
  br i1 %920, label %921, label %929

921:                                              ; preds = %918
  %922 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %922)
  %923 = load %struct.file*, %struct.file** %4, align 8
  %924 = getelementptr inbounds %struct.file, %struct.file* %923, i32 0, i32 1
  %925 = load i8*, i8** %924, align 8
  %926 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.23.592, i64 0, i64 0), i8* %925)
  %927 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %928 = call i32 @fflush(%struct._IO_FILE* %927)
  br label %930

929:                                              ; preds = %918
  br label %930

930:                                              ; preds = %929, %921
  %931 = load %struct.file*, %struct.file** %4, align 8
  call void @remake_file(%struct.file* %931)
  %932 = load %struct.file*, %struct.file** %4, align 8
  %933 = getelementptr inbounds %struct.file, %struct.file* %932, i32 0, i32 12
  %934 = load i16, i16* %933, align 2
  %935 = and i16 %934, 3
  %936 = zext i16 %935 to i32
  %937 = icmp ne i32 %936, 3
  br i1 %937, label %938, label %951

938:                                              ; preds = %930
  %939 = load i32, i32* @debug_flag, align 4
  %940 = icmp ne i32 %939, 0
  br i1 %940, label %941, label %949

941:                                              ; preds = %938
  %942 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %942)
  %943 = load %struct.file*, %struct.file** %4, align 8
  %944 = getelementptr inbounds %struct.file, %struct.file* %943, i32 0, i32 1
  %945 = load i8*, i8** %944, align 8
  %946 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.24.593, i64 0, i64 0), i8* %945)
  %947 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %948 = call i32 @fflush(%struct._IO_FILE* %947)
  br label %950

949:                                              ; preds = %938
  br label %950

950:                                              ; preds = %949, %941
  store i32 0, i32* %3, align 4
  br label %1000

951:                                              ; preds = %930
  %952 = load %struct.file*, %struct.file** %4, align 8
  %953 = getelementptr inbounds %struct.file, %struct.file* %952, i32 0, i32 11
  %954 = load i16, i16* %953, align 8
  %955 = sext i16 %954 to i32
  switch i32 %955, label %986 [
    i32 1, label %956
    i32 0, label %969
    i32 -1, label %982
  ]

956:                                              ; preds = %951
  %957 = load i32, i32* @debug_flag, align 4
  %958 = icmp ne i32 %957, 0
  br i1 %958, label %959, label %967

959:                                              ; preds = %956
  %960 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %960)
  %961 = load %struct.file*, %struct.file** %4, align 8
  %962 = getelementptr inbounds %struct.file, %struct.file* %961, i32 0, i32 1
  %963 = load i8*, i8** %962, align 8
  %964 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25.594, i64 0, i64 0), i8* %963)
  %965 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %966 = call i32 @fflush(%struct._IO_FILE* %965)
  br label %968

967:                                              ; preds = %956
  br label %968

968:                                              ; preds = %967, %959
  br label %990

969:                                              ; preds = %951
  %970 = load i32, i32* @debug_flag, align 4
  %971 = icmp ne i32 %970, 0
  br i1 %971, label %972, label %980

972:                                              ; preds = %969
  %973 = load i32, i32* %5, align 4
  call void (i32, ...) bitcast (void (i32)* @print_spaces to void (i32, ...)*)(i32 %973)
  %974 = load %struct.file*, %struct.file** %4, align 8
  %975 = getelementptr inbounds %struct.file, %struct.file* %974, i32 0, i32 1
  %976 = load i8*, i8** %975, align 8
  %977 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.26.595, i64 0, i64 0), i8* %976)
  %978 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %979 = call i32 @fflush(%struct._IO_FILE* %978)
  br label %981

980:                                              ; preds = %969
  br label %981

981:                                              ; preds = %980, %972
  br label %990

982:                                              ; preds = %951
  %983 = load %struct.file*, %struct.file** %4, align 8
  %984 = getelementptr inbounds %struct.file, %struct.file* %983, i32 0, i32 1
  %985 = load i8*, i8** %984, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.27.596, i64 0, i64 0), i8* %985)
  call void @abort() #12
  unreachable

986:                                              ; preds = %951
  %987 = load %struct.file*, %struct.file** %4, align 8
  %988 = getelementptr inbounds %struct.file, %struct.file* %987, i32 0, i32 1
  %989 = load i8*, i8** %988, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28.597, i64 0, i64 0), i8* %989)
  call void @abort() #12
  unreachable

990:                                              ; preds = %981, %968
  %991 = load %struct.file*, %struct.file** %4, align 8
  %992 = getelementptr inbounds %struct.file, %struct.file* %991, i32 0, i32 12
  %993 = load i16, i16* %992, align 2
  %994 = and i16 %993, -65
  %995 = or i16 %994, 64
  store i16 %995, i16* %992, align 2
  %996 = load %struct.file*, %struct.file** %4, align 8
  %997 = getelementptr inbounds %struct.file, %struct.file* %996, i32 0, i32 11
  %998 = load i16, i16* %997, align 8
  %999 = sext i16 %998 to i32
  store i32 %999, i32* %3, align 4
  br label %1000

1000:                                             ; preds = %990, %950, %905, %689, %641, %106, %93, %73, %56
  %1001 = load i32, i32* %3, align 4
  ret i32 %1001
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @check_dep(%struct.file* %0, i32 %1, i64 %2, i32* %3) #0 {
  %5 = alloca %struct.file*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i32*, align 8
  %9 = alloca %struct.dep*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca %struct.dep*, align 8
  store %struct.file* %0, %struct.file** %5, align 8
  store i32 %1, i32* %6, align 4
  store i64 %2, i64* %7, align 8
  store i32* %3, i32** %8, align 8
  store i32 0, i32* %10, align 4
  %13 = load i32, i32* %6, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %6, align 4
  %15 = load %struct.file*, %struct.file** %5, align 8
  %16 = getelementptr inbounds %struct.file, %struct.file* %15, i32 0, i32 12
  %17 = load i16, i16* %16, align 2
  %18 = and i16 %17, -33
  %19 = or i16 %18, 32
  store i16 %19, i16* %16, align 2
  %20 = load %struct.file*, %struct.file** %5, align 8
  %21 = getelementptr inbounds %struct.file, %struct.file* %20, i32 0, i32 12
  %22 = load i16, i16* %21, align 2
  %23 = lshr i16 %22, 10
  %24 = and i16 %23, 1
  %25 = zext i16 %24 to i32
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %73, label %27

27:                                               ; preds = %4
  %28 = load %struct.file*, %struct.file** %5, align 8
  %29 = load i32, i32* %6, align 4
  %30 = call i32 @update_file(%struct.file* %28, i32 %29)
  store i32 %30, i32* %10, align 4
  br label %31

31:                                               ; preds = %36, %27
  %32 = load %struct.file*, %struct.file** %5, align 8
  %33 = getelementptr inbounds %struct.file, %struct.file* %32, i32 0, i32 8
  %34 = load %struct.file*, %struct.file** %33, align 8
  %35 = icmp ne %struct.file* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %31
  %37 = load %struct.file*, %struct.file** %5, align 8
  %38 = getelementptr inbounds %struct.file, %struct.file* %37, i32 0, i32 8
  %39 = load %struct.file*, %struct.file** %38, align 8
  store %struct.file* %39, %struct.file** %5, align 8
  br label %31

40:                                               ; preds = %31
  %41 = load %struct.file*, %struct.file** %5, align 8
  %42 = getelementptr inbounds %struct.file, %struct.file* %41, i32 0, i32 6
  %43 = load i64, i64* %42, align 8
  %44 = icmp ne i64 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %40
  %46 = load %struct.file*, %struct.file** %5, align 8
  %47 = getelementptr inbounds %struct.file, %struct.file* %46, i32 0, i32 6
  %48 = load i64, i64* %47, align 8
  br label %52

49:                                               ; preds = %40
  %50 = load %struct.file*, %struct.file** %5, align 8
  %51 = call i64 @f_mtime(%struct.file* %50, i32 1)
  br label %52

52:                                               ; preds = %49, %45
  %53 = phi i64 [ %48, %45 ], [ %51, %49 ]
  store i64 %53, i64* %11, align 8
  br label %54

54:                                               ; preds = %59, %52
  %55 = load %struct.file*, %struct.file** %5, align 8
  %56 = getelementptr inbounds %struct.file, %struct.file* %55, i32 0, i32 8
  %57 = load %struct.file*, %struct.file** %56, align 8
  %58 = icmp ne %struct.file* %57, null
  br i1 %58, label %59, label %63

59:                                               ; preds = %54
  %60 = load %struct.file*, %struct.file** %5, align 8
  %61 = getelementptr inbounds %struct.file, %struct.file* %60, i32 0, i32 8
  %62 = load %struct.file*, %struct.file** %61, align 8
  store %struct.file* %62, %struct.file** %5, align 8
  br label %54

63:                                               ; preds = %54
  %64 = load i64, i64* %11, align 8
  %65 = icmp eq i64 %64, -1
  br i1 %65, label %70, label %66

66:                                               ; preds = %63
  %67 = load i64, i64* %11, align 8
  %68 = load i64, i64* %7, align 8
  %69 = icmp sgt i64 %67, %68
  br i1 %69, label %70, label %72

70:                                               ; preds = %66, %63
  %71 = load i32*, i32** %8, align 8
  store i32 1, i32* %71, align 4
  br label %72

72:                                               ; preds = %70, %66
  br label %167

73:                                               ; preds = %4
  store %struct.dep* null, %struct.dep** %12, align 8
  %74 = load %struct.file*, %struct.file** %5, align 8
  %75 = getelementptr inbounds %struct.file, %struct.file* %74, i32 0, i32 2
  %76 = load %struct.dep*, %struct.dep** %75, align 8
  store %struct.dep* %76, %struct.dep** %9, align 8
  br label %77

77:                                               ; preds = %161, %123, %73
  %78 = load %struct.dep*, %struct.dep** %9, align 8
  %79 = icmp ne %struct.dep* %78, null
  br i1 %79, label %80, label %166

80:                                               ; preds = %77
  %81 = load %struct.dep*, %struct.dep** %9, align 8
  %82 = getelementptr inbounds %struct.dep, %struct.dep* %81, i32 0, i32 2
  %83 = load %struct.file*, %struct.file** %82, align 8
  %84 = getelementptr inbounds %struct.file, %struct.file* %83, i32 0, i32 12
  %85 = load i16, i16* %84, align 2
  %86 = lshr i16 %85, 5
  %87 = and i16 %86, 1
  %88 = zext i16 %87 to i32
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %90, label %124

90:                                               ; preds = %80
  %91 = load %struct.file*, %struct.file** %5, align 8
  %92 = getelementptr inbounds %struct.file, %struct.file* %91, i32 0, i32 1
  %93 = load i8*, i8** %92, align 8
  %94 = load %struct.dep*, %struct.dep** %9, align 8
  %95 = getelementptr inbounds %struct.dep, %struct.dep* %94, i32 0, i32 2
  %96 = load %struct.file*, %struct.file** %95, align 8
  %97 = getelementptr inbounds %struct.file, %struct.file* %96, i32 0, i32 1
  %98 = load i8*, i8** %97, align 8
  call void (i8*, i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, i8*, ...)*)(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.11.580, i64 0, i64 0), i8* %93, i8* %98)
  %99 = load %struct.dep*, %struct.dep** %12, align 8
  %100 = icmp eq %struct.dep* %99, null
  br i1 %100, label %101, label %112

101:                                              ; preds = %90
  %102 = load %struct.dep*, %struct.dep** %9, align 8
  %103 = getelementptr inbounds %struct.dep, %struct.dep* %102, i32 0, i32 0
  %104 = load %struct.dep*, %struct.dep** %103, align 8
  %105 = load %struct.file*, %struct.file** %5, align 8
  %106 = getelementptr inbounds %struct.file, %struct.file* %105, i32 0, i32 2
  store %struct.dep* %104, %struct.dep** %106, align 8
  %107 = load %struct.dep*, %struct.dep** %9, align 8
  %108 = bitcast %struct.dep* %107 to i8*
  call void @free(i8* %108) #10
  %109 = load %struct.file*, %struct.file** %5, align 8
  %110 = getelementptr inbounds %struct.file, %struct.file* %109, i32 0, i32 2
  %111 = load %struct.dep*, %struct.dep** %110, align 8
  store %struct.dep* %111, %struct.dep** %9, align 8
  br label %123

112:                                              ; preds = %90
  %113 = load %struct.dep*, %struct.dep** %9, align 8
  %114 = getelementptr inbounds %struct.dep, %struct.dep* %113, i32 0, i32 0
  %115 = load %struct.dep*, %struct.dep** %114, align 8
  %116 = load %struct.dep*, %struct.dep** %12, align 8
  %117 = getelementptr inbounds %struct.dep, %struct.dep* %116, i32 0, i32 0
  store %struct.dep* %115, %struct.dep** %117, align 8
  %118 = load %struct.dep*, %struct.dep** %9, align 8
  %119 = bitcast %struct.dep* %118 to i8*
  call void @free(i8* %119) #10
  %120 = load %struct.dep*, %struct.dep** %12, align 8
  %121 = getelementptr inbounds %struct.dep, %struct.dep* %120, i32 0, i32 0
  %122 = load %struct.dep*, %struct.dep** %121, align 8
  store %struct.dep* %122, %struct.dep** %9, align 8
  br label %123

123:                                              ; preds = %112, %101
  br label %77

124:                                              ; preds = %80
  %125 = load %struct.file*, %struct.file** %5, align 8
  %126 = load %struct.dep*, %struct.dep** %9, align 8
  %127 = getelementptr inbounds %struct.dep, %struct.dep* %126, i32 0, i32 2
  %128 = load %struct.file*, %struct.file** %127, align 8
  %129 = getelementptr inbounds %struct.file, %struct.file* %128, i32 0, i32 10
  store %struct.file* %125, %struct.file** %129, align 8
  %130 = load %struct.dep*, %struct.dep** %9, align 8
  %131 = getelementptr inbounds %struct.dep, %struct.dep* %130, i32 0, i32 2
  %132 = load %struct.file*, %struct.file** %131, align 8
  %133 = load i32, i32* %6, align 4
  %134 = load i64, i64* %7, align 8
  %135 = load i32*, i32** %8, align 8
  %136 = call i32 @check_dep(%struct.file* %132, i32 %133, i64 %134, i32* %135)
  %137 = load i32, i32* %10, align 4
  %138 = or i32 %137, %136
  store i32 %138, i32* %10, align 4
  br label %139

139:                                              ; preds = %146, %124
  %140 = load %struct.dep*, %struct.dep** %9, align 8
  %141 = getelementptr inbounds %struct.dep, %struct.dep* %140, i32 0, i32 2
  %142 = load %struct.file*, %struct.file** %141, align 8
  %143 = getelementptr inbounds %struct.file, %struct.file* %142, i32 0, i32 8
  %144 = load %struct.file*, %struct.file** %143, align 8
  %145 = icmp ne %struct.file* %144, null
  br i1 %145, label %146, label %154

146:                                              ; preds = %139
  %147 = load %struct.dep*, %struct.dep** %9, align 8
  %148 = getelementptr inbounds %struct.dep, %struct.dep* %147, i32 0, i32 2
  %149 = load %struct.file*, %struct.file** %148, align 8
  %150 = getelementptr inbounds %struct.file, %struct.file* %149, i32 0, i32 8
  %151 = load %struct.file*, %struct.file** %150, align 8
  %152 = load %struct.dep*, %struct.dep** %9, align 8
  %153 = getelementptr inbounds %struct.dep, %struct.dep* %152, i32 0, i32 2
  store %struct.file* %151, %struct.file** %153, align 8
  br label %139

154:                                              ; preds = %139
  %155 = load i32, i32* %10, align 4
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %157, label %161

157:                                              ; preds = %154
  %158 = load i32, i32* @keep_going_flag, align 4
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %161, label %160

160:                                              ; preds = %157
  br label %166

161:                                              ; preds = %157, %154
  %162 = load %struct.dep*, %struct.dep** %9, align 8
  store %struct.dep* %162, %struct.dep** %12, align 8
  %163 = load %struct.dep*, %struct.dep** %9, align 8
  %164 = getelementptr inbounds %struct.dep, %struct.dep* %163, i32 0, i32 0
  %165 = load %struct.dep*, %struct.dep** %164, align 8
  store %struct.dep* %165, %struct.dep** %9, align 8
  br label %77

166:                                              ; preds = %160, %77
  br label %167

167:                                              ; preds = %166, %72
  %168 = load %struct.file*, %struct.file** %5, align 8
  %169 = getelementptr inbounds %struct.file, %struct.file* %168, i32 0, i32 12
  %170 = load i16, i16* %169, align 2
  %171 = and i16 %170, -33
  store i16 %171, i16* %169, align 2
  %172 = load i32, i32* %10, align 4
  ret i32 %172
}

; Function Attrs: noinline nounwind uwtable
define internal void @remake_file(%struct.file* %0) #0 {
  %2 = alloca %struct.file*, align 8
  store %struct.file* %0, %struct.file** %2, align 8
  %3 = load %struct.file*, %struct.file** %2, align 8
  %4 = getelementptr inbounds %struct.file, %struct.file* %3, i32 0, i32 3
  %5 = load %struct.commands*, %struct.commands** %4, align 8
  %6 = icmp eq %struct.commands* %5, null
  br i1 %6, label %7, label %62

7:                                                ; preds = %1
  %8 = load %struct.file*, %struct.file** %2, align 8
  %9 = getelementptr inbounds %struct.file, %struct.file* %8, i32 0, i32 12
  %10 = load i16, i16* %9, align 2
  %11 = lshr i16 %10, 9
  %12 = and i16 %11, 1
  %13 = zext i16 %12 to i32
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %7
  %16 = load %struct.file*, %struct.file** %2, align 8
  %17 = getelementptr inbounds %struct.file, %struct.file* %16, i32 0, i32 11
  store i16 0, i16* %17, align 8
  br label %61

18:                                               ; preds = %7
  %19 = load %struct.file*, %struct.file** %2, align 8
  %20 = getelementptr inbounds %struct.file, %struct.file* %19, i32 0, i32 12
  %21 = load i16, i16* %20, align 2
  %22 = lshr i16 %21, 7
  %23 = and i16 %22, 1
  %24 = zext i16 %23 to i32
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %18
  %27 = load %struct.file*, %struct.file** %2, align 8
  %28 = getelementptr inbounds %struct.file, %struct.file* %27, i32 0, i32 11
  store i16 0, i16* %28, align 8
  br label %60

29:                                               ; preds = %18
  %30 = load i32, i32* @keep_going_flag, align 4
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %40, label %32

32:                                               ; preds = %29
  %33 = load %struct.file*, %struct.file** %2, align 8
  %34 = getelementptr inbounds %struct.file, %struct.file* %33, i32 0, i32 12
  %35 = load i16, i16* %34, align 2
  %36 = lshr i16 %35, 11
  %37 = and i16 %36, 1
  %38 = zext i16 %37 to i32
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %55

40:                                               ; preds = %32, %29
  %41 = load %struct.file*, %struct.file** %2, align 8
  %42 = getelementptr inbounds %struct.file, %struct.file* %41, i32 0, i32 12
  %43 = load i16, i16* %42, align 2
  %44 = lshr i16 %43, 11
  %45 = and i16 %44, 1
  %46 = zext i16 %45 to i32
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %40
  %49 = load %struct.file*, %struct.file** %2, align 8
  %50 = getelementptr inbounds %struct.file, %struct.file* %49, i32 0, i32 1
  %51 = load i8*, i8** %50, align 8
  call void (i8*, i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @error to void (i8*, i8*, i8*, ...)*)(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29.598, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @remake_file.noway, i64 0, i64 0), i8* %51)
  br label %52

52:                                               ; preds = %48, %40
  %53 = load %struct.file*, %struct.file** %2, align 8
  %54 = getelementptr inbounds %struct.file, %struct.file* %53, i32 0, i32 11
  store i16 1, i16* %54, align 8
  br label %59

55:                                               ; preds = %32
  %56 = load %struct.file*, %struct.file** %2, align 8
  %57 = getelementptr inbounds %struct.file, %struct.file* %56, i32 0, i32 1
  %58 = load i8*, i8** %57, align 8
  call void (i8*, i8*, i8*, ...) bitcast (void (i8*, i8*, i8*, i8*, i8*, i8*)* @fatal to void (i8*, i8*, i8*, ...)*)(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30.599, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @remake_file.noway, i64 0, i64 0), i8* %58)
  br label %59

59:                                               ; preds = %55, %52
  br label %60

60:                                               ; preds = %59, %26
  br label %61

61:                                               ; preds = %60, %15
  br label %96

62:                                               ; preds = %1
  %63 = load %struct.file*, %struct.file** %2, align 8
  %64 = getelementptr inbounds %struct.file, %struct.file* %63, i32 0, i32 3
  %65 = load %struct.commands*, %struct.commands** %64, align 8
  call void (%struct.commands*, ...) bitcast (void (%struct.commands*)* @chop_commands to void (%struct.commands*, ...)*)(%struct.commands* %65)
  %66 = load i32, i32* @touch_flag, align 4
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %93

68:                                               ; preds = %62
  %69 = load %struct.file*, %struct.file** %2, align 8
  %70 = getelementptr inbounds %struct.file, %struct.file* %69, i32 0, i32 3
  %71 = load %struct.commands*, %struct.commands** %70, align 8
  %72 = getelementptr inbounds %struct.commands, %struct.commands* %71, i32 0, i32 6
  %73 = load i8, i8* %72, align 8
  %74 = icmp ne i8 %73, 0
  br i1 %74, label %93, label %75

75:                                               ; preds = %68
  %76 = load %struct.file*, %struct.file** %2, align 8
  %77 = getelementptr inbounds %struct.file, %struct.file* %76, i32 0, i32 12
  %78 = load i16, i16* %77, align 2
  %79 = lshr i16 %78, 9
  %80 = and i16 %79, 1
  %81 = zext i16 %80 to i32
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %75
  %84 = load %struct.file*, %struct.file** %2, align 8
  %85 = getelementptr inbounds %struct.file, %struct.file* %84, i32 0, i32 11
  store i16 0, i16* %85, align 8
  br label %92

86:                                               ; preds = %75
  %87 = load %struct.file*, %struct.file** %2, align 8
  %88 = call i32 @touch_file(%struct.file* %87)
  %89 = trunc i32 %88 to i16
  %90 = load %struct.file*, %struct.file** %2, align 8
  %91 = getelementptr inbounds %struct.file, %struct.file* %90, i32 0, i32 11
  store i16 %89, i16* %91, align 8
  br label %92

92:                                               ; preds = %86, %83
  br label %95

93:                                               ; preds = %68, %62
  %94 = load %struct.file*, %struct.file** %2, align 8
  call void (%struct.file*, ...) bitcast (void (%struct.file*)* @execute_file_commands to void (%struct.file*, ...)*)(%struct.file* %94)
  br label %98

95:                                               ; preds = %92
  br label %96

96:                                               ; preds = %95, %61
  %97 = load %struct.file*, %struct.file** %2, align 8
  call void @notice_finished_file(%struct.file* %97)
  br label %98

98:                                               ; preds = %96, %93
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @touch_file(%struct.file* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.file*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.stat, align 8
  %6 = alloca i8, align 1
  store %struct.file* %0, %struct.file** %3, align 8
  %7 = load i32, i32* @silent_flag, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = load %struct.file*, %struct.file** %3, align 8
  %11 = getelementptr inbounds %struct.file, %struct.file* %10, i32 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31.602, i64 0, i64 0), i8* %12)
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %15 = call i32 @fflush(%struct._IO_FILE* %14)
  br label %16

16:                                               ; preds = %9, %1
  %17 = load %struct.file*, %struct.file** %3, align 8
  %18 = getelementptr inbounds %struct.file, %struct.file* %17, i32 0, i32 1
  %19 = load i8*, i8** %18, align 8
  %20 = call i32 (i8*, ...) bitcast (i32 (i8*)* @ar_name to i32 (i8*, ...)*)(i8* %19)
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = load %struct.file*, %struct.file** %3, align 8
  %24 = getelementptr inbounds %struct.file, %struct.file* %23, i32 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = call i32 (i8*, ...) bitcast (i32 (i8*)* @ar_touch to i32 (i8*, ...)*)(i8* %25)
  store i32 %26, i32* %2, align 4
  br label %93

27:                                               ; preds = %16
  %28 = load %struct.file*, %struct.file** %3, align 8
  %29 = getelementptr inbounds %struct.file, %struct.file* %28, i32 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = call i32 (i8*, i32, ...) @open(i8* %30, i32 66, i32 438)
  store i32 %31, i32* %4, align 4
  %32 = load i32, i32* %4, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %27
  %35 = load %struct.file*, %struct.file** %3, align 8
  %36 = getelementptr inbounds %struct.file, %struct.file* %35, i32 0, i32 1
  %37 = load i8*, i8** %36, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*)* @perror_with_name to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32.603, i64 0, i64 0), i8* %37)
  store i32 1, i32* %2, align 4
  br label %93

38:                                               ; preds = %27
  %39 = load i32, i32* %4, align 4
  %40 = call i32 @fstat(i32 %39, %struct.stat* %5) #10
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = load %struct.file*, %struct.file** %3, align 8
  %44 = getelementptr inbounds %struct.file, %struct.file* %43, i32 0, i32 1
  %45 = load i8*, i8** %44, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*)* @perror_with_name to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33.604, i64 0, i64 0), i8* %45)
  store i32 1, i32* %2, align 4
  br label %93

46:                                               ; preds = %38
  %47 = load i32, i32* %4, align 4
  %48 = call i64 @read(i32 %47, i8* %6, i64 1)
  %49 = icmp slt i64 %48, 0
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = load %struct.file*, %struct.file** %3, align 8
  %52 = getelementptr inbounds %struct.file, %struct.file* %51, i32 0, i32 1
  %53 = load i8*, i8** %52, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*)* @perror_with_name to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34.605, i64 0, i64 0), i8* %53)
  store i32 1, i32* %2, align 4
  br label %93

54:                                               ; preds = %46
  %55 = load i32, i32* %4, align 4
  %56 = call i64 @lseek(i32 %55, i64 0, i32 0) #10
  %57 = icmp slt i64 %56, 0
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = load %struct.file*, %struct.file** %3, align 8
  %60 = getelementptr inbounds %struct.file, %struct.file* %59, i32 0, i32 1
  %61 = load i8*, i8** %60, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*)* @perror_with_name to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.606, i64 0, i64 0), i8* %61)
  store i32 1, i32* %2, align 4
  br label %93

62:                                               ; preds = %54
  %63 = load i32, i32* %4, align 4
  %64 = call i64 @write(i32 %63, i8* %6, i64 1)
  %65 = icmp slt i64 %64, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %62
  %67 = load %struct.file*, %struct.file** %3, align 8
  %68 = getelementptr inbounds %struct.file, %struct.file* %67, i32 0, i32 1
  %69 = load i8*, i8** %68, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*)* @perror_with_name to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36.607, i64 0, i64 0), i8* %69)
  store i32 1, i32* %2, align 4
  br label %93

70:                                               ; preds = %62
  %71 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 8
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %88

74:                                               ; preds = %70
  %75 = load i32, i32* %4, align 4
  %76 = call i32 @close(i32 %75)
  %77 = load %struct.file*, %struct.file** %3, align 8
  %78 = getelementptr inbounds %struct.file, %struct.file* %77, i32 0, i32 1
  %79 = load i8*, i8** %78, align 8
  %80 = call i32 (i8*, i32, ...) @open(i8* %79, i32 514, i32 438)
  store i32 %80, i32* %4, align 4
  %81 = load i32, i32* %4, align 4
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %74
  %84 = load %struct.file*, %struct.file** %3, align 8
  %85 = getelementptr inbounds %struct.file, %struct.file* %84, i32 0, i32 1
  %86 = load i8*, i8** %85, align 8
  call void (i8*, i8*, ...) bitcast (void (i8*, i8*)* @perror_with_name to void (i8*, i8*, ...)*)(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32.603, i64 0, i64 0), i8* %86)
  store i32 1, i32* %2, align 4
  br label %93

87:                                               ; preds = %74
  br label %88

88:                                               ; preds = %87, %70
  %89 = load i32, i32* %4, align 4
  %90 = call i32 @close(i32 %89)
  br label %91

91:                                               ; preds = %88
  br label %92

92:                                               ; preds = %91
  store i32 0, i32* %2, align 4
  br label %93

93:                                               ; preds = %92, %83, %66, %58, %50, %42, %34, %22
  %94 = load i32, i32* %2, align 4
  ret i32 %94
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @notice_finished_file(%struct.file* %0) #0 {
  %2 = alloca %struct.file*, align 8
  %3 = alloca %struct.dep*, align 8
  store %struct.file* %0, %struct.file** %2, align 8
  %4 = load %struct.file*, %struct.file** %2, align 8
  %5 = getelementptr inbounds %struct.file, %struct.file* %4, i32 0, i32 12
  %6 = load i16, i16* %5, align 2
  %7 = and i16 %6, -4
  %8 = or i16 %7, 3
  store i16 %8, i16* %5, align 2
  %9 = load %struct.file*, %struct.file** %2, align 8
  %10 = getelementptr inbounds %struct.file, %struct.file* %9, i32 0, i32 12
  %11 = load i16, i16* %10, align 2
  %12 = and i16 %11, -65
  %13 = or i16 %12, 64
  store i16 %13, i16* %10, align 2
  %14 = load i32, i32* @files_remade, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* @files_remade, align 4
  %16 = load %struct.file*, %struct.file** %2, align 8
  %17 = getelementptr inbounds %struct.file, %struct.file* %16, i32 0, i32 12
  %18 = load i16, i16* %17, align 2
  %19 = lshr i16 %18, 9
  %20 = and i16 %19, 1
  %21 = zext i16 %20 to i32
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %51, label %23

23:                                               ; preds = %1
  %24 = load i32, i32* @just_print_flag, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %42, label %26

26:                                               ; preds = %23
  %27 = load i32, i32* @question_flag, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %26
  %30 = load %struct.file*, %struct.file** %2, align 8
  %31 = getelementptr inbounds %struct.file, %struct.file* %30, i32 0, i32 12
  %32 = load i16, i16* %31, align 2
  %33 = lshr i16 %32, 7
  %34 = and i16 %33, 1
  %35 = zext i16 %34 to i32
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %47

37:                                               ; preds = %29
  %38 = load %struct.file*, %struct.file** %2, align 8
  %39 = getelementptr inbounds %struct.file, %struct.file* %38, i32 0, i32 3
  %40 = load %struct.commands*, %struct.commands** %39, align 8
  %41 = icmp eq %struct.commands* %40, null
  br i1 %41, label %42, label %47

42:                                               ; preds = %37, %26, %23
  %43 = call i32 (i64*, ...) bitcast (i64 (i64*)* @time to i32 (i64*, ...)*)(i64* null)
  %44 = sext i32 %43 to i64
  %45 = load %struct.file*, %struct.file** %2, align 8
  %46 = getelementptr inbounds %struct.file, %struct.file* %45, i32 0, i32 6
  store i64 %44, i64* %46, align 8
  br label %50

47:                                               ; preds = %37, %29
  %48 = load %struct.file*, %struct.file** %2, align 8
  %49 = getelementptr inbounds %struct.file, %struct.file* %48, i32 0, i32 6
  store i64 0, i64* %49, align 8
  br label %50

50:                                               ; preds = %47, %42
  br label %51

51:                                               ; preds = %50, %1
  %52 = load %struct.file*, %struct.file** %2, align 8
  %53 = getelementptr inbounds %struct.file, %struct.file* %52, i32 0, i32 5
  %54 = load %struct.dep*, %struct.dep** %53, align 8
  store %struct.dep* %54, %struct.dep** %3, align 8
  br label %55

55:                                               ; preds = %99, %51
  %56 = load %struct.dep*, %struct.dep** %3, align 8
  %57 = icmp ne %struct.dep* %56, null
  br i1 %57, label %58, label %103

58:                                               ; preds = %55
  %59 = load %struct.dep*, %struct.dep** %3, align 8
  %60 = getelementptr inbounds %struct.dep, %struct.dep* %59, i32 0, i32 2
  %61 = load %struct.file*, %struct.file** %60, align 8
  %62 = getelementptr inbounds %struct.file, %struct.file* %61, i32 0, i32 12
  %63 = load i16, i16* %62, align 2
  %64 = and i16 %63, -4
  %65 = or i16 %64, 3
  store i16 %65, i16* %62, align 2
  %66 = load %struct.dep*, %struct.dep** %3, align 8
  %67 = getelementptr inbounds %struct.dep, %struct.dep* %66, i32 0, i32 2
  %68 = load %struct.file*, %struct.file** %67, align 8
  %69 = getelementptr inbounds %struct.file, %struct.file* %68, i32 0, i32 12
  %70 = load i16, i16* %69, align 2
  %71 = and i16 %70, -65
  %72 = or i16 %71, 64
  store i16 %72, i16* %69, align 2
  %73 = load %struct.file*, %struct.file** %2, align 8
  %74 = getelementptr inbounds %struct.file, %struct.file* %73, i32 0, i32 11
  %75 = load i16, i16* %74, align 8
  %76 = load %struct.dep*, %struct.dep** %3, align 8
  %77 = getelementptr inbounds %struct.dep, %struct.dep* %76, i32 0, i32 2
  %78 = load %struct.file*, %struct.file** %77, align 8
  %79 = getelementptr inbounds %struct.file, %struct.file* %78, i32 0, i32 11
  store i16 %75, i16* %79, align 8
  %80 = load i32, i32* @just_print_flag, align 4
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %58
  %83 = load i32, i32* @question_flag, align 4
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %93

85:                                               ; preds = %82, %58
  %86 = load %struct.file*, %struct.file** %2, align 8
  %87 = getelementptr inbounds %struct.file, %struct.file* %86, i32 0, i32 6
  %88 = load i64, i64* %87, align 8
  %89 = load %struct.dep*, %struct.dep** %3, align 8
  %90 = getelementptr inbounds %struct.dep, %struct.dep* %89, i32 0, i32 2
  %91 = load %struct.file*, %struct.file** %90, align 8
  %92 = getelementptr inbounds %struct.file, %struct.file* %91, i32 0, i32 6
  store i64 %88, i64* %92, align 8
  br label %98

93:                                               ; preds = %82
  %94 = load %struct.dep*, %struct.dep** %3, align 8
  %95 = getelementptr inbounds %struct.dep, %struct.dep* %94, i32 0, i32 2
  %96 = load %struct.file*, %struct.file** %95, align 8
  %97 = getelementptr inbounds %struct.file, %struct.file* %96, i32 0, i32 6
  store i64 0, i64* %97, align 8
  br label %98

98:                                               ; preds = %93, %85
  br label %99

99:                                               ; preds = %98
  %100 = load %struct.dep*, %struct.dep** %3, align 8
  %101 = getelementptr inbounds %struct.dep, %struct.dep* %100, i32 0, i32 0
  %102 = load %struct.dep*, %struct.dep** %101, align 8
  store %struct.dep* %102, %struct.dep** %3, align 8
  br label %55

103:                                              ; preds = %55
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @name_mtime(i8* %0) #0 {
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct.stat, align 8
  store i8* %0, i8** %3, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = call i32 @stat(i8* %5, %struct.stat* %4) #10
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i64 -1, i64* %2, align 8
  br label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 12
  %11 = getelementptr inbounds %struct.timespec, %struct.timespec* %10, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %2, align 8
  br label %13

13:                                               ; preds = %9, %8
  %14 = load i64, i64* %2, align 8
  ret i64 %14
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @library_file_mtime(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %7 = load i8*, i8** %2, align 8
  %8 = call i8* (i8*, i8*, i8*, ...) bitcast (i8* (i8*, i8*, i8*)* @concat to i8* (i8*, i8*, i8*, ...)*)(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37.608, i64 0, i64 0), i8* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38.609, i64 0, i64 0))
  store i8* %8, i8** %4, align 8
  %9 = load i8*, i8** %4, align 8
  %10 = call i64 @name_mtime(i8* %9)
  store i64 %10, i64* %3, align 8
  %11 = load i64, i64* %3, align 8
  %12 = icmp eq i64 %11, -1
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = load i8*, i8** %4, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 4
  %16 = call i64 @name_mtime(i8* %15)
  store i64 %16, i64* %3, align 8
  br label %17

17:                                               ; preds = %13, %1
  %18 = load i64, i64* %3, align 8
  %19 = icmp eq i64 %18, -1
  br i1 %19, label %20, label %26

20:                                               ; preds = %17
  %21 = load i8*, i8** %2, align 8
  %22 = call i8* (i8*, i8*, i8*, ...) bitcast (i8* (i8*, i8*, i8*)* @concat to i8* (i8*, i8*, i8*, ...)*)(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39.610, i64 0, i64 0), i8* %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38.609, i64 0, i64 0))
  store i8* %22, i8** %5, align 8
  %23 = load i8*, i8** %5, align 8
  %24 = call i64 @name_mtime(i8* %23)
  store i64 %24, i64* %3, align 8
  %25 = load i8*, i8** %5, align 8
  call void @free(i8* %25) #10
  br label %26

26:                                               ; preds = %20, %17
  %27 = load i64, i64* %3, align 8
  %28 = icmp eq i64 %27, -1
  br i1 %28, label %29, label %33

29:                                               ; preds = %26
  %30 = load i8*, i8** %4, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 9
  %32 = call i64 @name_mtime(i8* %31)
  store i64 %32, i64* %3, align 8
  br label %33

33:                                               ; preds = %29, %26
  %34 = load i64, i64* %3, align 8
  %35 = icmp eq i64 %34, -1
  br i1 %35, label %36, label %46

36:                                               ; preds = %33
  %37 = load i8*, i8** %4, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 9
  store i8* %38, i8** %6, align 8
  %39 = call i32 (i8**, ...) bitcast (i32 (i8**)* @vpath_search to i32 (i8**, ...)*)(i8** %6)
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %36
  %42 = load i8*, i8** %6, align 8
  %43 = call i64 @name_mtime(i8* %42)
  store i64 %43, i64* %3, align 8
  %44 = load i8*, i8** %6, align 8
  call void @free(i8* %44) #10
  br label %45

45:                                               ; preds = %41, %36
  br label %46

46:                                               ; preds = %45, %33
  %47 = load i8*, i8** %4, align 8
  call void @free(i8* %47) #10
  %48 = load i64, i64* %3, align 8
  ret i64 %48
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @start_remote_job_p() #0 {
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @start_remote_job(i8** %0, i32 %1, i32* %2, i32* %3, i32* %4) #0 {
  %6 = alloca i8**, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  store i8** %0, i8*** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32* %2, i32** %8, align 8
  store i32* %3, i32** %9, align 8
  store i32* %4, i32** %10, align 8
  ret i32 -1
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @remote_status(i32* %0, i32* %1, i32* %2, i32 %3) #0 {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32 %3, i32* %8, align 4
  ret i32 -1
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @block_remote_children() #0 {
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @unblock_remote_children() #0 {
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @remote_kill(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  ret i32 -1
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @count_implicit_rule_limits() #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32, align 4
  %3 = alloca %struct.rule*, align 8
  %4 = alloca %struct.rule*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.dep*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  store i32 0, i32* @num_pattern_rules, align 4
  store i8* null, i8** %1, align 8
  store i32 0, i32* %2, align 4
  %10 = load %struct.rule*, %struct.rule** @pattern_rules, align 8
  store %struct.rule* %10, %struct.rule** %4, align 8
  store %struct.rule* %10, %struct.rule** %3, align 8
  br label %11

11:                                               ; preds = %144, %0
  %12 = load %struct.rule*, %struct.rule** %3, align 8
  %13 = icmp ne %struct.rule* %12, null
  br i1 %13, label %14, label %149

14:                                               ; preds = %11
  store i32 0, i32* %5, align 4
  %15 = load i32, i32* @num_pattern_rules, align 4
  %16 = add i32 %15, 1
  store i32 %16, i32* @num_pattern_rules, align 4
  %17 = load %struct.rule*, %struct.rule** %3, align 8
  %18 = getelementptr inbounds %struct.rule, %struct.rule* %17, i32 0, i32 4
  %19 = load %struct.dep*, %struct.dep** %18, align 8
  store %struct.dep* %19, %struct.dep** %6, align 8
  br label %20

20:                                               ; preds = %133, %14
  %21 = load %struct.dep*, %struct.dep** %6, align 8
  %22 = icmp ne %struct.dep* %21, null
  br i1 %22, label %23, label %137

23:                                               ; preds = %20
  %24 = load %struct.dep*, %struct.dep** %6, align 8
  %25 = getelementptr inbounds %struct.dep, %struct.dep* %24, i32 0, i32 1
  %26 = load i8*, i8** %25, align 8
  %27 = call i64 @strlen(i8* %26) #9
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %7, align 4
  %29 = load %struct.dep*, %struct.dep** %6, align 8
  %30 = getelementptr inbounds %struct.dep, %struct.dep* %29, i32 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = call i8* @strrchr(i8* %31, i32 47) #9
  store i8* %32, i8** %8, align 8
  %33 = load i8*, i8** %8, align 8
  %34 = icmp ne i8* %33, null
  br i1 %34, label %35, label %40

35:                                               ; preds = %23
  %36 = load %struct.dep*, %struct.dep** %6, align 8
  %37 = getelementptr inbounds %struct.dep, %struct.dep* %36, i32 0, i32 1
  %38 = load i8*, i8** %37, align 8
  %39 = call i8* @strchr(i8* %38, i32 37) #9
  br label %41

40:                                               ; preds = %23
  br label %41

41:                                               ; preds = %40, %35
  %42 = phi i8* [ %39, %35 ], [ null, %40 ]
  store i8* %42, i8** %9, align 8
  %43 = load i32, i32* %5, align 4
  %44 = add i32 %43, 1
  store i32 %44, i32* %5, align 4
  %45 = load i32, i32* %7, align 4
  %46 = load i32, i32* @max_pattern_dep_length, align 4
  %47 = icmp ugt i32 %45, %46
  br i1 %47, label %48, label %50

48:                                               ; preds = %41
  %49 = load i32, i32* %7, align 4
  store i32 %49, i32* @max_pattern_dep_length, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = load i8*, i8** %8, align 8
  %52 = icmp ne i8* %51, null
  br i1 %52, label %53, label %132

53:                                               ; preds = %50
  %54 = load i8*, i8** %9, align 8
  %55 = load i8*, i8** %8, align 8
  %56 = icmp ugt i8* %54, %55
  br i1 %56, label %57, label %132

57:                                               ; preds = %53
  %58 = load i8*, i8** %8, align 8
  %59 = load %struct.dep*, %struct.dep** %6, align 8
  %60 = getelementptr inbounds %struct.dep, %struct.dep* %59, i32 0, i32 1
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %58, %61
  br i1 %62, label %63, label %66

63:                                               ; preds = %57
  %64 = load i8*, i8** %8, align 8
  %65 = getelementptr inbounds i8, i8* %64, i32 1
  store i8* %65, i8** %8, align 8
  br label %66

66:                                               ; preds = %63, %57
  %67 = load i8*, i8** %8, align 8
  %68 = load %struct.dep*, %struct.dep** %6, align 8
  %69 = getelementptr inbounds %struct.dep, %struct.dep* %68, i32 0, i32 1
  %70 = load i8*, i8** %69, align 8
  %71 = ptrtoint i8* %67 to i64
  %72 = ptrtoint i8* %70 to i64
  %73 = sub i64 %71, %72
  %74 = load i32, i32* %2, align 4
  %75 = zext i32 %74 to i64
  %76 = icmp sgt i64 %73, %75
  br i1 %76, label %77, label %94

77:                                               ; preds = %66
  %78 = load i8*, i8** %1, align 8
  %79 = icmp ne i8* %78, null
  br i1 %79, label %80, label %82

80:                                               ; preds = %77
  %81 = load i8*, i8** %1, align 8
  call void @free(i8* %81) #10
  br label %82

82:                                               ; preds = %80, %77
  %83 = load i8*, i8** %8, align 8
  %84 = load %struct.dep*, %struct.dep** %6, align 8
  %85 = getelementptr inbounds %struct.dep, %struct.dep* %84, i32 0, i32 1
  %86 = load i8*, i8** %85, align 8
  %87 = ptrtoint i8* %83 to i64
  %88 = ptrtoint i8* %86 to i64
  %89 = sub i64 %87, %88
  %90 = trunc i64 %89 to i32
  store i32 %90, i32* %2, align 4
  %91 = load i32, i32* %2, align 4
  %92 = add i32 %91, 1
  %93 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %92)
  store i8* %93, i8** %1, align 8
  br label %94

94:                                               ; preds = %82, %66
  %95 = load i8*, i8** %1, align 8
  %96 = load %struct.dep*, %struct.dep** %6, align 8
  %97 = getelementptr inbounds %struct.dep, %struct.dep* %96, i32 0, i32 1
  %98 = load i8*, i8** %97, align 8
  %99 = load i8*, i8** %8, align 8
  %100 = load %struct.dep*, %struct.dep** %6, align 8
  %101 = getelementptr inbounds %struct.dep, %struct.dep* %100, i32 0, i32 1
  %102 = load i8*, i8** %101, align 8
  %103 = ptrtoint i8* %99 to i64
  %104 = ptrtoint i8* %102 to i64
  %105 = sub i64 %103, %104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %95, i8* align 1 %98, i64 %105, i1 false)
  %106 = load i8*, i8** %1, align 8
  %107 = load i8*, i8** %8, align 8
  %108 = load %struct.dep*, %struct.dep** %6, align 8
  %109 = getelementptr inbounds %struct.dep, %struct.dep* %108, i32 0, i32 1
  %110 = load i8*, i8** %109, align 8
  %111 = ptrtoint i8* %107 to i64
  %112 = ptrtoint i8* %110 to i64
  %113 = sub i64 %111, %112
  %114 = getelementptr inbounds i8, i8* %106, i64 %113
  store i8 0, i8* %114, align 1
  %115 = load i8*, i8** %1, align 8
  %116 = call i32 (i8*, i8*, ...) bitcast (i32 (i8*, i8*)* @dir_file_exists_p to i32 (i8*, i8*, ...)*)(i8* %115, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.637, i64 0, i64 0))
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %131, label %118

118:                                              ; preds = %94
  %119 = load i8*, i8** %1, align 8
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %121, 47
  br i1 %122, label %123, label %127

123:                                              ; preds = %118
  %124 = load %struct.rule*, %struct.rule** %3, align 8
  %125 = load %struct.rule*, %struct.rule** %4, align 8
  call void @freerule(%struct.rule* %124, %struct.rule* %125)
  %126 = load %struct.rule*, %struct.rule** %4, align 8
  store %struct.rule* %126, %struct.rule** %3, align 8
  br label %144

127:                                              ; preds = %118
  %128 = load %struct.rule*, %struct.rule** %3, align 8
  %129 = getelementptr inbounds %struct.rule, %struct.rule* %128, i32 0, i32 7
  store i8 1, i8* %129, align 1
  br label %130

130:                                              ; preds = %127
  br label %131

131:                                              ; preds = %130, %94
  br label %132

132:                                              ; preds = %131, %53, %50
  br label %133

133:                                              ; preds = %132
  %134 = load %struct.dep*, %struct.dep** %6, align 8
  %135 = getelementptr inbounds %struct.dep, %struct.dep* %134, i32 0, i32 0
  %136 = load %struct.dep*, %struct.dep** %135, align 8
  store %struct.dep* %136, %struct.dep** %6, align 8
  br label %20

137:                                              ; preds = %20
  %138 = load i32, i32* %5, align 4
  %139 = load i32, i32* @max_pattern_deps, align 4
  %140 = icmp ugt i32 %138, %139
  br i1 %140, label %141, label %143

141:                                              ; preds = %137
  %142 = load i32, i32* %5, align 4
  store i32 %142, i32* @max_pattern_deps, align 4
  br label %143

143:                                              ; preds = %141, %137
  br label %144

144:                                              ; preds = %143, %123
  %145 = load %struct.rule*, %struct.rule** %3, align 8
  store %struct.rule* %145, %struct.rule** %4, align 8
  %146 = load %struct.rule*, %struct.rule** %3, align 8
  %147 = getelementptr inbounds %struct.rule, %struct.rule* %146, i32 0, i32 0
  %148 = load %struct.rule*, %struct.rule** %147, align 8
  store %struct.rule* %148, %struct.rule** %3, align 8
  br label %11

149:                                              ; preds = %11
  %150 = load i8*, i8** %1, align 8
  %151 = icmp ne i8* %150, null
  br i1 %151, label %152, label %154

152:                                              ; preds = %149
  %153 = load i8*, i8** %1, align 8
  call void @free(i8* %153) #10
  br label %154

154:                                              ; preds = %152, %149
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @freerule(%struct.rule* %0, %struct.rule* %1) #0 {
  %3 = alloca %struct.rule*, align 8
  %4 = alloca %struct.rule*, align 8
  %5 = alloca %struct.rule*, align 8
  %6 = alloca i32, align 4
  store %struct.rule* %0, %struct.rule** %3, align 8
  store %struct.rule* %1, %struct.rule** %4, align 8
  %7 = load %struct.rule*, %struct.rule** %3, align 8
  %8 = getelementptr inbounds %struct.rule, %struct.rule* %7, i32 0, i32 0
  %9 = load %struct.rule*, %struct.rule** %8, align 8
  store %struct.rule* %9, %struct.rule** %5, align 8
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %27, %2
  %11 = load %struct.rule*, %struct.rule** %3, align 8
  %12 = getelementptr inbounds %struct.rule, %struct.rule* %11, i32 0, i32 1
  %13 = load i8**, i8*** %12, align 8
  %14 = load i32, i32* %6, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds i8*, i8** %13, i64 %15
  %17 = load i8*, i8** %16, align 8
  %18 = icmp ne i8* %17, null
  br i1 %18, label %19, label %30

19:                                               ; preds = %10
  %20 = load %struct.rule*, %struct.rule** %3, align 8
  %21 = getelementptr inbounds %struct.rule, %struct.rule* %20, i32 0, i32 1
  %22 = load i8**, i8*** %21, align 8
  %23 = load i32, i32* %6, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds i8*, i8** %22, i64 %24
  %26 = load i8*, i8** %25, align 8
  call void @free(i8* %26) #10
  br label %27

27:                                               ; preds = %19
  %28 = load i32, i32* %6, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %6, align 4
  br label %10

30:                                               ; preds = %10
  %31 = load %struct.rule*, %struct.rule** %3, align 8
  %32 = getelementptr inbounds %struct.rule, %struct.rule* %31, i32 0, i32 1
  %33 = load i8**, i8*** %32, align 8
  %34 = bitcast i8** %33 to i8*
  call void @free(i8* %34) #10
  %35 = load %struct.rule*, %struct.rule** %3, align 8
  %36 = getelementptr inbounds %struct.rule, %struct.rule* %35, i32 0, i32 3
  %37 = load i8**, i8*** %36, align 8
  %38 = bitcast i8** %37 to i8*
  call void @free(i8* %38) #10
  %39 = load %struct.rule*, %struct.rule** %3, align 8
  %40 = getelementptr inbounds %struct.rule, %struct.rule* %39, i32 0, i32 2
  %41 = load i32*, i32** %40, align 8
  %42 = bitcast i32* %41 to i8*
  call void @free(i8* %42) #10
  %43 = load %struct.rule*, %struct.rule** %3, align 8
  %44 = bitcast %struct.rule* %43 to i8*
  call void @free(i8* %44) #10
  %45 = load %struct.rule*, %struct.rule** %4, align 8
  %46 = icmp eq %struct.rule* %45, null
  br i1 %46, label %47, label %48

47:                                               ; preds = %30
  br label %70

48:                                               ; preds = %30
  %49 = load %struct.rule*, %struct.rule** @pattern_rules, align 8
  %50 = load %struct.rule*, %struct.rule** %3, align 8
  %51 = icmp eq %struct.rule* %49, %50
  br i1 %51, label %52, label %60

52:                                               ; preds = %48
  %53 = load %struct.rule*, %struct.rule** %4, align 8
  %54 = load %struct.rule*, %struct.rule** @pattern_rules, align 8
  %55 = icmp ne %struct.rule* %53, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %52
  call void @abort() #12
  unreachable

57:                                               ; preds = %52
  %58 = load %struct.rule*, %struct.rule** %5, align 8
  store %struct.rule* %58, %struct.rule** @pattern_rules, align 8
  br label %59

59:                                               ; preds = %57
  br label %64

60:                                               ; preds = %48
  %61 = load %struct.rule*, %struct.rule** %5, align 8
  %62 = load %struct.rule*, %struct.rule** %4, align 8
  %63 = getelementptr inbounds %struct.rule, %struct.rule* %62, i32 0, i32 0
  store %struct.rule* %61, %struct.rule** %63, align 8
  br label %64

64:                                               ; preds = %60, %59
  %65 = load %struct.rule*, %struct.rule** @last_pattern_rule, align 8
  %66 = load %struct.rule*, %struct.rule** %3, align 8
  %67 = icmp eq %struct.rule* %65, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  %69 = load %struct.rule*, %struct.rule** %4, align 8
  store %struct.rule* %69, %struct.rule** @last_pattern_rule, align 8
  br label %70

70:                                               ; preds = %68, %64, %47
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @convert_to_pattern() #0 {
  %1 = alloca %struct.dep*, align 8
  %2 = alloca %struct.dep*, align 8
  %3 = alloca %struct.dep*, align 8
  %4 = alloca %struct.file*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  store i32 0, i32* @maxsuffix, align 4
  %11 = load %struct.file*, %struct.file** @suffix_file, align 8
  %12 = getelementptr inbounds %struct.file, %struct.file* %11, i32 0, i32 2
  %13 = load %struct.dep*, %struct.dep** %12, align 8
  store %struct.dep* %13, %struct.dep** %1, align 8
  br label %14

14:                                               ; preds = %42, %0
  %15 = load %struct.dep*, %struct.dep** %1, align 8
  %16 = icmp ne %struct.dep* %15, null
  br i1 %16, label %17, label %46

17:                                               ; preds = %14
  %18 = load %struct.dep*, %struct.dep** %1, align 8
  %19 = getelementptr inbounds %struct.dep, %struct.dep* %18, i32 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %28

22:                                               ; preds = %17
  %23 = load %struct.dep*, %struct.dep** %1, align 8
  %24 = getelementptr inbounds %struct.dep, %struct.dep* %23, i32 0, i32 2
  %25 = load %struct.file*, %struct.file** %24, align 8
  %26 = getelementptr inbounds %struct.file, %struct.file* %25, i32 0, i32 1
  %27 = load i8*, i8** %26, align 8
  br label %32

28:                                               ; preds = %17
  %29 = load %struct.dep*, %struct.dep** %1, align 8
  %30 = getelementptr inbounds %struct.dep, %struct.dep* %29, i32 0, i32 1
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %28, %22
  %33 = phi i8* [ %27, %22 ], [ %31, %28 ]
  %34 = call i64 @strlen(i8* %33) #9
  %35 = trunc i64 %34 to i32
  store i32 %35, i32* %10, align 4
  %36 = load i32, i32* %10, align 4
  %37 = load i32, i32* @maxsuffix, align 4
  %38 = icmp ugt i32 %36, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = load i32, i32* %10, align 4
  store i32 %40, i32* @maxsuffix, align 4
  br label %41

41:                                               ; preds = %39, %32
  br label %42

42:                                               ; preds = %41
  %43 = load %struct.dep*, %struct.dep** %1, align 8
  %44 = getelementptr inbounds %struct.dep, %struct.dep* %43, i32 0, i32 0
  %45 = load %struct.dep*, %struct.dep** %44, align 8
  store %struct.dep* %45, %struct.dep** %1, align 8
  br label %14

46:                                               ; preds = %14
  %47 = load i32, i32* @maxsuffix, align 4
  %48 = mul i32 %47, 2
  %49 = add i32 %48, 1
  %50 = zext i32 %49 to i64
  %51 = alloca i8, i64 %50, align 16
  store i8* %51, i8** %5, align 8
  %52 = load %struct.file*, %struct.file** @suffix_file, align 8
  %53 = getelementptr inbounds %struct.file, %struct.file* %52, i32 0, i32 2
  %54 = load %struct.dep*, %struct.dep** %53, align 8
  store %struct.dep* %54, %struct.dep** %1, align 8
  br label %55

55:                                               ; preds = %486, %46
  %56 = load %struct.dep*, %struct.dep** %1, align 8
  %57 = icmp ne %struct.dep* %56, null
  br i1 %57, label %58, label %490

58:                                               ; preds = %55
  %59 = load %struct.dep*, %struct.dep** %1, align 8
  %60 = getelementptr inbounds %struct.dep, %struct.dep* %59, i32 0, i32 1
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %58
  %64 = load %struct.dep*, %struct.dep** %1, align 8
  %65 = getelementptr inbounds %struct.dep, %struct.dep* %64, i32 0, i32 2
  %66 = load %struct.file*, %struct.file** %65, align 8
  %67 = getelementptr inbounds %struct.file, %struct.file* %66, i32 0, i32 1
  %68 = load i8*, i8** %67, align 8
  br label %73

69:                                               ; preds = %58
  %70 = load %struct.dep*, %struct.dep** %1, align 8
  %71 = getelementptr inbounds %struct.dep, %struct.dep* %70, i32 0, i32 1
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %69, %63
  %74 = phi i8* [ %68, %63 ], [ %72, %69 ]
  %75 = call i64 @strlen(i8* %74) #9
  %76 = trunc i64 %75 to i32
  store i32 %76, i32* %6, align 4
  %77 = load i32, i32* %6, align 4
  %78 = add i32 1, %77
  %79 = add i32 %78, 1
  %80 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %79)
  store i8* %80, i8** %8, align 8
  %81 = load i8*, i8** %8, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 0
  store i8 37, i8* %82, align 1
  %83 = load i8*, i8** %8, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 1
  %85 = load %struct.dep*, %struct.dep** %1, align 8
  %86 = getelementptr inbounds %struct.dep, %struct.dep* %85, i32 0, i32 1
  %87 = load i8*, i8** %86, align 8
  %88 = icmp eq i8* %87, null
  br i1 %88, label %89, label %95

89:                                               ; preds = %73
  %90 = load %struct.dep*, %struct.dep** %1, align 8
  %91 = getelementptr inbounds %struct.dep, %struct.dep* %90, i32 0, i32 2
  %92 = load %struct.file*, %struct.file** %91, align 8
  %93 = getelementptr inbounds %struct.file, %struct.file* %92, i32 0, i32 1
  %94 = load i8*, i8** %93, align 8
  br label %99

95:                                               ; preds = %73
  %96 = load %struct.dep*, %struct.dep** %1, align 8
  %97 = getelementptr inbounds %struct.dep, %struct.dep* %96, i32 0, i32 1
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %95, %89
  %100 = phi i8* [ %94, %89 ], [ %98, %95 ]
  %101 = load i32, i32* %6, align 4
  %102 = add i32 %101, 1
  %103 = zext i32 %102 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %100, i64 %103, i1 false)
  %104 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 16)
  %105 = bitcast i8* %104 to i8**
  store i8** %105, i8*** %9, align 8
  %106 = load i8*, i8** %8, align 8
  %107 = load i8**, i8*** %9, align 8
  %108 = getelementptr inbounds i8*, i8** %107, i64 0
  store i8* %106, i8** %108, align 8
  %109 = load i8**, i8*** %9, align 8
  %110 = getelementptr inbounds i8*, i8** %109, i64 1
  store i8* null, i8** %110, align 8
  %111 = load i8**, i8*** %9, align 8
  call void @create_pattern_rule(i8** %111, i8** null, i32 0, %struct.dep* null, %struct.commands* null, i32 0)
  %112 = load %struct.dep*, %struct.dep** %1, align 8
  %113 = getelementptr inbounds %struct.dep, %struct.dep* %112, i32 0, i32 2
  %114 = load %struct.file*, %struct.file** %113, align 8
  store %struct.file* %114, %struct.file** %4, align 8
  %115 = load %struct.file*, %struct.file** %4, align 8
  %116 = getelementptr inbounds %struct.file, %struct.file* %115, i32 0, i32 3
  %117 = load %struct.commands*, %struct.commands** %116, align 8
  %118 = icmp ne %struct.commands* %117, null
  br i1 %118, label %119, label %169

119:                                              ; preds = %99
  %120 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 32)
  %121 = bitcast i8* %120 to %struct.dep*
  store %struct.dep* %121, %struct.dep** %3, align 8
  %122 = load i32, i32* %6, align 4
  %123 = add i32 1, %122
  %124 = add i32 %123, 1
  %125 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %124)
  %126 = load %struct.dep*, %struct.dep** %3, align 8
  %127 = getelementptr inbounds %struct.dep, %struct.dep* %126, i32 0, i32 1
  store i8* %125, i8** %127, align 8
  %128 = load %struct.dep*, %struct.dep** %3, align 8
  %129 = getelementptr inbounds %struct.dep, %struct.dep* %128, i32 0, i32 1
  %130 = load i8*, i8** %129, align 8
  %131 = getelementptr inbounds i8, i8* %130, i64 0
  store i8 37, i8* %131, align 1
  %132 = load %struct.dep*, %struct.dep** %3, align 8
  %133 = getelementptr inbounds %struct.dep, %struct.dep* %132, i32 0, i32 1
  %134 = load i8*, i8** %133, align 8
  %135 = getelementptr inbounds i8, i8* %134, i64 1
  %136 = load %struct.dep*, %struct.dep** %1, align 8
  %137 = getelementptr inbounds %struct.dep, %struct.dep* %136, i32 0, i32 1
  %138 = load i8*, i8** %137, align 8
  %139 = icmp eq i8* %138, null
  br i1 %139, label %140, label %146

140:                                              ; preds = %119
  %141 = load %struct.dep*, %struct.dep** %1, align 8
  %142 = getelementptr inbounds %struct.dep, %struct.dep* %141, i32 0, i32 2
  %143 = load %struct.file*, %struct.file** %142, align 8
  %144 = getelementptr inbounds %struct.file, %struct.file* %143, i32 0, i32 1
  %145 = load i8*, i8** %144, align 8
  br label %150

146:                                              ; preds = %119
  %147 = load %struct.dep*, %struct.dep** %1, align 8
  %148 = getelementptr inbounds %struct.dep, %struct.dep* %147, i32 0, i32 1
  %149 = load i8*, i8** %148, align 8
  br label %150

150:                                              ; preds = %146, %140
  %151 = phi i8* [ %145, %140 ], [ %149, %146 ]
  %152 = load i32, i32* %6, align 4
  %153 = add i32 %152, 1
  %154 = zext i32 %153 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %135, i8* align 1 %151, i64 %154, i1 false)
  %155 = load %struct.dep*, %struct.dep** %3, align 8
  %156 = getelementptr inbounds %struct.dep, %struct.dep* %155, i32 0, i32 0
  store %struct.dep* null, %struct.dep** %156, align 8
  %157 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 16)
  %158 = bitcast i8* %157 to i8**
  store i8** %158, i8*** %9, align 8
  %159 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i32, ...)*)(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.642, i64 0, i64 0), i32 1)
  %160 = load i8**, i8*** %9, align 8
  %161 = getelementptr inbounds i8*, i8** %160, i64 0
  store i8* %159, i8** %161, align 8
  %162 = load i8**, i8*** %9, align 8
  %163 = getelementptr inbounds i8*, i8** %162, i64 1
  store i8* null, i8** %163, align 8
  %164 = load i8**, i8*** %9, align 8
  %165 = load %struct.dep*, %struct.dep** %3, align 8
  %166 = load %struct.file*, %struct.file** %4, align 8
  %167 = getelementptr inbounds %struct.file, %struct.file* %166, i32 0, i32 3
  %168 = load %struct.commands*, %struct.commands** %167, align 8
  call void @create_pattern_rule(i8** %164, i8** null, i32 0, %struct.dep* %165, %struct.commands* %168, i32 0)
  br label %169

169:                                              ; preds = %150, %99
  %170 = load i8*, i8** %5, align 8
  %171 = load %struct.dep*, %struct.dep** %1, align 8
  %172 = getelementptr inbounds %struct.dep, %struct.dep* %171, i32 0, i32 1
  %173 = load i8*, i8** %172, align 8
  %174 = icmp eq i8* %173, null
  br i1 %174, label %175, label %181

175:                                              ; preds = %169
  %176 = load %struct.dep*, %struct.dep** %1, align 8
  %177 = getelementptr inbounds %struct.dep, %struct.dep* %176, i32 0, i32 2
  %178 = load %struct.file*, %struct.file** %177, align 8
  %179 = getelementptr inbounds %struct.file, %struct.file* %178, i32 0, i32 1
  %180 = load i8*, i8** %179, align 8
  br label %185

181:                                              ; preds = %169
  %182 = load %struct.dep*, %struct.dep** %1, align 8
  %183 = getelementptr inbounds %struct.dep, %struct.dep* %182, i32 0, i32 1
  %184 = load i8*, i8** %183, align 8
  br label %185

185:                                              ; preds = %181, %175
  %186 = phi i8* [ %180, %175 ], [ %184, %181 ]
  %187 = load i32, i32* %6, align 4
  %188 = zext i32 %187 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %170, i8* align 1 %186, i64 %188, i1 false)
  %189 = load %struct.file*, %struct.file** @suffix_file, align 8
  %190 = getelementptr inbounds %struct.file, %struct.file* %189, i32 0, i32 2
  %191 = load %struct.dep*, %struct.dep** %190, align 8
  store %struct.dep* %191, %struct.dep** %2, align 8
  br label %192

192:                                              ; preds = %481, %185
  %193 = load %struct.dep*, %struct.dep** %2, align 8
  %194 = icmp ne %struct.dep* %193, null
  br i1 %194, label %195, label %485

195:                                              ; preds = %192
  %196 = load %struct.dep*, %struct.dep** %2, align 8
  %197 = getelementptr inbounds %struct.dep, %struct.dep* %196, i32 0, i32 1
  %198 = load i8*, i8** %197, align 8
  %199 = icmp eq i8* %198, null
  br i1 %199, label %200, label %206

200:                                              ; preds = %195
  %201 = load %struct.dep*, %struct.dep** %2, align 8
  %202 = getelementptr inbounds %struct.dep, %struct.dep* %201, i32 0, i32 2
  %203 = load %struct.file*, %struct.file** %202, align 8
  %204 = getelementptr inbounds %struct.file, %struct.file* %203, i32 0, i32 1
  %205 = load i8*, i8** %204, align 8
  br label %210

206:                                              ; preds = %195
  %207 = load %struct.dep*, %struct.dep** %2, align 8
  %208 = getelementptr inbounds %struct.dep, %struct.dep* %207, i32 0, i32 1
  %209 = load i8*, i8** %208, align 8
  br label %210

210:                                              ; preds = %206, %200
  %211 = phi i8* [ %205, %200 ], [ %209, %206 ]
  %212 = call i64 @strlen(i8* %211) #9
  %213 = trunc i64 %212 to i32
  store i32 %213, i32* %7, align 4
  %214 = load i32, i32* %6, align 4
  %215 = load i32, i32* %7, align 4
  %216 = icmp eq i32 %214, %215
  br i1 %216, label %217, label %347

217:                                              ; preds = %210
  %218 = load %struct.dep*, %struct.dep** %1, align 8
  %219 = getelementptr inbounds %struct.dep, %struct.dep* %218, i32 0, i32 1
  %220 = load i8*, i8** %219, align 8
  %221 = icmp eq i8* %220, null
  br i1 %221, label %222, label %228

222:                                              ; preds = %217
  %223 = load %struct.dep*, %struct.dep** %1, align 8
  %224 = getelementptr inbounds %struct.dep, %struct.dep* %223, i32 0, i32 2
  %225 = load %struct.file*, %struct.file** %224, align 8
  %226 = getelementptr inbounds %struct.file, %struct.file* %225, i32 0, i32 1
  %227 = load i8*, i8** %226, align 8
  br label %232

228:                                              ; preds = %217
  %229 = load %struct.dep*, %struct.dep** %1, align 8
  %230 = getelementptr inbounds %struct.dep, %struct.dep* %229, i32 0, i32 1
  %231 = load i8*, i8** %230, align 8
  br label %232

232:                                              ; preds = %228, %222
  %233 = phi i8* [ %227, %222 ], [ %231, %228 ]
  %234 = load %struct.dep*, %struct.dep** %2, align 8
  %235 = getelementptr inbounds %struct.dep, %struct.dep* %234, i32 0, i32 1
  %236 = load i8*, i8** %235, align 8
  %237 = icmp eq i8* %236, null
  br i1 %237, label %238, label %244

238:                                              ; preds = %232
  %239 = load %struct.dep*, %struct.dep** %2, align 8
  %240 = getelementptr inbounds %struct.dep, %struct.dep* %239, i32 0, i32 2
  %241 = load %struct.file*, %struct.file** %240, align 8
  %242 = getelementptr inbounds %struct.file, %struct.file* %241, i32 0, i32 1
  %243 = load i8*, i8** %242, align 8
  br label %248

244:                                              ; preds = %232
  %245 = load %struct.dep*, %struct.dep** %2, align 8
  %246 = getelementptr inbounds %struct.dep, %struct.dep* %245, i32 0, i32 1
  %247 = load i8*, i8** %246, align 8
  br label %248

248:                                              ; preds = %244, %238
  %249 = phi i8* [ %243, %238 ], [ %247, %244 ]
  %250 = icmp eq i8* %233, %249
  br i1 %250, label %346, label %251

251:                                              ; preds = %248
  %252 = load %struct.dep*, %struct.dep** %1, align 8
  %253 = getelementptr inbounds %struct.dep, %struct.dep* %252, i32 0, i32 1
  %254 = load i8*, i8** %253, align 8
  %255 = icmp eq i8* %254, null
  br i1 %255, label %256, label %262

256:                                              ; preds = %251
  %257 = load %struct.dep*, %struct.dep** %1, align 8
  %258 = getelementptr inbounds %struct.dep, %struct.dep* %257, i32 0, i32 2
  %259 = load %struct.file*, %struct.file** %258, align 8
  %260 = getelementptr inbounds %struct.file, %struct.file* %259, i32 0, i32 1
  %261 = load i8*, i8** %260, align 8
  br label %266

262:                                              ; preds = %251
  %263 = load %struct.dep*, %struct.dep** %1, align 8
  %264 = getelementptr inbounds %struct.dep, %struct.dep* %263, i32 0, i32 1
  %265 = load i8*, i8** %264, align 8
  br label %266

266:                                              ; preds = %262, %256
  %267 = phi i8* [ %261, %256 ], [ %265, %262 ]
  %268 = load i8, i8* %267, align 1
  %269 = sext i8 %268 to i32
  %270 = load %struct.dep*, %struct.dep** %2, align 8
  %271 = getelementptr inbounds %struct.dep, %struct.dep* %270, i32 0, i32 1
  %272 = load i8*, i8** %271, align 8
  %273 = icmp eq i8* %272, null
  br i1 %273, label %274, label %280

274:                                              ; preds = %266
  %275 = load %struct.dep*, %struct.dep** %2, align 8
  %276 = getelementptr inbounds %struct.dep, %struct.dep* %275, i32 0, i32 2
  %277 = load %struct.file*, %struct.file** %276, align 8
  %278 = getelementptr inbounds %struct.file, %struct.file* %277, i32 0, i32 1
  %279 = load i8*, i8** %278, align 8
  br label %284

280:                                              ; preds = %266
  %281 = load %struct.dep*, %struct.dep** %2, align 8
  %282 = getelementptr inbounds %struct.dep, %struct.dep* %281, i32 0, i32 1
  %283 = load i8*, i8** %282, align 8
  br label %284

284:                                              ; preds = %280, %274
  %285 = phi i8* [ %279, %274 ], [ %283, %280 ]
  %286 = load i8, i8* %285, align 1
  %287 = sext i8 %286 to i32
  %288 = icmp eq i32 %269, %287
  br i1 %288, label %289, label %347

289:                                              ; preds = %284
  %290 = load %struct.dep*, %struct.dep** %1, align 8
  %291 = getelementptr inbounds %struct.dep, %struct.dep* %290, i32 0, i32 1
  %292 = load i8*, i8** %291, align 8
  %293 = icmp eq i8* %292, null
  br i1 %293, label %294, label %300

294:                                              ; preds = %289
  %295 = load %struct.dep*, %struct.dep** %1, align 8
  %296 = getelementptr inbounds %struct.dep, %struct.dep* %295, i32 0, i32 2
  %297 = load %struct.file*, %struct.file** %296, align 8
  %298 = getelementptr inbounds %struct.file, %struct.file* %297, i32 0, i32 1
  %299 = load i8*, i8** %298, align 8
  br label %304

300:                                              ; preds = %289
  %301 = load %struct.dep*, %struct.dep** %1, align 8
  %302 = getelementptr inbounds %struct.dep, %struct.dep* %301, i32 0, i32 1
  %303 = load i8*, i8** %302, align 8
  br label %304

304:                                              ; preds = %300, %294
  %305 = phi i8* [ %299, %294 ], [ %303, %300 ]
  %306 = load i8, i8* %305, align 1
  %307 = sext i8 %306 to i32
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %346, label %309

309:                                              ; preds = %304
  %310 = load %struct.dep*, %struct.dep** %1, align 8
  %311 = getelementptr inbounds %struct.dep, %struct.dep* %310, i32 0, i32 1
  %312 = load i8*, i8** %311, align 8
  %313 = icmp eq i8* %312, null
  br i1 %313, label %314, label %320

314:                                              ; preds = %309
  %315 = load %struct.dep*, %struct.dep** %1, align 8
  %316 = getelementptr inbounds %struct.dep, %struct.dep* %315, i32 0, i32 2
  %317 = load %struct.file*, %struct.file** %316, align 8
  %318 = getelementptr inbounds %struct.file, %struct.file* %317, i32 0, i32 1
  %319 = load i8*, i8** %318, align 8
  br label %324

320:                                              ; preds = %309
  %321 = load %struct.dep*, %struct.dep** %1, align 8
  %322 = getelementptr inbounds %struct.dep, %struct.dep* %321, i32 0, i32 1
  %323 = load i8*, i8** %322, align 8
  br label %324

324:                                              ; preds = %320, %314
  %325 = phi i8* [ %319, %314 ], [ %323, %320 ]
  %326 = getelementptr inbounds i8, i8* %325, i64 1
  %327 = load %struct.dep*, %struct.dep** %2, align 8
  %328 = getelementptr inbounds %struct.dep, %struct.dep* %327, i32 0, i32 1
  %329 = load i8*, i8** %328, align 8
  %330 = icmp eq i8* %329, null
  br i1 %330, label %331, label %337

331:                                              ; preds = %324
  %332 = load %struct.dep*, %struct.dep** %2, align 8
  %333 = getelementptr inbounds %struct.dep, %struct.dep* %332, i32 0, i32 2
  %334 = load %struct.file*, %struct.file** %333, align 8
  %335 = getelementptr inbounds %struct.file, %struct.file* %334, i32 0, i32 1
  %336 = load i8*, i8** %335, align 8
  br label %341

337:                                              ; preds = %324
  %338 = load %struct.dep*, %struct.dep** %2, align 8
  %339 = getelementptr inbounds %struct.dep, %struct.dep* %338, i32 0, i32 1
  %340 = load i8*, i8** %339, align 8
  br label %341

341:                                              ; preds = %337, %331
  %342 = phi i8* [ %336, %331 ], [ %340, %337 ]
  %343 = getelementptr inbounds i8, i8* %342, i64 1
  %344 = call i32 @strcmp(i8* %326, i8* %343) #9
  %345 = icmp ne i32 %344, 0
  br i1 %345, label %347, label %346

346:                                              ; preds = %341, %304, %248
  br label %481

347:                                              ; preds = %341, %284, %210
  %348 = load i8*, i8** %5, align 8
  %349 = load i32, i32* %6, align 4
  %350 = zext i32 %349 to i64
  %351 = getelementptr inbounds i8, i8* %348, i64 %350
  %352 = load %struct.dep*, %struct.dep** %2, align 8
  %353 = getelementptr inbounds %struct.dep, %struct.dep* %352, i32 0, i32 1
  %354 = load i8*, i8** %353, align 8
  %355 = icmp eq i8* %354, null
  br i1 %355, label %356, label %362

356:                                              ; preds = %347
  %357 = load %struct.dep*, %struct.dep** %2, align 8
  %358 = getelementptr inbounds %struct.dep, %struct.dep* %357, i32 0, i32 2
  %359 = load %struct.file*, %struct.file** %358, align 8
  %360 = getelementptr inbounds %struct.file, %struct.file* %359, i32 0, i32 1
  %361 = load i8*, i8** %360, align 8
  br label %366

362:                                              ; preds = %347
  %363 = load %struct.dep*, %struct.dep** %2, align 8
  %364 = getelementptr inbounds %struct.dep, %struct.dep* %363, i32 0, i32 1
  %365 = load i8*, i8** %364, align 8
  br label %366

366:                                              ; preds = %362, %356
  %367 = phi i8* [ %361, %356 ], [ %365, %362 ]
  %368 = load i32, i32* %7, align 4
  %369 = add i32 %368, 1
  %370 = zext i32 %369 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %351, i8* align 1 %367, i64 %370, i1 false)
  %371 = load i8*, i8** %5, align 8
  %372 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @lookup_file to %struct.file* (i8*, ...)*)(i8* %371)
  store %struct.file* %372, %struct.file** %4, align 8
  %373 = load %struct.file*, %struct.file** %4, align 8
  %374 = icmp eq %struct.file* %373, null
  br i1 %374, label %380, label %375

375:                                              ; preds = %366
  %376 = load %struct.file*, %struct.file** %4, align 8
  %377 = getelementptr inbounds %struct.file, %struct.file* %376, i32 0, i32 3
  %378 = load %struct.commands*, %struct.commands** %377, align 8
  %379 = icmp eq %struct.commands* %378, null
  br i1 %379, label %380, label %381

380:                                              ; preds = %375, %366
  br label %481

381:                                              ; preds = %375
  %382 = load i32, i32* %7, align 4
  %383 = icmp eq i32 %382, 2
  br i1 %383, label %384, label %403

384:                                              ; preds = %381
  %385 = load i8*, i8** %5, align 8
  %386 = load i32, i32* %6, align 4
  %387 = zext i32 %386 to i64
  %388 = getelementptr inbounds i8, i8* %385, i64 %387
  %389 = load i8, i8* %388, align 1
  %390 = sext i8 %389 to i32
  %391 = icmp eq i32 %390, 46
  br i1 %391, label %392, label %403

392:                                              ; preds = %384
  %393 = load i8*, i8** %5, align 8
  %394 = load i32, i32* %6, align 4
  %395 = add i32 %394, 1
  %396 = zext i32 %395 to i64
  %397 = getelementptr inbounds i8, i8* %393, i64 %396
  %398 = load i8, i8* %397, align 1
  %399 = sext i8 %398 to i32
  %400 = icmp eq i32 %399, 97
  br i1 %400, label %401, label %403

401:                                              ; preds = %392
  %402 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i32, ...)*)(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.643, i64 0, i64 0), i32 5)
  store i8* %402, i8** %8, align 8
  br label %431

403:                                              ; preds = %392, %384, %381
  %404 = load i32, i32* %7, align 4
  %405 = add i32 1, %404
  %406 = add i32 %405, 1
  %407 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %406)
  store i8* %407, i8** %8, align 8
  %408 = load i8*, i8** %8, align 8
  %409 = getelementptr inbounds i8, i8* %408, i64 0
  store i8 37, i8* %409, align 1
  %410 = load i8*, i8** %8, align 8
  %411 = getelementptr inbounds i8, i8* %410, i64 1
  %412 = load %struct.dep*, %struct.dep** %2, align 8
  %413 = getelementptr inbounds %struct.dep, %struct.dep* %412, i32 0, i32 1
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, null
  br i1 %415, label %416, label %422

416:                                              ; preds = %403
  %417 = load %struct.dep*, %struct.dep** %2, align 8
  %418 = getelementptr inbounds %struct.dep, %struct.dep* %417, i32 0, i32 2
  %419 = load %struct.file*, %struct.file** %418, align 8
  %420 = getelementptr inbounds %struct.file, %struct.file* %419, i32 0, i32 1
  %421 = load i8*, i8** %420, align 8
  br label %426

422:                                              ; preds = %403
  %423 = load %struct.dep*, %struct.dep** %2, align 8
  %424 = getelementptr inbounds %struct.dep, %struct.dep* %423, i32 0, i32 1
  %425 = load i8*, i8** %424, align 8
  br label %426

426:                                              ; preds = %422, %416
  %427 = phi i8* [ %421, %416 ], [ %425, %422 ]
  %428 = load i32, i32* %7, align 4
  %429 = add i32 %428, 1
  %430 = zext i32 %429 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %411, i8* align 1 %427, i64 %430, i1 false)
  br label %431

431:                                              ; preds = %426, %401
  %432 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 16)
  %433 = bitcast i8* %432 to i8**
  store i8** %433, i8*** %9, align 8
  %434 = load i8*, i8** %8, align 8
  %435 = load i8**, i8*** %9, align 8
  %436 = getelementptr inbounds i8*, i8** %435, i64 0
  store i8* %434, i8** %436, align 8
  %437 = load i8**, i8*** %9, align 8
  %438 = getelementptr inbounds i8*, i8** %437, i64 1
  store i8* null, i8** %438, align 8
  %439 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 32)
  %440 = bitcast i8* %439 to %struct.dep*
  store %struct.dep* %440, %struct.dep** %3, align 8
  %441 = load %struct.dep*, %struct.dep** %3, align 8
  %442 = getelementptr inbounds %struct.dep, %struct.dep* %441, i32 0, i32 0
  store %struct.dep* null, %struct.dep** %442, align 8
  %443 = load i32, i32* %6, align 4
  %444 = add i32 1, %443
  %445 = add i32 %444, 1
  %446 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %445)
  %447 = load %struct.dep*, %struct.dep** %3, align 8
  %448 = getelementptr inbounds %struct.dep, %struct.dep* %447, i32 0, i32 1
  store i8* %446, i8** %448, align 8
  %449 = load %struct.dep*, %struct.dep** %3, align 8
  %450 = getelementptr inbounds %struct.dep, %struct.dep* %449, i32 0, i32 1
  %451 = load i8*, i8** %450, align 8
  %452 = getelementptr inbounds i8, i8* %451, i64 0
  store i8 37, i8* %452, align 1
  %453 = load %struct.dep*, %struct.dep** %3, align 8
  %454 = getelementptr inbounds %struct.dep, %struct.dep* %453, i32 0, i32 1
  %455 = load i8*, i8** %454, align 8
  %456 = getelementptr inbounds i8, i8* %455, i64 1
  %457 = load %struct.dep*, %struct.dep** %1, align 8
  %458 = getelementptr inbounds %struct.dep, %struct.dep* %457, i32 0, i32 1
  %459 = load i8*, i8** %458, align 8
  %460 = icmp eq i8* %459, null
  br i1 %460, label %461, label %467

461:                                              ; preds = %431
  %462 = load %struct.dep*, %struct.dep** %1, align 8
  %463 = getelementptr inbounds %struct.dep, %struct.dep* %462, i32 0, i32 2
  %464 = load %struct.file*, %struct.file** %463, align 8
  %465 = getelementptr inbounds %struct.file, %struct.file* %464, i32 0, i32 1
  %466 = load i8*, i8** %465, align 8
  br label %471

467:                                              ; preds = %431
  %468 = load %struct.dep*, %struct.dep** %1, align 8
  %469 = getelementptr inbounds %struct.dep, %struct.dep* %468, i32 0, i32 1
  %470 = load i8*, i8** %469, align 8
  br label %471

471:                                              ; preds = %467, %461
  %472 = phi i8* [ %466, %461 ], [ %470, %467 ]
  %473 = load i32, i32* %6, align 4
  %474 = add i32 %473, 1
  %475 = zext i32 %474 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %456, i8* align 1 %472, i64 %475, i1 false)
  %476 = load i8**, i8*** %9, align 8
  %477 = load %struct.dep*, %struct.dep** %3, align 8
  %478 = load %struct.file*, %struct.file** %4, align 8
  %479 = getelementptr inbounds %struct.file, %struct.file* %478, i32 0, i32 3
  %480 = load %struct.commands*, %struct.commands** %479, align 8
  call void @create_pattern_rule(i8** %476, i8** null, i32 0, %struct.dep* %477, %struct.commands* %480, i32 0)
  br label %481

481:                                              ; preds = %471, %380, %346
  %482 = load %struct.dep*, %struct.dep** %2, align 8
  %483 = getelementptr inbounds %struct.dep, %struct.dep* %482, i32 0, i32 0
  %484 = load %struct.dep*, %struct.dep** %483, align 8
  store %struct.dep* %484, %struct.dep** %2, align 8
  br label %192

485:                                              ; preds = %192
  br label %486

486:                                              ; preds = %485
  %487 = load %struct.dep*, %struct.dep** %1, align 8
  %488 = getelementptr inbounds %struct.dep, %struct.dep* %487, i32 0, i32 0
  %489 = load %struct.dep*, %struct.dep** %488, align 8
  store %struct.dep* %489, %struct.dep** %1, align 8
  br label %55

490:                                              ; preds = %55
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @create_pattern_rule(i8** %0, i8** %1, i32 %2, %struct.dep* %3, %struct.commands* %4, i32 %5) #0 {
  %7 = alloca i8**, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.dep*, align 8
  %11 = alloca %struct.commands*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.rule*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i8** %0, i8*** %7, align 8
  store i8** %1, i8*** %8, align 8
  store i32 %2, i32* %9, align 4
  store %struct.dep* %3, %struct.dep** %10, align 8
  store %struct.commands* %4, %struct.commands** %11, align 8
  store i32 %5, i32* %12, align 4
  %16 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 56)
  %17 = bitcast i8* %16 to %struct.rule*
  store %struct.rule* %17, %struct.rule** %13, align 8
  %18 = load %struct.commands*, %struct.commands** %11, align 8
  %19 = load %struct.rule*, %struct.rule** %13, align 8
  %20 = getelementptr inbounds %struct.rule, %struct.rule* %19, i32 0, i32 5
  store %struct.commands* %18, %struct.commands** %20, align 8
  %21 = load %struct.dep*, %struct.dep** %10, align 8
  %22 = load %struct.rule*, %struct.rule** %13, align 8
  %23 = getelementptr inbounds %struct.rule, %struct.rule* %22, i32 0, i32 4
  store %struct.dep* %21, %struct.dep** %23, align 8
  %24 = load i8**, i8*** %7, align 8
  %25 = load %struct.rule*, %struct.rule** %13, align 8
  %26 = getelementptr inbounds %struct.rule, %struct.rule* %25, i32 0, i32 1
  store i8** %24, i8*** %26, align 8
  store i32 2, i32* %14, align 4
  %27 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 8)
  %28 = bitcast i8* %27 to i32*
  %29 = load %struct.rule*, %struct.rule** %13, align 8
  %30 = getelementptr inbounds %struct.rule, %struct.rule* %29, i32 0, i32 2
  store i32* %28, i32** %30, align 8
  %31 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 16)
  %32 = bitcast i8* %31 to i8**
  %33 = load %struct.rule*, %struct.rule** %13, align 8
  %34 = getelementptr inbounds %struct.rule, %struct.rule* %33, i32 0, i32 3
  store i8** %32, i8*** %34, align 8
  store i32 0, i32* %15, align 4
  br label %35

35:                                               ; preds = %120, %6
  %36 = load i8**, i8*** %7, align 8
  %37 = load i32, i32* %15, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i8*, i8** %36, i64 %38
  %40 = load i8*, i8** %39, align 8
  %41 = icmp ne i8* %40, null
  br i1 %41, label %42, label %123

42:                                               ; preds = %35
  %43 = load i32, i32* %15, align 4
  %44 = load i32, i32* %14, align 4
  %45 = sub i32 %44, 1
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %47, label %72

47:                                               ; preds = %42
  %48 = load i32, i32* %14, align 4
  %49 = add i32 %48, 5
  store i32 %49, i32* %14, align 4
  %50 = load %struct.rule*, %struct.rule** %13, align 8
  %51 = getelementptr inbounds %struct.rule, %struct.rule* %50, i32 0, i32 2
  %52 = load i32*, i32** %51, align 8
  %53 = bitcast i32* %52 to i8*
  %54 = load i32, i32* %14, align 4
  %55 = zext i32 %54 to i64
  %56 = mul i64 %55, 4
  %57 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i64, ...)*)(i8* %53, i64 %56)
  %58 = bitcast i8* %57 to i32*
  %59 = load %struct.rule*, %struct.rule** %13, align 8
  %60 = getelementptr inbounds %struct.rule, %struct.rule* %59, i32 0, i32 2
  store i32* %58, i32** %60, align 8
  %61 = load %struct.rule*, %struct.rule** %13, align 8
  %62 = getelementptr inbounds %struct.rule, %struct.rule* %61, i32 0, i32 3
  %63 = load i8**, i8*** %62, align 8
  %64 = bitcast i8** %63 to i8*
  %65 = load i32, i32* %14, align 4
  %66 = zext i32 %65 to i64
  %67 = mul i64 %66, 8
  %68 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i64, ...)*)(i8* %64, i64 %67)
  %69 = bitcast i8* %68 to i8**
  %70 = load %struct.rule*, %struct.rule** %13, align 8
  %71 = getelementptr inbounds %struct.rule, %struct.rule* %70, i32 0, i32 3
  store i8** %69, i8*** %71, align 8
  br label %72

72:                                               ; preds = %47, %42
  %73 = load i8**, i8*** %7, align 8
  %74 = load i32, i32* %15, align 4
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds i8*, i8** %73, i64 %75
  %77 = load i8*, i8** %76, align 8
  %78 = call i64 @strlen(i8* %77) #9
  %79 = trunc i64 %78 to i32
  %80 = load %struct.rule*, %struct.rule** %13, align 8
  %81 = getelementptr inbounds %struct.rule, %struct.rule* %80, i32 0, i32 2
  %82 = load i32*, i32** %81, align 8
  %83 = load i32, i32* %15, align 4
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i32, i32* %82, i64 %84
  store i32 %79, i32* %85, align 4
  %86 = load i8**, i8*** %8, align 8
  %87 = icmp eq i8** %86, null
  br i1 %87, label %88, label %95

88:                                               ; preds = %72
  %89 = load i8**, i8*** %7, align 8
  %90 = load i32, i32* %15, align 4
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds i8*, i8** %89, i64 %91
  %93 = load i8*, i8** %92, align 8
  %94 = call i8* (i8*, ...) bitcast (i8* (i8*)* @find_percent to i8* (i8*, ...)*)(i8* %93)
  br label %101

95:                                               ; preds = %72
  %96 = load i8**, i8*** %8, align 8
  %97 = load i32, i32* %15, align 4
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i8*, i8** %96, i64 %98
  %100 = load i8*, i8** %99, align 8
  br label %101

101:                                              ; preds = %95, %88
  %102 = phi i8* [ %94, %88 ], [ %100, %95 ]
  %103 = getelementptr inbounds i8, i8* %102, i64 1
  %104 = load %struct.rule*, %struct.rule** %13, align 8
  %105 = getelementptr inbounds %struct.rule, %struct.rule* %104, i32 0, i32 3
  %106 = load i8**, i8*** %105, align 8
  %107 = load i32, i32* %15, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8*, i8** %106, i64 %108
  store i8* %103, i8** %109, align 8
  %110 = load %struct.rule*, %struct.rule** %13, align 8
  %111 = getelementptr inbounds %struct.rule, %struct.rule* %110, i32 0, i32 3
  %112 = load i8**, i8*** %111, align 8
  %113 = load i32, i32* %15, align 4
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds i8*, i8** %112, i64 %114
  %116 = load i8*, i8** %115, align 8
  %117 = icmp eq i8* %116, null
  br i1 %117, label %118, label %119

118:                                              ; preds = %101
  call void @abort() #12
  unreachable

119:                                              ; preds = %101
  br label %120

120:                                              ; preds = %119
  %121 = load i32, i32* %15, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %15, align 4
  br label %35

123:                                              ; preds = %35
  %124 = load i32, i32* %15, align 4
  %125 = load i32, i32* %14, align 4
  %126 = sub i32 %125, 1
  %127 = icmp ult i32 %124, %126
  br i1 %127, label %128, label %153

128:                                              ; preds = %123
  %129 = load %struct.rule*, %struct.rule** %13, align 8
  %130 = getelementptr inbounds %struct.rule, %struct.rule* %129, i32 0, i32 2
  %131 = load i32*, i32** %130, align 8
  %132 = bitcast i32* %131 to i8*
  %133 = load i32, i32* %15, align 4
  %134 = add i32 %133, 1
  %135 = zext i32 %134 to i64
  %136 = mul i64 %135, 4
  %137 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i64, ...)*)(i8* %132, i64 %136)
  %138 = bitcast i8* %137 to i32*
  %139 = load %struct.rule*, %struct.rule** %13, align 8
  %140 = getelementptr inbounds %struct.rule, %struct.rule* %139, i32 0, i32 2
  store i32* %138, i32** %140, align 8
  %141 = load %struct.rule*, %struct.rule** %13, align 8
  %142 = getelementptr inbounds %struct.rule, %struct.rule* %141, i32 0, i32 3
  %143 = load i8**, i8*** %142, align 8
  %144 = bitcast i8** %143 to i8*
  %145 = load i32, i32* %15, align 4
  %146 = add i32 %145, 1
  %147 = zext i32 %146 to i64
  %148 = mul i64 %147, 8
  %149 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i64, ...)*)(i8* %144, i64 %148)
  %150 = bitcast i8* %149 to i8**
  %151 = load %struct.rule*, %struct.rule** %13, align 8
  %152 = getelementptr inbounds %struct.rule, %struct.rule* %151, i32 0, i32 3
  store i8** %150, i8*** %152, align 8
  br label %153

153:                                              ; preds = %128, %123
  %154 = load %struct.rule*, %struct.rule** %13, align 8
  %155 = load i32, i32* %12, align 4
  %156 = call i32 @new_pattern_rule(%struct.rule* %154, i32 %155)
  %157 = icmp ne i32 %156, 0
  br i1 %157, label %158, label %163

158:                                              ; preds = %153
  %159 = load i32, i32* %9, align 4
  %160 = trunc i32 %159 to i8
  %161 = load %struct.rule*, %struct.rule** %13, align 8
  %162 = getelementptr inbounds %struct.rule, %struct.rule* %161, i32 0, i32 6
  store i8 %160, i8* %162, align 8
  br label %163

163:                                              ; preds = %158, %153
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @new_pattern_rule(%struct.rule* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.rule*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.rule*, align 8
  %7 = alloca %struct.rule*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.dep*, align 8
  %11 = alloca %struct.dep*, align 8
  store %struct.rule* %0, %struct.rule** %4, align 8
  store i32 %1, i32* %5, align 4
  %12 = load %struct.rule*, %struct.rule** %4, align 8
  %13 = getelementptr inbounds %struct.rule, %struct.rule* %12, i32 0, i32 7
  store i8 0, i8* %13, align 1
  %14 = load %struct.rule*, %struct.rule** %4, align 8
  %15 = getelementptr inbounds %struct.rule, %struct.rule* %14, i32 0, i32 8
  store i8 0, i8* %15, align 2
  %16 = load %struct.rule*, %struct.rule** %4, align 8
  %17 = getelementptr inbounds %struct.rule, %struct.rule* %16, i32 0, i32 6
  store i8 0, i8* %17, align 8
  %18 = load %struct.rule*, %struct.rule** %4, align 8
  %19 = getelementptr inbounds %struct.rule, %struct.rule* %18, i32 0, i32 0
  store %struct.rule* null, %struct.rule** %19, align 8
  %20 = load %struct.rule*, %struct.rule** @pattern_rules, align 8
  store %struct.rule* %20, %struct.rule** %7, align 8
  %21 = load %struct.rule*, %struct.rule** @pattern_rules, align 8
  store %struct.rule* %21, %struct.rule** %6, align 8
  br label %22

22:                                               ; preds = %298, %2
  %23 = load %struct.rule*, %struct.rule** %6, align 8
  %24 = icmp ne %struct.rule* %23, null
  br i1 %24, label %25, label %303

25:                                               ; preds = %22
  store i32 0, i32* %8, align 4
  br label %26

26:                                               ; preds = %294, %25
  %27 = load %struct.rule*, %struct.rule** %4, align 8
  %28 = getelementptr inbounds %struct.rule, %struct.rule* %27, i32 0, i32 1
  %29 = load i8**, i8*** %28, align 8
  %30 = load i32, i32* %8, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i8*, i8** %29, i64 %31
  %33 = load i8*, i8** %32, align 8
  %34 = icmp ne i8* %33, null
  br i1 %34, label %35, label %297

35:                                               ; preds = %26
  store i32 0, i32* %9, align 4
  br label %36

36:                                               ; preds = %290, %35
  %37 = load %struct.rule*, %struct.rule** %6, align 8
  %38 = getelementptr inbounds %struct.rule, %struct.rule* %37, i32 0, i32 1
  %39 = load i8**, i8*** %38, align 8
  %40 = load i32, i32* %9, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8*, i8** %39, i64 %41
  %43 = load i8*, i8** %42, align 8
  %44 = icmp ne i8* %43, null
  br i1 %44, label %45, label %293

45:                                               ; preds = %36
  %46 = load %struct.rule*, %struct.rule** %4, align 8
  %47 = getelementptr inbounds %struct.rule, %struct.rule* %46, i32 0, i32 1
  %48 = load i8**, i8*** %47, align 8
  %49 = load i32, i32* %8, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds i8*, i8** %48, i64 %50
  %52 = load i8*, i8** %51, align 8
  %53 = load %struct.rule*, %struct.rule** %6, align 8
  %54 = getelementptr inbounds %struct.rule, %struct.rule* %53, i32 0, i32 1
  %55 = load i8**, i8*** %54, align 8
  %56 = load i32, i32* %9, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i8*, i8** %55, i64 %57
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %52, %59
  br i1 %60, label %111, label %61

61:                                               ; preds = %45
  %62 = load %struct.rule*, %struct.rule** %4, align 8
  %63 = getelementptr inbounds %struct.rule, %struct.rule* %62, i32 0, i32 1
  %64 = load i8**, i8*** %63, align 8
  %65 = load i32, i32* %8, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i8*, i8** %64, i64 %66
  %68 = load i8*, i8** %67, align 8
  %69 = load i8, i8* %68, align 1
  %70 = sext i8 %69 to i32
  %71 = load %struct.rule*, %struct.rule** %6, align 8
  %72 = getelementptr inbounds %struct.rule, %struct.rule* %71, i32 0, i32 1
  %73 = load i8**, i8*** %72, align 8
  %74 = load i32, i32* %9, align 4
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds i8*, i8** %73, i64 %75
  %77 = load i8*, i8** %76, align 8
  %78 = load i8, i8* %77, align 1
  %79 = sext i8 %78 to i32
  %80 = icmp eq i32 %70, %79
  br i1 %80, label %81, label %289

81:                                               ; preds = %61
  %82 = load %struct.rule*, %struct.rule** %4, align 8
  %83 = getelementptr inbounds %struct.rule, %struct.rule* %82, i32 0, i32 1
  %84 = load i8**, i8*** %83, align 8
  %85 = load i32, i32* %8, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds i8*, i8** %84, i64 %86
  %88 = load i8*, i8** %87, align 8
  %89 = load i8, i8* %88, align 1
  %90 = sext i8 %89 to i32
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %111, label %92

92:                                               ; preds = %81
  %93 = load %struct.rule*, %struct.rule** %4, align 8
  %94 = getelementptr inbounds %struct.rule, %struct.rule* %93, i32 0, i32 1
  %95 = load i8**, i8*** %94, align 8
  %96 = load i32, i32* %8, align 4
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds i8*, i8** %95, i64 %97
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds i8, i8* %99, i64 1
  %101 = load %struct.rule*, %struct.rule** %6, align 8
  %102 = getelementptr inbounds %struct.rule, %struct.rule* %101, i32 0, i32 1
  %103 = load i8**, i8*** %102, align 8
  %104 = load i32, i32* %9, align 4
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i8*, i8** %103, i64 %105
  %107 = load i8*, i8** %106, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 1
  %109 = call i32 @strcmp(i8* %100, i8* %108) #9
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %289, label %111

111:                                              ; preds = %92, %81, %45
  %112 = load %struct.rule*, %struct.rule** %4, align 8
  %113 = getelementptr inbounds %struct.rule, %struct.rule* %112, i32 0, i32 4
  %114 = load %struct.dep*, %struct.dep** %113, align 8
  store %struct.dep* %114, %struct.dep** %10, align 8
  %115 = load %struct.rule*, %struct.rule** %6, align 8
  %116 = getelementptr inbounds %struct.rule, %struct.rule* %115, i32 0, i32 4
  %117 = load %struct.dep*, %struct.dep** %116, align 8
  store %struct.dep* %117, %struct.dep** %11, align 8
  br label %118

118:                                              ; preds = %257, %111
  %119 = load %struct.dep*, %struct.dep** %10, align 8
  %120 = icmp ne %struct.dep* %119, null
  br i1 %120, label %121, label %124

121:                                              ; preds = %118
  %122 = load %struct.dep*, %struct.dep** %11, align 8
  %123 = icmp ne %struct.dep* %122, null
  br label %124

124:                                              ; preds = %121, %118
  %125 = phi i1 [ false, %118 ], [ %123, %121 ]
  br i1 %125, label %126, label %264

126:                                              ; preds = %124
  %127 = load %struct.dep*, %struct.dep** %10, align 8
  %128 = getelementptr inbounds %struct.dep, %struct.dep* %127, i32 0, i32 1
  %129 = load i8*, i8** %128, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %131, label %137

131:                                              ; preds = %126
  %132 = load %struct.dep*, %struct.dep** %10, align 8
  %133 = getelementptr inbounds %struct.dep, %struct.dep* %132, i32 0, i32 2
  %134 = load %struct.file*, %struct.file** %133, align 8
  %135 = getelementptr inbounds %struct.file, %struct.file* %134, i32 0, i32 1
  %136 = load i8*, i8** %135, align 8
  br label %141

137:                                              ; preds = %126
  %138 = load %struct.dep*, %struct.dep** %10, align 8
  %139 = getelementptr inbounds %struct.dep, %struct.dep* %138, i32 0, i32 1
  %140 = load i8*, i8** %139, align 8
  br label %141

141:                                              ; preds = %137, %131
  %142 = phi i8* [ %136, %131 ], [ %140, %137 ]
  %143 = load %struct.dep*, %struct.dep** %11, align 8
  %144 = getelementptr inbounds %struct.dep, %struct.dep* %143, i32 0, i32 1
  %145 = load i8*, i8** %144, align 8
  %146 = icmp eq i8* %145, null
  br i1 %146, label %147, label %153

147:                                              ; preds = %141
  %148 = load %struct.dep*, %struct.dep** %11, align 8
  %149 = getelementptr inbounds %struct.dep, %struct.dep* %148, i32 0, i32 2
  %150 = load %struct.file*, %struct.file** %149, align 8
  %151 = getelementptr inbounds %struct.file, %struct.file* %150, i32 0, i32 1
  %152 = load i8*, i8** %151, align 8
  br label %157

153:                                              ; preds = %141
  %154 = load %struct.dep*, %struct.dep** %11, align 8
  %155 = getelementptr inbounds %struct.dep, %struct.dep* %154, i32 0, i32 1
  %156 = load i8*, i8** %155, align 8
  br label %157

157:                                              ; preds = %153, %147
  %158 = phi i8* [ %152, %147 ], [ %156, %153 ]
  %159 = icmp eq i8* %142, %158
  br i1 %159, label %256, label %160

160:                                              ; preds = %157
  %161 = load %struct.dep*, %struct.dep** %10, align 8
  %162 = getelementptr inbounds %struct.dep, %struct.dep* %161, i32 0, i32 1
  %163 = load i8*, i8** %162, align 8
  %164 = icmp eq i8* %163, null
  br i1 %164, label %165, label %171

165:                                              ; preds = %160
  %166 = load %struct.dep*, %struct.dep** %10, align 8
  %167 = getelementptr inbounds %struct.dep, %struct.dep* %166, i32 0, i32 2
  %168 = load %struct.file*, %struct.file** %167, align 8
  %169 = getelementptr inbounds %struct.file, %struct.file* %168, i32 0, i32 1
  %170 = load i8*, i8** %169, align 8
  br label %175

171:                                              ; preds = %160
  %172 = load %struct.dep*, %struct.dep** %10, align 8
  %173 = getelementptr inbounds %struct.dep, %struct.dep* %172, i32 0, i32 1
  %174 = load i8*, i8** %173, align 8
  br label %175

175:                                              ; preds = %171, %165
  %176 = phi i8* [ %170, %165 ], [ %174, %171 ]
  %177 = load i8, i8* %176, align 1
  %178 = sext i8 %177 to i32
  %179 = load %struct.dep*, %struct.dep** %11, align 8
  %180 = getelementptr inbounds %struct.dep, %struct.dep* %179, i32 0, i32 1
  %181 = load i8*, i8** %180, align 8
  %182 = icmp eq i8* %181, null
  br i1 %182, label %183, label %189

183:                                              ; preds = %175
  %184 = load %struct.dep*, %struct.dep** %11, align 8
  %185 = getelementptr inbounds %struct.dep, %struct.dep* %184, i32 0, i32 2
  %186 = load %struct.file*, %struct.file** %185, align 8
  %187 = getelementptr inbounds %struct.file, %struct.file* %186, i32 0, i32 1
  %188 = load i8*, i8** %187, align 8
  br label %193

189:                                              ; preds = %175
  %190 = load %struct.dep*, %struct.dep** %11, align 8
  %191 = getelementptr inbounds %struct.dep, %struct.dep* %190, i32 0, i32 1
  %192 = load i8*, i8** %191, align 8
  br label %193

193:                                              ; preds = %189, %183
  %194 = phi i8* [ %188, %183 ], [ %192, %189 ]
  %195 = load i8, i8* %194, align 1
  %196 = sext i8 %195 to i32
  %197 = icmp eq i32 %178, %196
  br i1 %197, label %198, label %255

198:                                              ; preds = %193
  %199 = load %struct.dep*, %struct.dep** %10, align 8
  %200 = getelementptr inbounds %struct.dep, %struct.dep* %199, i32 0, i32 1
  %201 = load i8*, i8** %200, align 8
  %202 = icmp eq i8* %201, null
  br i1 %202, label %203, label %209

203:                                              ; preds = %198
  %204 = load %struct.dep*, %struct.dep** %10, align 8
  %205 = getelementptr inbounds %struct.dep, %struct.dep* %204, i32 0, i32 2
  %206 = load %struct.file*, %struct.file** %205, align 8
  %207 = getelementptr inbounds %struct.file, %struct.file* %206, i32 0, i32 1
  %208 = load i8*, i8** %207, align 8
  br label %213

209:                                              ; preds = %198
  %210 = load %struct.dep*, %struct.dep** %10, align 8
  %211 = getelementptr inbounds %struct.dep, %struct.dep* %210, i32 0, i32 1
  %212 = load i8*, i8** %211, align 8
  br label %213

213:                                              ; preds = %209, %203
  %214 = phi i8* [ %208, %203 ], [ %212, %209 ]
  %215 = load i8, i8* %214, align 1
  %216 = sext i8 %215 to i32
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %256, label %218

218:                                              ; preds = %213
  %219 = load %struct.dep*, %struct.dep** %10, align 8
  %220 = getelementptr inbounds %struct.dep, %struct.dep* %219, i32 0, i32 1
  %221 = load i8*, i8** %220, align 8
  %222 = icmp eq i8* %221, null
  br i1 %222, label %223, label %229

223:                                              ; preds = %218
  %224 = load %struct.dep*, %struct.dep** %10, align 8
  %225 = getelementptr inbounds %struct.dep, %struct.dep* %224, i32 0, i32 2
  %226 = load %struct.file*, %struct.file** %225, align 8
  %227 = getelementptr inbounds %struct.file, %struct.file* %226, i32 0, i32 1
  %228 = load i8*, i8** %227, align 8
  br label %233

229:                                              ; preds = %218
  %230 = load %struct.dep*, %struct.dep** %10, align 8
  %231 = getelementptr inbounds %struct.dep, %struct.dep* %230, i32 0, i32 1
  %232 = load i8*, i8** %231, align 8
  br label %233

233:                                              ; preds = %229, %223
  %234 = phi i8* [ %228, %223 ], [ %232, %229 ]
  %235 = getelementptr inbounds i8, i8* %234, i64 1
  %236 = load %struct.dep*, %struct.dep** %11, align 8
  %237 = getelementptr inbounds %struct.dep, %struct.dep* %236, i32 0, i32 1
  %238 = load i8*, i8** %237, align 8
  %239 = icmp eq i8* %238, null
  br i1 %239, label %240, label %246

240:                                              ; preds = %233
  %241 = load %struct.dep*, %struct.dep** %11, align 8
  %242 = getelementptr inbounds %struct.dep, %struct.dep* %241, i32 0, i32 2
  %243 = load %struct.file*, %struct.file** %242, align 8
  %244 = getelementptr inbounds %struct.file, %struct.file* %243, i32 0, i32 1
  %245 = load i8*, i8** %244, align 8
  br label %250

246:                                              ; preds = %233
  %247 = load %struct.dep*, %struct.dep** %11, align 8
  %248 = getelementptr inbounds %struct.dep, %struct.dep* %247, i32 0, i32 1
  %249 = load i8*, i8** %248, align 8
  br label %250

250:                                              ; preds = %246, %240
  %251 = phi i8* [ %245, %240 ], [ %249, %246 ]
  %252 = getelementptr inbounds i8, i8* %251, i64 1
  %253 = call i32 @strcmp(i8* %235, i8* %252) #9
  %254 = icmp ne i32 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %250, %193
  br label %264

256:                                              ; preds = %250, %213, %157
  br label %257

257:                                              ; preds = %256
  %258 = load %struct.dep*, %struct.dep** %10, align 8
  %259 = getelementptr inbounds %struct.dep, %struct.dep* %258, i32 0, i32 0
  %260 = load %struct.dep*, %struct.dep** %259, align 8
  store %struct.dep* %260, %struct.dep** %10, align 8
  %261 = load %struct.dep*, %struct.dep** %11, align 8
  %262 = getelementptr inbounds %struct.dep, %struct.dep* %261, i32 0, i32 0
  %263 = load %struct.dep*, %struct.dep** %262, align 8
  store %struct.dep* %263, %struct.dep** %11, align 8
  br label %118

264:                                              ; preds = %255, %124
  %265 = load %struct.dep*, %struct.dep** %10, align 8
  %266 = icmp eq %struct.dep* %265, null
  br i1 %266, label %267, label %288

267:                                              ; preds = %264
  %268 = load %struct.dep*, %struct.dep** %11, align 8
  %269 = icmp eq %struct.dep* %268, null
  br i1 %269, label %270, label %288

270:                                              ; preds = %267
  %271 = load i32, i32* %5, align 4
  %272 = icmp ne i32 %271, 0
  br i1 %272, label %273, label %286

273:                                              ; preds = %270
  %274 = load %struct.rule*, %struct.rule** %6, align 8
  %275 = load %struct.rule*, %struct.rule** %7, align 8
  call void @freerule(%struct.rule* %274, %struct.rule* %275)
  %276 = load %struct.rule*, %struct.rule** @pattern_rules, align 8
  %277 = icmp eq %struct.rule* %276, null
  br i1 %277, label %278, label %280

278:                                              ; preds = %273
  %279 = load %struct.rule*, %struct.rule** %4, align 8
  store %struct.rule* %279, %struct.rule** @pattern_rules, align 8
  br label %284

280:                                              ; preds = %273
  %281 = load %struct.rule*, %struct.rule** %4, align 8
  %282 = load %struct.rule*, %struct.rule** @last_pattern_rule, align 8
  %283 = getelementptr inbounds %struct.rule, %struct.rule* %282, i32 0, i32 0
  store %struct.rule* %281, %struct.rule** %283, align 8
  br label %284

284:                                              ; preds = %280, %278
  %285 = load %struct.rule*, %struct.rule** %4, align 8
  store %struct.rule* %285, %struct.rule** @last_pattern_rule, align 8
  br label %304

286:                                              ; preds = %270
  %287 = load %struct.rule*, %struct.rule** %4, align 8
  call void @freerule(%struct.rule* %287, %struct.rule* null)
  store i32 0, i32* %3, align 4
  br label %319

288:                                              ; preds = %267, %264
  br label %289

289:                                              ; preds = %288, %92, %61
  br label %290

290:                                              ; preds = %289
  %291 = load i32, i32* %9, align 4
  %292 = add i32 %291, 1
  store i32 %292, i32* %9, align 4
  br label %36

293:                                              ; preds = %36
  br label %294

294:                                              ; preds = %293
  %295 = load i32, i32* %8, align 4
  %296 = add i32 %295, 1
  store i32 %296, i32* %8, align 4
  br label %26

297:                                              ; preds = %26
  br label %298

298:                                              ; preds = %297
  %299 = load %struct.rule*, %struct.rule** %6, align 8
  store %struct.rule* %299, %struct.rule** %7, align 8
  %300 = load %struct.rule*, %struct.rule** %6, align 8
  %301 = getelementptr inbounds %struct.rule, %struct.rule* %300, i32 0, i32 0
  %302 = load %struct.rule*, %struct.rule** %301, align 8
  store %struct.rule* %302, %struct.rule** %6, align 8
  br label %22

303:                                              ; preds = %22
  br label %304

304:                                              ; preds = %303, %284
  %305 = load %struct.rule*, %struct.rule** %6, align 8
  %306 = icmp eq %struct.rule* %305, null
  br i1 %306, label %307, label %318

307:                                              ; preds = %304
  %308 = load %struct.rule*, %struct.rule** @pattern_rules, align 8
  %309 = icmp eq %struct.rule* %308, null
  br i1 %309, label %310, label %312

310:                                              ; preds = %307
  %311 = load %struct.rule*, %struct.rule** %4, align 8
  store %struct.rule* %311, %struct.rule** @pattern_rules, align 8
  br label %316

312:                                              ; preds = %307
  %313 = load %struct.rule*, %struct.rule** %4, align 8
  %314 = load %struct.rule*, %struct.rule** @last_pattern_rule, align 8
  %315 = getelementptr inbounds %struct.rule, %struct.rule* %314, i32 0, i32 0
  store %struct.rule* %313, %struct.rule** %315, align 8
  br label %316

316:                                              ; preds = %312, %310
  %317 = load %struct.rule*, %struct.rule** %4, align 8
  store %struct.rule* %317, %struct.rule** @last_pattern_rule, align 8
  br label %318

318:                                              ; preds = %316, %304
  store i32 1, i32* %3, align 4
  br label %319

319:                                              ; preds = %318, %286
  %320 = load i32, i32* %3, align 4
  ret i32 %320
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @install_pattern_rule(%struct.pspec* %0, i32 %1) #0 {
  %3 = alloca %struct.pspec*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.rule*, align 8
  %6 = alloca i8*, align 8
  store %struct.pspec* %0, %struct.pspec** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 56)
  %8 = bitcast i8* %7 to %struct.rule*
  store %struct.rule* %8, %struct.rule** %5, align 8
  %9 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 16)
  %10 = bitcast i8* %9 to i8**
  %11 = load %struct.rule*, %struct.rule** %5, align 8
  %12 = getelementptr inbounds %struct.rule, %struct.rule* %11, i32 0, i32 1
  store i8** %10, i8*** %12, align 8
  %13 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 16)
  %14 = bitcast i8* %13 to i8**
  %15 = load %struct.rule*, %struct.rule** %5, align 8
  %16 = getelementptr inbounds %struct.rule, %struct.rule* %15, i32 0, i32 3
  store i8** %14, i8*** %16, align 8
  %17 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 8)
  %18 = bitcast i8* %17 to i32*
  %19 = load %struct.rule*, %struct.rule** %5, align 8
  %20 = getelementptr inbounds %struct.rule, %struct.rule* %19, i32 0, i32 2
  store i32* %18, i32** %20, align 8
  %21 = load %struct.rule*, %struct.rule** %5, align 8
  %22 = getelementptr inbounds %struct.rule, %struct.rule* %21, i32 0, i32 1
  %23 = load i8**, i8*** %22, align 8
  %24 = getelementptr inbounds i8*, i8** %23, i64 1
  store i8* null, i8** %24, align 8
  %25 = load %struct.rule*, %struct.rule** %5, align 8
  %26 = getelementptr inbounds %struct.rule, %struct.rule* %25, i32 0, i32 3
  %27 = load i8**, i8*** %26, align 8
  %28 = getelementptr inbounds i8*, i8** %27, i64 1
  store i8* null, i8** %28, align 8
  %29 = load %struct.rule*, %struct.rule** %5, align 8
  %30 = getelementptr inbounds %struct.rule, %struct.rule* %29, i32 0, i32 2
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds i32, i32* %31, i64 1
  store i32 0, i32* %32, align 4
  %33 = load %struct.pspec*, %struct.pspec** %3, align 8
  %34 = getelementptr inbounds %struct.pspec, %struct.pspec* %33, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = call i64 @strlen(i8* %35) #9
  %37 = trunc i64 %36 to i32
  %38 = load %struct.rule*, %struct.rule** %5, align 8
  %39 = getelementptr inbounds %struct.rule, %struct.rule* %38, i32 0, i32 2
  %40 = load i32*, i32** %39, align 8
  %41 = getelementptr inbounds i32, i32* %40, i64 0
  store i32 %37, i32* %41, align 4
  %42 = load %struct.pspec*, %struct.pspec** %3, align 8
  %43 = getelementptr inbounds %struct.pspec, %struct.pspec* %42, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = load %struct.rule*, %struct.rule** %5, align 8
  %46 = getelementptr inbounds %struct.rule, %struct.rule* %45, i32 0, i32 2
  %47 = load i32*, i32** %46, align 8
  %48 = getelementptr inbounds i32, i32* %47, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i32, ...)*)(i8* %44, i32 %49)
  %51 = load %struct.rule*, %struct.rule** %5, align 8
  %52 = getelementptr inbounds %struct.rule, %struct.rule* %51, i32 0, i32 1
  %53 = load i8**, i8*** %52, align 8
  %54 = getelementptr inbounds i8*, i8** %53, i64 0
  store i8* %50, i8** %54, align 8
  %55 = load %struct.rule*, %struct.rule** %5, align 8
  %56 = getelementptr inbounds %struct.rule, %struct.rule* %55, i32 0, i32 1
  %57 = load i8**, i8*** %56, align 8
  %58 = getelementptr inbounds i8*, i8** %57, i64 0
  %59 = load i8*, i8** %58, align 8
  %60 = call i8* (i8*, ...) bitcast (i8* (i8*)* @find_percent to i8* (i8*, ...)*)(i8* %59)
  %61 = load %struct.rule*, %struct.rule** %5, align 8
  %62 = getelementptr inbounds %struct.rule, %struct.rule* %61, i32 0, i32 3
  %63 = load i8**, i8*** %62, align 8
  %64 = getelementptr inbounds i8*, i8** %63, i64 0
  store i8* %60, i8** %64, align 8
  %65 = load %struct.rule*, %struct.rule** %5, align 8
  %66 = getelementptr inbounds %struct.rule, %struct.rule* %65, i32 0, i32 3
  %67 = load i8**, i8*** %66, align 8
  %68 = getelementptr inbounds i8*, i8** %67, i64 0
  %69 = load i8*, i8** %68, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %71, label %72

71:                                               ; preds = %2
  call void @abort() #12
  unreachable

72:                                               ; preds = %2
  %73 = load %struct.rule*, %struct.rule** %5, align 8
  %74 = getelementptr inbounds %struct.rule, %struct.rule* %73, i32 0, i32 3
  %75 = load i8**, i8*** %74, align 8
  %76 = getelementptr inbounds i8*, i8** %75, i64 0
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds i8, i8* %77, i32 1
  store i8* %78, i8** %76, align 8
  br label %79

79:                                               ; preds = %72
  %80 = load %struct.pspec*, %struct.pspec** %3, align 8
  %81 = getelementptr inbounds %struct.pspec, %struct.pspec* %80, i32 0, i32 1
  %82 = load i8*, i8** %81, align 8
  store i8* %82, i8** %6, align 8
  %83 = call %struct.nameseq* (i8**, i32, i64, ...) bitcast (%struct.nameseq* (i8**, i32, i32)* @parse_file_seq to %struct.nameseq* (i8**, i32, i64, ...)*)(i8** %6, i32 0, i64 32)
  %84 = call %struct.nameseq* (%struct.nameseq*, i64, ...) bitcast (%struct.nameseq* (%struct.nameseq*, i32)* @multi_glob to %struct.nameseq* (%struct.nameseq*, i64, ...)*)(%struct.nameseq* %83, i64 32)
  %85 = bitcast %struct.nameseq* %84 to %struct.dep*
  %86 = load %struct.rule*, %struct.rule** %5, align 8
  %87 = getelementptr inbounds %struct.rule, %struct.rule* %86, i32 0, i32 4
  store %struct.dep* %85, %struct.dep** %87, align 8
  %88 = load %struct.rule*, %struct.rule** %5, align 8
  %89 = call i32 @new_pattern_rule(%struct.rule* %88, i32 0)
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %91, label %124

91:                                               ; preds = %79
  %92 = load i32, i32* %4, align 4
  %93 = trunc i32 %92 to i8
  %94 = load %struct.rule*, %struct.rule** %5, align 8
  %95 = getelementptr inbounds %struct.rule, %struct.rule* %94, i32 0, i32 6
  store i8 %93, i8* %95, align 8
  %96 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 56)
  %97 = bitcast i8* %96 to %struct.commands*
  %98 = load %struct.rule*, %struct.rule** %5, align 8
  %99 = getelementptr inbounds %struct.rule, %struct.rule* %98, i32 0, i32 5
  store %struct.commands* %97, %struct.commands** %99, align 8
  %100 = load %struct.rule*, %struct.rule** %5, align 8
  %101 = getelementptr inbounds %struct.rule, %struct.rule* %100, i32 0, i32 5
  %102 = load %struct.commands*, %struct.commands** %101, align 8
  %103 = getelementptr inbounds %struct.commands, %struct.commands* %102, i32 0, i32 0
  store i8* null, i8** %103, align 8
  %104 = load %struct.rule*, %struct.rule** %5, align 8
  %105 = getelementptr inbounds %struct.rule, %struct.rule* %104, i32 0, i32 5
  %106 = load %struct.commands*, %struct.commands** %105, align 8
  %107 = getelementptr inbounds %struct.commands, %struct.commands* %106, i32 0, i32 1
  store i32 0, i32* %107, align 8
  %108 = load %struct.pspec*, %struct.pspec** %3, align 8
  %109 = getelementptr inbounds %struct.pspec, %struct.pspec* %108, i32 0, i32 2
  %110 = load i8*, i8** %109, align 8
  %111 = load %struct.pspec*, %struct.pspec** %3, align 8
  %112 = getelementptr inbounds %struct.pspec, %struct.pspec* %111, i32 0, i32 2
  %113 = load i8*, i8** %112, align 8
  %114 = call i64 @strlen(i8* %113) #9
  %115 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %110, i64 %114)
  %116 = load %struct.rule*, %struct.rule** %5, align 8
  %117 = getelementptr inbounds %struct.rule, %struct.rule* %116, i32 0, i32 5
  %118 = load %struct.commands*, %struct.commands** %117, align 8
  %119 = getelementptr inbounds %struct.commands, %struct.commands* %118, i32 0, i32 2
  store i8* %115, i8** %119, align 8
  %120 = load %struct.rule*, %struct.rule** %5, align 8
  %121 = getelementptr inbounds %struct.rule, %struct.rule* %120, i32 0, i32 5
  %122 = load %struct.commands*, %struct.commands** %121, align 8
  %123 = getelementptr inbounds %struct.commands, %struct.commands* %122, i32 0, i32 4
  store i8** null, i8*** %123, align 8
  br label %124

124:                                              ; preds = %91, %79
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @print_rule_data_base() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.rule*, align 8
  %5 = alloca %struct.dep*, align 8
  %6 = alloca i32, align 4
  %7 = call i32 @puts(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.648, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  store i32 0, i32* %2, align 4
  store i32 0, i32* %1, align 4
  %8 = load %struct.rule*, %struct.rule** @pattern_rules, align 8
  store %struct.rule* %8, %struct.rule** %4, align 8
  br label %9

9:                                                ; preds = %110, %0
  %10 = load %struct.rule*, %struct.rule** %4, align 8
  %11 = icmp ne %struct.rule* %10, null
  br i1 %11, label %12, label %114

12:                                               ; preds = %9
  %13 = load i32, i32* %1, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %1, align 4
  %15 = call i32 @putchar(i32 10)
  store i32 0, i32* %6, align 4
  br label %16

16:                                               ; preds = %49, %12
  %17 = load %struct.rule*, %struct.rule** %4, align 8
  %18 = getelementptr inbounds %struct.rule, %struct.rule* %17, i32 0, i32 1
  %19 = load i8**, i8*** %18, align 8
  %20 = load i32, i32* %6, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i8*, i8** %19, i64 %21
  %23 = load i8*, i8** %22, align 8
  %24 = icmp ne i8* %23, null
  br i1 %24, label %25, label %52

25:                                               ; preds = %16
  %26 = load %struct.rule*, %struct.rule** %4, align 8
  %27 = getelementptr inbounds %struct.rule, %struct.rule* %26, i32 0, i32 1
  %28 = load i8**, i8*** %27, align 8
  %29 = load i32, i32* %6, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i8*, i8** %28, i64 %30
  %32 = load i8*, i8** %31, align 8
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %34 = call i32 @fputs(i8* %32, %struct._IO_FILE* %33)
  %35 = load %struct.rule*, %struct.rule** %4, align 8
  %36 = getelementptr inbounds %struct.rule, %struct.rule* %35, i32 0, i32 1
  %37 = load i8**, i8*** %36, align 8
  %38 = load i32, i32* %6, align 4
  %39 = add i32 %38, 1
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds i8*, i8** %37, i64 %40
  %42 = load i8*, i8** %41, align 8
  %43 = icmp ne i8* %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %25
  %45 = call i32 @putchar(i32 32)
  br label %48

46:                                               ; preds = %25
  %47 = call i32 @putchar(i32 58)
  br label %48

48:                                               ; preds = %46, %44
  br label %49

49:                                               ; preds = %48
  %50 = load i32, i32* %6, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %6, align 4
  br label %16

52:                                               ; preds = %16
  %53 = load %struct.rule*, %struct.rule** %4, align 8
  %54 = getelementptr inbounds %struct.rule, %struct.rule* %53, i32 0, i32 6
  %55 = load i8, i8* %54, align 8
  %56 = icmp ne i8 %55, 0
  br i1 %56, label %57, label %61

57:                                               ; preds = %52
  %58 = load i32, i32* %2, align 4
  %59 = add i32 %58, 1
  store i32 %59, i32* %2, align 4
  %60 = call i32 @putchar(i32 58)
  br label %61

61:                                               ; preds = %57, %52
  %62 = load %struct.rule*, %struct.rule** %4, align 8
  %63 = getelementptr inbounds %struct.rule, %struct.rule* %62, i32 0, i32 4
  %64 = load %struct.dep*, %struct.dep** %63, align 8
  store %struct.dep* %64, %struct.dep** %5, align 8
  br label %65

65:                                               ; preds = %86, %61
  %66 = load %struct.dep*, %struct.dep** %5, align 8
  %67 = icmp ne %struct.dep* %66, null
  br i1 %67, label %68, label %90

68:                                               ; preds = %65
  %69 = load %struct.dep*, %struct.dep** %5, align 8
  %70 = getelementptr inbounds %struct.dep, %struct.dep* %69, i32 0, i32 1
  %71 = load i8*, i8** %70, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %73, label %79

73:                                               ; preds = %68
  %74 = load %struct.dep*, %struct.dep** %5, align 8
  %75 = getelementptr inbounds %struct.dep, %struct.dep* %74, i32 0, i32 2
  %76 = load %struct.file*, %struct.file** %75, align 8
  %77 = getelementptr inbounds %struct.file, %struct.file* %76, i32 0, i32 1
  %78 = load i8*, i8** %77, align 8
  br label %83

79:                                               ; preds = %68
  %80 = load %struct.dep*, %struct.dep** %5, align 8
  %81 = getelementptr inbounds %struct.dep, %struct.dep* %80, i32 0, i32 1
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %79, %73
  %84 = phi i8* [ %78, %73 ], [ %82, %79 ]
  %85 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.649, i64 0, i64 0), i8* %84)
  br label %86

86:                                               ; preds = %83
  %87 = load %struct.dep*, %struct.dep** %5, align 8
  %88 = getelementptr inbounds %struct.dep, %struct.dep* %87, i32 0, i32 0
  %89 = load %struct.dep*, %struct.dep** %88, align 8
  store %struct.dep* %89, %struct.dep** %5, align 8
  br label %65

90:                                               ; preds = %65
  %91 = call i32 @putchar(i32 10)
  %92 = load %struct.rule*, %struct.rule** %4, align 8
  %93 = getelementptr inbounds %struct.rule, %struct.rule* %92, i32 0, i32 7
  %94 = load i8, i8* %93, align 1
  %95 = icmp ne i8 %94, 0
  br i1 %95, label %96, label %100

96:                                               ; preds = %90
  %97 = load i32, i32* %3, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %3, align 4
  %99 = call i32 @puts(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.650, i64 0, i64 0))
  br label %100

100:                                              ; preds = %96, %90
  %101 = load %struct.rule*, %struct.rule** %4, align 8
  %102 = getelementptr inbounds %struct.rule, %struct.rule* %101, i32 0, i32 5
  %103 = load %struct.commands*, %struct.commands** %102, align 8
  %104 = icmp ne %struct.commands* %103, null
  br i1 %104, label %105, label %109

105:                                              ; preds = %100
  %106 = load %struct.rule*, %struct.rule** %4, align 8
  %107 = getelementptr inbounds %struct.rule, %struct.rule* %106, i32 0, i32 5
  %108 = load %struct.commands*, %struct.commands** %107, align 8
  call void (%struct.commands*, ...) bitcast (void (%struct.commands*)* @print_commands to void (%struct.commands*, ...)*)(%struct.commands* %108)
  br label %109

109:                                              ; preds = %105, %100
  br label %110

110:                                              ; preds = %109
  %111 = load %struct.rule*, %struct.rule** %4, align 8
  %112 = getelementptr inbounds %struct.rule, %struct.rule* %111, i32 0, i32 0
  %113 = load %struct.rule*, %struct.rule** %112, align 8
  store %struct.rule* %113, %struct.rule** %4, align 8
  br label %9

114:                                              ; preds = %9
  %115 = load i32, i32* %1, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %114
  %118 = call i32 @puts(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6.651, i64 0, i64 0))
  br label %141

119:                                              ; preds = %114
  %120 = load i32, i32* %1, align 4
  %121 = load i32, i32* %2, align 4
  %122 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7.652, i64 0, i64 0), i32 %120, i32 %121)
  %123 = load i32, i32* %2, align 4
  %124 = uitofp i32 %123 to double
  %125 = load i32, i32* %1, align 4
  %126 = uitofp i32 %125 to double
  %127 = fdiv double %124, %126
  %128 = fmul double %127, 1.000000e+02
  %129 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.653, i64 0, i64 0), double %128)
  %130 = call i32 @puts(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9.654, i64 0, i64 0))
  %131 = load i32, i32* %3, align 4
  %132 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.655, i64 0, i64 0), i32 %131)
  %133 = load i32, i32* %3, align 4
  %134 = uitofp i32 %133 to double
  %135 = load i32, i32* %1, align 4
  %136 = uitofp i32 %135 to double
  %137 = fdiv double %134, %136
  %138 = fmul double %137, 1.000000e+02
  %139 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.653, i64 0, i64 0), double %138)
  %140 = call i32 @puts(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11.656, i64 0, i64 0))
  br label %141

141:                                              ; preds = %119, %117
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.variable* @define_variable(i8* %0, i32 %1, i8* %2, i32 %3, i32 %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i32 %1, i32* %7, align 4
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %11 = load i8*, i8** %6, align 8
  %12 = load i32, i32* %7, align 4
  %13 = load i8*, i8** %8, align 8
  %14 = load i32, i32* %9, align 4
  %15 = load i32, i32* %10, align 4
  %16 = load %struct.variable_set_list*, %struct.variable_set_list** @current_variable_set_list, align 8
  %17 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %16, i32 0, i32 1
  %18 = load %struct.variable_set*, %struct.variable_set** %17, align 8
  %19 = call %struct.variable* @define_variable_in_set(i8* %11, i32 %12, i8* %13, i32 %14, i32 %15, %struct.variable_set* %18)
  ret %struct.variable* %19
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.variable* @define_variable_in_set(i8* %0, i32 %1, i8* %2, i32 %3, i32 %4, %struct.variable_set* %5) #0 {
  %7 = alloca %struct.variable*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.variable_set*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.variable*, align 8
  store i8* %0, i8** %8, align 8
  store i32 %1, i32* %9, align 4
  store i8* %2, i8** %10, align 8
  store i32 %3, i32* %11, align 4
  store i32 %4, i32* %12, align 4
  store %struct.variable_set* %5, %struct.variable_set** %13, align 8
  store i32 0, i32* %15, align 4
  store i32 0, i32* %14, align 4
  br label %17

17:                                               ; preds = %35, %6
  %18 = load i32, i32* %14, align 4
  %19 = load i32, i32* %9, align 4
  %20 = icmp ult i32 %18, %19
  br i1 %20, label %21, label %38

21:                                               ; preds = %17
  %22 = load i8*, i8** %8, align 8
  %23 = load i32, i32* %14, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %22, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = sext i8 %26 to i32
  %28 = load i32, i32* %15, align 4
  %29 = add i32 %28, %27
  store i32 %29, i32* %15, align 4
  %30 = load i32, i32* %15, align 4
  %31 = shl i32 %30, 7
  %32 = load i32, i32* %15, align 4
  %33 = lshr i32 %32, 20
  %34 = add i32 %31, %33
  store i32 %34, i32* %15, align 4
  br label %35

35:                                               ; preds = %21
  %36 = load i32, i32* %14, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %14, align 4
  br label %17

38:                                               ; preds = %17
  %39 = load %struct.variable_set*, %struct.variable_set** %13, align 8
  %40 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %39, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load i32, i32* %15, align 4
  %43 = urem i32 %42, %41
  store i32 %43, i32* %15, align 4
  %44 = load %struct.variable_set*, %struct.variable_set** %13, align 8
  %45 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %44, i32 0, i32 0
  %46 = load %struct.variable**, %struct.variable*** %45, align 8
  %47 = load i32, i32* %15, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %struct.variable*, %struct.variable** %46, i64 %48
  %50 = load %struct.variable*, %struct.variable** %49, align 8
  store %struct.variable* %50, %struct.variable** %16, align 8
  br label %51

51:                                               ; preds = %88, %38
  %52 = load %struct.variable*, %struct.variable** %16, align 8
  %53 = icmp ne %struct.variable* %52, null
  br i1 %53, label %54, label %92

54:                                               ; preds = %51
  %55 = load %struct.variable*, %struct.variable** %16, align 8
  %56 = getelementptr inbounds %struct.variable, %struct.variable* %55, i32 0, i32 1
  %57 = load i8*, i8** %56, align 8
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = load i8*, i8** %8, align 8
  %61 = load i8, i8* %60, align 1
  %62 = sext i8 %61 to i32
  %63 = icmp eq i32 %59, %62
  br i1 %63, label %64, label %87

64:                                               ; preds = %54
  %65 = load %struct.variable*, %struct.variable** %16, align 8
  %66 = getelementptr inbounds %struct.variable, %struct.variable* %65, i32 0, i32 1
  %67 = load i8*, i8** %66, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 1
  %69 = load i8*, i8** %8, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 1
  %71 = load i32, i32* %9, align 4
  %72 = sub i32 %71, 1
  %73 = zext i32 %72 to i64
  %74 = call i32 @strncmp(i8* %68, i8* %70, i64 %73) #9
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %87, label %76

76:                                               ; preds = %64
  %77 = load %struct.variable*, %struct.variable** %16, align 8
  %78 = getelementptr inbounds %struct.variable, %struct.variable* %77, i32 0, i32 1
  %79 = load i8*, i8** %78, align 8
  %80 = load i32, i32* %9, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds i8, i8* %79, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = sext i8 %83 to i32
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %76
  br label %92

87:                                               ; preds = %76, %64, %54
  br label %88

88:                                               ; preds = %87
  %89 = load %struct.variable*, %struct.variable** %16, align 8
  %90 = getelementptr inbounds %struct.variable, %struct.variable* %89, i32 0, i32 0
  %91 = load %struct.variable*, %struct.variable** %90, align 8
  store %struct.variable* %91, %struct.variable** %16, align 8
  br label %51

92:                                               ; preds = %86, %51
  %93 = load i32, i32* @env_overrides, align 4
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %92
  %96 = load i32, i32* %11, align 4
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  store i32 3, i32* %11, align 4
  br label %99

99:                                               ; preds = %98, %95, %92
  %100 = load %struct.variable*, %struct.variable** %16, align 8
  %101 = icmp ne %struct.variable* %100, null
  br i1 %101, label %102, label %154

102:                                              ; preds = %99
  %103 = load i32, i32* @env_overrides, align 4
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %118

105:                                              ; preds = %102
  %106 = load %struct.variable*, %struct.variable** %16, align 8
  %107 = getelementptr inbounds %struct.variable, %struct.variable* %106, i32 0, i32 3
  %108 = load i8, i8* %107, align 8
  %109 = and i8 %108, 7
  %110 = zext i8 %109 to i32
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %118

112:                                              ; preds = %105
  %113 = load %struct.variable*, %struct.variable** %16, align 8
  %114 = getelementptr inbounds %struct.variable, %struct.variable* %113, i32 0, i32 3
  %115 = load i8, i8* %114, align 8
  %116 = and i8 %115, -8
  %117 = or i8 %116, 3
  store i8 %117, i8* %114, align 8
  br label %118

118:                                              ; preds = %112, %105, %102
  %119 = load i32, i32* %11, align 4
  %120 = load %struct.variable*, %struct.variable** %16, align 8
  %121 = getelementptr inbounds %struct.variable, %struct.variable* %120, i32 0, i32 3
  %122 = load i8, i8* %121, align 8
  %123 = and i8 %122, 7
  %124 = zext i8 %123 to i32
  %125 = icmp sge i32 %119, %124
  br i1 %125, label %126, label %152

126:                                              ; preds = %118
  %127 = load i8*, i8** %10, align 8
  %128 = load i8*, i8** %10, align 8
  %129 = call i64 @strlen(i8* %128) #9
  %130 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %127, i64 %129)
  %131 = load %struct.variable*, %struct.variable** %16, align 8
  %132 = getelementptr inbounds %struct.variable, %struct.variable* %131, i32 0, i32 2
  store i8* %130, i8** %132, align 8
  %133 = load i32, i32* %11, align 4
  %134 = load %struct.variable*, %struct.variable** %16, align 8
  %135 = getelementptr inbounds %struct.variable, %struct.variable* %134, i32 0, i32 3
  %136 = trunc i32 %133 to i8
  %137 = load i8, i8* %135, align 8
  %138 = and i8 %136, 7
  %139 = and i8 %137, -8
  %140 = or i8 %139, %138
  store i8 %140, i8* %135, align 8
  %141 = zext i8 %138 to i32
  %142 = load i32, i32* %12, align 4
  %143 = load %struct.variable*, %struct.variable** %16, align 8
  %144 = getelementptr inbounds %struct.variable, %struct.variable* %143, i32 0, i32 3
  %145 = trunc i32 %142 to i8
  %146 = load i8, i8* %144, align 8
  %147 = and i8 %145, 1
  %148 = shl i8 %147, 3
  %149 = and i8 %146, -9
  %150 = or i8 %149, %148
  store i8 %150, i8* %144, align 8
  %151 = zext i8 %147 to i32
  br label %152

152:                                              ; preds = %126, %118
  %153 = load %struct.variable*, %struct.variable** %16, align 8
  store %struct.variable* %153, %struct.variable** %7, align 8
  br label %208

154:                                              ; preds = %99
  %155 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 32)
  %156 = bitcast i8* %155 to %struct.variable*
  store %struct.variable* %156, %struct.variable** %16, align 8
  %157 = load i8*, i8** %8, align 8
  %158 = load i32, i32* %9, align 4
  %159 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i32, ...)*)(i8* %157, i32 %158)
  %160 = load %struct.variable*, %struct.variable** %16, align 8
  %161 = getelementptr inbounds %struct.variable, %struct.variable* %160, i32 0, i32 1
  store i8* %159, i8** %161, align 8
  %162 = load i8*, i8** %10, align 8
  %163 = load i8*, i8** %10, align 8
  %164 = call i64 @strlen(i8* %163) #9
  %165 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %162, i64 %164)
  %166 = load %struct.variable*, %struct.variable** %16, align 8
  %167 = getelementptr inbounds %struct.variable, %struct.variable* %166, i32 0, i32 2
  store i8* %165, i8** %167, align 8
  %168 = load i32, i32* %11, align 4
  %169 = load %struct.variable*, %struct.variable** %16, align 8
  %170 = getelementptr inbounds %struct.variable, %struct.variable* %169, i32 0, i32 3
  %171 = trunc i32 %168 to i8
  %172 = load i8, i8* %170, align 8
  %173 = and i8 %171, 7
  %174 = and i8 %172, -8
  %175 = or i8 %174, %173
  store i8 %175, i8* %170, align 8
  %176 = zext i8 %173 to i32
  %177 = load i32, i32* %12, align 4
  %178 = load %struct.variable*, %struct.variable** %16, align 8
  %179 = getelementptr inbounds %struct.variable, %struct.variable* %178, i32 0, i32 3
  %180 = trunc i32 %177 to i8
  %181 = load i8, i8* %179, align 8
  %182 = and i8 %180, 1
  %183 = shl i8 %182, 3
  %184 = and i8 %181, -9
  %185 = or i8 %184, %183
  store i8 %185, i8* %179, align 8
  %186 = zext i8 %182 to i32
  %187 = load %struct.variable*, %struct.variable** %16, align 8
  %188 = getelementptr inbounds %struct.variable, %struct.variable* %187, i32 0, i32 3
  %189 = load i8, i8* %188, align 8
  %190 = and i8 %189, -17
  store i8 %190, i8* %188, align 8
  %191 = load %struct.variable_set*, %struct.variable_set** %13, align 8
  %192 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %191, i32 0, i32 0
  %193 = load %struct.variable**, %struct.variable*** %192, align 8
  %194 = load i32, i32* %15, align 4
  %195 = zext i32 %194 to i64
  %196 = getelementptr inbounds %struct.variable*, %struct.variable** %193, i64 %195
  %197 = load %struct.variable*, %struct.variable** %196, align 8
  %198 = load %struct.variable*, %struct.variable** %16, align 8
  %199 = getelementptr inbounds %struct.variable, %struct.variable* %198, i32 0, i32 0
  store %struct.variable* %197, %struct.variable** %199, align 8
  %200 = load %struct.variable*, %struct.variable** %16, align 8
  %201 = load %struct.variable_set*, %struct.variable_set** %13, align 8
  %202 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %201, i32 0, i32 0
  %203 = load %struct.variable**, %struct.variable*** %202, align 8
  %204 = load i32, i32* %15, align 4
  %205 = zext i32 %204 to i64
  %206 = getelementptr inbounds %struct.variable*, %struct.variable** %203, i64 %205
  store %struct.variable* %200, %struct.variable** %206, align 8
  %207 = load %struct.variable*, %struct.variable** %16, align 8
  store %struct.variable* %207, %struct.variable** %7, align 8
  br label %208

208:                                              ; preds = %154, %152
  %209 = load %struct.variable*, %struct.variable** %7, align 8
  ret %struct.variable* %209
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.variable* @define_variable_for_file(i8* %0, i32 %1, i8* %2, i32 %3, i32 %4, %struct.file* %5) #0 {
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.file*, align 8
  store i8* %0, i8** %7, align 8
  store i32 %1, i32* %8, align 4
  store i8* %2, i8** %9, align 8
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store %struct.file* %5, %struct.file** %12, align 8
  %13 = load i8*, i8** %7, align 8
  %14 = load i32, i32* %8, align 4
  %15 = load i8*, i8** %9, align 8
  %16 = load i32, i32* %10, align 4
  %17 = load i32, i32* %11, align 4
  %18 = load %struct.file*, %struct.file** %12, align 8
  %19 = getelementptr inbounds %struct.file, %struct.file* %18, i32 0, i32 9
  %20 = load %struct.variable_set_list*, %struct.variable_set_list** %19, align 8
  %21 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %20, i32 0, i32 1
  %22 = load %struct.variable_set*, %struct.variable_set** %21, align 8
  %23 = call %struct.variable* @define_variable_in_set(i8* %13, i32 %14, i8* %15, i32 %16, i32 %17, %struct.variable_set* %22)
  ret %struct.variable* %23
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.variable* @lookup_variable(i8* %0, i32 %1) #0 {
  %3 = alloca %struct.variable*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.variable_set_list*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.variable_set*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.variable*, align 8
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %7, align 4
  br label %12

12:                                               ; preds = %30, %2
  %13 = load i32, i32* %7, align 4
  %14 = load i32, i32* %5, align 4
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %16, label %33

16:                                               ; preds = %12
  %17 = load i8*, i8** %4, align 8
  %18 = load i32, i32* %7, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = load i32, i32* %8, align 4
  %24 = add i32 %23, %22
  store i32 %24, i32* %8, align 4
  %25 = load i32, i32* %8, align 4
  %26 = shl i32 %25, 7
  %27 = load i32, i32* %8, align 4
  %28 = lshr i32 %27, 20
  %29 = add i32 %26, %28
  store i32 %29, i32* %8, align 4
  br label %30

30:                                               ; preds = %16
  %31 = load i32, i32* %7, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %7, align 4
  br label %12

33:                                               ; preds = %12
  %34 = load %struct.variable_set_list*, %struct.variable_set_list** @current_variable_set_list, align 8
  store %struct.variable_set_list* %34, %struct.variable_set_list** %6, align 8
  br label %35

35:                                               ; preds = %97, %33
  %36 = load %struct.variable_set_list*, %struct.variable_set_list** %6, align 8
  %37 = icmp ne %struct.variable_set_list* %36, null
  br i1 %37, label %38, label %101

38:                                               ; preds = %35
  %39 = load %struct.variable_set_list*, %struct.variable_set_list** %6, align 8
  %40 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %39, i32 0, i32 1
  %41 = load %struct.variable_set*, %struct.variable_set** %40, align 8
  store %struct.variable_set* %41, %struct.variable_set** %9, align 8
  %42 = load i32, i32* %8, align 4
  %43 = load %struct.variable_set*, %struct.variable_set** %9, align 8
  %44 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = urem i32 %42, %45
  store i32 %46, i32* %10, align 4
  %47 = load %struct.variable_set*, %struct.variable_set** %9, align 8
  %48 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %47, i32 0, i32 0
  %49 = load %struct.variable**, %struct.variable*** %48, align 8
  %50 = load i32, i32* %10, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %struct.variable*, %struct.variable** %49, i64 %51
  %53 = load %struct.variable*, %struct.variable** %52, align 8
  store %struct.variable* %53, %struct.variable** %11, align 8
  br label %54

54:                                               ; preds = %92, %38
  %55 = load %struct.variable*, %struct.variable** %11, align 8
  %56 = icmp ne %struct.variable* %55, null
  br i1 %56, label %57, label %96

57:                                               ; preds = %54
  %58 = load %struct.variable*, %struct.variable** %11, align 8
  %59 = getelementptr inbounds %struct.variable, %struct.variable* %58, i32 0, i32 1
  %60 = load i8*, i8** %59, align 8
  %61 = load i8, i8* %60, align 1
  %62 = sext i8 %61 to i32
  %63 = load i8*, i8** %4, align 8
  %64 = load i8, i8* %63, align 1
  %65 = sext i8 %64 to i32
  %66 = icmp eq i32 %62, %65
  br i1 %66, label %67, label %91

67:                                               ; preds = %57
  %68 = load %struct.variable*, %struct.variable** %11, align 8
  %69 = getelementptr inbounds %struct.variable, %struct.variable* %68, i32 0, i32 1
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 1
  %72 = load i8*, i8** %4, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 1
  %74 = load i32, i32* %5, align 4
  %75 = sub i32 %74, 1
  %76 = zext i32 %75 to i64
  %77 = call i32 @strncmp(i8* %71, i8* %73, i64 %76) #9
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %91, label %79

79:                                               ; preds = %67
  %80 = load %struct.variable*, %struct.variable** %11, align 8
  %81 = getelementptr inbounds %struct.variable, %struct.variable* %80, i32 0, i32 1
  %82 = load i8*, i8** %81, align 8
  %83 = load i32, i32* %5, align 4
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %82, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = sext i8 %86 to i32
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %79
  %90 = load %struct.variable*, %struct.variable** %11, align 8
  store %struct.variable* %90, %struct.variable** %3, align 8
  br label %102

91:                                               ; preds = %79, %67, %57
  br label %92

92:                                               ; preds = %91
  %93 = load %struct.variable*, %struct.variable** %11, align 8
  %94 = getelementptr inbounds %struct.variable, %struct.variable* %93, i32 0, i32 0
  %95 = load %struct.variable*, %struct.variable** %94, align 8
  store %struct.variable* %95, %struct.variable** %11, align 8
  br label %54

96:                                               ; preds = %54
  br label %97

97:                                               ; preds = %96
  %98 = load %struct.variable_set_list*, %struct.variable_set_list** %6, align 8
  %99 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %98, i32 0, i32 0
  %100 = load %struct.variable_set_list*, %struct.variable_set_list** %99, align 8
  store %struct.variable_set_list* %100, %struct.variable_set_list** %6, align 8
  br label %35

101:                                              ; preds = %35
  store %struct.variable* null, %struct.variable** %3, align 8
  br label %102

102:                                              ; preds = %101, %89
  %103 = load %struct.variable*, %struct.variable** %3, align 8
  ret %struct.variable* %103
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @initialize_file_variables(%struct.file* %0) #0 {
  %2 = alloca %struct.file*, align 8
  %3 = alloca %struct.variable_set_list*, align 8
  store %struct.file* %0, %struct.file** %2, align 8
  %4 = load %struct.file*, %struct.file** %2, align 8
  %5 = getelementptr inbounds %struct.file, %struct.file* %4, i32 0, i32 9
  %6 = load %struct.variable_set_list*, %struct.variable_set_list** %5, align 8
  store %struct.variable_set_list* %6, %struct.variable_set_list** %3, align 8
  %7 = load %struct.variable_set_list*, %struct.variable_set_list** %3, align 8
  %8 = icmp eq %struct.variable_set_list* %7, null
  br i1 %8, label %9, label %49

9:                                                ; preds = %1
  %10 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 16)
  %11 = bitcast i8* %10 to %struct.variable_set_list*
  store %struct.variable_set_list* %11, %struct.variable_set_list** %3, align 8
  %12 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 16)
  %13 = bitcast i8* %12 to %struct.variable_set*
  %14 = load %struct.variable_set_list*, %struct.variable_set_list** %3, align 8
  %15 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %14, i32 0, i32 1
  store %struct.variable_set* %13, %struct.variable_set** %15, align 8
  %16 = load %struct.variable_set_list*, %struct.variable_set_list** %3, align 8
  %17 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %16, i32 0, i32 1
  %18 = load %struct.variable_set*, %struct.variable_set** %17, align 8
  %19 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %18, i32 0, i32 1
  store i32 23, i32* %19, align 8
  %20 = load %struct.variable_set_list*, %struct.variable_set_list** %3, align 8
  %21 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %20, i32 0, i32 1
  %22 = load %struct.variable_set*, %struct.variable_set** %21, align 8
  %23 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = mul i64 %25, 8
  %27 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 %26)
  %28 = bitcast i8* %27 to %struct.variable**
  %29 = load %struct.variable_set_list*, %struct.variable_set_list** %3, align 8
  %30 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %29, i32 0, i32 1
  %31 = load %struct.variable_set*, %struct.variable_set** %30, align 8
  %32 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %31, i32 0, i32 0
  store %struct.variable** %28, %struct.variable*** %32, align 8
  %33 = load %struct.variable_set_list*, %struct.variable_set_list** %3, align 8
  %34 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %33, i32 0, i32 1
  %35 = load %struct.variable_set*, %struct.variable_set** %34, align 8
  %36 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %35, i32 0, i32 0
  %37 = load %struct.variable**, %struct.variable*** %36, align 8
  %38 = bitcast %struct.variable** %37 to i8*
  %39 = load %struct.variable_set_list*, %struct.variable_set_list** %3, align 8
  %40 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %39, i32 0, i32 1
  %41 = load %struct.variable_set*, %struct.variable_set** %40, align 8
  %42 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = zext i32 %43 to i64
  %45 = mul i64 %44, 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %38, i8 0, i64 %45, i1 false)
  %46 = load %struct.variable_set_list*, %struct.variable_set_list** %3, align 8
  %47 = load %struct.file*, %struct.file** %2, align 8
  %48 = getelementptr inbounds %struct.file, %struct.file* %47, i32 0, i32 9
  store %struct.variable_set_list* %46, %struct.variable_set_list** %48, align 8
  br label %49

49:                                               ; preds = %9, %1
  %50 = load %struct.file*, %struct.file** %2, align 8
  %51 = getelementptr inbounds %struct.file, %struct.file* %50, i32 0, i32 10
  %52 = load %struct.file*, %struct.file** %51, align 8
  %53 = icmp eq %struct.file* %52, null
  br i1 %53, label %54, label %57

54:                                               ; preds = %49
  %55 = load %struct.variable_set_list*, %struct.variable_set_list** %3, align 8
  %56 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %55, i32 0, i32 0
  store %struct.variable_set_list* @global_setlist, %struct.variable_set_list** %56, align 8
  br label %76

57:                                               ; preds = %49
  %58 = load %struct.file*, %struct.file** %2, align 8
  %59 = getelementptr inbounds %struct.file, %struct.file* %58, i32 0, i32 10
  %60 = load %struct.file*, %struct.file** %59, align 8
  %61 = getelementptr inbounds %struct.file, %struct.file* %60, i32 0, i32 9
  %62 = load %struct.variable_set_list*, %struct.variable_set_list** %61, align 8
  %63 = icmp eq %struct.variable_set_list* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %57
  %65 = load %struct.file*, %struct.file** %2, align 8
  %66 = getelementptr inbounds %struct.file, %struct.file* %65, i32 0, i32 10
  %67 = load %struct.file*, %struct.file** %66, align 8
  call void @initialize_file_variables(%struct.file* %67)
  br label %68

68:                                               ; preds = %64, %57
  %69 = load %struct.file*, %struct.file** %2, align 8
  %70 = getelementptr inbounds %struct.file, %struct.file* %69, i32 0, i32 10
  %71 = load %struct.file*, %struct.file** %70, align 8
  %72 = getelementptr inbounds %struct.file, %struct.file* %71, i32 0, i32 9
  %73 = load %struct.variable_set_list*, %struct.variable_set_list** %72, align 8
  %74 = load %struct.variable_set_list*, %struct.variable_set_list** %3, align 8
  %75 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %74, i32 0, i32 0
  store %struct.variable_set_list* %73, %struct.variable_set_list** %75, align 8
  br label %76

76:                                               ; preds = %68, %54
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @pop_variable_scope() #0 {
  %1 = alloca %struct.variable_set_list*, align 8
  %2 = alloca %struct.variable_set*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.variable*, align 8
  %5 = alloca %struct.variable*, align 8
  %6 = load %struct.variable_set_list*, %struct.variable_set_list** @current_variable_set_list, align 8
  store %struct.variable_set_list* %6, %struct.variable_set_list** %1, align 8
  %7 = load %struct.variable_set_list*, %struct.variable_set_list** %1, align 8
  %8 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %7, i32 0, i32 1
  %9 = load %struct.variable_set*, %struct.variable_set** %8, align 8
  store %struct.variable_set* %9, %struct.variable_set** %2, align 8
  %10 = load %struct.variable_set_list*, %struct.variable_set_list** %1, align 8
  %11 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %10, i32 0, i32 0
  %12 = load %struct.variable_set_list*, %struct.variable_set_list** %11, align 8
  store %struct.variable_set_list* %12, %struct.variable_set_list** @current_variable_set_list, align 8
  %13 = load %struct.variable_set_list*, %struct.variable_set_list** %1, align 8
  %14 = bitcast %struct.variable_set_list* %13 to i8*
  call void @free(i8* %14) #10
  store i32 0, i32* %3, align 4
  br label %15

15:                                               ; preds = %43, %0
  %16 = load i32, i32* %3, align 4
  %17 = load %struct.variable_set*, %struct.variable_set** %2, align 8
  %18 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ult i32 %16, %19
  br i1 %20, label %21, label %46

21:                                               ; preds = %15
  %22 = load %struct.variable_set*, %struct.variable_set** %2, align 8
  %23 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %22, i32 0, i32 0
  %24 = load %struct.variable**, %struct.variable*** %23, align 8
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %struct.variable*, %struct.variable** %24, i64 %26
  %28 = load %struct.variable*, %struct.variable** %27, align 8
  store %struct.variable* %28, %struct.variable** %4, align 8
  br label %29

29:                                               ; preds = %32, %21
  %30 = load %struct.variable*, %struct.variable** %4, align 8
  %31 = icmp ne %struct.variable* %30, null
  br i1 %31, label %32, label %42

32:                                               ; preds = %29
  %33 = load %struct.variable*, %struct.variable** %4, align 8
  store %struct.variable* %33, %struct.variable** %5, align 8
  %34 = load %struct.variable*, %struct.variable** %5, align 8
  %35 = getelementptr inbounds %struct.variable, %struct.variable* %34, i32 0, i32 0
  %36 = load %struct.variable*, %struct.variable** %35, align 8
  store %struct.variable* %36, %struct.variable** %4, align 8
  %37 = load %struct.variable*, %struct.variable** %5, align 8
  %38 = getelementptr inbounds %struct.variable, %struct.variable* %37, i32 0, i32 1
  %39 = load i8*, i8** %38, align 8
  call void @free(i8* %39) #10
  %40 = load %struct.variable*, %struct.variable** %5, align 8
  %41 = bitcast %struct.variable* %40 to i8*
  call void @free(i8* %41) #10
  br label %29

42:                                               ; preds = %29
  br label %43

43:                                               ; preds = %42
  %44 = load i32, i32* %3, align 4
  %45 = add i32 %44, 1
  store i32 %45, i32* %3, align 4
  br label %15

46:                                               ; preds = %15
  %47 = load %struct.variable_set*, %struct.variable_set** %2, align 8
  %48 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %47, i32 0, i32 0
  %49 = load %struct.variable**, %struct.variable*** %48, align 8
  %50 = bitcast %struct.variable** %49 to i8*
  call void @free(i8* %50) #10
  %51 = load %struct.variable_set*, %struct.variable_set** %2, align 8
  %52 = bitcast %struct.variable_set* %51 to i8*
  call void @free(i8* %52) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @push_new_variable_scope() #0 {
  %1 = alloca %struct.variable_set_list*, align 8
  %2 = alloca %struct.variable_set*, align 8
  %3 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 16)
  %4 = bitcast i8* %3 to %struct.variable_set*
  store %struct.variable_set* %4, %struct.variable_set** %2, align 8
  %5 = load %struct.variable_set*, %struct.variable_set** %2, align 8
  %6 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %5, i32 0, i32 1
  store i32 13, i32* %6, align 8
  %7 = load %struct.variable_set*, %struct.variable_set** %2, align 8
  %8 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = mul i64 %10, 8
  %12 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 %11)
  %13 = bitcast i8* %12 to %struct.variable**
  %14 = load %struct.variable_set*, %struct.variable_set** %2, align 8
  %15 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %14, i32 0, i32 0
  store %struct.variable** %13, %struct.variable*** %15, align 8
  %16 = load %struct.variable_set*, %struct.variable_set** %2, align 8
  %17 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %16, i32 0, i32 0
  %18 = load %struct.variable**, %struct.variable*** %17, align 8
  %19 = bitcast %struct.variable** %18 to i8*
  %20 = load %struct.variable_set*, %struct.variable_set** %2, align 8
  %21 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %20, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = mul i64 %23, 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %19, i8 0, i64 %24, i1 false)
  %25 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 16)
  %26 = bitcast i8* %25 to %struct.variable_set_list*
  store %struct.variable_set_list* %26, %struct.variable_set_list** %1, align 8
  %27 = load %struct.variable_set*, %struct.variable_set** %2, align 8
  %28 = load %struct.variable_set_list*, %struct.variable_set_list** %1, align 8
  %29 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %28, i32 0, i32 1
  store %struct.variable_set* %27, %struct.variable_set** %29, align 8
  %30 = load %struct.variable_set_list*, %struct.variable_set_list** @current_variable_set_list, align 8
  %31 = load %struct.variable_set_list*, %struct.variable_set_list** %1, align 8
  %32 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %31, i32 0, i32 0
  store %struct.variable_set_list* %30, %struct.variable_set_list** %32, align 8
  %33 = load %struct.variable_set_list*, %struct.variable_set_list** %1, align 8
  store %struct.variable_set_list* %33, %struct.variable_set_list** @current_variable_set_list, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @merge_variable_set_lists(%struct.variable_set_list** %0, %struct.variable_set_list* %1) #0 {
  %3 = alloca %struct.variable_set_list**, align 8
  %4 = alloca %struct.variable_set_list*, align 8
  %5 = alloca %struct.variable_set_list*, align 8
  %6 = alloca %struct.variable_set_list*, align 8
  %7 = alloca %struct.variable_set_list*, align 8
  store %struct.variable_set_list** %0, %struct.variable_set_list*** %3, align 8
  store %struct.variable_set_list* %1, %struct.variable_set_list** %4, align 8
  %8 = load %struct.variable_set_list**, %struct.variable_set_list*** %3, align 8
  %9 = load %struct.variable_set_list*, %struct.variable_set_list** %8, align 8
  store %struct.variable_set_list* %9, %struct.variable_set_list** %5, align 8
  store %struct.variable_set_list* null, %struct.variable_set_list** %6, align 8
  br label %10

10:                                               ; preds = %18, %2
  %11 = load %struct.variable_set_list*, %struct.variable_set_list** %4, align 8
  %12 = icmp ne %struct.variable_set_list* %11, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  %14 = load %struct.variable_set_list*, %struct.variable_set_list** %5, align 8
  %15 = icmp ne %struct.variable_set_list* %14, null
  br label %16

16:                                               ; preds = %13, %10
  %17 = phi i1 [ false, %10 ], [ %15, %13 ]
  br i1 %17, label %18, label %35

18:                                               ; preds = %16
  %19 = load %struct.variable_set_list*, %struct.variable_set_list** %4, align 8
  store %struct.variable_set_list* %19, %struct.variable_set_list** %7, align 8
  %20 = load %struct.variable_set_list*, %struct.variable_set_list** %4, align 8
  %21 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %20, i32 0, i32 0
  %22 = load %struct.variable_set_list*, %struct.variable_set_list** %21, align 8
  store %struct.variable_set_list* %22, %struct.variable_set_list** %4, align 8
  %23 = load %struct.variable_set_list*, %struct.variable_set_list** %5, align 8
  %24 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %23, i32 0, i32 1
  %25 = load %struct.variable_set*, %struct.variable_set** %24, align 8
  %26 = load %struct.variable_set_list*, %struct.variable_set_list** %7, align 8
  %27 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %26, i32 0, i32 1
  %28 = load %struct.variable_set*, %struct.variable_set** %27, align 8
  call void @merge_variable_sets(%struct.variable_set* %25, %struct.variable_set* %28)
  %29 = load %struct.variable_set_list*, %struct.variable_set_list** %7, align 8
  %30 = bitcast %struct.variable_set_list* %29 to i8*
  call void @free(i8* %30) #10
  %31 = load %struct.variable_set_list*, %struct.variable_set_list** %5, align 8
  store %struct.variable_set_list* %31, %struct.variable_set_list** %6, align 8
  %32 = load %struct.variable_set_list*, %struct.variable_set_list** %5, align 8
  %33 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %32, i32 0, i32 0
  %34 = load %struct.variable_set_list*, %struct.variable_set_list** %33, align 8
  store %struct.variable_set_list* %34, %struct.variable_set_list** %5, align 8
  br label %10

35:                                               ; preds = %16
  %36 = load %struct.variable_set_list*, %struct.variable_set_list** %4, align 8
  %37 = icmp ne %struct.variable_set_list* %36, null
  br i1 %37, label %38, label %49

38:                                               ; preds = %35
  %39 = load %struct.variable_set_list*, %struct.variable_set_list** %6, align 8
  %40 = icmp eq %struct.variable_set_list* %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %38
  %42 = load %struct.variable_set_list*, %struct.variable_set_list** %4, align 8
  %43 = load %struct.variable_set_list**, %struct.variable_set_list*** %3, align 8
  store %struct.variable_set_list* %42, %struct.variable_set_list** %43, align 8
  br label %48

44:                                               ; preds = %38
  %45 = load %struct.variable_set_list*, %struct.variable_set_list** %4, align 8
  %46 = load %struct.variable_set_list*, %struct.variable_set_list** %6, align 8
  %47 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %46, i32 0, i32 0
  store %struct.variable_set_list* %45, %struct.variable_set_list** %47, align 8
  br label %48

48:                                               ; preds = %44, %41
  br label %49

49:                                               ; preds = %48, %35
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @merge_variable_sets(%struct.variable_set* %0, %struct.variable_set* %1) #0 {
  %3 = alloca %struct.variable_set*, align 8
  %4 = alloca %struct.variable_set*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.variable*, align 8
  %7 = alloca %struct.variable*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.variable*, align 8
  %10 = alloca i8*, align 8
  store %struct.variable_set* %0, %struct.variable_set** %3, align 8
  store %struct.variable_set* %1, %struct.variable_set** %4, align 8
  store i32 0, i32* %5, align 4
  br label %11

11:                                               ; preds = %154, %2
  %12 = load i32, i32* %5, align 4
  %13 = load %struct.variable_set*, %struct.variable_set** %4, align 8
  %14 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %12, %15
  br i1 %16, label %17, label %157

17:                                               ; preds = %11
  %18 = load %struct.variable_set*, %struct.variable_set** %4, align 8
  %19 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %18, i32 0, i32 0
  %20 = load %struct.variable**, %struct.variable*** %19, align 8
  %21 = load i32, i32* %5, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %struct.variable*, %struct.variable** %20, i64 %22
  %24 = load %struct.variable*, %struct.variable** %23, align 8
  store %struct.variable* %24, %struct.variable** %6, align 8
  br label %25

25:                                               ; preds = %151, %17
  %26 = load %struct.variable*, %struct.variable** %6, align 8
  %27 = icmp ne %struct.variable* %26, null
  br i1 %27, label %28, label %153

28:                                               ; preds = %25
  %29 = load %struct.variable*, %struct.variable** %6, align 8
  %30 = getelementptr inbounds %struct.variable, %struct.variable* %29, i32 0, i32 0
  %31 = load %struct.variable*, %struct.variable** %30, align 8
  store %struct.variable* %31, %struct.variable** %7, align 8
  %32 = load %struct.variable_set*, %struct.variable_set** %4, align 8
  %33 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %32, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = load %struct.variable_set*, %struct.variable_set** %3, align 8
  %36 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %35, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp uge i32 %34, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %28
  %40 = load i32, i32* %5, align 4
  store i32 %40, i32* %8, align 4
  br label %65

41:                                               ; preds = %28
  store i32 0, i32* %8, align 4
  %42 = load %struct.variable*, %struct.variable** %6, align 8
  %43 = getelementptr inbounds %struct.variable, %struct.variable* %42, i32 0, i32 1
  %44 = load i8*, i8** %43, align 8
  store i8* %44, i8** %10, align 8
  br label %45

45:                                               ; preds = %61, %41
  %46 = load i8*, i8** %10, align 8
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i32
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %64

50:                                               ; preds = %45
  %51 = load i8*, i8** %10, align 8
  %52 = load i8, i8* %51, align 1
  %53 = sext i8 %52 to i32
  %54 = load i32, i32* %8, align 4
  %55 = add i32 %54, %53
  store i32 %55, i32* %8, align 4
  %56 = load i32, i32* %8, align 4
  %57 = shl i32 %56, 7
  %58 = load i32, i32* %8, align 4
  %59 = lshr i32 %58, 20
  %60 = add i32 %57, %59
  store i32 %60, i32* %8, align 4
  br label %61

61:                                               ; preds = %50
  %62 = load i8*, i8** %10, align 8
  %63 = getelementptr inbounds i8, i8* %62, i32 1
  store i8* %63, i8** %10, align 8
  br label %45

64:                                               ; preds = %45
  br label %65

65:                                               ; preds = %64, %39
  %66 = load %struct.variable_set*, %struct.variable_set** %3, align 8
  %67 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %66, i32 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = load i32, i32* %8, align 4
  %70 = urem i32 %69, %68
  store i32 %70, i32* %8, align 4
  %71 = load %struct.variable_set*, %struct.variable_set** %3, align 8
  %72 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %71, i32 0, i32 0
  %73 = load %struct.variable**, %struct.variable*** %72, align 8
  %74 = load i32, i32* %8, align 4
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %struct.variable*, %struct.variable** %73, i64 %75
  %77 = load %struct.variable*, %struct.variable** %76, align 8
  store %struct.variable* %77, %struct.variable** %9, align 8
  br label %78

78:                                               ; preds = %121, %65
  %79 = load %struct.variable*, %struct.variable** %9, align 8
  %80 = icmp ne %struct.variable* %79, null
  br i1 %80, label %81, label %125

81:                                               ; preds = %78
  %82 = load %struct.variable*, %struct.variable** %9, align 8
  %83 = getelementptr inbounds %struct.variable, %struct.variable* %82, i32 0, i32 1
  %84 = load i8*, i8** %83, align 8
  %85 = load %struct.variable*, %struct.variable** %6, align 8
  %86 = getelementptr inbounds %struct.variable, %struct.variable* %85, i32 0, i32 1
  %87 = load i8*, i8** %86, align 8
  %88 = icmp eq i8* %84, %87
  br i1 %88, label %119, label %89

89:                                               ; preds = %81
  %90 = load %struct.variable*, %struct.variable** %9, align 8
  %91 = getelementptr inbounds %struct.variable, %struct.variable* %90, i32 0, i32 1
  %92 = load i8*, i8** %91, align 8
  %93 = load i8, i8* %92, align 1
  %94 = sext i8 %93 to i32
  %95 = load %struct.variable*, %struct.variable** %6, align 8
  %96 = getelementptr inbounds %struct.variable, %struct.variable* %95, i32 0, i32 1
  %97 = load i8*, i8** %96, align 8
  %98 = load i8, i8* %97, align 1
  %99 = sext i8 %98 to i32
  %100 = icmp eq i32 %94, %99
  br i1 %100, label %101, label %120

101:                                              ; preds = %89
  %102 = load %struct.variable*, %struct.variable** %9, align 8
  %103 = getelementptr inbounds %struct.variable, %struct.variable* %102, i32 0, i32 1
  %104 = load i8*, i8** %103, align 8
  %105 = load i8, i8* %104, align 1
  %106 = sext i8 %105 to i32
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %119, label %108

108:                                              ; preds = %101
  %109 = load %struct.variable*, %struct.variable** %9, align 8
  %110 = getelementptr inbounds %struct.variable, %struct.variable* %109, i32 0, i32 1
  %111 = load i8*, i8** %110, align 8
  %112 = getelementptr inbounds i8, i8* %111, i64 1
  %113 = load %struct.variable*, %struct.variable** %6, align 8
  %114 = getelementptr inbounds %struct.variable, %struct.variable* %113, i32 0, i32 1
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 1
  %117 = call i32 @strcmp(i8* %112, i8* %116) #9
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %120, label %119

119:                                              ; preds = %108, %101, %81
  br label %125

120:                                              ; preds = %108, %89
  br label %121

121:                                              ; preds = %120
  %122 = load %struct.variable*, %struct.variable** %9, align 8
  %123 = getelementptr inbounds %struct.variable, %struct.variable* %122, i32 0, i32 0
  %124 = load %struct.variable*, %struct.variable** %123, align 8
  store %struct.variable* %124, %struct.variable** %9, align 8
  br label %78

125:                                              ; preds = %119, %78
  %126 = load %struct.variable*, %struct.variable** %9, align 8
  %127 = icmp eq %struct.variable* %126, null
  br i1 %127, label %128, label %145

128:                                              ; preds = %125
  %129 = load %struct.variable_set*, %struct.variable_set** %3, align 8
  %130 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %129, i32 0, i32 0
  %131 = load %struct.variable**, %struct.variable*** %130, align 8
  %132 = load i32, i32* %8, align 4
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds %struct.variable*, %struct.variable** %131, i64 %133
  %135 = load %struct.variable*, %struct.variable** %134, align 8
  %136 = load %struct.variable*, %struct.variable** %6, align 8
  %137 = getelementptr inbounds %struct.variable, %struct.variable* %136, i32 0, i32 0
  store %struct.variable* %135, %struct.variable** %137, align 8
  %138 = load %struct.variable*, %struct.variable** %6, align 8
  %139 = load %struct.variable_set*, %struct.variable_set** %3, align 8
  %140 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %139, i32 0, i32 0
  %141 = load %struct.variable**, %struct.variable*** %140, align 8
  %142 = load i32, i32* %8, align 4
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds %struct.variable*, %struct.variable** %141, i64 %143
  store %struct.variable* %138, %struct.variable** %144, align 8
  br label %151

145:                                              ; preds = %125
  %146 = load %struct.variable*, %struct.variable** %6, align 8
  %147 = getelementptr inbounds %struct.variable, %struct.variable* %146, i32 0, i32 2
  %148 = load i8*, i8** %147, align 8
  call void @free(i8* %148) #10
  %149 = load %struct.variable*, %struct.variable** %6, align 8
  %150 = bitcast %struct.variable* %149 to i8*
  call void @free(i8* %150) #10
  br label %151

151:                                              ; preds = %145, %128
  %152 = load %struct.variable*, %struct.variable** %7, align 8
  store %struct.variable* %152, %struct.variable** %6, align 8
  br label %25

153:                                              ; preds = %25
  br label %154

154:                                              ; preds = %153
  %155 = load i32, i32* %5, align 4
  %156 = add i32 %155, 1
  store i32 %156, i32* %5, align 4
  br label %11

157:                                              ; preds = %11
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @define_automatic_variables() #0 {
  %1 = alloca %struct.variable*, align 8
  %2 = alloca [100 x i8], align 16
  %3 = getelementptr inbounds [100 x i8], [100 x i8]* %2, i64 0, i64 0
  %4 = load i32, i32* @makelevel, align 4
  %5 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.675, i64 0, i64 0), i32 %4) #10
  %6 = getelementptr inbounds [100 x i8], [100 x i8]* %2, i64 0, i64 0
  %7 = call %struct.variable* @define_variable(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.676, i64 0, i64 0), i32 9, i8* %6, i32 1, i32 0)
  %8 = call %struct.variable* @define_variable(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.677, i64 0, i64 0), i32 5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @default_shell, i64 0, i64 0), i32 0, i32 0)
  store %struct.variable* %8, %struct.variable** %1, align 8
  %9 = load %struct.variable*, %struct.variable** %1, align 8
  %10 = getelementptr inbounds %struct.variable, %struct.variable* %9, i32 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = load i8, i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %0
  %16 = load %struct.variable*, %struct.variable** %1, align 8
  %17 = getelementptr inbounds %struct.variable, %struct.variable* %16, i32 0, i32 3
  %18 = load i8, i8* %17, align 8
  %19 = and i8 %18, 7
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %34

22:                                               ; preds = %15
  %23 = load i32, i32* @makelevel, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %34

25:                                               ; preds = %22, %0
  %26 = load %struct.variable*, %struct.variable** %1, align 8
  %27 = getelementptr inbounds %struct.variable, %struct.variable* %26, i32 0, i32 3
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, -8
  %30 = or i8 %29, 2
  store i8 %30, i8* %27, align 8
  %31 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i32, ...)*)(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.678, i64 0, i64 0), i32 7)
  %32 = load %struct.variable*, %struct.variable** %1, align 8
  %33 = getelementptr inbounds %struct.variable, %struct.variable* %32, i32 0, i32 2
  store i8* %31, i8** %33, align 8
  br label %34

34:                                               ; preds = %25, %22, %15
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @variable_buffer_output(i8* %0, i8* %1, i32 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %12 = load i32, i32* %6, align 4
  %13 = zext i32 %12 to i64
  %14 = load i8*, i8** %4, align 8
  %15 = load i8*, i8** @variable_buffer, align 8
  %16 = ptrtoint i8* %14 to i64
  %17 = ptrtoint i8* %15 to i64
  %18 = sub i64 %16, %17
  %19 = add nsw i64 %13, %18
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %7, align 4
  %21 = load i32, i32* %7, align 4
  %22 = load i32, i32* @variable_buffer_length, align 4
  %23 = icmp ugt i32 %21, %22
  br i1 %23, label %24, label %52

24:                                               ; preds = %3
  %25 = load i8*, i8** %4, align 8
  %26 = load i8*, i8** @variable_buffer, align 8
  %27 = ptrtoint i8* %25 to i64
  %28 = ptrtoint i8* %26 to i64
  %29 = sub i64 %27, %28
  %30 = trunc i64 %29 to i32
  store i32 %30, i32* %8, align 4
  %31 = load i32, i32* @variable_buffer_length, align 4
  %32 = mul i32 2, %31
  store i32 %32, i32* %9, align 4
  %33 = load i32, i32* %7, align 4
  %34 = add i32 %33, 100
  store i32 %34, i32* %10, align 4
  %35 = load i32, i32* %9, align 4
  %36 = load i32, i32* %10, align 4
  %37 = icmp sgt i32 %35, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %24
  %39 = load i32, i32* %9, align 4
  br label %42

40:                                               ; preds = %24
  %41 = load i32, i32* %10, align 4
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i32 [ %39, %38 ], [ %41, %40 ]
  store i32 %43, i32* %11, align 4
  %44 = load i32, i32* %11, align 4
  store i32 %44, i32* @variable_buffer_length, align 4
  %45 = load i8*, i8** @variable_buffer, align 8
  %46 = load i32, i32* @variable_buffer_length, align 4
  %47 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i32, ...)*)(i8* %45, i32 %46)
  store i8* %47, i8** @variable_buffer, align 8
  %48 = load i8*, i8** @variable_buffer, align 8
  %49 = load i32, i32* %8, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %48, i64 %50
  store i8* %51, i8** %4, align 8
  br label %52

52:                                               ; preds = %42, %3
  %53 = load i8*, i8** %4, align 8
  %54 = load i8*, i8** %5, align 8
  %55 = load i32, i32* %6, align 4
  %56 = zext i32 %55 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %54, i64 %56, i1 false)
  %57 = load i8*, i8** %4, align 8
  %58 = load i32, i32* %6, align 4
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %57, i64 %59
  ret i8* %60
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @initialize_variable_output() #0 {
  %1 = load i8*, i8** @variable_buffer, align 8
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %6

3:                                                ; preds = %0
  store i32 200, i32* @variable_buffer_length, align 4
  %4 = load i32, i32* @variable_buffer_length, align 4
  %5 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 %4)
  store i8* %5, i8** @variable_buffer, align 8
  br label %6

6:                                                ; preds = %3, %0
  %7 = load i8*, i8** @variable_buffer, align 8
  ret i8* %7
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8** @target_environment(%struct.file* %0) #0 {
  %2 = alloca %struct.file*, align 8
  %3 = alloca %struct.variable_set_list*, align 8
  %4 = alloca %struct.variable_bucket**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8**, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.variable_set*, align 8
  %11 = alloca %struct.variable*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.variable_bucket*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca %struct.variable_bucket*, align 8
  %16 = alloca %struct.variable_bucket*, align 8
  %17 = alloca %struct.variable*, align 8
  store %struct.file* %0, %struct.file** %2, align 8
  %18 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @enter_file to %struct.file* (i8*, ...)*)(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.685, i64 0, i64 0))
  %19 = getelementptr inbounds %struct.file, %struct.file* %18, i32 0, i32 12
  %20 = load i16, i16* %19, align 2
  %21 = lshr i16 %20, 7
  %22 = and i16 %21, 1
  %23 = zext i16 %22 to i32
  store i32 %23, i32* %9, align 4
  %24 = load %struct.file*, %struct.file** %2, align 8
  %25 = getelementptr inbounds %struct.file, %struct.file* %24, i32 0, i32 9
  %26 = load %struct.variable_set_list*, %struct.variable_set_list** %25, align 8
  store %struct.variable_set_list* %26, %struct.variable_set_list** %3, align 8
  %27 = load %struct.variable_set_list*, %struct.variable_set_list** %3, align 8
  %28 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %27, i32 0, i32 1
  %29 = load %struct.variable_set*, %struct.variable_set** %28, align 8
  %30 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  store i32 %31, i32* %5, align 4
  %32 = load %struct.variable_set_list*, %struct.variable_set_list** %3, align 8
  %33 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %32, i32 0, i32 0
  %34 = load %struct.variable_set_list*, %struct.variable_set_list** %33, align 8
  store %struct.variable_set_list* %34, %struct.variable_set_list** %3, align 8
  br label %35

35:                                               ; preds = %53, %1
  %36 = load %struct.variable_set_list*, %struct.variable_set_list** %3, align 8
  %37 = icmp ne %struct.variable_set_list* %36, null
  br i1 %37, label %38, label %57

38:                                               ; preds = %35
  %39 = load %struct.variable_set_list*, %struct.variable_set_list** %3, align 8
  %40 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %39, i32 0, i32 1
  %41 = load %struct.variable_set*, %struct.variable_set** %40, align 8
  %42 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = load i32, i32* %5, align 4
  %45 = icmp ult i32 %43, %44
  br i1 %45, label %46, label %52

46:                                               ; preds = %38
  %47 = load %struct.variable_set_list*, %struct.variable_set_list** %3, align 8
  %48 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %47, i32 0, i32 1
  %49 = load %struct.variable_set*, %struct.variable_set** %48, align 8
  %50 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  store i32 %51, i32* %5, align 4
  br label %52

52:                                               ; preds = %46, %38
  br label %53

53:                                               ; preds = %52
  %54 = load %struct.variable_set_list*, %struct.variable_set_list** %3, align 8
  %55 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %54, i32 0, i32 0
  %56 = load %struct.variable_set_list*, %struct.variable_set_list** %55, align 8
  store %struct.variable_set_list* %56, %struct.variable_set_list** %3, align 8
  br label %35

57:                                               ; preds = %35
  %58 = load i32, i32* %5, align 4
  %59 = zext i32 %58 to i64
  %60 = mul i64 %59, 8
  %61 = alloca i8, i64 %60, align 16
  %62 = bitcast i8* %61 to %struct.variable_bucket**
  store %struct.variable_bucket** %62, %struct.variable_bucket*** %4, align 8
  %63 = load %struct.variable_bucket**, %struct.variable_bucket*** %4, align 8
  %64 = bitcast %struct.variable_bucket** %63 to i8*
  %65 = load i32, i32* %5, align 4
  %66 = zext i32 %65 to i64
  %67 = mul i64 %66, 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %64, i8 0, i64 %67, i1 false)
  store i32 0, i32* %7, align 4
  %68 = load %struct.file*, %struct.file** %2, align 8
  %69 = getelementptr inbounds %struct.file, %struct.file* %68, i32 0, i32 9
  %70 = load %struct.variable_set_list*, %struct.variable_set_list** %69, align 8
  store %struct.variable_set_list* %70, %struct.variable_set_list** %3, align 8
  br label %71

71:                                               ; preds = %337, %57
  %72 = load %struct.variable_set_list*, %struct.variable_set_list** %3, align 8
  %73 = icmp ne %struct.variable_set_list* %72, null
  br i1 %73, label %74, label %341

74:                                               ; preds = %71
  %75 = load %struct.variable_set_list*, %struct.variable_set_list** %3, align 8
  %76 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %75, i32 0, i32 1
  %77 = load %struct.variable_set*, %struct.variable_set** %76, align 8
  store %struct.variable_set* %77, %struct.variable_set** %10, align 8
  store i32 0, i32* %6, align 4
  br label %78

78:                                               ; preds = %333, %74
  %79 = load i32, i32* %6, align 4
  %80 = load %struct.variable_set*, %struct.variable_set** %10, align 8
  %81 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %80, i32 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = icmp ult i32 %79, %82
  br i1 %83, label %84, label %336

84:                                               ; preds = %78
  %85 = load %struct.variable_set*, %struct.variable_set** %10, align 8
  %86 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %85, i32 0, i32 0
  %87 = load %struct.variable**, %struct.variable*** %86, align 8
  %88 = load i32, i32* %6, align 4
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %struct.variable*, %struct.variable** %87, i64 %89
  %91 = load %struct.variable*, %struct.variable** %90, align 8
  store %struct.variable* %91, %struct.variable** %11, align 8
  br label %92

92:                                               ; preds = %328, %84
  %93 = load %struct.variable*, %struct.variable** %11, align 8
  %94 = icmp ne %struct.variable* %93, null
  br i1 %94, label %95, label %332

95:                                               ; preds = %92
  %96 = load i32, i32* %6, align 4
  %97 = load i32, i32* %5, align 4
  %98 = urem i32 %96, %97
  store i32 %98, i32* %12, align 4
  %99 = load %struct.variable*, %struct.variable** %11, align 8
  %100 = getelementptr inbounds %struct.variable, %struct.variable* %99, i32 0, i32 1
  %101 = load i8*, i8** %100, align 8
  store i8* %101, i8** %14, align 8
  %102 = load i32, i32* %9, align 4
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %104, label %137

104:                                              ; preds = %95
  %105 = load %struct.variable*, %struct.variable** %11, align 8
  %106 = getelementptr inbounds %struct.variable, %struct.variable* %105, i32 0, i32 3
  %107 = load i8, i8* %106, align 8
  %108 = and i8 %107, 7
  %109 = zext i8 %108 to i32
  %110 = icmp ne i32 %109, 4
  br i1 %110, label %111, label %137

111:                                              ; preds = %104
  %112 = load %struct.variable*, %struct.variable** %11, align 8
  %113 = getelementptr inbounds %struct.variable, %struct.variable* %112, i32 0, i32 3
  %114 = load i8, i8* %113, align 8
  %115 = and i8 %114, 7
  %116 = zext i8 %115 to i32
  %117 = icmp ne i32 %116, 1
  br i1 %117, label %118, label %137

118:                                              ; preds = %111
  %119 = load %struct.variable*, %struct.variable** %11, align 8
  %120 = getelementptr inbounds %struct.variable, %struct.variable* %119, i32 0, i32 3
  %121 = load i8, i8* %120, align 8
  %122 = and i8 %121, 7
  %123 = zext i8 %122 to i32
  %124 = icmp ne i32 %123, 3
  br i1 %124, label %125, label %137

125:                                              ; preds = %118
  %126 = load %struct.variable*, %struct.variable** %11, align 8
  %127 = getelementptr inbounds %struct.variable, %struct.variable* %126, i32 0, i32 3
  %128 = load i8, i8* %127, align 8
  %129 = and i8 %128, 7
  %130 = zext i8 %129 to i32
  %131 = icmp eq i32 %130, 2
  br i1 %131, label %132, label %136

132:                                              ; preds = %125
  %133 = load i8*, i8** %14, align 8
  %134 = call i8* @getenv(i8* %133) #10
  %135 = icmp ne i8* %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %132, %125
  br label %328

137:                                              ; preds = %132, %118, %111, %104, %95
  %138 = load %struct.variable*, %struct.variable** %11, align 8
  %139 = getelementptr inbounds %struct.variable, %struct.variable* %138, i32 0, i32 3
  %140 = load i8, i8* %139, align 8
  %141 = and i8 %140, 7
  %142 = zext i8 %141 to i32
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %164, label %144

144:                                              ; preds = %137
  %145 = load i8*, i8** %14, align 8
  %146 = icmp eq i8* %145, getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.676, i64 0, i64 0)
  br i1 %146, label %164, label %147

147:                                              ; preds = %144
  %148 = load i8*, i8** %14, align 8
  %149 = load i8, i8* %148, align 1
  %150 = sext i8 %149 to i32
  %151 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.676, i64 0, i64 0), align 1
  %152 = sext i8 %151 to i32
  %153 = icmp eq i32 %150, %152
  br i1 %153, label %154, label %165

154:                                              ; preds = %147
  %155 = load i8*, i8** %14, align 8
  %156 = load i8, i8* %155, align 1
  %157 = sext i8 %156 to i32
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %164, label %159

159:                                              ; preds = %154
  %160 = load i8*, i8** %14, align 8
  %161 = getelementptr inbounds i8, i8* %160, i64 1
  %162 = call i32 @strcmp(i8* %161, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.676, i64 0, i64 1)) #9
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %165, label %164

164:                                              ; preds = %159, %154, %144, %137
  br label %328

165:                                              ; preds = %159, %147
  %166 = load i8*, i8** %14, align 8
  %167 = load i8, i8* %166, align 1
  %168 = sext i8 %167 to i32
  %169 = icmp ne i32 %168, 95
  br i1 %169, label %170, label %191

170:                                              ; preds = %165
  %171 = load i8*, i8** %14, align 8
  %172 = load i8, i8* %171, align 1
  %173 = sext i8 %172 to i32
  %174 = icmp slt i32 %173, 65
  br i1 %174, label %180, label %175

175:                                              ; preds = %170
  %176 = load i8*, i8** %14, align 8
  %177 = load i8, i8* %176, align 1
  %178 = sext i8 %177 to i32
  %179 = icmp sgt i32 %178, 90
  br i1 %179, label %180, label %191

180:                                              ; preds = %175, %170
  %181 = load i8*, i8** %14, align 8
  %182 = load i8, i8* %181, align 1
  %183 = sext i8 %182 to i32
  %184 = icmp slt i32 %183, 97
  br i1 %184, label %190, label %185

185:                                              ; preds = %180
  %186 = load i8*, i8** %14, align 8
  %187 = load i8, i8* %186, align 1
  %188 = sext i8 %187 to i32
  %189 = icmp sgt i32 %188, 122
  br i1 %189, label %190, label %191

190:                                              ; preds = %185, %180
  br label %328

191:                                              ; preds = %185, %175, %165
  %192 = load i8*, i8** %14, align 8
  %193 = getelementptr inbounds i8, i8* %192, i32 1
  store i8* %193, i8** %14, align 8
  br label %194

194:                                              ; preds = %236, %191
  %195 = load i8*, i8** %14, align 8
  %196 = load i8, i8* %195, align 1
  %197 = sext i8 %196 to i32
  %198 = icmp ne i32 %197, 0
  br i1 %198, label %199, label %239

199:                                              ; preds = %194
  %200 = load i8*, i8** %14, align 8
  %201 = load i8, i8* %200, align 1
  %202 = sext i8 %201 to i32
  %203 = icmp ne i32 %202, 95
  br i1 %203, label %204, label %235

204:                                              ; preds = %199
  %205 = load i8*, i8** %14, align 8
  %206 = load i8, i8* %205, align 1
  %207 = sext i8 %206 to i32
  %208 = icmp slt i32 %207, 97
  br i1 %208, label %214, label %209

209:                                              ; preds = %204
  %210 = load i8*, i8** %14, align 8
  %211 = load i8, i8* %210, align 1
  %212 = sext i8 %211 to i32
  %213 = icmp sgt i32 %212, 122
  br i1 %213, label %214, label %235

214:                                              ; preds = %209, %204
  %215 = load i8*, i8** %14, align 8
  %216 = load i8, i8* %215, align 1
  %217 = sext i8 %216 to i32
  %218 = icmp slt i32 %217, 65
  br i1 %218, label %224, label %219

219:                                              ; preds = %214
  %220 = load i8*, i8** %14, align 8
  %221 = load i8, i8* %220, align 1
  %222 = sext i8 %221 to i32
  %223 = icmp sgt i32 %222, 90
  br i1 %223, label %224, label %235

224:                                              ; preds = %219, %214
  %225 = load i8*, i8** %14, align 8
  %226 = load i8, i8* %225, align 1
  %227 = sext i8 %226 to i32
  %228 = icmp slt i32 %227, 48
  br i1 %228, label %234, label %229

229:                                              ; preds = %224
  %230 = load i8*, i8** %14, align 8
  %231 = load i8, i8* %230, align 1
  %232 = sext i8 %231 to i32
  %233 = icmp sgt i32 %232, 57
  br i1 %233, label %234, label %235

234:                                              ; preds = %229, %224
  br label %239

235:                                              ; preds = %229, %219, %209, %199
  br label %236

236:                                              ; preds = %235
  %237 = load i8*, i8** %14, align 8
  %238 = getelementptr inbounds i8, i8* %237, i32 1
  store i8* %238, i8** %14, align 8
  br label %194

239:                                              ; preds = %234, %194
  %240 = load i8*, i8** %14, align 8
  %241 = load i8, i8* %240, align 1
  %242 = sext i8 %241 to i32
  %243 = icmp ne i32 %242, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %239
  br label %328

245:                                              ; preds = %239
  %246 = load %struct.variable_bucket**, %struct.variable_bucket*** %4, align 8
  %247 = load i32, i32* %12, align 4
  %248 = zext i32 %247 to i64
  %249 = getelementptr inbounds %struct.variable_bucket*, %struct.variable_bucket** %246, i64 %248
  %250 = load %struct.variable_bucket*, %struct.variable_bucket** %249, align 8
  store %struct.variable_bucket* %250, %struct.variable_bucket** %13, align 8
  br label %251

251:                                              ; preds = %300, %245
  %252 = load %struct.variable_bucket*, %struct.variable_bucket** %13, align 8
  %253 = icmp ne %struct.variable_bucket* %252, null
  br i1 %253, label %254, label %304

254:                                              ; preds = %251
  %255 = load %struct.variable*, %struct.variable** %11, align 8
  %256 = getelementptr inbounds %struct.variable, %struct.variable* %255, i32 0, i32 1
  %257 = load i8*, i8** %256, align 8
  %258 = load %struct.variable_bucket*, %struct.variable_bucket** %13, align 8
  %259 = getelementptr inbounds %struct.variable_bucket, %struct.variable_bucket* %258, i32 0, i32 1
  %260 = load %struct.variable*, %struct.variable** %259, align 8
  %261 = getelementptr inbounds %struct.variable, %struct.variable* %260, i32 0, i32 1
  %262 = load i8*, i8** %261, align 8
  %263 = icmp eq i8* %257, %262
  br i1 %263, label %298, label %264

264:                                              ; preds = %254
  %265 = load %struct.variable*, %struct.variable** %11, align 8
  %266 = getelementptr inbounds %struct.variable, %struct.variable* %265, i32 0, i32 1
  %267 = load i8*, i8** %266, align 8
  %268 = load i8, i8* %267, align 1
  %269 = sext i8 %268 to i32
  %270 = load %struct.variable_bucket*, %struct.variable_bucket** %13, align 8
  %271 = getelementptr inbounds %struct.variable_bucket, %struct.variable_bucket* %270, i32 0, i32 1
  %272 = load %struct.variable*, %struct.variable** %271, align 8
  %273 = getelementptr inbounds %struct.variable, %struct.variable* %272, i32 0, i32 1
  %274 = load i8*, i8** %273, align 8
  %275 = load i8, i8* %274, align 1
  %276 = sext i8 %275 to i32
  %277 = icmp eq i32 %269, %276
  br i1 %277, label %278, label %299

278:                                              ; preds = %264
  %279 = load %struct.variable*, %struct.variable** %11, align 8
  %280 = getelementptr inbounds %struct.variable, %struct.variable* %279, i32 0, i32 1
  %281 = load i8*, i8** %280, align 8
  %282 = load i8, i8* %281, align 1
  %283 = sext i8 %282 to i32
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %298, label %285

285:                                              ; preds = %278
  %286 = load %struct.variable*, %struct.variable** %11, align 8
  %287 = getelementptr inbounds %struct.variable, %struct.variable* %286, i32 0, i32 1
  %288 = load i8*, i8** %287, align 8
  %289 = getelementptr inbounds i8, i8* %288, i64 1
  %290 = load %struct.variable_bucket*, %struct.variable_bucket** %13, align 8
  %291 = getelementptr inbounds %struct.variable_bucket, %struct.variable_bucket* %290, i32 0, i32 1
  %292 = load %struct.variable*, %struct.variable** %291, align 8
  %293 = getelementptr inbounds %struct.variable, %struct.variable* %292, i32 0, i32 1
  %294 = load i8*, i8** %293, align 8
  %295 = getelementptr inbounds i8, i8* %294, i64 1
  %296 = call i32 @strcmp(i8* %289, i8* %295) #9
  %297 = icmp ne i32 %296, 0
  br i1 %297, label %299, label %298

298:                                              ; preds = %285, %278, %254
  br label %304

299:                                              ; preds = %285, %264
  br label %300

300:                                              ; preds = %299
  %301 = load %struct.variable_bucket*, %struct.variable_bucket** %13, align 8
  %302 = getelementptr inbounds %struct.variable_bucket, %struct.variable_bucket* %301, i32 0, i32 0
  %303 = load %struct.variable_bucket*, %struct.variable_bucket** %302, align 8
  store %struct.variable_bucket* %303, %struct.variable_bucket** %13, align 8
  br label %251

304:                                              ; preds = %298, %251
  %305 = load %struct.variable_bucket*, %struct.variable_bucket** %13, align 8
  %306 = icmp eq %struct.variable_bucket* %305, null
  br i1 %306, label %307, label %327

307:                                              ; preds = %304
  %308 = alloca i8, i64 16, align 16
  %309 = bitcast i8* %308 to %struct.variable_bucket*
  store %struct.variable_bucket* %309, %struct.variable_bucket** %15, align 8
  %310 = load %struct.variable_bucket**, %struct.variable_bucket*** %4, align 8
  %311 = load i32, i32* %12, align 4
  %312 = zext i32 %311 to i64
  %313 = getelementptr inbounds %struct.variable_bucket*, %struct.variable_bucket** %310, i64 %312
  %314 = load %struct.variable_bucket*, %struct.variable_bucket** %313, align 8
  %315 = load %struct.variable_bucket*, %struct.variable_bucket** %15, align 8
  %316 = getelementptr inbounds %struct.variable_bucket, %struct.variable_bucket* %315, i32 0, i32 0
  store %struct.variable_bucket* %314, %struct.variable_bucket** %316, align 8
  %317 = load %struct.variable*, %struct.variable** %11, align 8
  %318 = load %struct.variable_bucket*, %struct.variable_bucket** %15, align 8
  %319 = getelementptr inbounds %struct.variable_bucket, %struct.variable_bucket* %318, i32 0, i32 1
  store %struct.variable* %317, %struct.variable** %319, align 8
  %320 = load %struct.variable_bucket*, %struct.variable_bucket** %15, align 8
  %321 = load %struct.variable_bucket**, %struct.variable_bucket*** %4, align 8
  %322 = load i32, i32* %12, align 4
  %323 = zext i32 %322 to i64
  %324 = getelementptr inbounds %struct.variable_bucket*, %struct.variable_bucket** %321, i64 %323
  store %struct.variable_bucket* %320, %struct.variable_bucket** %324, align 8
  %325 = load i32, i32* %7, align 4
  %326 = add i32 %325, 1
  store i32 %326, i32* %7, align 4
  br label %327

327:                                              ; preds = %307, %304
  br label %328

328:                                              ; preds = %327, %244, %190, %164, %136
  %329 = load %struct.variable*, %struct.variable** %11, align 8
  %330 = getelementptr inbounds %struct.variable, %struct.variable* %329, i32 0, i32 0
  %331 = load %struct.variable*, %struct.variable** %330, align 8
  store %struct.variable* %331, %struct.variable** %11, align 8
  br label %92

332:                                              ; preds = %92
  br label %333

333:                                              ; preds = %332
  %334 = load i32, i32* %6, align 4
  %335 = add i32 %334, 1
  store i32 %335, i32* %6, align 4
  br label %78

336:                                              ; preds = %78
  br label %337

337:                                              ; preds = %336
  %338 = load %struct.variable_set_list*, %struct.variable_set_list** %3, align 8
  %339 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %338, i32 0, i32 0
  %340 = load %struct.variable_set_list*, %struct.variable_set_list** %339, align 8
  store %struct.variable_set_list* %340, %struct.variable_set_list** %3, align 8
  br label %71

341:                                              ; preds = %71
  %342 = load i32, i32* %7, align 4
  %343 = add i32 %342, 2
  %344 = zext i32 %343 to i64
  %345 = mul i64 %344, 8
  %346 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 %345)
  %347 = bitcast i8* %346 to i8**
  store i8** %347, i8*** %8, align 8
  store i32 0, i32* %7, align 4
  store i32 0, i32* %6, align 4
  br label %348

348:                                              ; preds = %382, %341
  %349 = load i32, i32* %6, align 4
  %350 = load i32, i32* %5, align 4
  %351 = icmp ult i32 %349, %350
  br i1 %351, label %352, label %385

352:                                              ; preds = %348
  %353 = load %struct.variable_bucket**, %struct.variable_bucket*** %4, align 8
  %354 = load i32, i32* %6, align 4
  %355 = zext i32 %354 to i64
  %356 = getelementptr inbounds %struct.variable_bucket*, %struct.variable_bucket** %353, i64 %355
  %357 = load %struct.variable_bucket*, %struct.variable_bucket** %356, align 8
  store %struct.variable_bucket* %357, %struct.variable_bucket** %16, align 8
  br label %358

358:                                              ; preds = %377, %352
  %359 = load %struct.variable_bucket*, %struct.variable_bucket** %16, align 8
  %360 = icmp ne %struct.variable_bucket* %359, null
  br i1 %360, label %361, label %381

361:                                              ; preds = %358
  %362 = load %struct.variable_bucket*, %struct.variable_bucket** %16, align 8
  %363 = getelementptr inbounds %struct.variable_bucket, %struct.variable_bucket* %362, i32 0, i32 1
  %364 = load %struct.variable*, %struct.variable** %363, align 8
  store %struct.variable* %364, %struct.variable** %17, align 8
  %365 = load %struct.variable*, %struct.variable** %17, align 8
  %366 = getelementptr inbounds %struct.variable, %struct.variable* %365, i32 0, i32 1
  %367 = load i8*, i8** %366, align 8
  %368 = load %struct.variable*, %struct.variable** %17, align 8
  %369 = getelementptr inbounds %struct.variable, %struct.variable* %368, i32 0, i32 2
  %370 = load i8*, i8** %369, align 8
  %371 = call i8* (i8*, i8*, i8*, ...) bitcast (i8* (i8*, i8*, i8*)* @concat to i8* (i8*, i8*, i8*, ...)*)(i8* %367, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.686, i64 0, i64 0), i8* %370)
  %372 = load i8**, i8*** %8, align 8
  %373 = load i32, i32* %7, align 4
  %374 = add i32 %373, 1
  store i32 %374, i32* %7, align 4
  %375 = zext i32 %373 to i64
  %376 = getelementptr inbounds i8*, i8** %372, i64 %375
  store i8* %371, i8** %376, align 8
  br label %377

377:                                              ; preds = %361
  %378 = load %struct.variable_bucket*, %struct.variable_bucket** %16, align 8
  %379 = getelementptr inbounds %struct.variable_bucket, %struct.variable_bucket* %378, i32 0, i32 0
  %380 = load %struct.variable_bucket*, %struct.variable_bucket** %379, align 8
  store %struct.variable_bucket* %380, %struct.variable_bucket** %16, align 8
  br label %358

381:                                              ; preds = %358
  br label %382

382:                                              ; preds = %381
  %383 = load i32, i32* %6, align 4
  %384 = add i32 %383, 1
  store i32 %384, i32* %6, align 4
  br label %348

385:                                              ; preds = %348
  %386 = call i8* (i32, ...) bitcast (i8* (i32)* @xmalloc to i8* (i32, ...)*)(i32 100)
  %387 = load i8**, i8*** %8, align 8
  %388 = load i32, i32* %7, align 4
  %389 = zext i32 %388 to i64
  %390 = getelementptr inbounds i8*, i8** %387, i64 %389
  store i8* %386, i8** %390, align 8
  %391 = load i8**, i8*** %8, align 8
  %392 = load i32, i32* %7, align 4
  %393 = zext i32 %392 to i64
  %394 = getelementptr inbounds i8*, i8** %391, i64 %393
  %395 = load i8*, i8** %394, align 8
  %396 = load i32, i32* @makelevel, align 4
  %397 = add i32 %396, 1
  %398 = call i32 (i8*, i8*, ...) @sprintf(i8* %395, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6.687, i64 0, i64 0), i32 %397) #10
  %399 = load i8**, i8*** %8, align 8
  %400 = load i32, i32* %7, align 4
  %401 = add i32 %400, 1
  store i32 %401, i32* %7, align 4
  %402 = zext i32 %401 to i64
  %403 = getelementptr inbounds i8*, i8** %399, i64 %402
  store i8* null, i8** %403, align 8
  %404 = load i8**, i8*** %8, align 8
  ret i8** %404
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @try_variable_definition(i8* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  %11 = load i8*, i8** %4, align 8
  store i8* %11, i8** %7, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = load i8, i8* %12, align 1
  %14 = sext i8 %13 to i32
  %15 = icmp eq i32 %14, 9
  br i1 %15, label %16, label %17

16:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %96

17:                                               ; preds = %2
  br label %18

18:                                               ; preds = %46, %17
  %19 = load i8*, i8** %7, align 8
  %20 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %20, i8** %7, align 8
  %21 = load i8, i8* %19, align 1
  %22 = sext i8 %21 to i32
  store i32 %22, i32* %6, align 4
  %23 = load i32, i32* %6, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %18
  %26 = load i32, i32* %6, align 4
  %27 = icmp eq i32 %26, 35
  br i1 %27, label %28, label %29

28:                                               ; preds = %25, %18
  store i32 0, i32* %3, align 4
  br label %96

29:                                               ; preds = %25
  %30 = load i32, i32* %6, align 4
  %31 = icmp eq i32 %30, 61
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  store i32 1, i32* %10, align 4
  br label %47

33:                                               ; preds = %29
  %34 = load i32, i32* %6, align 4
  %35 = icmp eq i32 %34, 58
  br i1 %35, label %36, label %45

36:                                               ; preds = %33
  %37 = load i8*, i8** %7, align 8
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i32
  %40 = icmp eq i32 %39, 61
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = load i8*, i8** %7, align 8
  %43 = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %43, i8** %7, align 8
  store i32 0, i32* %10, align 4
  br label %47

44:                                               ; preds = %36
  store i32 0, i32* %3, align 4
  br label %96

45:                                               ; preds = %33
  br label %46

46:                                               ; preds = %45
  br label %18

47:                                               ; preds = %41, %32
  %48 = load i8*, i8** %4, align 8
  %49 = call i8* (i8*, ...) bitcast (i8* (i8*)* @next_token to i8* (i8*, ...)*)(i8* %48)
  store i8* %49, i8** %8, align 8
  %50 = load i8*, i8** %7, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 -1
  store i8* %51, i8** %9, align 8
  %52 = load i32, i32* %10, align 4
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %47
  %55 = load i8*, i8** %9, align 8
  %56 = getelementptr inbounds i8, i8* %55, i32 -1
  store i8* %56, i8** %9, align 8
  br label %57

57:                                               ; preds = %54, %47
  br label %58

58:                                               ; preds = %71, %57
  %59 = call i16** @__ctype_b_loc() #11
  %60 = load i16*, i16** %59, align 8
  %61 = load i8*, i8** %9, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 -1
  %63 = load i8, i8* %62, align 1
  %64 = sext i8 %63 to i32
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i16, i16* %60, i64 %65
  %67 = load i16, i16* %66, align 2
  %68 = zext i16 %67 to i32
  %69 = and i32 %68, 1
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %58
  %72 = load i8*, i8** %9, align 8
  %73 = getelementptr inbounds i8, i8* %72, i32 -1
  store i8* %73, i8** %9, align 8
  br label %58

74:                                               ; preds = %58
  %75 = load i8*, i8** %7, align 8
  %76 = call i8* (i8*, ...) bitcast (i8* (i8*)* @next_token to i8* (i8*, ...)*)(i8* %75)
  store i8* %76, i8** %7, align 8
  %77 = load i8*, i8** %8, align 8
  %78 = load i8*, i8** %9, align 8
  %79 = load i8*, i8** %8, align 8
  %80 = ptrtoint i8* %78 to i64
  %81 = ptrtoint i8* %79 to i64
  %82 = sub i64 %80, %81
  %83 = trunc i64 %82 to i32
  %84 = load i32, i32* %10, align 4
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %74
  %87 = load i8*, i8** %7, align 8
  br label %91

88:                                               ; preds = %74
  %89 = load i8*, i8** %7, align 8
  %90 = call i8* (i8*, ...) bitcast (i8* (i8*)* @variable_expand to i8* (i8*, ...)*)(i8* %89)
  br label %91

91:                                               ; preds = %88, %86
  %92 = phi i8* [ %87, %86 ], [ %90, %88 ]
  %93 = load i32, i32* %5, align 4
  %94 = load i32, i32* %10, align 4
  %95 = call %struct.variable* @define_variable(i8* %77, i32 %83, i8* %92, i32 %93, i32 %94)
  store i32 1, i32* %3, align 4
  br label %96

96:                                               ; preds = %91, %44, %28, %16
  %97 = load i32, i32* %3, align 4
  ret i32 %97
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @print_variable_data_base() #0 {
  %1 = call i32 @puts(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.692, i64 0, i64 0))
  call void @print_variable_set(%struct.variable_set* @global_variable_set, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8.693, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @print_variable_set(%struct.variable_set* %0, i8* %1) #0 {
  %3 = alloca %struct.variable_set*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.variable*, align 8
  %9 = alloca i32, align 4
  store %struct.variable_set* %0, %struct.variable_set** %3, align 8
  store i8* %1, i8** %4, align 8
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %46, %2
  %11 = load i32, i32* %5, align 4
  %12 = load %struct.variable_set*, %struct.variable_set** %3, align 8
  %13 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp ult i32 %11, %14
  br i1 %15, label %16, label %49

16:                                               ; preds = %10
  store i32 0, i32* %9, align 4
  %17 = load %struct.variable_set*, %struct.variable_set** %3, align 8
  %18 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %17, i32 0, i32 0
  %19 = load %struct.variable**, %struct.variable*** %18, align 8
  %20 = load i32, i32* %5, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %struct.variable*, %struct.variable** %19, i64 %21
  %23 = load %struct.variable*, %struct.variable** %22, align 8
  store %struct.variable* %23, %struct.variable** %8, align 8
  br label %24

24:                                               ; preds = %32, %16
  %25 = load %struct.variable*, %struct.variable** %8, align 8
  %26 = icmp ne %struct.variable* %25, null
  br i1 %26, label %27, label %36

27:                                               ; preds = %24
  %28 = load i32, i32* %9, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %9, align 4
  %30 = load %struct.variable*, %struct.variable** %8, align 8
  %31 = load i8*, i8** %4, align 8
  call void @print_variable(%struct.variable* %30, i8* %31)
  br label %32

32:                                               ; preds = %27
  %33 = load %struct.variable*, %struct.variable** %8, align 8
  %34 = getelementptr inbounds %struct.variable, %struct.variable* %33, i32 0, i32 0
  %35 = load %struct.variable*, %struct.variable** %34, align 8
  store %struct.variable* %35, %struct.variable** %8, align 8
  br label %24

36:                                               ; preds = %24
  %37 = load i32, i32* %9, align 4
  %38 = load i32, i32* %6, align 4
  %39 = add i32 %38, %37
  store i32 %39, i32* %6, align 4
  %40 = load i32, i32* %9, align 4
  %41 = load i32, i32* %7, align 4
  %42 = icmp ugt i32 %40, %41
  br i1 %42, label %43, label %45

43:                                               ; preds = %36
  %44 = load i32, i32* %9, align 4
  store i32 %44, i32* %7, align 4
  br label %45

45:                                               ; preds = %43, %36
  br label %46

46:                                               ; preds = %45
  %47 = load i32, i32* %5, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %5, align 4
  br label %10

49:                                               ; preds = %10
  %50 = load i32, i32* %6, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = call i32 @puts(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10.694, i64 0, i64 0))
  br label %70

54:                                               ; preds = %49
  %55 = load i32, i32* %6, align 4
  %56 = load %struct.variable_set*, %struct.variable_set** %3, align 8
  %57 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %56, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.695, i64 0, i64 0), i32 %55, i32 %58)
  %60 = load i32, i32* %6, align 4
  %61 = uitofp i32 %60 to double
  %62 = fmul double %61, 1.000000e+02
  %63 = load %struct.variable_set*, %struct.variable_set** %3, align 8
  %64 = getelementptr inbounds %struct.variable_set, %struct.variable_set* %63, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = uitofp i32 %65 to double
  %67 = fdiv double %62, %66
  %68 = load i32, i32* %7, align 4
  %69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.12.696, i64 0, i64 0), double %67, i32 %68)
  br label %70

70:                                               ; preds = %54, %52
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @print_variable(%struct.variable* %0, i8* %1) #0 {
  %3 = alloca %struct.variable*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store %struct.variable* %0, %struct.variable** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load %struct.variable*, %struct.variable** %3, align 8
  %8 = getelementptr inbounds %struct.variable, %struct.variable* %7, i32 0, i32 3
  %9 = load i8, i8* %8, align 8
  %10 = and i8 %9, 7
  %11 = zext i8 %10 to i32
  switch i32 %11, label %20 [
    i32 0, label %12
    i32 1, label %13
    i32 2, label %14
    i32 3, label %15
    i32 4, label %16
    i32 5, label %17
    i32 6, label %18
    i32 7, label %19
  ]

12:                                               ; preds = %2
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13.697, i64 0, i64 0), i8** %5, align 8
  br label %21

13:                                               ; preds = %2
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14.698, i64 0, i64 0), i8** %5, align 8
  br label %21

14:                                               ; preds = %2
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15.699, i64 0, i64 0), i8** %5, align 8
  br label %21

15:                                               ; preds = %2
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.700, i64 0, i64 0), i8** %5, align 8
  br label %21

16:                                               ; preds = %2
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17.701, i64 0, i64 0), i8** %5, align 8
  br label %21

17:                                               ; preds = %2
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.702, i64 0, i64 0), i8** %5, align 8
  br label %21

18:                                               ; preds = %2
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19.703, i64 0, i64 0), i8** %5, align 8
  br label %21

19:                                               ; preds = %2
  br label %20

20:                                               ; preds = %19, %2
  call void @abort() #12
  unreachable

21:                                               ; preds = %18, %17, %16, %15, %14, %13, %12
  %22 = load i8*, i8** %5, align 8
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20.704, i64 0, i64 0), i8* %22)
  %24 = load i8*, i8** %4, align 8
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %26 = call i32 @fputs(i8* %24, %struct._IO_FILE* %25)
  %27 = load %struct.variable*, %struct.variable** %3, align 8
  %28 = getelementptr inbounds %struct.variable, %struct.variable* %27, i32 0, i32 3
  %29 = load i8, i8* %28, align 8
  %30 = lshr i8 %29, 3
  %31 = and i8 %30, 1
  %32 = zext i8 %31 to i32
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %21
  %35 = load %struct.variable*, %struct.variable** %3, align 8
  %36 = getelementptr inbounds %struct.variable, %struct.variable* %35, i32 0, i32 2
  %37 = load i8*, i8** %36, align 8
  %38 = call i8* @strchr(i8* %37, i32 10) #9
  %39 = icmp ne i8* %38, null
  br i1 %39, label %40, label %48

40:                                               ; preds = %34
  %41 = load %struct.variable*, %struct.variable** %3, align 8
  %42 = getelementptr inbounds %struct.variable, %struct.variable* %41, i32 0, i32 1
  %43 = load i8*, i8** %42, align 8
  %44 = load %struct.variable*, %struct.variable** %3, align 8
  %45 = getelementptr inbounds %struct.variable, %struct.variable* %44, i32 0, i32 2
  %46 = load i8*, i8** %45, align 8
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21.705, i64 0, i64 0), i8* %43, i8* %46)
  br label %123

48:                                               ; preds = %34, %21
  %49 = load %struct.variable*, %struct.variable** %3, align 8
  %50 = getelementptr inbounds %struct.variable, %struct.variable* %49, i32 0, i32 1
  %51 = load i8*, i8** %50, align 8
  %52 = load %struct.variable*, %struct.variable** %3, align 8
  %53 = getelementptr inbounds %struct.variable, %struct.variable* %52, i32 0, i32 3
  %54 = load i8, i8* %53, align 8
  %55 = lshr i8 %54, 3
  %56 = and i8 %55, 1
  %57 = zext i8 %56 to i32
  %58 = icmp ne i32 %57, 0
  %59 = zext i1 %58 to i64
  %60 = select i1 %58, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8.693, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23.706, i64 0, i64 0)
  %61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22.707, i64 0, i64 0), i8* %51, i8* %60)
  %62 = load %struct.variable*, %struct.variable** %3, align 8
  %63 = getelementptr inbounds %struct.variable, %struct.variable* %62, i32 0, i32 2
  %64 = load i8*, i8** %63, align 8
  %65 = call i8* (i8*, ...) bitcast (i8* (i8*)* @next_token to i8* (i8*, ...)*)(i8* %64)
  store i8* %65, i8** %6, align 8
  %66 = load i8*, i8** %6, align 8
  %67 = load %struct.variable*, %struct.variable** %3, align 8
  %68 = getelementptr inbounds %struct.variable, %struct.variable* %67, i32 0, i32 2
  %69 = load i8*, i8** %68, align 8
  %70 = icmp ne i8* %66, %69
  br i1 %70, label %71, label %81

71:                                               ; preds = %48
  %72 = load i8*, i8** %6, align 8
  %73 = load i8, i8* %72, align 1
  %74 = sext i8 %73 to i32
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %81

76:                                               ; preds = %71
  %77 = load %struct.variable*, %struct.variable** %3, align 8
  %78 = getelementptr inbounds %struct.variable, %struct.variable* %77, i32 0, i32 2
  %79 = load i8*, i8** %78, align 8
  %80 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24.708, i64 0, i64 0), i8* %79)
  br label %121

81:                                               ; preds = %71, %48
  %82 = load %struct.variable*, %struct.variable** %3, align 8
  %83 = getelementptr inbounds %struct.variable, %struct.variable* %82, i32 0, i32 3
  %84 = load i8, i8* %83, align 8
  %85 = lshr i8 %84, 3
  %86 = and i8 %85, 1
  %87 = zext i8 %86 to i32
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %95

89:                                               ; preds = %81
  %90 = load %struct.variable*, %struct.variable** %3, align 8
  %91 = getelementptr inbounds %struct.variable, %struct.variable* %90, i32 0, i32 2
  %92 = load i8*, i8** %91, align 8
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %94 = call i32 @fputs(i8* %92, %struct._IO_FILE* %93)
  br label %120

95:                                               ; preds = %81
  %96 = load %struct.variable*, %struct.variable** %3, align 8
  %97 = getelementptr inbounds %struct.variable, %struct.variable* %96, i32 0, i32 2
  %98 = load i8*, i8** %97, align 8
  store i8* %98, i8** %6, align 8
  br label %99

99:                                               ; preds = %116, %95
  %100 = load i8*, i8** %6, align 8
  %101 = load i8, i8* %100, align 1
  %102 = sext i8 %101 to i32
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %104, label %119

104:                                              ; preds = %99
  %105 = load i8*, i8** %6, align 8
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %107, 36
  br i1 %108, label %109, label %111

109:                                              ; preds = %104
  %110 = call i32 @putchar(i32 36)
  br label %111

111:                                              ; preds = %109, %104
  %112 = load i8*, i8** %6, align 8
  %113 = load i8, i8* %112, align 1
  %114 = sext i8 %113 to i32
  %115 = call i32 @putchar(i32 %114)
  br label %116

116:                                              ; preds = %111
  %117 = load i8*, i8** %6, align 8
  %118 = getelementptr inbounds i8, i8* %117, i32 1
  store i8* %118, i8** %6, align 8
  br label %99

119:                                              ; preds = %99
  br label %120

120:                                              ; preds = %119, %89
  br label %121

121:                                              ; preds = %120, %76
  %122 = call i32 @putchar(i32 10)
  br label %123

123:                                              ; preds = %121, %40
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @print_file_variables(%struct.file* %0) #0 {
  %2 = alloca %struct.file*, align 8
  store %struct.file* %0, %struct.file** %2, align 8
  %3 = load %struct.file*, %struct.file** %2, align 8
  %4 = getelementptr inbounds %struct.file, %struct.file* %3, i32 0, i32 9
  %5 = load %struct.variable_set_list*, %struct.variable_set_list** %4, align 8
  %6 = icmp ne %struct.variable_set_list* %5, null
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = load %struct.file*, %struct.file** %2, align 8
  %9 = getelementptr inbounds %struct.file, %struct.file* %8, i32 0, i32 9
  %10 = load %struct.variable_set_list*, %struct.variable_set_list** %9, align 8
  %11 = getelementptr inbounds %struct.variable_set_list, %struct.variable_set_list* %10, i32 0, i32 1
  %12 = load %struct.variable_set*, %struct.variable_set** %11, align 8
  call void @print_variable_set(%struct.variable_set* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.711, i64 0, i64 0))
  br label %13

13:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @save_variable_output() #0 {
  %1 = alloca %struct.output_state*, align 8
  %2 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 16)
  %3 = bitcast i8* %2 to %struct.output_state*
  store %struct.output_state* %3, %struct.output_state** %1, align 8
  %4 = load i8*, i8** @variable_buffer, align 8
  %5 = load %struct.output_state*, %struct.output_state** %1, align 8
  %6 = getelementptr inbounds %struct.output_state, %struct.output_state* %5, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = load i32, i32* @variable_buffer_length, align 4
  %8 = load %struct.output_state*, %struct.output_state** %1, align 8
  %9 = getelementptr inbounds %struct.output_state, %struct.output_state* %8, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  store i8* null, i8** @variable_buffer, align 8
  store i32 0, i32* @variable_buffer_length, align 4
  %10 = load %struct.output_state*, %struct.output_state** %1, align 8
  %11 = bitcast %struct.output_state* %10 to i8*
  ret i8* %11
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @restore_variable_output(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.output_state*, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = bitcast i8* %4 to %struct.output_state*
  store %struct.output_state* %5, %struct.output_state** %3, align 8
  %6 = load i8*, i8** @variable_buffer, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = load i8*, i8** @variable_buffer, align 8
  call void @free(i8* %9) #10
  br label %10

10:                                               ; preds = %8, %1
  %11 = load %struct.output_state*, %struct.output_state** %3, align 8
  %12 = getelementptr inbounds %struct.output_state, %struct.output_state* %11, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  store i8* %13, i8** @variable_buffer, align 8
  %14 = load %struct.output_state*, %struct.output_state** %3, align 8
  %15 = getelementptr inbounds %struct.output_state, %struct.output_state* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* @variable_buffer_length, align 4
  %17 = load %struct.output_state*, %struct.output_state** %3, align 8
  %18 = bitcast %struct.output_state* %17 to i8*
  call void @free(i8* %18) #10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @build_vpath_lists() #0 {
  %1 = alloca %struct.vpath*, align 8
  %2 = alloca %struct.vpath*, align 8
  %3 = alloca %struct.vpath*, align 8
  %4 = alloca i8*, align 8
  store %struct.vpath* null, %struct.vpath** %1, align 8
  %5 = load %struct.vpath*, %struct.vpath** @vpaths, align 8
  store %struct.vpath* %5, %struct.vpath** %2, align 8
  br label %6

6:                                                ; preds = %17, %0
  %7 = load %struct.vpath*, %struct.vpath** %2, align 8
  %8 = icmp ne %struct.vpath* %7, null
  br i1 %8, label %9, label %19

9:                                                ; preds = %6
  %10 = load %struct.vpath*, %struct.vpath** %2, align 8
  %11 = getelementptr inbounds %struct.vpath, %struct.vpath* %10, i32 0, i32 0
  %12 = load %struct.vpath*, %struct.vpath** %11, align 8
  store %struct.vpath* %12, %struct.vpath** %3, align 8
  %13 = load %struct.vpath*, %struct.vpath** %1, align 8
  %14 = load %struct.vpath*, %struct.vpath** %2, align 8
  %15 = getelementptr inbounds %struct.vpath, %struct.vpath* %14, i32 0, i32 0
  store %struct.vpath* %13, %struct.vpath** %15, align 8
  %16 = load %struct.vpath*, %struct.vpath** %2, align 8
  store %struct.vpath* %16, %struct.vpath** %1, align 8
  br label %17

17:                                               ; preds = %9
  %18 = load %struct.vpath*, %struct.vpath** %3, align 8
  store %struct.vpath* %18, %struct.vpath** %2, align 8
  br label %6

19:                                               ; preds = %6
  %20 = load %struct.vpath*, %struct.vpath** %1, align 8
  store %struct.vpath* %20, %struct.vpath** @vpaths, align 8
  %21 = call i8* (i8*, ...) bitcast (i8* (i8*)* @variable_expand to i8* (i8*, ...)*)(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.721, i64 0, i64 0))
  store i8* %21, i8** %4, align 8
  %22 = load i8*, i8** %4, align 8
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %37

26:                                               ; preds = %19
  %27 = load i8*, i8** %4, align 8
  call void @construct_vpath_list(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.722, i64 0, i64 0), i8* %27)
  %28 = load %struct.vpath*, %struct.vpath** @vpaths, align 8
  %29 = icmp eq %struct.vpath* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  store %struct.vpath* null, %struct.vpath** @general_vpath, align 8
  br label %36

31:                                               ; preds = %26
  %32 = load %struct.vpath*, %struct.vpath** @vpaths, align 8
  store %struct.vpath* %32, %struct.vpath** @general_vpath, align 8
  %33 = load %struct.vpath*, %struct.vpath** @general_vpath, align 8
  %34 = getelementptr inbounds %struct.vpath, %struct.vpath* %33, i32 0, i32 0
  %35 = load %struct.vpath*, %struct.vpath** %34, align 8
  store %struct.vpath* %35, %struct.vpath** @vpaths, align 8
  br label %36

36:                                               ; preds = %31, %30
  br label %37

37:                                               ; preds = %36, %19
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @construct_vpath_list(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca %struct.vpath*, align 8
  %12 = alloca %struct.vpath*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.vpath*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %16 = load i8*, i8** %3, align 8
  %17 = icmp ne i8* %16, null
  br i1 %17, label %18, label %25

18:                                               ; preds = %2
  %19 = load i8*, i8** %3, align 8
  %20 = load i8*, i8** %3, align 8
  %21 = call i64 @strlen(i8* %20) #9
  %22 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %19, i64 %21)
  store i8* %22, i8** %3, align 8
  %23 = load i8*, i8** %3, align 8
  %24 = call i8* (i8*, ...) bitcast (i8* (i8*)* @find_percent to i8* (i8*, ...)*)(i8* %23)
  store i8* %24, i8** %10, align 8
  br label %25

25:                                               ; preds = %18, %2
  %26 = load i8*, i8** %4, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %127

28:                                               ; preds = %25
  %29 = load %struct.vpath*, %struct.vpath** @vpaths, align 8
  store %struct.vpath* %29, %struct.vpath** %12, align 8
  %30 = load %struct.vpath*, %struct.vpath** @vpaths, align 8
  store %struct.vpath* %30, %struct.vpath** %11, align 8
  br label %31

31:                                               ; preds = %116, %28
  %32 = load %struct.vpath*, %struct.vpath** %11, align 8
  %33 = icmp ne %struct.vpath* %32, null
  br i1 %33, label %34, label %121

34:                                               ; preds = %31
  %35 = load i8*, i8** %3, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %91, label %37

37:                                               ; preds = %34
  %38 = load i8*, i8** %10, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %45

40:                                               ; preds = %37
  %41 = load %struct.vpath*, %struct.vpath** %11, align 8
  %42 = getelementptr inbounds %struct.vpath, %struct.vpath* %41, i32 0, i32 2
  %43 = load i8*, i8** %42, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %61, label %45

45:                                               ; preds = %40, %37
  %46 = load i8*, i8** %10, align 8
  %47 = load i8*, i8** %3, align 8
  %48 = ptrtoint i8* %46 to i64
  %49 = ptrtoint i8* %47 to i64
  %50 = sub i64 %48, %49
  %51 = load %struct.vpath*, %struct.vpath** %11, align 8
  %52 = getelementptr inbounds %struct.vpath, %struct.vpath* %51, i32 0, i32 2
  %53 = load i8*, i8** %52, align 8
  %54 = load %struct.vpath*, %struct.vpath** %11, align 8
  %55 = getelementptr inbounds %struct.vpath, %struct.vpath* %54, i32 0, i32 1
  %56 = load i8*, i8** %55, align 8
  %57 = ptrtoint i8* %53 to i64
  %58 = ptrtoint i8* %56 to i64
  %59 = sub i64 %57, %58
  %60 = icmp eq i64 %50, %59
  br i1 %60, label %61, label %115

61:                                               ; preds = %45, %40
  %62 = load i8*, i8** %3, align 8
  %63 = load %struct.vpath*, %struct.vpath** %11, align 8
  %64 = getelementptr inbounds %struct.vpath, %struct.vpath* %63, i32 0, i32 1
  %65 = load i8*, i8** %64, align 8
  %66 = icmp eq i8* %62, %65
  br i1 %66, label %91, label %67

67:                                               ; preds = %61
  %68 = load i8*, i8** %3, align 8
  %69 = load i8, i8* %68, align 1
  %70 = sext i8 %69 to i32
  %71 = load %struct.vpath*, %struct.vpath** %11, align 8
  %72 = getelementptr inbounds %struct.vpath, %struct.vpath* %71, i32 0, i32 1
  %73 = load i8*, i8** %72, align 8
  %74 = load i8, i8* %73, align 1
  %75 = sext i8 %74 to i32
  %76 = icmp eq i32 %70, %75
  br i1 %76, label %77, label %115

77:                                               ; preds = %67
  %78 = load i8*, i8** %3, align 8
  %79 = load i8, i8* %78, align 1
  %80 = sext i8 %79 to i32
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %91, label %82

82:                                               ; preds = %77
  %83 = load i8*, i8** %3, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 1
  %85 = load %struct.vpath*, %struct.vpath** %11, align 8
  %86 = getelementptr inbounds %struct.vpath, %struct.vpath* %85, i32 0, i32 1
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 1
  %89 = call i32 @strcmp(i8* %84, i8* %88) #9
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %115, label %91

91:                                               ; preds = %82, %77, %61, %34
  %92 = load %struct.vpath*, %struct.vpath** %12, align 8
  %93 = load %struct.vpath*, %struct.vpath** @vpaths, align 8
  %94 = icmp eq %struct.vpath* %92, %93
  br i1 %94, label %95, label %99

95:                                               ; preds = %91
  %96 = load %struct.vpath*, %struct.vpath** %11, align 8
  %97 = getelementptr inbounds %struct.vpath, %struct.vpath* %96, i32 0, i32 0
  %98 = load %struct.vpath*, %struct.vpath** %97, align 8
  store %struct.vpath* %98, %struct.vpath** @vpaths, align 8
  br label %105

99:                                               ; preds = %91
  %100 = load %struct.vpath*, %struct.vpath** %11, align 8
  %101 = getelementptr inbounds %struct.vpath, %struct.vpath* %100, i32 0, i32 0
  %102 = load %struct.vpath*, %struct.vpath** %101, align 8
  %103 = load %struct.vpath*, %struct.vpath** %12, align 8
  %104 = getelementptr inbounds %struct.vpath, %struct.vpath* %103, i32 0, i32 0
  store %struct.vpath* %102, %struct.vpath** %104, align 8
  br label %105

105:                                              ; preds = %99, %95
  %106 = load %struct.vpath*, %struct.vpath** %11, align 8
  %107 = getelementptr inbounds %struct.vpath, %struct.vpath* %106, i32 0, i32 1
  %108 = load i8*, i8** %107, align 8
  call void @free(i8* %108) #10
  %109 = load %struct.vpath*, %struct.vpath** %11, align 8
  %110 = getelementptr inbounds %struct.vpath, %struct.vpath* %109, i32 0, i32 4
  %111 = load i8**, i8*** %110, align 8
  %112 = bitcast i8** %111 to i8*
  call void @free(i8* %112) #10
  %113 = load %struct.vpath*, %struct.vpath** %11, align 8
  %114 = bitcast %struct.vpath* %113 to i8*
  call void @free(i8* %114) #10
  br label %115

115:                                              ; preds = %105, %82, %67, %45
  br label %116

116:                                              ; preds = %115
  %117 = load %struct.vpath*, %struct.vpath** %11, align 8
  store %struct.vpath* %117, %struct.vpath** %12, align 8
  %118 = load %struct.vpath*, %struct.vpath** %11, align 8
  %119 = getelementptr inbounds %struct.vpath, %struct.vpath* %118, i32 0, i32 0
  %120 = load %struct.vpath*, %struct.vpath** %119, align 8
  store %struct.vpath* %120, %struct.vpath** %11, align 8
  br label %31

121:                                              ; preds = %31
  %122 = load i8*, i8** %3, align 8
  %123 = icmp ne i8* %122, null
  br i1 %123, label %124, label %126

124:                                              ; preds = %121
  %125 = load i8*, i8** %3, align 8
  call void @free(i8* %125) #10
  br label %126

126:                                              ; preds = %124, %121
  br label %304

127:                                              ; preds = %25
  %128 = load i8*, i8** %4, align 8
  store i8* %128, i8** %6, align 8
  br label %129

129:                                              ; preds = %134, %127
  %130 = load i8*, i8** %6, align 8
  %131 = load i8, i8* %130, align 1
  %132 = sext i8 %131 to i32
  %133 = icmp eq i32 %132, 58
  br i1 %133, label %134, label %137

134:                                              ; preds = %129
  %135 = load i8*, i8** %6, align 8
  %136 = getelementptr inbounds i8, i8* %135, i32 1
  store i8* %136, i8** %6, align 8
  br label %129

137:                                              ; preds = %129
  store i32 2, i32* %9, align 4
  br label %138

138:                                              ; preds = %152, %137
  %139 = load i8*, i8** %6, align 8
  %140 = load i8, i8* %139, align 1
  %141 = sext i8 %140 to i32
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %143, label %153

143:                                              ; preds = %138
  %144 = load i8*, i8** %6, align 8
  %145 = getelementptr inbounds i8, i8* %144, i32 1
  store i8* %145, i8** %6, align 8
  %146 = load i8, i8* %144, align 1
  %147 = sext i8 %146 to i32
  %148 = icmp eq i32 %147, 58
  br i1 %148, label %149, label %152

149:                                              ; preds = %143
  %150 = load i32, i32* %9, align 4
  %151 = add i32 %150, 1
  store i32 %151, i32* %9, align 4
  br label %152

152:                                              ; preds = %149, %143
  br label %138

153:                                              ; preds = %138
  %154 = load i32, i32* %9, align 4
  %155 = zext i32 %154 to i64
  %156 = mul i64 %155, 8
  %157 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 %156)
  %158 = bitcast i8* %157 to i8**
  store i8** %158, i8*** %7, align 8
  store i32 0, i32* %8, align 4
  store i32 0, i32* %5, align 4
  %159 = load i8*, i8** %4, align 8
  store i8* %159, i8** %6, align 8
  br label %160

160:                                              ; preds = %255, %230, %153
  %161 = load i8*, i8** %6, align 8
  %162 = load i8, i8* %161, align 1
  %163 = sext i8 %162 to i32
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %165, label %256

165:                                              ; preds = %160
  br label %166

166:                                              ; preds = %178, %165
  %167 = load i8*, i8** %6, align 8
  %168 = load i8, i8* %167, align 1
  %169 = sext i8 %168 to i32
  %170 = icmp ne i32 %169, 0
  br i1 %170, label %171, label %176

171:                                              ; preds = %166
  %172 = load i8*, i8** %6, align 8
  %173 = load i8, i8* %172, align 1
  %174 = sext i8 %173 to i32
  %175 = icmp eq i32 %174, 58
  br label %176

176:                                              ; preds = %171, %166
  %177 = phi i1 [ false, %166 ], [ %175, %171 ]
  br i1 %177, label %178, label %181

178:                                              ; preds = %176
  %179 = load i8*, i8** %6, align 8
  %180 = getelementptr inbounds i8, i8* %179, i32 1
  store i8* %180, i8** %6, align 8
  br label %166

181:                                              ; preds = %176
  %182 = load i8*, i8** %6, align 8
  %183 = load i8, i8* %182, align 1
  %184 = sext i8 %183 to i32
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %181
  br label %256

187:                                              ; preds = %181
  %188 = load i8*, i8** %6, align 8
  store i8* %188, i8** %13, align 8
  br label %189

189:                                              ; preds = %201, %187
  %190 = load i8*, i8** %6, align 8
  %191 = load i8, i8* %190, align 1
  %192 = sext i8 %191 to i32
  %193 = icmp ne i32 %192, 0
  br i1 %193, label %194, label %199

194:                                              ; preds = %189
  %195 = load i8*, i8** %6, align 8
  %196 = load i8, i8* %195, align 1
  %197 = sext i8 %196 to i32
  %198 = icmp ne i32 %197, 58
  br label %199

199:                                              ; preds = %194, %189
  %200 = phi i1 [ false, %189 ], [ %198, %194 ]
  br i1 %200, label %201, label %204

201:                                              ; preds = %199
  %202 = load i8*, i8** %6, align 8
  %203 = getelementptr inbounds i8, i8* %202, i32 1
  store i8* %203, i8** %6, align 8
  br label %189

204:                                              ; preds = %199
  %205 = load i8*, i8** %6, align 8
  %206 = load i8*, i8** %13, align 8
  %207 = ptrtoint i8* %205 to i64
  %208 = ptrtoint i8* %206 to i64
  %209 = sub i64 %207, %208
  %210 = trunc i64 %209 to i32
  store i32 %210, i32* %14, align 4
  %211 = load i32, i32* %14, align 4
  %212 = icmp ugt i32 %211, 1
  br i1 %212, label %213, label %222

213:                                              ; preds = %204
  %214 = load i8*, i8** %6, align 8
  %215 = getelementptr inbounds i8, i8* %214, i64 -1
  %216 = load i8, i8* %215, align 1
  %217 = sext i8 %216 to i32
  %218 = icmp eq i32 %217, 47
  br i1 %218, label %219, label %222

219:                                              ; preds = %213
  %220 = load i32, i32* %14, align 4
  %221 = add i32 %220, -1
  store i32 %221, i32* %14, align 4
  br label %222

222:                                              ; preds = %219, %213, %204
  %223 = load i32, i32* %14, align 4
  %224 = icmp eq i32 %223, 1
  br i1 %224, label %225, label %231

225:                                              ; preds = %222
  %226 = load i8*, i8** %13, align 8
  %227 = load i8, i8* %226, align 1
  %228 = sext i8 %227 to i32
  %229 = icmp eq i32 %228, 46
  br i1 %229, label %230, label %231

230:                                              ; preds = %225
  br label %160

231:                                              ; preds = %225, %222
  %232 = load i8*, i8** %13, align 8
  %233 = load i32, i32* %14, align 4
  %234 = call i8* (i8*, i32, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i32, ...)*)(i8* %232, i32 %233)
  store i8* %234, i8** %13, align 8
  %235 = load i8*, i8** %13, align 8
  %236 = call i32 (i8*, i8*, ...) bitcast (i32 (i8*, i8*)* @dir_file_exists_p to i32 (i8*, i8*, ...)*)(i8* %235, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.725, i64 0, i64 0))
  %237 = icmp ne i32 %236, 0
  br i1 %237, label %238, label %253

238:                                              ; preds = %231
  %239 = load i8*, i8** %13, align 8
  %240 = call i8* (i8*, ...) bitcast (i8* (i8*)* @dir_name to i8* (i8*, ...)*)(i8* %239)
  %241 = load i8**, i8*** %7, align 8
  %242 = load i32, i32* %5, align 4
  %243 = add i32 %242, 1
  store i32 %243, i32* %5, align 4
  %244 = zext i32 %242 to i64
  %245 = getelementptr inbounds i8*, i8** %241, i64 %244
  store i8* %240, i8** %245, align 8
  %246 = load i8*, i8** %13, align 8
  call void @free(i8* %246) #10
  %247 = load i32, i32* %14, align 4
  %248 = load i32, i32* %8, align 4
  %249 = icmp ugt i32 %247, %248
  br i1 %249, label %250, label %252

250:                                              ; preds = %238
  %251 = load i32, i32* %14, align 4
  store i32 %251, i32* %8, align 4
  br label %252

252:                                              ; preds = %250, %238
  br label %255

253:                                              ; preds = %231
  %254 = load i8*, i8** %13, align 8
  call void @free(i8* %254) #10
  br label %255

255:                                              ; preds = %253, %252
  br label %160

256:                                              ; preds = %186, %160
  %257 = load i32, i32* %5, align 4
  %258 = icmp ugt i32 %257, 0
  br i1 %258, label %259, label %301

259:                                              ; preds = %256
  %260 = load i32, i32* %5, align 4
  %261 = load i32, i32* %9, align 4
  %262 = sub i32 %261, 1
  %263 = icmp ult i32 %260, %262
  br i1 %263, label %264, label %273

264:                                              ; preds = %259
  %265 = load i8**, i8*** %7, align 8
  %266 = bitcast i8** %265 to i8*
  %267 = load i32, i32* %5, align 4
  %268 = add i32 %267, 1
  %269 = zext i32 %268 to i64
  %270 = mul i64 %269, 8
  %271 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @xrealloc to i8* (i8*, i64, ...)*)(i8* %266, i64 %270)
  %272 = bitcast i8* %271 to i8**
  store i8** %272, i8*** %7, align 8
  br label %273

273:                                              ; preds = %264, %259
  %274 = load i8**, i8*** %7, align 8
  %275 = load i32, i32* %5, align 4
  %276 = zext i32 %275 to i64
  %277 = getelementptr inbounds i8*, i8** %274, i64 %276
  store i8* null, i8** %277, align 8
  %278 = call i8* (i64, ...) bitcast (i8* (i32)* @xmalloc to i8* (i64, ...)*)(i64 48)
  %279 = bitcast i8* %278 to %struct.vpath*
  store %struct.vpath* %279, %struct.vpath** %15, align 8
  %280 = load i8**, i8*** %7, align 8
  %281 = load %struct.vpath*, %struct.vpath** %15, align 8
  %282 = getelementptr inbounds %struct.vpath, %struct.vpath* %281, i32 0, i32 4
  store i8** %280, i8*** %282, align 8
  %283 = load i32, i32* %8, align 4
  %284 = load %struct.vpath*, %struct.vpath** %15, align 8
  %285 = getelementptr inbounds %struct.vpath, %struct.vpath* %284, i32 0, i32 5
  store i32 %283, i32* %285, align 8
  %286 = load %struct.vpath*, %struct.vpath** @vpaths, align 8
  %287 = load %struct.vpath*, %struct.vpath** %15, align 8
  %288 = getelementptr inbounds %struct.vpath, %struct.vpath* %287, i32 0, i32 0
  store %struct.vpath* %286, %struct.vpath** %288, align 8
  %289 = load %struct.vpath*, %struct.vpath** %15, align 8
  store %struct.vpath* %289, %struct.vpath** @vpaths, align 8
  %290 = load i8*, i8** %3, align 8
  %291 = load %struct.vpath*, %struct.vpath** %15, align 8
  %292 = getelementptr inbounds %struct.vpath, %struct.vpath* %291, i32 0, i32 1
  store i8* %290, i8** %292, align 8
  %293 = load i8*, i8** %10, align 8
  %294 = load %struct.vpath*, %struct.vpath** %15, align 8
  %295 = getelementptr inbounds %struct.vpath, %struct.vpath* %294, i32 0, i32 2
  store i8* %293, i8** %295, align 8
  %296 = load i8*, i8** %3, align 8
  %297 = call i64 @strlen(i8* %296) #9
  %298 = trunc i64 %297 to i32
  %299 = load %struct.vpath*, %struct.vpath** %15, align 8
  %300 = getelementptr inbounds %struct.vpath, %struct.vpath* %299, i32 0, i32 3
  store i32 %298, i32* %300, align 8
  br label %304

301:                                              ; preds = %256
  %302 = load i8**, i8*** %7, align 8
  %303 = bitcast i8** %302 to i8*
  call void @free(i8* %303) #10
  br label %304

304:                                              ; preds = %301, %273, %126
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @vpath_search(i8** %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8**, align 8
  %4 = alloca %struct.vpath*, align 8
  store i8** %0, i8*** %3, align 8
  %5 = load i8**, i8*** %3, align 8
  %6 = load i8*, i8** %5, align 8
  %7 = load i8, i8* %6, align 1
  %8 = sext i8 %7 to i32
  %9 = icmp eq i32 %8, 47
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = load %struct.vpath*, %struct.vpath** @vpaths, align 8
  %12 = icmp eq %struct.vpath* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %10
  %14 = load %struct.vpath*, %struct.vpath** @general_vpath, align 8
  %15 = icmp eq %struct.vpath* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %13, %1
  store i32 0, i32* %2, align 4
  br label %55

17:                                               ; preds = %13, %10
  %18 = load %struct.vpath*, %struct.vpath** @vpaths, align 8
  store %struct.vpath* %18, %struct.vpath** %4, align 8
  br label %19

19:                                               ; preds = %41, %17
  %20 = load %struct.vpath*, %struct.vpath** %4, align 8
  %21 = icmp ne %struct.vpath* %20, null
  br i1 %21, label %22, label %45

22:                                               ; preds = %19
  %23 = load %struct.vpath*, %struct.vpath** %4, align 8
  %24 = getelementptr inbounds %struct.vpath, %struct.vpath* %23, i32 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = load %struct.vpath*, %struct.vpath** %4, align 8
  %27 = getelementptr inbounds %struct.vpath, %struct.vpath* %26, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = load i8**, i8*** %3, align 8
  %30 = load i8*, i8** %29, align 8
  %31 = call i32 (i8*, i8*, i8*, ...) bitcast (i32 (i8*, i8*, i8*)* @pattern_matches to i32 (i8*, i8*, i8*, ...)*)(i8* %25, i8* %28, i8* %30)
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %40

33:                                               ; preds = %22
  %34 = load %struct.vpath*, %struct.vpath** %4, align 8
  %35 = load i8**, i8*** %3, align 8
  %36 = call i32 @selective_vpath_search(%struct.vpath* %34, i8** %35)
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %33
  store i32 1, i32* %2, align 4
  br label %55

39:                                               ; preds = %33
  br label %40

40:                                               ; preds = %39, %22
  br label %41

41:                                               ; preds = %40
  %42 = load %struct.vpath*, %struct.vpath** %4, align 8
  %43 = getelementptr inbounds %struct.vpath, %struct.vpath* %42, i32 0, i32 0
  %44 = load %struct.vpath*, %struct.vpath** %43, align 8
  store %struct.vpath* %44, %struct.vpath** %4, align 8
  br label %19

45:                                               ; preds = %19
  %46 = load %struct.vpath*, %struct.vpath** @general_vpath, align 8
  %47 = icmp ne %struct.vpath* %46, null
  br i1 %47, label %48, label %54

48:                                               ; preds = %45
  %49 = load %struct.vpath*, %struct.vpath** @general_vpath, align 8
  %50 = load i8**, i8*** %3, align 8
  %51 = call i32 @selective_vpath_search(%struct.vpath* %49, i8** %50)
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %48
  store i32 1, i32* %2, align 4
  br label %55

54:                                               ; preds = %48, %45
  store i32 0, i32* %2, align 4
  br label %55

55:                                               ; preds = %54, %53, %38, %16
  %56 = load i32, i32* %2, align 4
  ret i32 %56
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @selective_vpath_search(%struct.vpath* %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.vpath*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.file*, align 8
  store %struct.vpath* %0, %struct.vpath** %4, align 8
  store i8** %1, i8*** %5, align 8
  %18 = load %struct.vpath*, %struct.vpath** %4, align 8
  %19 = getelementptr inbounds %struct.vpath, %struct.vpath* %18, i32 0, i32 4
  %20 = load i8**, i8*** %19, align 8
  store i8** %20, i8*** %10, align 8
  %21 = load %struct.vpath*, %struct.vpath** %4, align 8
  %22 = getelementptr inbounds %struct.vpath, %struct.vpath* %21, i32 0, i32 5
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %11, align 4
  store i32 0, i32* %16, align 4
  %24 = load i8**, i8*** %5, align 8
  %25 = load i8*, i8** %24, align 8
  %26 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @lookup_file to %struct.file* (i8*, ...)*)(i8* %25)
  store %struct.file* %26, %struct.file** %17, align 8
  %27 = load %struct.file*, %struct.file** %17, align 8
  %28 = icmp eq %struct.file* %27, null
  br i1 %28, label %38, label %29

29:                                               ; preds = %2
  %30 = load %struct.file*, %struct.file** %17, align 8
  %31 = getelementptr inbounds %struct.file, %struct.file* %30, i32 0, i32 12
  %32 = load i16, i16* %31, align 2
  %33 = lshr i16 %32, 7
  %34 = and i16 %33, 1
  %35 = zext i16 %34 to i32
  %36 = icmp ne i32 %35, 0
  %37 = xor i1 %36, true
  br label %38

38:                                               ; preds = %29, %2
  %39 = phi i1 [ true, %2 ], [ %37, %29 ]
  %40 = zext i1 %39 to i32
  store i32 %40, i32* %6, align 4
  %41 = load i8**, i8*** %5, align 8
  %42 = load i8*, i8** %41, align 8
  %43 = call i64 @strlen(i8* %42) #9
  %44 = trunc i64 %43 to i32
  store i32 %44, i32* %13, align 4
  %45 = load i8**, i8*** %5, align 8
  %46 = load i8*, i8** %45, align 8
  %47 = call i8* @strrchr(i8* %46, i32 47) #9
  store i8* %47, i8** %8, align 8
  %48 = load i8*, i8** %8, align 8
  %49 = icmp ne i8* %48, null
  br i1 %49, label %50, label %57

50:                                               ; preds = %38
  %51 = load i8*, i8** %8, align 8
  %52 = load i8**, i8*** %5, align 8
  %53 = load i8*, i8** %52, align 8
  %54 = ptrtoint i8* %51 to i64
  %55 = ptrtoint i8* %53 to i64
  %56 = sub i64 %54, %55
  br label %58

57:                                               ; preds = %38
  br label %58

58:                                               ; preds = %57, %50
  %59 = phi i64 [ %56, %50 ], [ 0, %57 ]
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* %15, align 4
  %61 = load i32, i32* %15, align 4
  %62 = icmp ugt i32 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %58
  %64 = load i8*, i8** %8, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 1
  br label %69

66:                                               ; preds = %58
  %67 = load i8**, i8*** %5, align 8
  %68 = load i8*, i8** %67, align 8
  br label %69

69:                                               ; preds = %66, %63
  %70 = phi i8* [ %65, %63 ], [ %68, %66 ]
  store i8* %70, i8** %9, align 8
  %71 = load i32, i32* %15, align 4
  %72 = icmp ugt i32 %71, 0
  br i1 %72, label %73, label %78

73:                                               ; preds = %69
  %74 = load i32, i32* %15, align 4
  %75 = add i32 %74, 1
  %76 = load i32, i32* %13, align 4
  %77 = sub i32 %76, %75
  store i32 %77, i32* %13, align 4
  br label %78

78:                                               ; preds = %73, %69
  %79 = load i32, i32* %11, align 4
  %80 = add i32 %79, 1
  %81 = load i32, i32* %15, align 4
  %82 = add i32 %80, %81
  %83 = add i32 %82, 1
  %84 = load i32, i32* %13, align 4
  %85 = add i32 %83, %84
  %86 = add i32 %85, 1
  %87 = zext i32 %86 to i64
  %88 = alloca i8, i64 %87, align 16
  store i8* %88, i8** %7, align 8
  store i32 0, i32* %12, align 4
  br label %89

89:                                               ; preds = %191, %78
  %90 = load i8**, i8*** %10, align 8
  %91 = load i32, i32* %12, align 4
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i8*, i8** %90, i64 %92
  %94 = load i8*, i8** %93, align 8
  %95 = icmp ne i8* %94, null
  br i1 %95, label %96, label %194

96:                                               ; preds = %89
  %97 = load i8*, i8** %7, align 8
  store i8* %97, i8** %8, align 8
  %98 = load i8**, i8*** %10, align 8
  %99 = load i32, i32* %12, align 4
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds i8*, i8** %98, i64 %100
  %102 = load i8*, i8** %101, align 8
  %103 = call i64 @strlen(i8* %102) #9
  %104 = trunc i64 %103 to i32
  store i32 %104, i32* %14, align 4
  %105 = load i8*, i8** %8, align 8
  %106 = load i8**, i8*** %10, align 8
  %107 = load i32, i32* %12, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8*, i8** %106, i64 %108
  %110 = load i8*, i8** %109, align 8
  %111 = load i32, i32* %14, align 4
  %112 = zext i32 %111 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %105, i8* align 1 %110, i64 %112, i1 false)
  %113 = load i32, i32* %14, align 4
  %114 = load i8*, i8** %8, align 8
  %115 = zext i32 %113 to i64
  %116 = getelementptr inbounds i8, i8* %114, i64 %115
  store i8* %116, i8** %8, align 8
  %117 = load i32, i32* %15, align 4
  %118 = icmp ugt i32 %117, 0
  br i1 %118, label %119, label %131

119:                                              ; preds = %96
  %120 = load i8*, i8** %8, align 8
  %121 = getelementptr inbounds i8, i8* %120, i32 1
  store i8* %121, i8** %8, align 8
  store i8 47, i8* %120, align 1
  %122 = load i8*, i8** %8, align 8
  %123 = load i8**, i8*** %5, align 8
  %124 = load i8*, i8** %123, align 8
  %125 = load i32, i32* %15, align 4
  %126 = zext i32 %125 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %122, i8* align 1 %124, i64 %126, i1 false)
  %127 = load i32, i32* %15, align 4
  %128 = load i8*, i8** %8, align 8
  %129 = zext i32 %127 to i64
  %130 = getelementptr inbounds i8, i8* %128, i64 %129
  store i8* %130, i8** %8, align 8
  br label %131

131:                                              ; preds = %119, %96
  %132 = load i8*, i8** %8, align 8
  %133 = load i8*, i8** %7, align 8
  %134 = icmp ne i8* %132, %133
  br i1 %134, label %135, label %143

135:                                              ; preds = %131
  %136 = load i8*, i8** %8, align 8
  %137 = getelementptr inbounds i8, i8* %136, i64 -1
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp ne i32 %139, 47
  br i1 %140, label %141, label %143

141:                                              ; preds = %135
  %142 = load i8*, i8** %8, align 8
  store i8 47, i8* %142, align 1
  br label %143

143:                                              ; preds = %141, %135, %131
  %144 = load i8*, i8** %8, align 8
  %145 = getelementptr inbounds i8, i8* %144, i64 1
  %146 = load i8*, i8** %9, align 8
  %147 = load i32, i32* %13, align 4
  %148 = add i32 %147, 1
  %149 = zext i32 %148 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %145, i8* align 1 %146, i64 %149, i1 false)
  %150 = load i32, i32* %6, align 4
  %151 = icmp ne i32 %150, 0
  br i1 %151, label %152, label %157

152:                                              ; preds = %143
  %153 = load i8*, i8** %7, align 8
  %154 = call %struct.file* (i8*, ...) bitcast (%struct.file* (i8*)* @lookup_file to %struct.file* (i8*, ...)*)(i8* %153)
  %155 = icmp ne %struct.file* %154, null
  %156 = zext i1 %155 to i32
  store i32 %156, i32* %16, align 4
  br label %157

157:                                              ; preds = %152, %143
  %158 = load i32, i32* %16, align 4
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %173, label %160

160:                                              ; preds = %157
  %161 = load i8*, i8** %8, align 8
  store i8 0, i8* %161, align 1
  %162 = load i32, i32* %15, align 4
  %163 = icmp ugt i32 %162, 0
  br i1 %163, label %164, label %169

164:                                              ; preds = %160
  %165 = load i8*, i8** %7, align 8
  %166 = call i32 (i8*, i8*, ...) bitcast (i32 (i8*, i8*)* @dir_file_exists_p to i32 (i8*, i8*, ...)*)(i8* %165, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.725, i64 0, i64 0))
  %167 = icmp ne i32 %166, 0
  br i1 %167, label %169, label %168

168:                                              ; preds = %164
  br label %191

169:                                              ; preds = %164, %160
  %170 = load i8*, i8** %7, align 8
  %171 = load i8*, i8** %9, align 8
  %172 = call i32 (i8*, i8*, ...) bitcast (i32 (i8*, i8*)* @dir_file_exists_p to i32 (i8*, i8*, ...)*)(i8* %170, i8* %171)
  store i32 %172, i32* %16, align 4
  br label %173

173:                                              ; preds = %169, %157
  %174 = load i32, i32* %16, align 4
  %175 = icmp ne i32 %174, 0
  br i1 %175, label %176, label %190

176:                                              ; preds = %173
  %177 = load i8*, i8** %8, align 8
  store i8 47, i8* %177, align 1
  %178 = load i8*, i8** %7, align 8
  %179 = load i8*, i8** %8, align 8
  %180 = getelementptr inbounds i8, i8* %179, i64 1
  %181 = load i8*, i8** %7, align 8
  %182 = ptrtoint i8* %180 to i64
  %183 = ptrtoint i8* %181 to i64
  %184 = sub i64 %182, %183
  %185 = load i32, i32* %13, align 4
  %186 = zext i32 %185 to i64
  %187 = add nsw i64 %184, %186
  %188 = call i8* (i8*, i64, ...) bitcast (i8* (i8*, i32)* @savestring to i8* (i8*, i64, ...)*)(i8* %178, i64 %187)
  %189 = load i8**, i8*** %5, align 8
  store i8* %188, i8** %189, align 8
  store i32 1, i32* %3, align 4
  br label %195

190:                                              ; preds = %173
  br label %191

191:                                              ; preds = %190, %168
  %192 = load i32, i32* %12, align 4
  %193 = add i32 %192, 1
  store i32 %193, i32* %12, align 4
  br label %89

194:                                              ; preds = %89
  store i32 0, i32* %3, align 4
  br label %195

195:                                              ; preds = %194, %176
  %196 = load i32, i32* %3, align 4
  ret i32 %196
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @print_vpath_data_base() #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.vpath*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = call i32 @puts(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3.730, i64 0, i64 0))
  store i32 0, i32* %1, align 4
  %7 = load %struct.vpath*, %struct.vpath** @vpaths, align 8
  store %struct.vpath* %7, %struct.vpath** %2, align 8
  br label %8

8:                                                ; preds = %51, %0
  %9 = load %struct.vpath*, %struct.vpath** %2, align 8
  %10 = icmp ne %struct.vpath* %9, null
  br i1 %10, label %11, label %55

11:                                               ; preds = %8
  %12 = load i32, i32* %1, align 4
  %13 = add i32 %12, 1
  store i32 %13, i32* %1, align 4
  %14 = load %struct.vpath*, %struct.vpath** %2, align 8
  %15 = getelementptr inbounds %struct.vpath, %struct.vpath* %14, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.731, i64 0, i64 0), i8* %16)
  store i32 0, i32* %3, align 4
  br label %18

18:                                               ; preds = %47, %11
  %19 = load %struct.vpath*, %struct.vpath** %2, align 8
  %20 = getelementptr inbounds %struct.vpath, %struct.vpath* %19, i32 0, i32 4
  %21 = load i8**, i8*** %20, align 8
  %22 = load i32, i32* %3, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i8*, i8** %21, i64 %23
  %25 = load i8*, i8** %24, align 8
  %26 = icmp ne i8* %25, null
  br i1 %26, label %27, label %50

27:                                               ; preds = %18
  %28 = load %struct.vpath*, %struct.vpath** %2, align 8
  %29 = getelementptr inbounds %struct.vpath, %struct.vpath* %28, i32 0, i32 4
  %30 = load i8**, i8*** %29, align 8
  %31 = load i32, i32* %3, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8*, i8** %30, i64 %32
  %34 = load i8*, i8** %33, align 8
  %35 = load %struct.vpath*, %struct.vpath** %2, align 8
  %36 = getelementptr inbounds %struct.vpath, %struct.vpath* %35, i32 0, i32 4
  %37 = load i8**, i8*** %36, align 8
  %38 = load i32, i32* %3, align 4
  %39 = add i32 %38, 1
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds i8*, i8** %37, i64 %40
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  %44 = zext i1 %43 to i64
  %45 = select i1 %43, i32 10, i32 58
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.732, i64 0, i64 0), i8* %34, i32 %45)
  br label %47

47:                                               ; preds = %27
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  br label %18

50:                                               ; preds = %18
  br label %51

51:                                               ; preds = %50
  %52 = load %struct.vpath*, %struct.vpath** %2, align 8
  %53 = getelementptr inbounds %struct.vpath, %struct.vpath* %52, i32 0, i32 0
  %54 = load %struct.vpath*, %struct.vpath** %53, align 8
  store %struct.vpath* %54, %struct.vpath** %2, align 8
  br label %8

55:                                               ; preds = %8
  %56 = load %struct.vpath*, %struct.vpath** @vpaths, align 8
  %57 = icmp eq %struct.vpath* %56, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %55
  %59 = call i32 @puts(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.733, i64 0, i64 0))
  br label %63

60:                                               ; preds = %55
  %61 = load i32, i32* %1, align 4
  %62 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.734, i64 0, i64 0), i32 %61)
  br label %63

63:                                               ; preds = %60, %58
  %64 = load %struct.vpath*, %struct.vpath** @general_vpath, align 8
  %65 = icmp eq %struct.vpath* %64, null
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  %67 = call i32 @puts(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.8.735, i64 0, i64 0))
  br label %101

68:                                               ; preds = %63
  %69 = load %struct.vpath*, %struct.vpath** @general_vpath, align 8
  %70 = getelementptr inbounds %struct.vpath, %struct.vpath* %69, i32 0, i32 4
  %71 = load i8**, i8*** %70, align 8
  store i8** %71, i8*** %4, align 8
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %73 = call i32 @fputs(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.9.736, i64 0, i64 0), %struct._IO_FILE* %72)
  store i32 0, i32* %5, align 4
  br label %74

74:                                               ; preds = %97, %68
  %75 = load i8**, i8*** %4, align 8
  %76 = load i32, i32* %5, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds i8*, i8** %75, i64 %77
  %79 = load i8*, i8** %78, align 8
  %80 = icmp ne i8* %79, null
  br i1 %80, label %81, label %100

81:                                               ; preds = %74
  %82 = load i8**, i8*** %4, align 8
  %83 = load i32, i32* %5, align 4
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i8*, i8** %82, i64 %84
  %86 = load i8*, i8** %85, align 8
  %87 = load i8**, i8*** %4, align 8
  %88 = load i32, i32* %5, align 4
  %89 = add i32 %88, 1
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds i8*, i8** %87, i64 %90
  %92 = load i8*, i8** %91, align 8
  %93 = icmp eq i8* %92, null
  %94 = zext i1 %93 to i64
  %95 = select i1 %93, i32 10, i32 58
  %96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.732, i64 0, i64 0), i8* %86, i32 %95)
  br label %97

97:                                               ; preds = %81
  %98 = load i32, i32* %5, align 4
  %99 = add i32 %98, 1
  store i32 %99, i32* %5, align 4
  br label %74

100:                                              ; preds = %74
  br label %101

101:                                              ; preds = %100, %66
  ret void
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { nounwind readnone }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind returns_twice }
attributes #14 = { noreturn }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1}

!0 = !{!"Debian clang version 10.0.1-++20200708124224+ef32c611aa2-1~exp1~20200707224822.188 "}
!1 = !{i32 1, !"wchar_size", i32 4}
