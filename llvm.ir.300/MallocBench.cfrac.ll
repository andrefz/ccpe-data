; ModuleID = 'llvm-link'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.precisionType = type { i16, i16, i16, i8, [1 x i16] }
%struct.cacheType = type { %struct.precisionType*, i16 }
%struct.SolnStruc = type { %struct.SolnStruc*, i16*, i16*, i16*, i8* }
%struct.EasEntry = type { i32*, i16* }

@verbose = dso_local global i32 0, align 4
@debug = dso_local global i32 0, align 4
@progName = common dso_local global i8* null, align 8
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [6 x i8] c"f(%u,\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"d) = %9.7f\0A\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"kN = \00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [39 x i8] c"couldn't compute factor base in findk\0A\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"%u: %5.2f\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c" log(k)/2=%5.2f\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"a:k:i:dv\00", align 1
@optarg = external dso_local global i8*, align 8
@.str.8 = private unnamed_addr constant [69 x i8] c"usage: %s [-dv] [-a aborts ] [-k maxk ] [-i maxCount ] n [[ m ] k ]\0A\00", align 1
@optind = external dso_local global i32, align 4
@.str.9 = private unnamed_addr constant [11 x i8] c"maxk = %u\0A\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"k = %u\0A\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"Iterations     : %u\0A\00", align 1
@.str.12 = private unnamed_addr constant [21 x i8] c"Early Aborts   : %u\0A\00", align 1
@.str.13 = private unnamed_addr constant [21 x i8] c"Total Partials : %u\0A\00", align 1
@.str.14 = private unnamed_addr constant [21 x i8] c"Used  Partials : %u\0A\00", align 1
@.str.15 = private unnamed_addr constant [21 x i8] c"Full Solutions : %u\0A\00", align 1
@.str.16 = private unnamed_addr constant [21 x i8] c"Factor Attempts: %u\0A\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c" * \00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.1.20 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@cfracNabort = dso_local global i32 0, align 4
@cfracTsolns = dso_local global i32 0, align 4
@cfracPsolns = dso_local global i32 0, align 4
@cfracT2solns = dso_local global i32 0, align 4
@cfracFsolns = dso_local global i32 0, align 4
@.str.35 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@.str.1.36 = private unnamed_addr constant [3 x i8] c" *\00", align 1
@.str.2.37 = private unnamed_addr constant [4 x i8] c" %u\00", align 1
@.str.3.38 = private unnamed_addr constant [7 x i8] c" %u^%u\00", align 1
@.str.4.41 = private unnamed_addr constant [36 x i8] c" Abort %u on p = %u (>=%u) and q > \00", align 1
@pcfrac_k = internal global i32 1, align 4
@pcfrac_m = internal global i32 0, align 4
@pcfrac_aborts = internal global i32 3, align 4
@.str.5.44 = private unnamed_addr constant [7 x i8] c"pcfrac\00", align 1
@.str.6.45 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.7.46 = private unnamed_addr constant [17 x i8] c"factorBase[%u]: \00", align 1
@.str.8.47 = private unnamed_addr constant [4 x i8] c"%u \00", align 1
@.str.9.48 = private unnamed_addr constant [33 x i8] c"cycle encountered; pick bigger k\00", align 1
@.str.10.49 = private unnamed_addr constant [10 x i8] c"Partial: \00", align 1
@.str.11.50 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.12.51 = private unnamed_addr constant [6 x i8] c" -->\0A\00", align 1
@.str.13.52 = private unnamed_addr constant [10 x i8] c"PartSum: \00", align 1
@.str.14.53 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.15.54 = private unnamed_addr constant [10 x i8] c"Full:    \00", align 1
@.str.16.55 = private unnamed_addr constant [15 x i8] c" -->\0AFullSum: \00", align 1
@.str.17.56 = private unnamed_addr constant [15 x i8] c" -->\0ASquare:  \00", align 1
@.str.18.57 = private unnamed_addr constant [10 x i8] c"x,y:     \00", align 1
@.str.19.58 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.20 = private unnamed_addr constant [30 x i8] c"Error!  Degenerate solution:\0A\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"x,y:   \00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c" \00", align 1
@pzero = dso_local global %struct.precisionType* @pzeroConst, align 8
@pzeroConst = internal global %struct.precisionType { i16 1, i16 1, i16 1, i8 0, [1 x i16] zeroinitializer }, align 2
@pone = dso_local global %struct.precisionType* @poneConst, align 8
@poneConst = internal global %struct.precisionType { i16 1, i16 1, i16 1, i8 0, [1 x i16] [i16 1] }, align 2
@ptwo = dso_local global %struct.precisionType* @ptwoConst, align 8
@ptwoConst = internal global %struct.precisionType { i16 1, i16 1, i16 1, i8 0, [1 x i16] [i16 2] }, align 2
@p_one = dso_local global %struct.precisionType* @p_oneConst, align 8
@p_oneConst = internal global %struct.precisionType { i16 1, i16 1, i16 1, i8 1, [1 x i16] [i16 1] }, align 2
@.str.69 = private unnamed_addr constant [8 x i8] c"pdivmod\00", align 1
@.str.1.70 = private unnamed_addr constant [15 x i8] c"divide by zero\00", align 1
@.str.81 = private unnamed_addr constant [6 x i8] c"picmp\00", align 1
@cmpError = internal global [28 x i8] c"Second arg not single digit\00", align 16
@.str.84 = private unnamed_addr constant [6 x i8] c"pidiv\00", align 1
@.str.1.85 = private unnamed_addr constant [33 x i8] c"divisor too big for single digit\00", align 1
@.str.2.86 = private unnamed_addr constant [15 x i8] c"divide by zero\00", align 1
@.str.89 = private unnamed_addr constant [6 x i8] c"pimod\00", align 1
@.str.1.90 = private unnamed_addr constant [33 x i8] c"divisor too big for single digit\00", align 1
@.str.2.91 = private unnamed_addr constant [15 x i8] c"divide by zero\00", align 1
@pcache = common dso_local global [32 x %struct.cacheType] zeroinitializer, align 16
@.str.104 = private unnamed_addr constant [7 x i8] c"palloc\00", align 1
@.str.1.105 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.2.108 = private unnamed_addr constant [5 x i8] c"pset\00", align 1
@.str.3.109 = private unnamed_addr constant [16 x i8] c"lvalue is pNull\00", align 1
@.str.4.110 = private unnamed_addr constant [18 x i8] c"invalid precision\00", align 1
@.str.5.111 = private unnamed_addr constant [6 x i8] c"pparm\00", align 1
@.str.6.112 = private unnamed_addr constant [28 x i8] c"undefined function argument\00", align 1
@primesize = dso_local global i32 6542, align 4
@primes = dso_local global [6543 x i16] [i16 2, i16 3, i16 5, i16 7, i16 11, i16 13, i16 17, i16 19, i16 23, i16 29, i16 31, i16 37, i16 41, i16 43, i16 47, i16 53, i16 59, i16 61, i16 67, i16 71, i16 73, i16 79, i16 83, i16 89, i16 97, i16 101, i16 103, i16 107, i16 109, i16 113, i16 127, i16 131, i16 137, i16 139, i16 149, i16 151, i16 157, i16 163, i16 167, i16 173, i16 179, i16 181, i16 191, i16 193, i16 197, i16 199, i16 211, i16 223, i16 227, i16 229, i16 233, i16 239, i16 241, i16 251, i16 257, i16 263, i16 269, i16 271, i16 277, i16 281, i16 283, i16 293, i16 307, i16 311, i16 313, i16 317, i16 331, i16 337, i16 347, i16 349, i16 353, i16 359, i16 367, i16 373, i16 379, i16 383, i16 389, i16 397, i16 401, i16 409, i16 419, i16 421, i16 431, i16 433, i16 439, i16 443, i16 449, i16 457, i16 461, i16 463, i16 467, i16 479, i16 487, i16 491, i16 499, i16 503, i16 509, i16 521, i16 523, i16 541, i16 547, i16 557, i16 563, i16 569, i16 571, i16 577, i16 587, i16 593, i16 599, i16 601, i16 607, i16 613, i16 617, i16 619, i16 631, i16 641, i16 643, i16 647, i16 653, i16 659, i16 661, i16 673, i16 677, i16 683, i16 691, i16 701, i16 709, i16 719, i16 727, i16 733, i16 739, i16 743, i16 751, i16 757, i16 761, i16 769, i16 773, i16 787, i16 797, i16 809, i16 811, i16 821, i16 823, i16 827, i16 829, i16 839, i16 853, i16 857, i16 859, i16 863, i16 877, i16 881, i16 883, i16 887, i16 907, i16 911, i16 919, i16 929, i16 937, i16 941, i16 947, i16 953, i16 967, i16 971, i16 977, i16 983, i16 991, i16 997, i16 1009, i16 1013, i16 1019, i16 1021, i16 1031, i16 1033, i16 1039, i16 1049, i16 1051, i16 1061, i16 1063, i16 1069, i16 1087, i16 1091, i16 1093, i16 1097, i16 1103, i16 1109, i16 1117, i16 1123, i16 1129, i16 1151, i16 1153, i16 1163, i16 1171, i16 1181, i16 1187, i16 1193, i16 1201, i16 1213, i16 1217, i16 1223, i16 1229, i16 1231, i16 1237, i16 1249, i16 1259, i16 1277, i16 1279, i16 1283, i16 1289, i16 1291, i16 1297, i16 1301, i16 1303, i16 1307, i16 1319, i16 1321, i16 1327, i16 1361, i16 1367, i16 1373, i16 1381, i16 1399, i16 1409, i16 1423, i16 1427, i16 1429, i16 1433, i16 1439, i16 1447, i16 1451, i16 1453, i16 1459, i16 1471, i16 1481, i16 1483, i16 1487, i16 1489, i16 1493, i16 1499, i16 1511, i16 1523, i16 1531, i16 1543, i16 1549, i16 1553, i16 1559, i16 1567, i16 1571, i16 1579, i16 1583, i16 1597, i16 1601, i16 1607, i16 1609, i16 1613, i16 1619, i16 1621, i16 1627, i16 1637, i16 1657, i16 1663, i16 1667, i16 1669, i16 1693, i16 1697, i16 1699, i16 1709, i16 1721, i16 1723, i16 1733, i16 1741, i16 1747, i16 1753, i16 1759, i16 1777, i16 1783, i16 1787, i16 1789, i16 1801, i16 1811, i16 1823, i16 1831, i16 1847, i16 1861, i16 1867, i16 1871, i16 1873, i16 1877, i16 1879, i16 1889, i16 1901, i16 1907, i16 1913, i16 1931, i16 1933, i16 1949, i16 1951, i16 1973, i16 1979, i16 1987, i16 1993, i16 1997, i16 1999, i16 2003, i16 2011, i16 2017, i16 2027, i16 2029, i16 2039, i16 2053, i16 2063, i16 2069, i16 2081, i16 2083, i16 2087, i16 2089, i16 2099, i16 2111, i16 2113, i16 2129, i16 2131, i16 2137, i16 2141, i16 2143, i16 2153, i16 2161, i16 2179, i16 2203, i16 2207, i16 2213, i16 2221, i16 2237, i16 2239, i16 2243, i16 2251, i16 2267, i16 2269, i16 2273, i16 2281, i16 2287, i16 2293, i16 2297, i16 2309, i16 2311, i16 2333, i16 2339, i16 2341, i16 2347, i16 2351, i16 2357, i16 2371, i16 2377, i16 2381, i16 2383, i16 2389, i16 2393, i16 2399, i16 2411, i16 2417, i16 2423, i16 2437, i16 2441, i16 2447, i16 2459, i16 2467, i16 2473, i16 2477, i16 2503, i16 2521, i16 2531, i16 2539, i16 2543, i16 2549, i16 2551, i16 2557, i16 2579, i16 2591, i16 2593, i16 2609, i16 2617, i16 2621, i16 2633, i16 2647, i16 2657, i16 2659, i16 2663, i16 2671, i16 2677, i16 2683, i16 2687, i16 2689, i16 2693, i16 2699, i16 2707, i16 2711, i16 2713, i16 2719, i16 2729, i16 2731, i16 2741, i16 2749, i16 2753, i16 2767, i16 2777, i16 2789, i16 2791, i16 2797, i16 2801, i16 2803, i16 2819, i16 2833, i16 2837, i16 2843, i16 2851, i16 2857, i16 2861, i16 2879, i16 2887, i16 2897, i16 2903, i16 2909, i16 2917, i16 2927, i16 2939, i16 2953, i16 2957, i16 2963, i16 2969, i16 2971, i16 2999, i16 3001, i16 3011, i16 3019, i16 3023, i16 3037, i16 3041, i16 3049, i16 3061, i16 3067, i16 3079, i16 3083, i16 3089, i16 3109, i16 3119, i16 3121, i16 3137, i16 3163, i16 3167, i16 3169, i16 3181, i16 3187, i16 3191, i16 3203, i16 3209, i16 3217, i16 3221, i16 3229, i16 3251, i16 3253, i16 3257, i16 3259, i16 3271, i16 3299, i16 3301, i16 3307, i16 3313, i16 3319, i16 3323, i16 3329, i16 3331, i16 3343, i16 3347, i16 3359, i16 3361, i16 3371, i16 3373, i16 3389, i16 3391, i16 3407, i16 3413, i16 3433, i16 3449, i16 3457, i16 3461, i16 3463, i16 3467, i16 3469, i16 3491, i16 3499, i16 3511, i16 3517, i16 3527, i16 3529, i16 3533, i16 3539, i16 3541, i16 3547, i16 3557, i16 3559, i16 3571, i16 3581, i16 3583, i16 3593, i16 3607, i16 3613, i16 3617, i16 3623, i16 3631, i16 3637, i16 3643, i16 3659, i16 3671, i16 3673, i16 3677, i16 3691, i16 3697, i16 3701, i16 3709, i16 3719, i16 3727, i16 3733, i16 3739, i16 3761, i16 3767, i16 3769, i16 3779, i16 3793, i16 3797, i16 3803, i16 3821, i16 3823, i16 3833, i16 3847, i16 3851, i16 3853, i16 3863, i16 3877, i16 3881, i16 3889, i16 3907, i16 3911, i16 3917, i16 3919, i16 3923, i16 3929, i16 3931, i16 3943, i16 3947, i16 3967, i16 3989, i16 4001, i16 4003, i16 4007, i16 4013, i16 4019, i16 4021, i16 4027, i16 4049, i16 4051, i16 4057, i16 4073, i16 4079, i16 4091, i16 4093, i16 4099, i16 4111, i16 4127, i16 4129, i16 4133, i16 4139, i16 4153, i16 4157, i16 4159, i16 4177, i16 4201, i16 4211, i16 4217, i16 4219, i16 4229, i16 4231, i16 4241, i16 4243, i16 4253, i16 4259, i16 4261, i16 4271, i16 4273, i16 4283, i16 4289, i16 4297, i16 4327, i16 4337, i16 4339, i16 4349, i16 4357, i16 4363, i16 4373, i16 4391, i16 4397, i16 4409, i16 4421, i16 4423, i16 4441, i16 4447, i16 4451, i16 4457, i16 4463, i16 4481, i16 4483, i16 4493, i16 4507, i16 4513, i16 4517, i16 4519, i16 4523, i16 4547, i16 4549, i16 4561, i16 4567, i16 4583, i16 4591, i16 4597, i16 4603, i16 4621, i16 4637, i16 4639, i16 4643, i16 4649, i16 4651, i16 4657, i16 4663, i16 4673, i16 4679, i16 4691, i16 4703, i16 4721, i16 4723, i16 4729, i16 4733, i16 4751, i16 4759, i16 4783, i16 4787, i16 4789, i16 4793, i16 4799, i16 4801, i16 4813, i16 4817, i16 4831, i16 4861, i16 4871, i16 4877, i16 4889, i16 4903, i16 4909, i16 4919, i16 4931, i16 4933, i16 4937, i16 4943, i16 4951, i16 4957, i16 4967, i16 4969, i16 4973, i16 4987, i16 4993, i16 4999, i16 5003, i16 5009, i16 5011, i16 5021, i16 5023, i16 5039, i16 5051, i16 5059, i16 5077, i16 5081, i16 5087, i16 5099, i16 5101, i16 5107, i16 5113, i16 5119, i16 5147, i16 5153, i16 5167, i16 5171, i16 5179, i16 5189, i16 5197, i16 5209, i16 5227, i16 5231, i16 5233, i16 5237, i16 5261, i16 5273, i16 5279, i16 5281, i16 5297, i16 5303, i16 5309, i16 5323, i16 5333, i16 5347, i16 5351, i16 5381, i16 5387, i16 5393, i16 5399, i16 5407, i16 5413, i16 5417, i16 5419, i16 5431, i16 5437, i16 5441, i16 5443, i16 5449, i16 5471, i16 5477, i16 5479, i16 5483, i16 5501, i16 5503, i16 5507, i16 5519, i16 5521, i16 5527, i16 5531, i16 5557, i16 5563, i16 5569, i16 5573, i16 5581, i16 5591, i16 5623, i16 5639, i16 5641, i16 5647, i16 5651, i16 5653, i16 5657, i16 5659, i16 5669, i16 5683, i16 5689, i16 5693, i16 5701, i16 5711, i16 5717, i16 5737, i16 5741, i16 5743, i16 5749, i16 5779, i16 5783, i16 5791, i16 5801, i16 5807, i16 5813, i16 5821, i16 5827, i16 5839, i16 5843, i16 5849, i16 5851, i16 5857, i16 5861, i16 5867, i16 5869, i16 5879, i16 5881, i16 5897, i16 5903, i16 5923, i16 5927, i16 5939, i16 5953, i16 5981, i16 5987, i16 6007, i16 6011, i16 6029, i16 6037, i16 6043, i16 6047, i16 6053, i16 6067, i16 6073, i16 6079, i16 6089, i16 6091, i16 6101, i16 6113, i16 6121, i16 6131, i16 6133, i16 6143, i16 6151, i16 6163, i16 6173, i16 6197, i16 6199, i16 6203, i16 6211, i16 6217, i16 6221, i16 6229, i16 6247, i16 6257, i16 6263, i16 6269, i16 6271, i16 6277, i16 6287, i16 6299, i16 6301, i16 6311, i16 6317, i16 6323, i16 6329, i16 6337, i16 6343, i16 6353, i16 6359, i16 6361, i16 6367, i16 6373, i16 6379, i16 6389, i16 6397, i16 6421, i16 6427, i16 6449, i16 6451, i16 6469, i16 6473, i16 6481, i16 6491, i16 6521, i16 6529, i16 6547, i16 6551, i16 6553, i16 6563, i16 6569, i16 6571, i16 6577, i16 6581, i16 6599, i16 6607, i16 6619, i16 6637, i16 6653, i16 6659, i16 6661, i16 6673, i16 6679, i16 6689, i16 6691, i16 6701, i16 6703, i16 6709, i16 6719, i16 6733, i16 6737, i16 6761, i16 6763, i16 6779, i16 6781, i16 6791, i16 6793, i16 6803, i16 6823, i16 6827, i16 6829, i16 6833, i16 6841, i16 6857, i16 6863, i16 6869, i16 6871, i16 6883, i16 6899, i16 6907, i16 6911, i16 6917, i16 6947, i16 6949, i16 6959, i16 6961, i16 6967, i16 6971, i16 6977, i16 6983, i16 6991, i16 6997, i16 7001, i16 7013, i16 7019, i16 7027, i16 7039, i16 7043, i16 7057, i16 7069, i16 7079, i16 7103, i16 7109, i16 7121, i16 7127, i16 7129, i16 7151, i16 7159, i16 7177, i16 7187, i16 7193, i16 7207, i16 7211, i16 7213, i16 7219, i16 7229, i16 7237, i16 7243, i16 7247, i16 7253, i16 7283, i16 7297, i16 7307, i16 7309, i16 7321, i16 7331, i16 7333, i16 7349, i16 7351, i16 7369, i16 7393, i16 7411, i16 7417, i16 7433, i16 7451, i16 7457, i16 7459, i16 7477, i16 7481, i16 7487, i16 7489, i16 7499, i16 7507, i16 7517, i16 7523, i16 7529, i16 7537, i16 7541, i16 7547, i16 7549, i16 7559, i16 7561, i16 7573, i16 7577, i16 7583, i16 7589, i16 7591, i16 7603, i16 7607, i16 7621, i16 7639, i16 7643, i16 7649, i16 7669, i16 7673, i16 7681, i16 7687, i16 7691, i16 7699, i16 7703, i16 7717, i16 7723, i16 7727, i16 7741, i16 7753, i16 7757, i16 7759, i16 7789, i16 7793, i16 7817, i16 7823, i16 7829, i16 7841, i16 7853, i16 7867, i16 7873, i16 7877, i16 7879, i16 7883, i16 7901, i16 7907, i16 7919, i16 7927, i16 7933, i16 7937, i16 7949, i16 7951, i16 7963, i16 7993, i16 8009, i16 8011, i16 8017, i16 8039, i16 8053, i16 8059, i16 8069, i16 8081, i16 8087, i16 8089, i16 8093, i16 8101, i16 8111, i16 8117, i16 8123, i16 8147, i16 8161, i16 8167, i16 8171, i16 8179, i16 8191, i16 8209, i16 8219, i16 8221, i16 8231, i16 8233, i16 8237, i16 8243, i16 8263, i16 8269, i16 8273, i16 8287, i16 8291, i16 8293, i16 8297, i16 8311, i16 8317, i16 8329, i16 8353, i16 8363, i16 8369, i16 8377, i16 8387, i16 8389, i16 8419, i16 8423, i16 8429, i16 8431, i16 8443, i16 8447, i16 8461, i16 8467, i16 8501, i16 8513, i16 8521, i16 8527, i16 8537, i16 8539, i16 8543, i16 8563, i16 8573, i16 8581, i16 8597, i16 8599, i16 8609, i16 8623, i16 8627, i16 8629, i16 8641, i16 8647, i16 8663, i16 8669, i16 8677, i16 8681, i16 8689, i16 8693, i16 8699, i16 8707, i16 8713, i16 8719, i16 8731, i16 8737, i16 8741, i16 8747, i16 8753, i16 8761, i16 8779, i16 8783, i16 8803, i16 8807, i16 8819, i16 8821, i16 8831, i16 8837, i16 8839, i16 8849, i16 8861, i16 8863, i16 8867, i16 8887, i16 8893, i16 8923, i16 8929, i16 8933, i16 8941, i16 8951, i16 8963, i16 8969, i16 8971, i16 8999, i16 9001, i16 9007, i16 9011, i16 9013, i16 9029, i16 9041, i16 9043, i16 9049, i16 9059, i16 9067, i16 9091, i16 9103, i16 9109, i16 9127, i16 9133, i16 9137, i16 9151, i16 9157, i16 9161, i16 9173, i16 9181, i16 9187, i16 9199, i16 9203, i16 9209, i16 9221, i16 9227, i16 9239, i16 9241, i16 9257, i16 9277, i16 9281, i16 9283, i16 9293, i16 9311, i16 9319, i16 9323, i16 9337, i16 9341, i16 9343, i16 9349, i16 9371, i16 9377, i16 9391, i16 9397, i16 9403, i16 9413, i16 9419, i16 9421, i16 9431, i16 9433, i16 9437, i16 9439, i16 9461, i16 9463, i16 9467, i16 9473, i16 9479, i16 9491, i16 9497, i16 9511, i16 9521, i16 9533, i16 9539, i16 9547, i16 9551, i16 9587, i16 9601, i16 9613, i16 9619, i16 9623, i16 9629, i16 9631, i16 9643, i16 9649, i16 9661, i16 9677, i16 9679, i16 9689, i16 9697, i16 9719, i16 9721, i16 9733, i16 9739, i16 9743, i16 9749, i16 9767, i16 9769, i16 9781, i16 9787, i16 9791, i16 9803, i16 9811, i16 9817, i16 9829, i16 9833, i16 9839, i16 9851, i16 9857, i16 9859, i16 9871, i16 9883, i16 9887, i16 9901, i16 9907, i16 9923, i16 9929, i16 9931, i16 9941, i16 9949, i16 9967, i16 9973, i16 10007, i16 10009, i16 10037, i16 10039, i16 10061, i16 10067, i16 10069, i16 10079, i16 10091, i16 10093, i16 10099, i16 10103, i16 10111, i16 10133, i16 10139, i16 10141, i16 10151, i16 10159, i16 10163, i16 10169, i16 10177, i16 10181, i16 10193, i16 10211, i16 10223, i16 10243, i16 10247, i16 10253, i16 10259, i16 10267, i16 10271, i16 10273, i16 10289, i16 10301, i16 10303, i16 10313, i16 10321, i16 10331, i16 10333, i16 10337, i16 10343, i16 10357, i16 10369, i16 10391, i16 10399, i16 10427, i16 10429, i16 10433, i16 10453, i16 10457, i16 10459, i16 10463, i16 10477, i16 10487, i16 10499, i16 10501, i16 10513, i16 10529, i16 10531, i16 10559, i16 10567, i16 10589, i16 10597, i16 10601, i16 10607, i16 10613, i16 10627, i16 10631, i16 10639, i16 10651, i16 10657, i16 10663, i16 10667, i16 10687, i16 10691, i16 10709, i16 10711, i16 10723, i16 10729, i16 10733, i16 10739, i16 10753, i16 10771, i16 10781, i16 10789, i16 10799, i16 10831, i16 10837, i16 10847, i16 10853, i16 10859, i16 10861, i16 10867, i16 10883, i16 10889, i16 10891, i16 10903, i16 10909, i16 10937, i16 10939, i16 10949, i16 10957, i16 10973, i16 10979, i16 10987, i16 10993, i16 11003, i16 11027, i16 11047, i16 11057, i16 11059, i16 11069, i16 11071, i16 11083, i16 11087, i16 11093, i16 11113, i16 11117, i16 11119, i16 11131, i16 11149, i16 11159, i16 11161, i16 11171, i16 11173, i16 11177, i16 11197, i16 11213, i16 11239, i16 11243, i16 11251, i16 11257, i16 11261, i16 11273, i16 11279, i16 11287, i16 11299, i16 11311, i16 11317, i16 11321, i16 11329, i16 11351, i16 11353, i16 11369, i16 11383, i16 11393, i16 11399, i16 11411, i16 11423, i16 11437, i16 11443, i16 11447, i16 11467, i16 11471, i16 11483, i16 11489, i16 11491, i16 11497, i16 11503, i16 11519, i16 11527, i16 11549, i16 11551, i16 11579, i16 11587, i16 11593, i16 11597, i16 11617, i16 11621, i16 11633, i16 11657, i16 11677, i16 11681, i16 11689, i16 11699, i16 11701, i16 11717, i16 11719, i16 11731, i16 11743, i16 11777, i16 11779, i16 11783, i16 11789, i16 11801, i16 11807, i16 11813, i16 11821, i16 11827, i16 11831, i16 11833, i16 11839, i16 11863, i16 11867, i16 11887, i16 11897, i16 11903, i16 11909, i16 11923, i16 11927, i16 11933, i16 11939, i16 11941, i16 11953, i16 11959, i16 11969, i16 11971, i16 11981, i16 11987, i16 12007, i16 12011, i16 12037, i16 12041, i16 12043, i16 12049, i16 12071, i16 12073, i16 12097, i16 12101, i16 12107, i16 12109, i16 12113, i16 12119, i16 12143, i16 12149, i16 12157, i16 12161, i16 12163, i16 12197, i16 12203, i16 12211, i16 12227, i16 12239, i16 12241, i16 12251, i16 12253, i16 12263, i16 12269, i16 12277, i16 12281, i16 12289, i16 12301, i16 12323, i16 12329, i16 12343, i16 12347, i16 12373, i16 12377, i16 12379, i16 12391, i16 12401, i16 12409, i16 12413, i16 12421, i16 12433, i16 12437, i16 12451, i16 12457, i16 12473, i16 12479, i16 12487, i16 12491, i16 12497, i16 12503, i16 12511, i16 12517, i16 12527, i16 12539, i16 12541, i16 12547, i16 12553, i16 12569, i16 12577, i16 12583, i16 12589, i16 12601, i16 12611, i16 12613, i16 12619, i16 12637, i16 12641, i16 12647, i16 12653, i16 12659, i16 12671, i16 12689, i16 12697, i16 12703, i16 12713, i16 12721, i16 12739, i16 12743, i16 12757, i16 12763, i16 12781, i16 12791, i16 12799, i16 12809, i16 12821, i16 12823, i16 12829, i16 12841, i16 12853, i16 12889, i16 12893, i16 12899, i16 12907, i16 12911, i16 12917, i16 12919, i16 12923, i16 12941, i16 12953, i16 12959, i16 12967, i16 12973, i16 12979, i16 12983, i16 13001, i16 13003, i16 13007, i16 13009, i16 13033, i16 13037, i16 13043, i16 13049, i16 13063, i16 13093, i16 13099, i16 13103, i16 13109, i16 13121, i16 13127, i16 13147, i16 13151, i16 13159, i16 13163, i16 13171, i16 13177, i16 13183, i16 13187, i16 13217, i16 13219, i16 13229, i16 13241, i16 13249, i16 13259, i16 13267, i16 13291, i16 13297, i16 13309, i16 13313, i16 13327, i16 13331, i16 13337, i16 13339, i16 13367, i16 13381, i16 13397, i16 13399, i16 13411, i16 13417, i16 13421, i16 13441, i16 13451, i16 13457, i16 13463, i16 13469, i16 13477, i16 13487, i16 13499, i16 13513, i16 13523, i16 13537, i16 13553, i16 13567, i16 13577, i16 13591, i16 13597, i16 13613, i16 13619, i16 13627, i16 13633, i16 13649, i16 13669, i16 13679, i16 13681, i16 13687, i16 13691, i16 13693, i16 13697, i16 13709, i16 13711, i16 13721, i16 13723, i16 13729, i16 13751, i16 13757, i16 13759, i16 13763, i16 13781, i16 13789, i16 13799, i16 13807, i16 13829, i16 13831, i16 13841, i16 13859, i16 13873, i16 13877, i16 13879, i16 13883, i16 13901, i16 13903, i16 13907, i16 13913, i16 13921, i16 13931, i16 13933, i16 13963, i16 13967, i16 13997, i16 13999, i16 14009, i16 14011, i16 14029, i16 14033, i16 14051, i16 14057, i16 14071, i16 14081, i16 14083, i16 14087, i16 14107, i16 14143, i16 14149, i16 14153, i16 14159, i16 14173, i16 14177, i16 14197, i16 14207, i16 14221, i16 14243, i16 14249, i16 14251, i16 14281, i16 14293, i16 14303, i16 14321, i16 14323, i16 14327, i16 14341, i16 14347, i16 14369, i16 14387, i16 14389, i16 14401, i16 14407, i16 14411, i16 14419, i16 14423, i16 14431, i16 14437, i16 14447, i16 14449, i16 14461, i16 14479, i16 14489, i16 14503, i16 14519, i16 14533, i16 14537, i16 14543, i16 14549, i16 14551, i16 14557, i16 14561, i16 14563, i16 14591, i16 14593, i16 14621, i16 14627, i16 14629, i16 14633, i16 14639, i16 14653, i16 14657, i16 14669, i16 14683, i16 14699, i16 14713, i16 14717, i16 14723, i16 14731, i16 14737, i16 14741, i16 14747, i16 14753, i16 14759, i16 14767, i16 14771, i16 14779, i16 14783, i16 14797, i16 14813, i16 14821, i16 14827, i16 14831, i16 14843, i16 14851, i16 14867, i16 14869, i16 14879, i16 14887, i16 14891, i16 14897, i16 14923, i16 14929, i16 14939, i16 14947, i16 14951, i16 14957, i16 14969, i16 14983, i16 15013, i16 15017, i16 15031, i16 15053, i16 15061, i16 15073, i16 15077, i16 15083, i16 15091, i16 15101, i16 15107, i16 15121, i16 15131, i16 15137, i16 15139, i16 15149, i16 15161, i16 15173, i16 15187, i16 15193, i16 15199, i16 15217, i16 15227, i16 15233, i16 15241, i16 15259, i16 15263, i16 15269, i16 15271, i16 15277, i16 15287, i16 15289, i16 15299, i16 15307, i16 15313, i16 15319, i16 15329, i16 15331, i16 15349, i16 15359, i16 15361, i16 15373, i16 15377, i16 15383, i16 15391, i16 15401, i16 15413, i16 15427, i16 15439, i16 15443, i16 15451, i16 15461, i16 15467, i16 15473, i16 15493, i16 15497, i16 15511, i16 15527, i16 15541, i16 15551, i16 15559, i16 15569, i16 15581, i16 15583, i16 15601, i16 15607, i16 15619, i16 15629, i16 15641, i16 15643, i16 15647, i16 15649, i16 15661, i16 15667, i16 15671, i16 15679, i16 15683, i16 15727, i16 15731, i16 15733, i16 15737, i16 15739, i16 15749, i16 15761, i16 15767, i16 15773, i16 15787, i16 15791, i16 15797, i16 15803, i16 15809, i16 15817, i16 15823, i16 15859, i16 15877, i16 15881, i16 15887, i16 15889, i16 15901, i16 15907, i16 15913, i16 15919, i16 15923, i16 15937, i16 15959, i16 15971, i16 15973, i16 15991, i16 16001, i16 16007, i16 16033, i16 16057, i16 16061, i16 16063, i16 16067, i16 16069, i16 16073, i16 16087, i16 16091, i16 16097, i16 16103, i16 16111, i16 16127, i16 16139, i16 16141, i16 16183, i16 16187, i16 16189, i16 16193, i16 16217, i16 16223, i16 16229, i16 16231, i16 16249, i16 16253, i16 16267, i16 16273, i16 16301, i16 16319, i16 16333, i16 16339, i16 16349, i16 16361, i16 16363, i16 16369, i16 16381, i16 16411, i16 16417, i16 16421, i16 16427, i16 16433, i16 16447, i16 16451, i16 16453, i16 16477, i16 16481, i16 16487, i16 16493, i16 16519, i16 16529, i16 16547, i16 16553, i16 16561, i16 16567, i16 16573, i16 16603, i16 16607, i16 16619, i16 16631, i16 16633, i16 16649, i16 16651, i16 16657, i16 16661, i16 16673, i16 16691, i16 16693, i16 16699, i16 16703, i16 16729, i16 16741, i16 16747, i16 16759, i16 16763, i16 16787, i16 16811, i16 16823, i16 16829, i16 16831, i16 16843, i16 16871, i16 16879, i16 16883, i16 16889, i16 16901, i16 16903, i16 16921, i16 16927, i16 16931, i16 16937, i16 16943, i16 16963, i16 16979, i16 16981, i16 16987, i16 16993, i16 17011, i16 17021, i16 17027, i16 17029, i16 17033, i16 17041, i16 17047, i16 17053, i16 17077, i16 17093, i16 17099, i16 17107, i16 17117, i16 17123, i16 17137, i16 17159, i16 17167, i16 17183, i16 17189, i16 17191, i16 17203, i16 17207, i16 17209, i16 17231, i16 17239, i16 17257, i16 17291, i16 17293, i16 17299, i16 17317, i16 17321, i16 17327, i16 17333, i16 17341, i16 17351, i16 17359, i16 17377, i16 17383, i16 17387, i16 17389, i16 17393, i16 17401, i16 17417, i16 17419, i16 17431, i16 17443, i16 17449, i16 17467, i16 17471, i16 17477, i16 17483, i16 17489, i16 17491, i16 17497, i16 17509, i16 17519, i16 17539, i16 17551, i16 17569, i16 17573, i16 17579, i16 17581, i16 17597, i16 17599, i16 17609, i16 17623, i16 17627, i16 17657, i16 17659, i16 17669, i16 17681, i16 17683, i16 17707, i16 17713, i16 17729, i16 17737, i16 17747, i16 17749, i16 17761, i16 17783, i16 17789, i16 17791, i16 17807, i16 17827, i16 17837, i16 17839, i16 17851, i16 17863, i16 17881, i16 17891, i16 17903, i16 17909, i16 17911, i16 17921, i16 17923, i16 17929, i16 17939, i16 17957, i16 17959, i16 17971, i16 17977, i16 17981, i16 17987, i16 17989, i16 18013, i16 18041, i16 18043, i16 18047, i16 18049, i16 18059, i16 18061, i16 18077, i16 18089, i16 18097, i16 18119, i16 18121, i16 18127, i16 18131, i16 18133, i16 18143, i16 18149, i16 18169, i16 18181, i16 18191, i16 18199, i16 18211, i16 18217, i16 18223, i16 18229, i16 18233, i16 18251, i16 18253, i16 18257, i16 18269, i16 18287, i16 18289, i16 18301, i16 18307, i16 18311, i16 18313, i16 18329, i16 18341, i16 18353, i16 18367, i16 18371, i16 18379, i16 18397, i16 18401, i16 18413, i16 18427, i16 18433, i16 18439, i16 18443, i16 18451, i16 18457, i16 18461, i16 18481, i16 18493, i16 18503, i16 18517, i16 18521, i16 18523, i16 18539, i16 18541, i16 18553, i16 18583, i16 18587, i16 18593, i16 18617, i16 18637, i16 18661, i16 18671, i16 18679, i16 18691, i16 18701, i16 18713, i16 18719, i16 18731, i16 18743, i16 18749, i16 18757, i16 18773, i16 18787, i16 18793, i16 18797, i16 18803, i16 18839, i16 18859, i16 18869, i16 18899, i16 18911, i16 18913, i16 18917, i16 18919, i16 18947, i16 18959, i16 18973, i16 18979, i16 19001, i16 19009, i16 19013, i16 19031, i16 19037, i16 19051, i16 19069, i16 19073, i16 19079, i16 19081, i16 19087, i16 19121, i16 19139, i16 19141, i16 19157, i16 19163, i16 19181, i16 19183, i16 19207, i16 19211, i16 19213, i16 19219, i16 19231, i16 19237, i16 19249, i16 19259, i16 19267, i16 19273, i16 19289, i16 19301, i16 19309, i16 19319, i16 19333, i16 19373, i16 19379, i16 19381, i16 19387, i16 19391, i16 19403, i16 19417, i16 19421, i16 19423, i16 19427, i16 19429, i16 19433, i16 19441, i16 19447, i16 19457, i16 19463, i16 19469, i16 19471, i16 19477, i16 19483, i16 19489, i16 19501, i16 19507, i16 19531, i16 19541, i16 19543, i16 19553, i16 19559, i16 19571, i16 19577, i16 19583, i16 19597, i16 19603, i16 19609, i16 19661, i16 19681, i16 19687, i16 19697, i16 19699, i16 19709, i16 19717, i16 19727, i16 19739, i16 19751, i16 19753, i16 19759, i16 19763, i16 19777, i16 19793, i16 19801, i16 19813, i16 19819, i16 19841, i16 19843, i16 19853, i16 19861, i16 19867, i16 19889, i16 19891, i16 19913, i16 19919, i16 19927, i16 19937, i16 19949, i16 19961, i16 19963, i16 19973, i16 19979, i16 19991, i16 19993, i16 19997, i16 20011, i16 20021, i16 20023, i16 20029, i16 20047, i16 20051, i16 20063, i16 20071, i16 20089, i16 20101, i16 20107, i16 20113, i16 20117, i16 20123, i16 20129, i16 20143, i16 20147, i16 20149, i16 20161, i16 20173, i16 20177, i16 20183, i16 20201, i16 20219, i16 20231, i16 20233, i16 20249, i16 20261, i16 20269, i16 20287, i16 20297, i16 20323, i16 20327, i16 20333, i16 20341, i16 20347, i16 20353, i16 20357, i16 20359, i16 20369, i16 20389, i16 20393, i16 20399, i16 20407, i16 20411, i16 20431, i16 20441, i16 20443, i16 20477, i16 20479, i16 20483, i16 20507, i16 20509, i16 20521, i16 20533, i16 20543, i16 20549, i16 20551, i16 20563, i16 20593, i16 20599, i16 20611, i16 20627, i16 20639, i16 20641, i16 20663, i16 20681, i16 20693, i16 20707, i16 20717, i16 20719, i16 20731, i16 20743, i16 20747, i16 20749, i16 20753, i16 20759, i16 20771, i16 20773, i16 20789, i16 20807, i16 20809, i16 20849, i16 20857, i16 20873, i16 20879, i16 20887, i16 20897, i16 20899, i16 20903, i16 20921, i16 20929, i16 20939, i16 20947, i16 20959, i16 20963, i16 20981, i16 20983, i16 21001, i16 21011, i16 21013, i16 21017, i16 21019, i16 21023, i16 21031, i16 21059, i16 21061, i16 21067, i16 21089, i16 21101, i16 21107, i16 21121, i16 21139, i16 21143, i16 21149, i16 21157, i16 21163, i16 21169, i16 21179, i16 21187, i16 21191, i16 21193, i16 21211, i16 21221, i16 21227, i16 21247, i16 21269, i16 21277, i16 21283, i16 21313, i16 21317, i16 21319, i16 21323, i16 21341, i16 21347, i16 21377, i16 21379, i16 21383, i16 21391, i16 21397, i16 21401, i16 21407, i16 21419, i16 21433, i16 21467, i16 21481, i16 21487, i16 21491, i16 21493, i16 21499, i16 21503, i16 21517, i16 21521, i16 21523, i16 21529, i16 21557, i16 21559, i16 21563, i16 21569, i16 21577, i16 21587, i16 21589, i16 21599, i16 21601, i16 21611, i16 21613, i16 21617, i16 21647, i16 21649, i16 21661, i16 21673, i16 21683, i16 21701, i16 21713, i16 21727, i16 21737, i16 21739, i16 21751, i16 21757, i16 21767, i16 21773, i16 21787, i16 21799, i16 21803, i16 21817, i16 21821, i16 21839, i16 21841, i16 21851, i16 21859, i16 21863, i16 21871, i16 21881, i16 21893, i16 21911, i16 21929, i16 21937, i16 21943, i16 21961, i16 21977, i16 21991, i16 21997, i16 22003, i16 22013, i16 22027, i16 22031, i16 22037, i16 22039, i16 22051, i16 22063, i16 22067, i16 22073, i16 22079, i16 22091, i16 22093, i16 22109, i16 22111, i16 22123, i16 22129, i16 22133, i16 22147, i16 22153, i16 22157, i16 22159, i16 22171, i16 22189, i16 22193, i16 22229, i16 22247, i16 22259, i16 22271, i16 22273, i16 22277, i16 22279, i16 22283, i16 22291, i16 22303, i16 22307, i16 22343, i16 22349, i16 22367, i16 22369, i16 22381, i16 22391, i16 22397, i16 22409, i16 22433, i16 22441, i16 22447, i16 22453, i16 22469, i16 22481, i16 22483, i16 22501, i16 22511, i16 22531, i16 22541, i16 22543, i16 22549, i16 22567, i16 22571, i16 22573, i16 22613, i16 22619, i16 22621, i16 22637, i16 22639, i16 22643, i16 22651, i16 22669, i16 22679, i16 22691, i16 22697, i16 22699, i16 22709, i16 22717, i16 22721, i16 22727, i16 22739, i16 22741, i16 22751, i16 22769, i16 22777, i16 22783, i16 22787, i16 22807, i16 22811, i16 22817, i16 22853, i16 22859, i16 22861, i16 22871, i16 22877, i16 22901, i16 22907, i16 22921, i16 22937, i16 22943, i16 22961, i16 22963, i16 22973, i16 22993, i16 23003, i16 23011, i16 23017, i16 23021, i16 23027, i16 23029, i16 23039, i16 23041, i16 23053, i16 23057, i16 23059, i16 23063, i16 23071, i16 23081, i16 23087, i16 23099, i16 23117, i16 23131, i16 23143, i16 23159, i16 23167, i16 23173, i16 23189, i16 23197, i16 23201, i16 23203, i16 23209, i16 23227, i16 23251, i16 23269, i16 23279, i16 23291, i16 23293, i16 23297, i16 23311, i16 23321, i16 23327, i16 23333, i16 23339, i16 23357, i16 23369, i16 23371, i16 23399, i16 23417, i16 23431, i16 23447, i16 23459, i16 23473, i16 23497, i16 23509, i16 23531, i16 23537, i16 23539, i16 23549, i16 23557, i16 23561, i16 23563, i16 23567, i16 23581, i16 23593, i16 23599, i16 23603, i16 23609, i16 23623, i16 23627, i16 23629, i16 23633, i16 23663, i16 23669, i16 23671, i16 23677, i16 23687, i16 23689, i16 23719, i16 23741, i16 23743, i16 23747, i16 23753, i16 23761, i16 23767, i16 23773, i16 23789, i16 23801, i16 23813, i16 23819, i16 23827, i16 23831, i16 23833, i16 23857, i16 23869, i16 23873, i16 23879, i16 23887, i16 23893, i16 23899, i16 23909, i16 23911, i16 23917, i16 23929, i16 23957, i16 23971, i16 23977, i16 23981, i16 23993, i16 24001, i16 24007, i16 24019, i16 24023, i16 24029, i16 24043, i16 24049, i16 24061, i16 24071, i16 24077, i16 24083, i16 24091, i16 24097, i16 24103, i16 24107, i16 24109, i16 24113, i16 24121, i16 24133, i16 24137, i16 24151, i16 24169, i16 24179, i16 24181, i16 24197, i16 24203, i16 24223, i16 24229, i16 24239, i16 24247, i16 24251, i16 24281, i16 24317, i16 24329, i16 24337, i16 24359, i16 24371, i16 24373, i16 24379, i16 24391, i16 24407, i16 24413, i16 24419, i16 24421, i16 24439, i16 24443, i16 24469, i16 24473, i16 24481, i16 24499, i16 24509, i16 24517, i16 24527, i16 24533, i16 24547, i16 24551, i16 24571, i16 24593, i16 24611, i16 24623, i16 24631, i16 24659, i16 24671, i16 24677, i16 24683, i16 24691, i16 24697, i16 24709, i16 24733, i16 24749, i16 24763, i16 24767, i16 24781, i16 24793, i16 24799, i16 24809, i16 24821, i16 24841, i16 24847, i16 24851, i16 24859, i16 24877, i16 24889, i16 24907, i16 24917, i16 24919, i16 24923, i16 24943, i16 24953, i16 24967, i16 24971, i16 24977, i16 24979, i16 24989, i16 25013, i16 25031, i16 25033, i16 25037, i16 25057, i16 25073, i16 25087, i16 25097, i16 25111, i16 25117, i16 25121, i16 25127, i16 25147, i16 25153, i16 25163, i16 25169, i16 25171, i16 25183, i16 25189, i16 25219, i16 25229, i16 25237, i16 25243, i16 25247, i16 25253, i16 25261, i16 25301, i16 25303, i16 25307, i16 25309, i16 25321, i16 25339, i16 25343, i16 25349, i16 25357, i16 25367, i16 25373, i16 25391, i16 25409, i16 25411, i16 25423, i16 25439, i16 25447, i16 25453, i16 25457, i16 25463, i16 25469, i16 25471, i16 25523, i16 25537, i16 25541, i16 25561, i16 25577, i16 25579, i16 25583, i16 25589, i16 25601, i16 25603, i16 25609, i16 25621, i16 25633, i16 25639, i16 25643, i16 25657, i16 25667, i16 25673, i16 25679, i16 25693, i16 25703, i16 25717, i16 25733, i16 25741, i16 25747, i16 25759, i16 25763, i16 25771, i16 25793, i16 25799, i16 25801, i16 25819, i16 25841, i16 25847, i16 25849, i16 25867, i16 25873, i16 25889, i16 25903, i16 25913, i16 25919, i16 25931, i16 25933, i16 25939, i16 25943, i16 25951, i16 25969, i16 25981, i16 25997, i16 25999, i16 26003, i16 26017, i16 26021, i16 26029, i16 26041, i16 26053, i16 26083, i16 26099, i16 26107, i16 26111, i16 26113, i16 26119, i16 26141, i16 26153, i16 26161, i16 26171, i16 26177, i16 26183, i16 26189, i16 26203, i16 26209, i16 26227, i16 26237, i16 26249, i16 26251, i16 26261, i16 26263, i16 26267, i16 26293, i16 26297, i16 26309, i16 26317, i16 26321, i16 26339, i16 26347, i16 26357, i16 26371, i16 26387, i16 26393, i16 26399, i16 26407, i16 26417, i16 26423, i16 26431, i16 26437, i16 26449, i16 26459, i16 26479, i16 26489, i16 26497, i16 26501, i16 26513, i16 26539, i16 26557, i16 26561, i16 26573, i16 26591, i16 26597, i16 26627, i16 26633, i16 26641, i16 26647, i16 26669, i16 26681, i16 26683, i16 26687, i16 26693, i16 26699, i16 26701, i16 26711, i16 26713, i16 26717, i16 26723, i16 26729, i16 26731, i16 26737, i16 26759, i16 26777, i16 26783, i16 26801, i16 26813, i16 26821, i16 26833, i16 26839, i16 26849, i16 26861, i16 26863, i16 26879, i16 26881, i16 26891, i16 26893, i16 26903, i16 26921, i16 26927, i16 26947, i16 26951, i16 26953, i16 26959, i16 26981, i16 26987, i16 26993, i16 27011, i16 27017, i16 27031, i16 27043, i16 27059, i16 27061, i16 27067, i16 27073, i16 27077, i16 27091, i16 27103, i16 27107, i16 27109, i16 27127, i16 27143, i16 27179, i16 27191, i16 27197, i16 27211, i16 27239, i16 27241, i16 27253, i16 27259, i16 27271, i16 27277, i16 27281, i16 27283, i16 27299, i16 27329, i16 27337, i16 27361, i16 27367, i16 27397, i16 27407, i16 27409, i16 27427, i16 27431, i16 27437, i16 27449, i16 27457, i16 27479, i16 27481, i16 27487, i16 27509, i16 27527, i16 27529, i16 27539, i16 27541, i16 27551, i16 27581, i16 27583, i16 27611, i16 27617, i16 27631, i16 27647, i16 27653, i16 27673, i16 27689, i16 27691, i16 27697, i16 27701, i16 27733, i16 27737, i16 27739, i16 27743, i16 27749, i16 27751, i16 27763, i16 27767, i16 27773, i16 27779, i16 27791, i16 27793, i16 27799, i16 27803, i16 27809, i16 27817, i16 27823, i16 27827, i16 27847, i16 27851, i16 27883, i16 27893, i16 27901, i16 27917, i16 27919, i16 27941, i16 27943, i16 27947, i16 27953, i16 27961, i16 27967, i16 27983, i16 27997, i16 28001, i16 28019, i16 28027, i16 28031, i16 28051, i16 28057, i16 28069, i16 28081, i16 28087, i16 28097, i16 28099, i16 28109, i16 28111, i16 28123, i16 28151, i16 28163, i16 28181, i16 28183, i16 28201, i16 28211, i16 28219, i16 28229, i16 28277, i16 28279, i16 28283, i16 28289, i16 28297, i16 28307, i16 28309, i16 28319, i16 28349, i16 28351, i16 28387, i16 28393, i16 28403, i16 28409, i16 28411, i16 28429, i16 28433, i16 28439, i16 28447, i16 28463, i16 28477, i16 28493, i16 28499, i16 28513, i16 28517, i16 28537, i16 28541, i16 28547, i16 28549, i16 28559, i16 28571, i16 28573, i16 28579, i16 28591, i16 28597, i16 28603, i16 28607, i16 28619, i16 28621, i16 28627, i16 28631, i16 28643, i16 28649, i16 28657, i16 28661, i16 28663, i16 28669, i16 28687, i16 28697, i16 28703, i16 28711, i16 28723, i16 28729, i16 28751, i16 28753, i16 28759, i16 28771, i16 28789, i16 28793, i16 28807, i16 28813, i16 28817, i16 28837, i16 28843, i16 28859, i16 28867, i16 28871, i16 28879, i16 28901, i16 28909, i16 28921, i16 28927, i16 28933, i16 28949, i16 28961, i16 28979, i16 29009, i16 29017, i16 29021, i16 29023, i16 29027, i16 29033, i16 29059, i16 29063, i16 29077, i16 29101, i16 29123, i16 29129, i16 29131, i16 29137, i16 29147, i16 29153, i16 29167, i16 29173, i16 29179, i16 29191, i16 29201, i16 29207, i16 29209, i16 29221, i16 29231, i16 29243, i16 29251, i16 29269, i16 29287, i16 29297, i16 29303, i16 29311, i16 29327, i16 29333, i16 29339, i16 29347, i16 29363, i16 29383, i16 29387, i16 29389, i16 29399, i16 29401, i16 29411, i16 29423, i16 29429, i16 29437, i16 29443, i16 29453, i16 29473, i16 29483, i16 29501, i16 29527, i16 29531, i16 29537, i16 29567, i16 29569, i16 29573, i16 29581, i16 29587, i16 29599, i16 29611, i16 29629, i16 29633, i16 29641, i16 29663, i16 29669, i16 29671, i16 29683, i16 29717, i16 29723, i16 29741, i16 29753, i16 29759, i16 29761, i16 29789, i16 29803, i16 29819, i16 29833, i16 29837, i16 29851, i16 29863, i16 29867, i16 29873, i16 29879, i16 29881, i16 29917, i16 29921, i16 29927, i16 29947, i16 29959, i16 29983, i16 29989, i16 30011, i16 30013, i16 30029, i16 30047, i16 30059, i16 30071, i16 30089, i16 30091, i16 30097, i16 30103, i16 30109, i16 30113, i16 30119, i16 30133, i16 30137, i16 30139, i16 30161, i16 30169, i16 30181, i16 30187, i16 30197, i16 30203, i16 30211, i16 30223, i16 30241, i16 30253, i16 30259, i16 30269, i16 30271, i16 30293, i16 30307, i16 30313, i16 30319, i16 30323, i16 30341, i16 30347, i16 30367, i16 30389, i16 30391, i16 30403, i16 30427, i16 30431, i16 30449, i16 30467, i16 30469, i16 30491, i16 30493, i16 30497, i16 30509, i16 30517, i16 30529, i16 30539, i16 30553, i16 30557, i16 30559, i16 30577, i16 30593, i16 30631, i16 30637, i16 30643, i16 30649, i16 30661, i16 30671, i16 30677, i16 30689, i16 30697, i16 30703, i16 30707, i16 30713, i16 30727, i16 30757, i16 30763, i16 30773, i16 30781, i16 30803, i16 30809, i16 30817, i16 30829, i16 30839, i16 30841, i16 30851, i16 30853, i16 30859, i16 30869, i16 30871, i16 30881, i16 30893, i16 30911, i16 30931, i16 30937, i16 30941, i16 30949, i16 30971, i16 30977, i16 30983, i16 31013, i16 31019, i16 31033, i16 31039, i16 31051, i16 31063, i16 31069, i16 31079, i16 31081, i16 31091, i16 31121, i16 31123, i16 31139, i16 31147, i16 31151, i16 31153, i16 31159, i16 31177, i16 31181, i16 31183, i16 31189, i16 31193, i16 31219, i16 31223, i16 31231, i16 31237, i16 31247, i16 31249, i16 31253, i16 31259, i16 31267, i16 31271, i16 31277, i16 31307, i16 31319, i16 31321, i16 31327, i16 31333, i16 31337, i16 31357, i16 31379, i16 31387, i16 31391, i16 31393, i16 31397, i16 31469, i16 31477, i16 31481, i16 31489, i16 31511, i16 31513, i16 31517, i16 31531, i16 31541, i16 31543, i16 31547, i16 31567, i16 31573, i16 31583, i16 31601, i16 31607, i16 31627, i16 31643, i16 31649, i16 31657, i16 31663, i16 31667, i16 31687, i16 31699, i16 31721, i16 31723, i16 31727, i16 31729, i16 31741, i16 31751, i16 31769, i16 31771, i16 31793, i16 31799, i16 31817, i16 31847, i16 31849, i16 31859, i16 31873, i16 31883, i16 31891, i16 31907, i16 31957, i16 31963, i16 31973, i16 31981, i16 31991, i16 32003, i16 32009, i16 32027, i16 32029, i16 32051, i16 32057, i16 32059, i16 32063, i16 32069, i16 32077, i16 32083, i16 32089, i16 32099, i16 32117, i16 32119, i16 32141, i16 32143, i16 32159, i16 32173, i16 32183, i16 32189, i16 32191, i16 32203, i16 32213, i16 32233, i16 32237, i16 32251, i16 32257, i16 32261, i16 32297, i16 32299, i16 32303, i16 32309, i16 32321, i16 32323, i16 32327, i16 32341, i16 32353, i16 32359, i16 32363, i16 32369, i16 32371, i16 32377, i16 32381, i16 32401, i16 32411, i16 32413, i16 32423, i16 32429, i16 32441, i16 32443, i16 32467, i16 32479, i16 32491, i16 32497, i16 32503, i16 32507, i16 32531, i16 32533, i16 32537, i16 32561, i16 32563, i16 32569, i16 32573, i16 32579, i16 32587, i16 32603, i16 32609, i16 32611, i16 32621, i16 32633, i16 32647, i16 32653, i16 32687, i16 32693, i16 32707, i16 32713, i16 32717, i16 32719, i16 32749, i16 -32765, i16 -32757, i16 -32753, i16 -32747, i16 -32739, i16 -32735, i16 -32733, i16 -32705, i16 -32703, i16 -32697, i16 -32693, i16 -32667, i16 -32649, i16 -32627, i16 -32625, i16 -32619, i16 -32603, i16 -32597, i16 -32595, i16 -32579, i16 -32567, i16 -32565, i16 -32553, i16 -32549, i16 -32543, i16 -32537, i16 -32523, i16 -32513, i16 -32507, i16 -32499, i16 -32487, i16 -32483, i16 -32465, i16 -32463, i16 -32453, i16 -32445, i16 -32429, i16 -32423, i16 -32417, i16 -32387, i16 -32385, i16 -32375, i16 -32357, i16 -32355, i16 -32345, i16 -32337, i16 -32333, i16 -32325, i16 -32313, i16 -32289, i16 -32249, i16 -32247, i16 -32235, i16 -32225, i16 -32219, i16 -32207, i16 -32205, i16 -32193, i16 -32189, i16 -32187, i16 -32183, i16 -32177, i16 -32159, i16 -32145, i16 -32133, i16 -32127, i16 -32123, i16 -32109, i16 -32079, i16 -32075, i16 -32067, i16 -32057, i16 -32049, i16 -32043, i16 -32033, i16 -32015, i16 -32007, i16 -32003, i16 -31989, i16 -31973, i16 -31967, i16 -31959, i16 -31955, i16 -31949, i16 -31947, i16 -31937, i16 -31935, i16 -31923, i16 -31919, i16 -31917, i16 -31913, i16 -31907, i16 -31899, i16 -31895, i16 -31889, i16 -31857, i16 -31833, i16 -31823, i16 -31815, i16 -31797, i16 -31787, i16 -31785, i16 -31779, i16 -31769, i16 -31767, i16 -31763, i16 -31745, i16 -31739, i16 -31727, i16 -31725, i16 -31709, i16 -31707, i16 -31685, i16 -31679, i16 -31673, i16 -31665, i16 -31647, i16 -31643, i16 -31625, i16 -31613, i16 -31605, i16 -31599, i16 -31595, i16 -31575, i16 -31569, i16 -31539, i16 -31517, i16 -31505, i16 -31503, i16 -31497, i16 -31479, i16 -31475, i16 -31413, i16 -31409, i16 -31407, i16 -31395, i16 -31389, i16 -31379, i16 -31377, i16 -31365, i16 -31353, i16 -31325, i16 -31323, i16 -31319, i16 -31305, i16 -31283, i16 -31277, i16 -31275, i16 -31269, i16 -31263, i16 -31253, i16 -31239, i16 -31235, i16 -31233, i16 -31223, i16 -31217, i16 -31209, i16 -31199, i16 -31185, i16 -31175, i16 -31169, i16 -31167, i16 -31155, i16 -31133, i16 -31115, i16 -31107, i16 -31097, i16 -31079, i16 -31067, i16 -31065, i16 -31053, i16 -31049, i16 -31037, i16 -31035, i16 -31025, i16 -31023, i16 -31017, i16 -30999, i16 -30993, i16 -30987, i16 -30953, i16 -30947, i16 -30945, i16 -30933, i16 -30929, i16 -30923, i16 -30905, i16 -30887, i16 -30885, i16 -30869, i16 -30863, i16 -30857, i16 -30849, i16 -30843, i16 -30833, i16 -30815, i16 -30807, i16 -30797, i16 -30789, i16 -30779, i16 -30777, i16 -30773, i16 -30755, i16 -30729, i16 -30717, i16 -30695, i16 -30693, i16 -30689, i16 -30687, i16 -30665, i16 -30659, i16 -30653, i16 -30639, i16 -30623, i16 -30617, i16 -30597, i16 -30587, i16 -30575, i16 -30573, i16 -30555, i16 -30513, i16 -30509, i16 -30485, i16 -30483, i16 -30477, i16 -30467, i16 -30455, i16 -30453, i16 -30447, i16 -30437, i16 -30429, i16 -30425, i16 -30419, i16 -30407, i16 -30395, i16 -30387, i16 -30383, i16 -30377, i16 -30365, i16 -30335, i16 -30315, i16 -30309, i16 -30285, i16 -30279, i16 -30269, i16 -30257, i16 -30255, i16 -30245, i16 -30225, i16 -30219, i16 -30213, i16 -30209, i16 -30197, i16 -30183, i16 -30173, i16 -30155, i16 -30143, i16 -30135, i16 -30129, i16 -30117, i16 -30113, i16 -30099, i16 -30089, i16 -30087, i16 -30075, i16 -30045, i16 -30029, i16 -30027, i16 -30015, i16 -30009, i16 -30005, i16 -30003, i16 -29999, i16 -29993, i16 -29967, i16 -29963, i16 -29945, i16 -29943, i16 -29939, i16 -29933, i16 -29919, i16 -29865, i16 -29859, i16 -29807, i16 -29805, i16 -29789, i16 -29783, i16 -29777, i16 -29765, i16 -29739, i16 -29735, i16 -29733, i16 -29727, i16 -29705, i16 -29699, i16 -29697, i16 -29685, i16 -29673, i16 -29667, i16 -29657, i16 -29639, i16 -29637, i16 -29625, i16 -29613, i16 -29603, i16 -29585, i16 -29573, i16 -29567, i16 -29559, i16 -29553, i16 -29543, i16 -29537, i16 -29529, i16 -29525, i16 -29523, i16 -29519, i16 -29499, i16 -29475, i16 -29469, i16 -29463, i16 -29453, i16 -29439, i16 -29429, i16 -29427, i16 -29405, i16 -29399, i16 -29385, i16 -29375, i16 -29349, i16 -29345, i16 -29327, i16 -29319, i16 -29307, i16 -29295, i16 -29285, i16 -29273, i16 -29267, i16 -29259, i16 -29243, i16 -29237, i16 -29229, i16 -29223, i16 -29217, i16 -29195, i16 -29193, i16 -29183, i16 -29163, i16 -29153, i16 -29147, i16 -29103, i16 -29085, i16 -29079, i16 -29069, i16 -29067, i16 -29063, i16 -29057, i16 -29043, i16 -29039, i16 -29013, i16 -29009, i16 -29007, i16 -28995, i16 -28985, i16 -28977, i16 -28973, i16 -28965, i16 -28953, i16 -28949, i16 -28937, i16 -28929, i16 -28907, i16 -28899, i16 -28893, i16 -28883, i16 -28865, i16 -28859, i16 -28853, i16 -28845, i16 -28839, i16 -28827, i16 -28823, i16 -28815, i16 -28797, i16 -28787, i16 -28775, i16 -28769, i16 -28757, i16 -28755, i16 -28749, i16 -28745, i16 -28743, i16 -28727, i16 -28715, i16 -28703, i16 -28689, i16 -28679, i16 -28665, i16 -28659, i16 -28649, i16 -28637, i16 -28635, i16 -28623, i16 -28617, i16 -28613, i16 -28607, i16 -28605, i16 -28593, i16 -28589, i16 -28563, i16 -28557, i16 -28539, i16 -28533, i16 -28523, i16 -28517, i16 -28515, i16 -28497, i16 -28487, i16 -28479, i16 -28475, i16 -28449, i16 -28439, i16 -28419, i16 -28413, i16 -28397, i16 -28377, i16 -28365, i16 -28355, i16 -28347, i16 -28337, i16 -28335, i16 -28319, i16 -28313, i16 -28293, i16 -28283, i16 -28263, i16 -28259, i16 -28229, i16 -28227, i16 -28223, i16 -28215, i16 -28199, i16 -28197, i16 -28179, i16 -28175, i16 -28173, i16 -28167, i16 -28157, i16 -28139, i16 -28127, i16 -28113, i16 -28095, i16 -28089, i16 -28073, i16 -28053, i16 -28047, i16 -28043, i16 -28035, i16 -28029, i16 -28025, i16 -28019, i16 -28007, i16 -27999, i16 -27989, i16 -27987, i16 -27975, i16 -27969, i16 -27965, i16 -27963, i16 -27957, i16 -27947, i16 -27945, i16 -27929, i16 -27917, i16 -27903, i16 -27893, i16 -27887, i16 -27879, i16 -27873, i16 -27845, i16 -27843, i16 -27837, i16 -27819, i16 -27789, i16 -27755, i16 -27753, i16 -27737, i16 -27725, i16 -27723, i16 -27705, i16 -27689, i16 -27683, i16 -27675, i16 -27665, i16 -27657, i16 -27647, i16 -27639, i16 -27629, i16 -27585, i16 -27579, i16 -27573, i16 -27569, i16 -27549, i16 -27545, i16 -27543, i16 -27539, i16 -27525, i16 -27497, i16 -27489, i16 -27483, i16 -27467, i16 -27453, i16 -27423, i16 -27417, i16 -27387, i16 -27383, i16 -27369, i16 -27359, i16 -27353, i16 -27347, i16 -27339, i16 -27335, i16 -27317, i16 -27305, i16 -27299, i16 -27297, i16 -27275, i16 -27263, i16 -27255, i16 -27249, i16 -27237, i16 -27233, i16 -27219, i16 -27215, i16 -27209, i16 -27207, i16 -27203, i16 -27185, i16 -27165, i16 -27159, i16 -27143, i16 -27105, i16 -27089, i16 -27087, i16 -27083, i16 -27077, i16 -27075, i16 -27035, i16 -26993, i16 -26979, i16 -26975, i16 -26969, i16 -26967, i16 -26943, i16 -26933, i16 -26927, i16 -26925, i16 -26907, i16 -26897, i16 -26885, i16 -26883, i16 -26867, i16 -26865, i16 -26859, i16 -26843, i16 -26837, i16 -26829, i16 -26825, i16 -26823, i16 -26813, i16 -26807, i16 -26799, i16 -26789, i16 -26787, i16 -26769, i16 -26753, i16 -26745, i16 -26733, i16 -26715, i16 -26703, i16 -26697, i16 -26685, i16 -26675, i16 -26669, i16 -26663, i16 -26645, i16 -26633, i16 -26619, i16 -26615, i16 -26613, i16 -26603, i16 -26583, i16 -26577, i16 -26565, i16 -26559, i16 -26543, i16 -26517, i16 -26513, i16 -26495, i16 -26493, i16 -26489, i16 -26457, i16 -26447, i16 -26439, i16 -26433, i16 -26429, i16 -26423, i16 -26417, i16 -26403, i16 -26397, i16 -26379, i16 -26375, i16 -26373, i16 -26355, i16 -26345, i16 -26337, i16 -26327, i16 -26319, i16 -26309, i16 -26307, i16 -26303, i16 -26297, i16 -26295, i16 -26285, i16 -26243, i16 -26235, i16 -26223, i16 -26219, i16 -26213, i16 -26195, i16 -26193, i16 -26177, i16 -26169, i16 -26165, i16 -26163, i16 -26153, i16 -26139, i16 -26127, i16 -26117, i16 -26097, i16 -26093, i16 -26085, i16 -26075, i16 -26037, i16 -26033, i16 -26027, i16 -26025, i16 -26015, i16 -25995, i16 -25985, i16 -25973, i16 -25967, i16 -25955, i16 -25929, i16 -25917, i16 -25913, i16 -25905, i16 -25877, i16 -25869, i16 -25865, i16 -25857, i16 -25833, i16 -25827, i16 -25817, i16 -25809, i16 -25803, i16 -25787, i16 -25775, i16 -25767, i16 -25757, i16 -25745, i16 -25737, i16 -25715, i16 -25709, i16 -25707, i16 -25697, i16 -25695, i16 -25689, i16 -25679, i16 -25673, i16 -25667, i16 -25659, i16 -25653, i16 -25649, i16 -25635, i16 -25607, i16 -25599, i16 -25583, i16 -25565, i16 -25557, i16 -25553, i16 -25547, i16 -25527, i16 -25523, i16 -25505, i16 -25499, i16 -25497, i16 -25473, i16 -25449, i16 -25443, i16 -25437, i16 -25425, i16 -25413, i16 -25409, i16 -25407, i16 -25385, i16 -25383, i16 -25373, i16 -25367, i16 -25359, i16 -25347, i16 -25343, i16 -25323, i16 -25305, i16 -25299, i16 -25295, i16 -25283, i16 -25259, i16 -25253, i16 -25247, i16 -25193, i16 -25185, i16 -25179, i16 -25175, i16 -25149, i16 -25113, i16 -25109, i16 -25107, i16 -25103, i16 -25077, i16 -25065, i16 -25053, i16 -25049, i16 -25043, i16 -25037, i16 -25029, i16 -25017, i16 -25007, i16 -25005, i16 -24993, i16 -24977, i16 -24959, i16 -24953, i16 -24945, i16 -24939, i16 -24927, i16 -24909, i16 -24899, i16 -24897, i16 -24843, i16 -24839, i16 -24837, i16 -24827, i16 -24797, i16 -24785, i16 -24777, i16 -24773, i16 -24765, i16 -24749, i16 -24735, i16 -24723, i16 -24717, i16 -24713, i16 -24707, i16 -24695, i16 -24689, i16 -24687, i16 -24683, i16 -24669, i16 -24657, i16 -24653, i16 -24639, i16 -24633, i16 -24609, i16 -24603, i16 -24597, i16 -24587, i16 -24575, i16 -24563, i16 -24543, i16 -24525, i16 -24519, i16 -24513, i16 -24497, i16 -24489, i16 -24485, i16 -24479, i16 -24459, i16 -24455, i16 -24423, i16 -24419, i16 -24405, i16 -24395, i16 -24393, i16 -24387, i16 -24375, i16 -24359, i16 -24357, i16 -24353, i16 -24347, i16 -24335, i16 -24333, i16 -24323, i16 -24315, i16 -24309, i16 -24305, i16 -24303, i16 -24293, i16 -24279, i16 -24273, i16 -24267, i16 -24255, i16 -24237, i16 -24203, i16 -24195, i16 -24185, i16 -24179, i16 -24155, i16 -24149, i16 -24147, i16 -24137, i16 -24125, i16 -24123, i16 -24093, i16 -24083, i16 -24069, i16 -24057, i16 -24045, i16 -24029, i16 -24023, i16 -24017, i16 -24015, i16 -23997, i16 -23993, i16 -23987, i16 -23957, i16 -23943, i16 -23939, i16 -23933, i16 -23927, i16 -23925, i16 -23919, i16 -23915, i16 -23909, i16 -23895, i16 -23889, i16 -23885, i16 -23877, i16 -23867, i16 -23855, i16 -23849, i16 -23817, i16 -23807, i16 -23799, i16 -23777, i16 -23775, i16 -23765, i16 -23759, i16 -23735, i16 -23727, i16 -23723, i16 -23693, i16 -23687, i16 -23685, i16 -23673, i16 -23657, i16 -23649, i16 -23643, i16 -23639, i16 -23633, i16 -23625, i16 -23609, i16 -23595, i16 -23589, i16 -23583, i16 -23579, i16 -23577, i16 -23567, i16 -23555, i16 -23553, i16 -23537, i16 -23523, i16 -23519, i16 -23517, i16 -23513, i16 -23493, i16 -23475, i16 -23465, i16 -23463, i16 -23453, i16 -23447, i16 -23435, i16 -23405, i16 -23397, i16 -23379, i16 -23367, i16 -23357, i16 -23355, i16 -23349, i16 -23343, i16 -23339, i16 -23327, i16 -23315, i16 -23313, i16 -23309, i16 -23297, i16 -23279, i16 -23255, i16 -23253, i16 -23243, i16 -23237, i16 -23229, i16 -23213, i16 -23205, i16 -23199, i16 -23187, i16 -23177, i16 -23163, i16 -23157, i16 -23145, i16 -23139, i16 -23133, i16 -23129, i16 -23127, i16 -23103, i16 -23099, i16 -23093, i16 -23085, i16 -23079, i16 -23075, i16 -23073, i16 -23069, i16 -23063, i16 -23049, i16 -23045, i16 -23037, i16 -23027, i16 -23003, i16 -22979, i16 -22967, i16 -22965, i16 -22959, i16 -22947, i16 -22925, i16 -22895, i16 -22893, i16 -22887, i16 -22869, i16 -22859, i16 -22853, i16 -22847, i16 -22839, i16 -22835, i16 -22833, i16 -22827, i16 -22817, i16 -22809, i16 -22799, i16 -22793, i16 -22785, i16 -22769, i16 -22763, i16 -22749, i16 -22743, i16 -22739, i16 -22715, i16 -22707, i16 -22697, i16 -22695, i16 -22683, i16 -22677, i16 -22673, i16 -22637, i16 -22635, i16 -22613, i16 -22607, i16 -22599, i16 -22593, i16 -22583, i16 -22575, i16 -22569, i16 -22557, i16 -22547, i16 -22533, i16 -22523, i16 -22517, i16 -22499, i16 -22487, i16 -22485, i16 -22473, i16 -22469, i16 -22443, i16 -22433, i16 -22419, i16 -22403, i16 -22385, i16 -22377, i16 -22359, i16 -22347, i16 -22335, i16 -22329, i16 -22313, i16 -22299, i16 -22275, i16 -22265, i16 -22253, i16 -22245, i16 -22223, i16 -22217, i16 -22215, i16 -22205, i16 -22145, i16 -22139, i16 -22137, i16 -22133, i16 -22125, i16 -22109, i16 -22095, i16 -22085, i16 -22079, i16 -22055, i16 -22049, i16 -22037, i16 -22019, i16 -21995, i16 -21993, i16 -21963, i16 -21959, i16 -21957, i16 -21945, i16 -21939, i16 -21929, i16 -21927, i16 -21923, i16 -21909, i16 -21903, i16 -21887, i16 -21885, i16 -21875, i16 -21867, i16 -21845, i16 -21825, i16 -21819, i16 -21815, i16 -21783, i16 -21777, i16 -21759, i16 -21755, i16 -21753, i16 -21749, i16 -21747, i16 -21743, i16 -21735, i16 -21683, i16 -21669, i16 -21647, i16 -21645, i16 -21623, i16 -21603, i16 -21593, i16 -21585, i16 -21575, i16 -21573, i16 -21567, i16 -21563, i16 -21549, i16 -21545, i16 -21539, i16 -21519, i16 -21515, i16 -21509, i16 -21507, i16 -21495, i16 -21483, i16 -21477, i16 -21465, i16 -21449, i16 -21447, i16 -21435, i16 -21425, i16 -21417, i16 -21413, i16 -21407, i16 -21405, i16 -21377, i16 -21365, i16 -21357, i16 -21347, i16 -21335, i16 -21333, i16 -21329, i16 -21315, i16 -21287, i16 -21279, i16 -21273, i16 -21269, i16 -21267, i16 -21263, i16 -21257, i16 -21255, i16 -21243, i16 -21185, i16 -21179, i16 -21165, i16 -21155, i16 -21153, i16 -21147, i16 -21119, i16 -21087, i16 -21083, i16 -21053, i16 -21045, i16 -21039, i16 -21035, i16 -21029, i16 -21017, i16 -21005, i16 -21003, i16 -20999, i16 -20993, i16 -20987, i16 -20973, i16 -20957, i16 -20949, i16 -20919, i16 -20915, i16 -20913, i16 -20903, i16 -20895, i16 -20889, i16 -20885, i16 -20879, i16 -20853, i16 -20849, i16 -20837, i16 -20835, i16 -20825, i16 -20807, i16 -20795, i16 -20783, i16 -20765, i16 -20763, i16 -20759, i16 -20747, i16 -20739, i16 -20727, i16 -20717, i16 -20697, i16 -20693, i16 -20685, i16 -20669, i16 -20657, i16 -20649, i16 -20643, i16 -20627, i16 -20619, i16 -20609, i16 -20597, i16 -20583, i16 -20577, i16 -20573, i16 -20565, i16 -20553, i16 -20549, i16 -20529, i16 -20523, i16 -20483, i16 -20475, i16 -20459, i16 -20453, i16 -20417, i16 -20415, i16 -20409, i16 -20405, i16 -20399, i16 -20397, i16 -20375, i16 -20357, i16 -20355, i16 -20345, i16 -20339, i16 -20303, i16 -20289, i16 -20277, i16 -20273, i16 -20255, i16 -20247, i16 -20243, i16 -20229, i16 -20219, i16 -20217, i16 -20207, i16 -20199, i16 -20195, i16 -20193, i16 -20175, i16 -20159, i16 -20147, i16 -20133, i16 -20123, i16 -20109, i16 -20103, i16 -20097, i16 -20055, i16 -20045, i16 -20039, i16 -20033, i16 -20013, i16 -20003, i16 -19995, i16 -19983, i16 -19979, i16 -19967, i16 -19949, i16 -19947, i16 -19937, i16 -19923, i16 -19905, i16 -19895, i16 -19877, i16 -19869, i16 -19863, i16 -19859, i16 -19845, i16 -19839, i16 -19829, i16 -19799, i16 -19785, i16 -19779, i16 -19773, i16 -19769, i16 -19757, i16 -19719, i16 -19715, i16 -19713, i16 -19709, i16 -19703, i16 -19695, i16 -19683, i16 -19673, i16 -19667, i16 -19649, i16 -19643, i16 -19593, i16 -19587, i16 -19583, i16 -19577, i16 -19565, i16 -19557, i16 -19547, i16 -19515, i16 -19509, i16 -19487, i16 -19485, i16 -19475, i16 -19463, i16 -19445, i16 -19443, i16 -19437, i16 -19433, i16 -19403, i16 -19395, i16 -19389, i16 -19383, i16 -19365, i16 -19355, i16 -19353, i16 -19349, i16 -19337, i16 -19317, i16 -19307, i16 -19299, i16 -19275, i16 -19265, i16 -19263, i16 -19257, i16 -19235, i16 -19229, i16 -19227, i16 -19209, i16 -19199, i16 -19187, i16 -19185, i16 -19155, i16 -19137, i16 -19125, i16 -19097, i16 -19095, i16 -19089, i16 -19085, i16 -19079, i16 -19065, i16 -19059, i16 -19047, i16 -19037, i16 -19029, i16 -19025, i16 -19013, i16 -18987, i16 -18977, i16 -18969, i16 -18963, i16 -18947, i16 -18945, i16 -18935, i16 -18917, i16 -18903, i16 -18897, i16 -18893, i16 -18887, i16 -18873, i16 -18857, i16 -18855, i16 -18849, i16 -18845, i16 -18833, i16 -18813, i16 -18809, i16 -18789, i16 -18785, i16 -18779, i16 -18767, i16 -18765, i16 -18729, i16 -18725, i16 -18719, i16 -18717, i16 -18707, i16 -18705, i16 -18683, i16 -18675, i16 -18669, i16 -18659, i16 -18647, i16 -18635, i16 -18617, i16 -18603, i16 -18579, i16 -18543, i16 -18539, i16 -18519, i16 -18495, i16 -18485, i16 -18479, i16 -18477, i16 -18449, i16 -18443, i16 -18425, i16 -18417, i16 -18413, i16 -18407, i16 -18399, i16 -18393, i16 -18389, i16 -18387, i16 -18375, i16 -18347, i16 -18329, i16 -18315, i16 -18299, i16 -18285, i16 -18267, i16 -18257, i16 -18249, i16 -18243, i16 -18239, i16 -18233, i16 -18227, i16 -18219, i16 -18197, i16 -18185, i16 -18183, i16 -18173, i16 -18155, i16 -18149, i16 -18147, i16 -18129, i16 -18119, i16 -18117, i16 -18105, i16 -18095, i16 -18077, i16 -18045, i16 -18039, i16 -18035, i16 -18029, i16 -18023, i16 -18015, i16 -18009, i16 -18003, i16 -17993, i16 -17973, i16 -17967, i16 -17955, i16 -17945, i16 -17937, i16 -17927, i16 -17913, i16 -17907, i16 -17897, i16 -17883, i16 -17879, i16 -17877, i16 -17855, i16 -17837, i16 -17835, i16 -17825, i16 -17823, i16 -17819, i16 -17799, i16 -17795, i16 -17793, i16 -17759, i16 -17757, i16 -17745, i16 -17739, i16 -17729, i16 -17727, i16 -17717, i16 -17699, i16 -17693, i16 -17679, i16 -17667, i16 -17655, i16 -17633, i16 -17625, i16 -17619, i16 -17603, i16 -17597, i16 -17589, i16 -17585, i16 -17573, i16 -17567, i16 -17559, i16 -17555, i16 -17519, i16 -17513, i16 -17507, i16 -17487, i16 -17463, i16 -17457, i16 -17445, i16 -17427, i16 -17417, i16 -17415, i16 -17405, i16 -17379, i16 -17373, i16 -17357, i16 -17349, i16 -17343, i16 -17339, i16 -17315, i16 -17297, i16 -17289, i16 -17277, i16 -17265, i16 -17255, i16 -17237, i16 -17225, i16 -17223, i16 -17199, i16 -17195, i16 -17183, i16 -17165, i16 -17153, i16 -17139, i16 -17129, i16 -17127, i16 -17123, i16 -17099, i16 -17087, i16 -17073, i16 -17063, i16 -17057, i16 -17055, i16 -17049, i16 -17045, i16 -17039, i16 -17013, i16 -17009, i16 -17003, i16 -16997, i16 -16995, i16 -16973, i16 -16965, i16 -16947, i16 -16943, i16 -16925, i16 -16917, i16 -16913, i16 -16889, i16 -16887, i16 -16875, i16 -16863, i16 -16859, i16 -16857, i16 -16805, i16 -16803, i16 -16785, i16 -16779, i16 -16775, i16 -16769, i16 -16757, i16 -16755, i16 -16749, i16 -16737, i16 -16727, i16 -16719, i16 -16715, i16 -16713, i16 -16689, i16 -16679, i16 -16677, i16 -16667, i16 -16665, i16 -16653, i16 -16647, i16 -16629, i16 -16589, i16 -16583, i16 -16563, i16 -16547, i16 -16545, i16 -16533, i16 -16527, i16 -16517, i16 -16505, i16 -16503, i16 -16499, i16 -16493, i16 -16479, i16 -16467, i16 -16455, i16 -16433, i16 -16427, i16 -16419, i16 -16415, i16 -16413, i16 -16397, i16 -16379, i16 -16367, i16 -16365, i16 -16359, i16 -16343, i16 -16337, i16 -16335, i16 -16329, i16 -16325, i16 -16313, i16 -16283, i16 -16275, i16 -16259, i16 -16257, i16 -16239, i16 -16229, i16 -16205, i16 -16203, i16 -16197, i16 -16173, i16 -16169, i16 -16167, i16 -16145, i16 -16143, i16 -16127, i16 -16125, i16 -16119, i16 -16107, i16 -16103, i16 -16085, i16 -16077, i16 -16073, i16 -16059, i16 -16055, i16 -16037, i16 -16013, i16 -16007, i16 -16005, i16 -15999, i16 -15989, i16 -15987, i16 -15977, i16 -15939, i16 -15933, i16 -15923, i16 -15909, i16 -15903, i16 -15897, i16 -15873, i16 -15869, i16 -15867, i16 -15855, i16 -15839, i16 -15825, i16 -15809, i16 -15797, i16 -15795, i16 -15789, i16 -15779, i16 -15753, i16 -15749, i16 -15747, i16 -15735, i16 -15729, i16 -15725, i16 -15713, i16 -15705, i16 -15693, i16 -15683, i16 -15665, i16 -15659, i16 -15645, i16 -15617, i16 -15615, i16 -15609, i16 -15599, i16 -15597, i16 -15593, i16 -15579, i16 -15545, i16 -15543, i16 -15537, i16 -15515, i16 -15513, i16 -15503, i16 -15489, i16 -15485, i16 -15483, i16 -15467, i16 -15459, i16 -15449, i16 -15443, i16 -15435, i16 -15425, i16 -15417, i16 -15413, i16 -15407, i16 -15405, i16 -15389, i16 -15383, i16 -15377, i16 -15359, i16 -15329, i16 -15315, i16 -15309, i16 -15305, i16 -15275, i16 -15273, i16 -15263, i16 -15249, i16 -15245, i16 -15225, i16 -15215, i16 -15207, i16 -15203, i16 -15195, i16 -15177, i16 -15173, i16 -15159, i16 -15153, i16 -15149, i16 -15125, i16 -15119, i16 -15113, i16 -15095, i16 -15077, i16 -15075, i16 -15039, i16 -15033, i16 -15023, i16 -15009, i16 -14997, i16 -14993, i16 -14987, i16 -14985, i16 -14955, i16 -14949, i16 -14945, i16 -14943, i16 -14937, i16 -14909, i16 -14889, i16 -14885, i16 -14865, i16 -14853, i16 -14829, i16 -14813, i16 -14795, i16 -14783, i16 -14769, i16 -14763, i16 -14759, i16 -14747, i16 -14715, i16 -14703, i16 -14697, i16 -14687, i16 -14679, i16 -14669, i16 -14663, i16 -14645, i16 -14643, i16 -14627, i16 -14613, i16 -14607, i16 -14585, i16 -14579, i16 -14567, i16 -14565, i16 -14547, i16 -14543, i16 -14535, i16 -14505, i16 -14493, i16 -14489, i16 -14477, i16 -14475, i16 -14465, i16 -14427, i16 -14405, i16 -14403, i16 -14399, i16 -14385, i16 -14379, i16 -14367, i16 -14343, i16 -14339, i16 -14337, i16 -14333, i16 -14319, i16 -14307, i16 -14297, i16 -14295, i16 -14279, i16 -14273, i16 -14253, i16 -14249, i16 -14229, i16 -14207, i16 -14195, i16 -14193, i16 -14189, i16 -14187, i16 -14175, i16 -14153, i16 -14129, i16 -14123, i16 -14117, i16 -14115, i16 -14109, i16 -14105, i16 -14099, i16 -14097, i16 -14087, i16 -14075, i16 -14063, i16 -14057, i16 -14055, i16 -14049, i16 -14033, i16 -14025, i16 -14019, i16 -14015, i16 -13997, i16 -13985, i16 -13973, i16 -13959, i16 -13955, i16 -13943, i16 -13937, i16 -13929, i16 -13923, i16 -13905, i16 -13899, i16 -13889, i16 -13877, i16 -13863, i16 -13857, i16 -13853, i16 -13845, i16 -13823, i16 -13817, i16 -13815, i16 -13787, i16 -13769, i16 -13767, i16 -13749, i16 -13739, i16 -13733, i16 -13719, i16 -13709, i16 -13707, i16 -13697, i16 -13683, i16 -13677, i16 -13667, i16 -13665, i16 -13643, i16 -13637, i16 -13629, i16 -13623, i16 -13607, i16 -13595, i16 -13587, i16 -13565, i16 -13563, i16 -13559, i16 -13545, i16 -13527, i16 -13515, i16 -13509, i16 -13485, i16 -13479, i16 -13469, i16 -13467, i16 -13455, i16 -13433, i16 -13415, i16 -13409, i16 -13389, i16 -13383, i16 -13373, i16 -13359, i16 -13355, i16 -13353, i16 -13347, i16 -13335, i16 -13313, i16 -13299, i16 -13287, i16 -13283, i16 -13277, i16 -13269, i16 -13247, i16 -13245, i16 -13235, i16 -13223, i16 -13215, i16 -13175, i16 -13173, i16 -13167, i16 -13157, i16 -13149, i16 -13145, i16 -13103, i16 -13083, i16 -13079, i16 -13047, i16 -13035, i16 -13025, i16 -13019, i16 -13007, i16 -12995, i16 -12993, i16 -12983, i16 -12975, i16 -12969, i16 -12965, i16 -12957, i16 -12953, i16 -12927, i16 -12909, i16 -12905, i16 -12897, i16 -12869, i16 -12863, i16 -12845, i16 -12839, i16 -12827, i16 -12825, i16 -12815, i16 -12809, i16 -12803, i16 -12789, i16 -12779, i16 -12767, i16 -12753, i16 -12729, i16 -12723, i16 -12719, i16 -12699, i16 -12677, i16 -12675, i16 -12657, i16 -12653, i16 -12647, i16 -12635, i16 -12633, i16 -12617, i16 -12599, i16 -12585, i16 -12579, i16 -12573, i16 -12569, i16 -12563, i16 -12555, i16 -12537, i16 -12533, i16 -12519, i16 -12489, i16 -12485, i16 -12467, i16 -12459, i16 -12449, i16 -12447, i16 -12443, i16 -12435, i16 -12423, i16 -12419, i16 -12407, i16 -12389, i16 -12387, i16 -12375, i16 -12365, i16 -12363, i16 -12347, i16 -12339, i16 -12335, i16 -12305, i16 -12303, i16 -12297, i16 -12269, i16 -12267, i16 -12257, i16 -12255, i16 -12237, i16 -12227, i16 -12213, i16 -12209, i16 -12183, i16 -12177, i16 -12159, i16 -12155, i16 -12135, i16 -12129, i16 -12125, i16 -12117, i16 -12099, i16 -12095, i16 -12083, i16 -12057, i16 -12033, i16 -12029, i16 -12009, i16 -11987, i16 -11985, i16 -11967, i16 -11945, i16 -11943, i16 -11939, i16 -11927, i16 -11925, i16 -11919, i16 -11913, i16 -11907, i16 -11903, i16 -11897, i16 -11883, i16 -11879, i16 -11855, i16 -11843, i16 -11837, i16 -11819, i16 -11817, i16 -11805, i16 -11777, i16 -11763, i16 -11759, i16 -11753, i16 -11745, i16 -11723, i16 -11717, i16 -11705, i16 -11687, i16 -11679, i16 -11675, i16 -11655, i16 -11649, i16 -11645, i16 -11639, i16 -11637, i16 -11619, i16 -11613, i16 -11609, i16 -11597, i16 -11585, i16 -11577, i16 -11549, i16 -11543, i16 -11535, i16 -11525, i16 -11523, i16 -11499, i16 -11487, i16 -11477, i16 -11453, i16 -11445, i16 -11435, i16 -11415, i16 -11403, i16 -11397, i16 -11385, i16 -11373, i16 -11369, i16 -11355, i16 -11343, i16 -11319, i16 -11285, i16 -11267, i16 -11259, i16 -11249, i16 -11243, i16 -11225, i16 -11217, i16 -11213, i16 -11205, i16 -11189, i16 -11175, i16 -11169, i16 -11165, i16 -11159, i16 -11135, i16 -11133, i16 -11127, i16 -11123, i16 -11117, i16 -11115, i16 -11099, i16 -11093, i16 -11087, i16 -11067, i16 -11043, i16 -11039, i16 -11037, i16 -11033, i16 -11019, i16 -11015, i16 -10997, i16 -10995, i16 -10989, i16 -10977, i16 -10973, i16 -10959, i16 -10955, i16 -10953, i16 -10935, i16 -10919, i16 -10913, i16 -10907, i16 -10905, i16 -10889, i16 -10869, i16 -10863, i16 -10857, i16 -10827, i16 -10823, i16 -10815, i16 -10809, i16 -10785, i16 -10769, i16 -10763, i16 -10757, i16 -10749, i16 -10737, i16 -10707, i16 -10703, i16 -10685, i16 -10667, i16 -10659, i16 -10655, i16 -10629, i16 -10619, i16 -10617, i16 -10595, i16 -10587, i16 -10577, i16 -10563, i16 -10557, i16 -10553, i16 -10535, i16 -10527, i16 -10515, i16 -10487, i16 -10485, i16 -10479, i16 -10475, i16 -10463, i16 -10457, i16 -10433, i16 -10427, i16 -10419, i16 -10409, i16 -10389, i16 -10373, i16 -10365, i16 -10335, i16 -10329, i16 -10323, i16 -10319, i16 -10317, i16 -10307, i16 -10293, i16 -10287, i16 -10277, i16 -10245, i16 -10223, i16 -10205, i16 -10203, i16 -10199, i16 -10197, i16 -10193, i16 -10185, i16 -10163, i16 -10155, i16 -10137, i16 -10125, i16 -10097, i16 -10095, i16 -10079, i16 -10067, i16 -10049, i16 -10035, i16 -10025, i16 -10007, i16 -9995, i16 -9989, i16 -9957, i16 -9947, i16 -9933, i16 -9927, i16 -9917, i16 -9915, i16 -9905, i16 -9903, i16 -9897, i16 -9875, i16 -9873, i16 -9869, i16 -9863, i16 -9855, i16 -9845, i16 -9839, i16 -9825, i16 -9819, i16 -9815, i16 -9803, i16 -9773, i16 -9749, i16 -9743, i16 -9737, i16 -9729, i16 -9723, i16 -9719, i16 -9717, i16 -9713, i16 -9707, i16 -9699, i16 -9693, i16 -9687, i16 -9665, i16 -9647, i16 -9639, i16 -9635, i16 -9633, i16 -9615, i16 -9609, i16 -9605, i16 -9603, i16 -9587, i16 -9569, i16 -9549, i16 -9539, i16 -9533, i16 -9527, i16 -9497, i16 -9495, i16 -9483, i16 -9455, i16 -9449, i16 -9443, i16 -9437, i16 -9435, i16 -9423, i16 -9413, i16 -9405, i16 -9387, i16 -9369, i16 -9365, i16 -9357, i16 -9339, i16 -9329, i16 -9327, i16 -9299, i16 -9297, i16 -9287, i16 -9273, i16 -9269, i16 -9267, i16 -9237, i16 -9225, i16 -9203, i16 -9177, i16 -9167, i16 -9159, i16 -9153, i16 -9143, i16 -9135, i16 -9119, i16 -9105, i16 -9099, i16 -9093, i16 -9083, i16 -9069, i16 -9063, i16 -9059, i16 -9057, i16 -9047, i16 -9035, i16 -9033, i16 -9027, i16 -9017, i16 -9009, i16 -9005, i16 -9003, i16 -8993, i16 -8967, i16 -8945, i16 -8939, i16 -8937, i16 -8925, i16 -8907, i16 -8903, i16 -8877, i16 -8873, i16 -8865, i16 -8855, i16 -8849, i16 -8835, i16 -8825, i16 -8823, i16 -8805, i16 -8799, i16 -8789, i16 -8769, i16 -8763, i16 -8757, i16 -8753, i16 -8729, i16 -8727, i16 -8723, i16 -8715, i16 -8709, i16 -8693, i16 -8679, i16 -8663, i16 -8645, i16 -8643, i16 -8639, i16 -8627, i16 -8625, i16 -8615, i16 -8613, i16 -8607, i16 -8595, i16 -8585, i16 -8579, i16 -8573, i16 -8553, i16 -8547, i16 -8543, i16 -8537, i16 -8499, i16 -8495, i16 -8489, i16 -8477, i16 -8463, i16 -8459, i16 -8447, i16 -8439, i16 -8429, i16 -8417, i16 -8405, i16 -8397, i16 -8393, i16 -8387, i16 -8373, i16 -8363, i16 -8357, i16 -8345, i16 -8343, i16 -8333, i16 -8315, i16 -8313, i16 -8295, i16 -8285, i16 -8277, i16 -8267, i16 -8265, i16 -8253, i16 -8249, i16 -8235, i16 -8207, i16 -8205, i16 -8189, i16 -8187, i16 -8169, i16 -8163, i16 -8153, i16 -8147, i16 -8139, i16 -8123, i16 -8109, i16 -8079, i16 -8069, i16 -8049, i16 -8043, i16 -8033, i16 -8009, i16 -8007, i16 -7979, i16 -7977, i16 -7965, i16 -7949, i16 -7943, i16 -7935, i16 -7899, i16 -7895, i16 -7887, i16 -7883, i16 -7869, i16 -7857, i16 -7847, i16 -7839, i16 -7827, i16 -7823, i16 -7817, i16 -7809, i16 -7805, i16 -7799, i16 -7785, i16 -7763, i16 -7755, i16 -7749, i16 -7745, i16 -7743, i16 -7733, i16 -7727, i16 -7707, i16 -7697, i16 -7689, i16 -7683, i16 -7677, i16 -7655, i16 -7637, i16 -7635, i16 -7619, i16 -7613, i16 -7593, i16 -7589, i16 -7563, i16 -7559, i16 -7545, i16 -7523, i16 -7509, i16 -7505, i16 -7493, i16 -7487, i16 -7479, i16 -7475, i16 -7469, i16 -7463, i16 -7437, i16 -7427, i16 -7425, i16 -7407, i16 -7389, i16 -7385, i16 -7383, i16 -7367, i16 -7365, i16 -7347, i16 -7343, i16 -7337, i16 -7329, i16 -7325, i16 -7319, i16 -7307, i16 -7305, i16 -7299, i16 -7293, i16 -7265, i16 -7227, i16 -7223, i16 -7215, i16 -7199, i16 -7173, i16 -7169, i16 -7167, i16 -7157, i16 -7145, i16 -7143, i16 -7133, i16 -7125, i16 -7119, i16 -7109, i16 -7097, i16 -7095, i16 -7085, i16 -7083, i16 -7059, i16 -7055, i16 -7025, i16 -6999, i16 -6993, i16 -6987, i16 -6969, i16 -6963, i16 -6957, i16 -6935, i16 -6933, i16 -6923, i16 -6905, i16 -6879, i16 -6875, i16 -6857, i16 -6849, i16 -6843, i16 -6837, i16 -6825, i16 -6809, i16 -6803, i16 -6795, i16 -6779, i16 -6773, i16 -6765, i16 -6749, i16 -6747, i16 -6705, i16 -6647, i16 -6639, i16 -6635, i16 -6629, i16 -6627, i16 -6623, i16 -6615, i16 -6599, i16 -6593, i16 -6573, i16 -6569, i16 -6557, i16 -6545, i16 -6539, i16 -6527, i16 -6525, i16 -6515, i16 -6513, i16 -6507, i16 -6485, i16 -6483, i16 -6473, i16 -6467, i16 -6459, i16 -6453, i16 -6443, i16 -6429, i16 -6423, i16 -6417, i16 -6413, i16 -6395, i16 -6387, i16 -6377, i16 -6369, i16 -6353, i16 -6339, i16 -6329, i16 -6327, i16 -6317, i16 -6315, i16 -6303, i16 -6297, i16 -6293, i16 -6273, i16 -6263, i16 -6255, i16 -6203, i16 -6195, i16 -6185, i16 -6179, i16 -6177, i16 -6167, i16 -6159, i16 -6149, i16 -6143, i16 -6137, i16 -6129, i16 -6119, i16 -6117, i16 -6095, i16 -6093, i16 -6089, i16 -6083, i16 -6069, i16 -6065, i16 -6063, i16 -6039, i16 -6027, i16 -6023, i16 -5997, i16 -5979, i16 -5975, i16 -5969, i16 -5955, i16 -5925, i16 -5919, i16 -5915, i16 -5909, i16 -5907, i16 -5885, i16 -5877, i16 -5873, i16 -5867, i16 -5865, i16 -5843, i16 -5837, i16 -5829, i16 -5813, i16 -5807, i16 -5793, i16 -5789, i16 -5783, i16 -5765, i16 -5757, i16 -5745, i16 -5739, i16 -5727, i16 -5703, i16 -5673, i16 -5657, i16 -5649, i16 -5615, i16 -5607, i16 -5585, i16 -5579, i16 -5565, i16 -5555, i16 -5537, i16 -5523, i16 -5519, i16 -5507, i16 -5499, i16 -5495, i16 -5459, i16 -5453, i16 -5447, i16 -5445, i16 -5435, i16 -5433, i16 -5429, i16 -5409, i16 -5403, i16 -5397, i16 -5387, i16 -5375, i16 -5369, i16 -5367, i16 -5327, i16 -5319, i16 -5313, i16 -5285, i16 -5279, i16 -5277, i16 -5265, i16 -5247, i16 -5243, i16 -5219, i16 -5205, i16 -5199, i16 -5193, i16 -5183, i16 -5163, i16 -5153, i16 -5139, i16 -5123, i16 -5109, i16 -5093, i16 -5087, i16 -5079, i16 -5043, i16 -5039, i16 -5027, i16 -5015, i16 -5009, i16 -4997, i16 -4947, i16 -4935, i16 -4929, i16 -4925, i16 -4919, i16 -4913, i16 -4905, i16 -4899, i16 -4889, i16 -4887, i16 -4877, i16 -4875, i16 -4857, i16 -4847, i16 -4833, i16 -4817, i16 -4809, i16 -4803, i16 -4799, i16 -4779, i16 -4775, i16 -4773, i16 -4763, i16 -4757, i16 -4743, i16 -4725, i16 -4715, i16 -4677, i16 -4667, i16 -4649, i16 -4647, i16 -4637, i16 -4635, i16 -4623, i16 -4619, i16 -4617, i16 -4613, i16 -4599, i16 -4593, i16 -4583, i16 -4575, i16 -4535, i16 -4529, i16 -4509, i16 -4505, i16 -4493, i16 -4485, i16 -4479, i16 -4445, i16 -4437, i16 -4415, i16 -4407, i16 -4395, i16 -4385, i16 -4383, i16 -4367, i16 -4325, i16 -4313, i16 -4305, i16 -4283, i16 -4275, i16 -4253, i16 -4245, i16 -4239, i16 -4205, i16 -4203, i16 -4197, i16 -4193, i16 -4179, i16 -4173, i16 -4157, i16 -4155, i16 -4133, i16 -4127, i16 -4119, i16 -4095, i16 -4073, i16 -4067, i16 -4065, i16 -4053, i16 -4049, i16 -4043, i16 -4029, i16 -4025, i16 -4017, i16 -3993, i16 -3989, i16 -3983, i16 -3977, i16 -3975, i16 -3953, i16 -3933, i16 -3927, i16 -3923, i16 -3909, i16 -3905, i16 -3899, i16 -3893, i16 -3885, i16 -3879, i16 -3869, i16 -3863, i16 -3855, i16 -3849, i16 -3833, i16 -3819, i16 -3813, i16 -3807, i16 -3785, i16 -3779, i16 -3755, i16 -3723, i16 -3717, i16 -3699, i16 -3693, i16 -3675, i16 -3665, i16 -3657, i16 -3627, i16 -3609, i16 -3603, i16 -3587, i16 -3575, i16 -3569, i16 -3557, i16 -3555, i16 -3549, i16 -3545, i16 -3533, i16 -3525, i16 -3519, i16 -3497, i16 -3489, i16 -3483, i16 -3479, i16 -3465, i16 -3455, i16 -3437, i16 -3417, i16 -3407, i16 -3405, i16 -3399, i16 -3395, i16 -3393, i16 -3365, i16 -3347, i16 -3345, i16 -3335, i16 -3329, i16 -3323, i16 -3317, i16 -3303, i16 -3263, i16 -3239, i16 -3237, i16 -3233, i16 -3225, i16 -3213, i16 -3209, i16 -3189, i16 -3185, i16 -3153, i16 -3135, i16 -3119, i16 -3113, i16 -3077, i16 -3069, i16 -3063, i16 -3059, i16 -3053, i16 -3039, i16 -3035, i16 -3029, i16 -3003, i16 -2997, i16 -2987, i16 -2973, i16 -2955, i16 -2945, i16 -2939, i16 -2933, i16 -2919, i16 -2909, i16 -2903, i16 -2897, i16 -2883, i16 -2877, i16 -2853, i16 -2849, i16 -2835, i16 -2813, i16 -2805, i16 -2793, i16 -2783, i16 -2775, i16 -2763, i16 -2745, i16 -2735, i16 -2717, i16 -2709, i16 -2685, i16 -2675, i16 -2667, i16 -2663, i16 -2639, i16 -2633, i16 -2615, i16 -2609, i16 -2607, i16 -2597, i16 -2567, i16 -2565, i16 -2555, i16 -2553, i16 -2549, i16 -2547, i16 -2507, i16 -2505, i16 -2477, i16 -2469, i16 -2463, i16 -2457, i16 -2439, i16 -2433, i16 -2423, i16 -2409, i16 -2405, i16 -2387, i16 -2357, i16 -2339, i16 -2337, i16 -2325, i16 -2295, i16 -2289, i16 -2259, i16 -2255, i16 -2237, i16 -2225, i16 -2223, i16 -2219, i16 -2205, i16 -2199, i16 -2189, i16 -2183, i16 -2175, i16 -2169, i16 -2159, i16 -2147, i16 -2145, i16 -2139, i16 -2127, i16 -2117, i16 -2115, i16 -2097, i16 -2093, i16 -2073, i16 -2069, i16 -2063, i16 -2049, i16 -2043, i16 -2037, i16 -2015, i16 -2009, i16 -2003, i16 -1995, i16 -1977, i16 -1959, i16 -1949, i16 -1947, i16 -1937, i16 -1935, i16 -1929, i16 -1925, i16 -1919, i16 -1907, i16 -1889, i16 -1887, i16 -1877, i16 -1869, i16 -1865, i16 -1847, i16 -1845, i16 -1839, i16 -1833, i16 -1827, i16 -1817, i16 -1809, i16 -1799, i16 -1793, i16 -1775, i16 -1763, i16 -1755, i16 -1743, i16 -1737, i16 -1733, i16 -1727, i16 -1713, i16 -1697, i16 -1695, i16 -1683, i16 -1679, i16 -1673, i16 -1635, i16 -1629, i16 -1623, i16 -1607, i16 -1587, i16 -1559, i16 -1539, i16 -1529, i16 -1523, i16 -1517, i16 -1503, i16 -1499, i16 -1473, i16 -1469, i16 -1455, i16 -1445, i16 -1427, i16 -1413, i16 -1385, i16 -1383, i16 -1379, i16 -1365, i16 -1349, i16 -1347, i16 -1319, i16 -1313, i16 -1305, i16 -1299, i16 -1265, i16 -1257, i16 -1253, i16 -1235, i16 -1233, i16 -1217, i16 -1209, i16 -1203, i16 -1163, i16 -1155, i16 -1137, i16 -1133, i16 -1103, i16 -1097, i16 -1085, i16 -1083, i16 -1053, i16 -1047, i16 -1037, i16 -1023, i16 -983, i16 -969, i16 -959, i16 -957, i16 -945, i16 -935, i16 -927, i16 -923, i16 -915, i16 -909, i16 -903, i16 -875, i16 -873, i16 -869, i16 -857, i16 -843, i16 -827, i16 -819, i16 -789, i16 -773, i16 -755, i16 -753, i16 -743, i16 -725, i16 -719, i16 -687, i16 -683, i16 -665, i16 -659, i16 -657, i16 -645, i16 -635, i16 -617, i16 -615, i16 -609, i16 -599, i16 -585, i16 -567, i16 -539, i16 -533, i16 -525, i16 -509, i16 -507, i16 -503, i16 -483, i16 -473, i16 -465, i16 -447, i16 -437, i16 -435, i16 -425, i16 -417, i16 -413, i16 -407, i16 -395, i16 -389, i16 -369, i16 -365, i16 -363, i16 -357, i16 -353, i16 -333, i16 -323, i16 -297, i16 -279, i16 -269, i16 -267, i16 -249, i16 -243, i16 -227, i16 -213, i16 -209, i16 -183, i16 -179, i16 -165, i16 -155, i16 -143, i16 -129, i16 -123, i16 -117, i16 -113, i16 -99, i16 -89, i16 -87, i16 -57, i16 -39, i16 -17, i16 -15, i16 1], align 16
@.str.127 = private unnamed_addr constant [6 x i8] c"psqrt\00", align 1
@.str.1.128 = private unnamed_addr constant [18 x i8] c"negative argument\00", align 1
@.str.135 = private unnamed_addr constant [5 x i8] c"ptou\00", align 1
@.str.1.136 = private unnamed_addr constant [18 x i8] c"negative argument\00", align 1
@.str.2.137 = private unnamed_addr constant [9 x i8] c"overflow\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @atop(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.precisionType*, align 8
  %4 = alloca %struct.precisionType*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  store %struct.precisionType* null, %struct.precisionType** %3, align 8
  store %struct.precisionType* null, %struct.precisionType** %4, align 8
  store i32 0, i32* %5, align 4
  %10 = load i8*, i8** %2, align 8
  %11 = icmp ne i8* %10, null
  br i1 %11, label %12, label %137

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %25, %12
  %14 = call i16** @__ctype_b_loc() #8
  %15 = load i16*, i16** %14, align 8
  %16 = load i8*, i8** %2, align 8
  %17 = load i8, i8* %16, align 1
  %18 = sext i8 %17 to i32
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i16, i16* %15, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = zext i16 %21 to i32
  %23 = and i32 %22, 8192
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %13
  %26 = load i8*, i8** %2, align 8
  %27 = getelementptr inbounds i8, i8* %26, i32 1
  store i8* %27, i8** %2, align 8
  br label %13

28:                                               ; preds = %13
  %29 = load i8*, i8** %2, align 8
  %30 = load i8, i8* %29, align 1
  %31 = sext i8 %30 to i32
  %32 = icmp eq i32 %31, 45
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  store i32 1, i32* %5, align 4
  %34 = load i8*, i8** %2, align 8
  %35 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %35, i8** %2, align 8
  br label %45

36:                                               ; preds = %28
  %37 = load i8*, i8** %2, align 8
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i32
  %40 = icmp eq i32 %39, 43
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = load i8*, i8** %2, align 8
  %43 = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %43, i8** %2, align 8
  br label %44

44:                                               ; preds = %41, %36
  br label %45

45:                                               ; preds = %44, %33
  %46 = call i16** @__ctype_b_loc() #8
  %47 = load i16*, i16** %46, align 8
  %48 = load i8*, i8** %2, align 8
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  store i32 %50, i32* %6, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %47, i64 %51
  %53 = load i16, i16* %52, align 2
  %54 = zext i16 %53 to i32
  %55 = and i32 %54, 2048
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %136

57:                                               ; preds = %45
  %58 = load %struct.precisionType*, %struct.precisionType** @pzero, align 8
  %59 = call %struct.precisionType* @psetq(%struct.precisionType** %3, %struct.precisionType* %58)
  %60 = call %struct.precisionType* @utop(i32 1000000000)
  %61 = call %struct.precisionType* @psetq(%struct.precisionType** %4, %struct.precisionType* %60)
  br label %62

62:                                               ; preds = %97, %57
  store i32 8, i32* %9, align 4
  %63 = load i32, i32* %6, align 4
  %64 = sub nsw i32 %63, 48
  store i32 %64, i32* %7, align 4
  br label %65

65:                                               ; preds = %85, %62
  %66 = call i16** @__ctype_b_loc() #8
  %67 = load i16*, i16** %66, align 8
  %68 = load i8*, i8** %2, align 8
  %69 = getelementptr inbounds i8, i8* %68, i32 1
  store i8* %69, i8** %2, align 8
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  store i32 %71, i32* %6, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i16, i16* %67, i64 %72
  %74 = load i16, i16* %73, align 2
  %75 = zext i16 %74 to i32
  %76 = and i32 %75, 2048
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %79, label %78

78:                                               ; preds = %65
  br label %111

79:                                               ; preds = %65
  %80 = load i32, i32* %7, align 4
  %81 = mul i32 %80, 10
  %82 = load i32, i32* %6, align 4
  %83 = sub nsw i32 %82, 48
  %84 = add i32 %81, %83
  store i32 %84, i32* %7, align 4
  br label %85

85:                                               ; preds = %79
  %86 = load i32, i32* %9, align 4
  %87 = add nsw i32 %86, -1
  store i32 %87, i32* %9, align 4
  %88 = icmp sgt i32 %87, 0
  br i1 %88, label %65, label %89

89:                                               ; preds = %85
  %90 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %91 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %92 = call %struct.precisionType* @pmul(%struct.precisionType* %90, %struct.precisionType* %91)
  %93 = load i32, i32* %7, align 4
  %94 = call %struct.precisionType* @utop(i32 %93)
  %95 = call %struct.precisionType* @padd(%struct.precisionType* %92, %struct.precisionType* %94)
  %96 = call %struct.precisionType* @psetq(%struct.precisionType** %3, %struct.precisionType* %95)
  br label %97

97:                                               ; preds = %89
  %98 = call i16** @__ctype_b_loc() #8
  %99 = load i16*, i16** %98, align 8
  %100 = load i8*, i8** %2, align 8
  %101 = getelementptr inbounds i8, i8* %100, i32 1
  store i8* %101, i8** %2, align 8
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  store i32 %103, i32* %6, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i16, i16* %99, i64 %104
  %106 = load i16, i16* %105, align 2
  %107 = zext i16 %106 to i32
  %108 = and i32 %107, 2048
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %62, label %110

110:                                              ; preds = %97
  br label %128

111:                                              ; preds = %78
  store i32 10, i32* %8, align 4
  br label %112

112:                                              ; preds = %116, %111
  %113 = load i32, i32* %9, align 4
  %114 = add nsw i32 %113, 1
  store i32 %114, i32* %9, align 4
  %115 = icmp slt i32 %113, 8
  br i1 %115, label %116, label %119

116:                                              ; preds = %112
  %117 = load i32, i32* %8, align 4
  %118 = mul i32 %117, 10
  store i32 %118, i32* %8, align 4
  br label %112

119:                                              ; preds = %112
  %120 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %121 = load i32, i32* %8, align 4
  %122 = call %struct.precisionType* @utop(i32 %121)
  %123 = call %struct.precisionType* @pmul(%struct.precisionType* %120, %struct.precisionType* %122)
  %124 = load i32, i32* %7, align 4
  %125 = call %struct.precisionType* @utop(i32 %124)
  %126 = call %struct.precisionType* @padd(%struct.precisionType* %123, %struct.precisionType* %125)
  %127 = call %struct.precisionType* @psetq(%struct.precisionType** %3, %struct.precisionType* %126)
  br label %128

128:                                              ; preds = %119, %110
  %129 = load i32, i32* %5, align 4
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %131, label %135

131:                                              ; preds = %128
  %132 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %133 = call %struct.precisionType* @pneg(%struct.precisionType* %132)
  %134 = call %struct.precisionType* @psetq(%struct.precisionType** %3, %struct.precisionType* %133)
  br label %135

135:                                              ; preds = %131, %128
  br label %136

136:                                              ; preds = %135, %45
  br label %137

137:                                              ; preds = %136, %1
  %138 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %139 = icmp ne %struct.precisionType* %138, null
  br i1 %139, label %140, label %151

140:                                              ; preds = %137
  %141 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %142 = bitcast %struct.precisionType* %141 to i16*
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -1
  store i16 %144, i16* %142, align 2
  %145 = zext i16 %144 to i32
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %151

147:                                              ; preds = %140
  %148 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %149 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %148)
  %150 = icmp ne i32 %149, 0
  br label %151

151:                                              ; preds = %147, %140, %137
  %152 = phi i1 [ false, %140 ], [ false, %137 ], [ %150, %147 ]
  %153 = zext i1 %152 to i32
  %154 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %155 = call %struct.precisionType* @presult(%struct.precisionType* %154)
  ret %struct.precisionType* %155
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #1

; Function Attrs: noinline nounwind uwtable
define dso_local float @pfKnuthEx28(i32 %0, i16* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i16*, align 8
  %5 = alloca float, align 4
  %6 = alloca i16*, align 8
  store i32 %0, i32* %3, align 4
  store i16* %1, i16** %4, align 8
  store i16* null, i16** %6, align 8
  %7 = load i16*, i16** %4, align 8
  %8 = icmp ne i16* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = load i16*, i16** %4, align 8
  %11 = load i16, i16* %10, align 2
  %12 = add i16 %11, 1
  store i16 %12, i16* %10, align 2
  %13 = zext i16 %11 to i32
  %14 = icmp ne i32 %13, 0
  br label %15

15:                                               ; preds = %9, %2
  %16 = phi i1 [ false, %2 ], [ %14, %9 ]
  %17 = zext i1 %16 to i32
  %18 = load i16*, i16** %4, align 8
  %19 = load i32, i32* %3, align 4
  %20 = icmp eq i32 %19, 2
  br i1 %20, label %21, label %59

21:                                               ; preds = %15
  %22 = load i16*, i16** %4, align 8
  %23 = call i32 bitcast (i32 (%struct.precisionType*)* @podd to i32 (i16*)*)(i16* %22)
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %21
  %26 = load i16*, i16** %4, align 8
  %27 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @phalf to i16* (i16*)*)(i16* %26)
  %28 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %6, i16* %27)
  %29 = load i16*, i16** %6, align 8
  %30 = call i32 bitcast (i32 (%struct.precisionType*)* @podd to i32 (i16*)*)(i16* %29)
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %25
  %33 = load i16*, i16** %6, align 8
  %34 = call float @pfKnuthEx28(i32 2, i16* %33)
  %35 = fpext float %34 to double
  %36 = fdiv double %35, 2.000000e+00
  %37 = fadd double 0x3FE5555555555555, %36
  %38 = fptrunc double %37 to float
  store float %38, float* %5, align 4
  br label %40

39:                                               ; preds = %25
  store float 0x3FD5555560000000, float* %5, align 4
  br label %40

40:                                               ; preds = %39, %32
  br label %58

41:                                               ; preds = %21
  %42 = load i16*, i16** %4, align 8
  %43 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @phalf to i16* (i16*)*)(i16* %42)
  %44 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %6, i16* %43)
  %45 = load i16*, i16** %6, align 8
  %46 = call i32 bitcast (i32 (%struct.precisionType*)* @podd to i32 (i16*)*)(i16* %45)
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %41
  store float 0x3FD5555560000000, float* %5, align 4
  br label %57

49:                                               ; preds = %41
  %50 = load i16*, i16** %6, align 8
  %51 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @phalf to i16* (i16*)*)(i16* %50)
  %52 = call i32 bitcast (i32 (%struct.precisionType*)* @podd to i32 (i16*)*)(i16* %51)
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %49
  store float 0x3FE5555560000000, float* %5, align 4
  br label %56

55:                                               ; preds = %49
  store float 0x3FF5555560000000, float* %5, align 4
  br label %56

56:                                               ; preds = %55, %54
  br label %57

57:                                               ; preds = %56, %48
  br label %58

58:                                               ; preds = %57, %40
  br label %90

59:                                               ; preds = %15
  %60 = load i32, i32* %3, align 4
  %61 = call i16* bitcast (%struct.precisionType* (i32)* @utop to i16* (i32)*)(i32 %60)
  %62 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %6, i16* %61)
  %63 = load i16*, i16** %4, align 8
  %64 = load i16*, i16** %6, align 8
  %65 = load i16*, i16** bitcast (%struct.precisionType** @pone to i16**), align 8
  %66 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @psub to i16* (i16*, i16*)*)(i16* %64, i16* %65)
  %67 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @phalf to i16* (i16*)*)(i16* %66)
  %68 = load i16*, i16** %6, align 8
  %69 = call i16* @ppowmod(i16* %63, i16* %67, i16* %68)
  %70 = load i16*, i16** bitcast (%struct.precisionType** @pone to i16**), align 8
  %71 = call i32 bitcast (i32 (%struct.precisionType*, %struct.precisionType*)* @pcmp to i32 (i16*, i16*)*)(i16* %69, i16* %70)
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %88

73:                                               ; preds = %59
  %74 = load i32, i32* %3, align 4
  %75 = load i32, i32* %3, align 4
  %76 = add i32 %74, %75
  %77 = uitofp i32 %76 to float
  %78 = fpext float %77 to double
  %79 = load i32, i32* %3, align 4
  %80 = uitofp i32 %79 to float
  %81 = load i32, i32* %3, align 4
  %82 = uitofp i32 %81 to float
  %83 = fmul float %80, %82
  %84 = fpext float %83 to double
  %85 = fsub double %84, 1.000000e+00
  %86 = fdiv double %78, %85
  %87 = fptrunc double %86 to float
  store float %87, float* %5, align 4
  br label %89

88:                                               ; preds = %59
  store float 0.000000e+00, float* %5, align 4
  br label %89

89:                                               ; preds = %88, %73
  br label %90

90:                                               ; preds = %89, %58
  %91 = load i16*, i16** %6, align 8
  %92 = icmp ne i16* %91, null
  br i1 %92, label %93, label %103

93:                                               ; preds = %90
  %94 = load i16*, i16** %6, align 8
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -1
  store i16 %96, i16* %94, align 2
  %97 = zext i16 %96 to i32
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %93
  %100 = load i16*, i16** %6, align 8
  %101 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %100)
  %102 = icmp ne i32 %101, 0
  br label %103

103:                                              ; preds = %99, %93, %90
  %104 = phi i1 [ false, %93 ], [ false, %90 ], [ %102, %99 ]
  %105 = zext i1 %104 to i32
  %106 = load i16*, i16** %4, align 8
  %107 = icmp ne i16* %106, null
  br i1 %107, label %108, label %118

108:                                              ; preds = %103
  %109 = load i16*, i16** %4, align 8
  %110 = load i16, i16* %109, align 2
  %111 = add i16 %110, -1
  store i16 %111, i16* %109, align 2
  %112 = zext i16 %111 to i32
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %118

114:                                              ; preds = %108
  %115 = load i16*, i16** %4, align 8
  %116 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %115)
  %117 = icmp ne i32 %116, 0
  br label %118

118:                                              ; preds = %114, %108, %103
  %119 = phi i1 [ false, %108 ], [ false, %103 ], [ %117, %114 ]
  %120 = zext i1 %119 to i32
  %121 = load i32, i32* @debug, align 4
  %122 = icmp sgt i32 %121, 1
  br i1 %122, label %123, label %131

123:                                              ; preds = %118
  %124 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %125 = load i32, i32* %3, align 4
  %126 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %124, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32 %125)
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %128 = load float, float* %5, align 4
  %129 = fpext float %128 to double
  %130 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), double %129)
  br label %131

131:                                              ; preds = %123, %118
  %132 = load float, float* %5, align 4
  ret float %132
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local float @logf_(i32 %0, i16* %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i16*, align 8
  %6 = alloca i32, align 4
  %7 = alloca float, align 4
  store i32 %0, i32* %4, align 4
  store i16* %1, i16** %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = load i16*, i16** %5, align 8
  %9 = icmp ne i16* %8, null
  br i1 %9, label %10, label %16

10:                                               ; preds = %3
  %11 = load i16*, i16** %5, align 8
  %12 = load i16, i16* %11, align 2
  %13 = add i16 %12, 1
  store i16 %13, i16* %11, align 2
  %14 = zext i16 %12 to i32
  %15 = icmp ne i32 %14, 0
  br label %16

16:                                               ; preds = %10, %3
  %17 = phi i1 [ false, %3 ], [ %15, %10 ]
  %18 = zext i1 %17 to i32
  %19 = load i16*, i16** %5, align 8
  %20 = load i32, i32* %4, align 4
  %21 = load i32, i32* %6, align 4
  %22 = call i16* bitcast (%struct.precisionType* (i32)* @itop to i16* (i32)*)(i32 %21)
  %23 = load i16*, i16** %5, align 8
  %24 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @pmul to i16* (i16*, i16*)*)(i16* %22, i16* %23)
  %25 = call float @pfKnuthEx28(i32 %20, i16* %24)
  %26 = fpext float %25 to double
  %27 = load i32, i32* %4, align 4
  %28 = uitofp i32 %27 to double
  %29 = call double @log(double %28) #9
  %30 = fmul double %26, %29
  %31 = fptrunc double %30 to float
  store float %31, float* %7, align 4
  %32 = load i16*, i16** %5, align 8
  %33 = icmp ne i16* %32, null
  br i1 %33, label %34, label %44

34:                                               ; preds = %16
  %35 = load i16*, i16** %5, align 8
  %36 = load i16, i16* %35, align 2
  %37 = add i16 %36, -1
  store i16 %37, i16* %35, align 2
  %38 = zext i16 %37 to i32
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %34
  %41 = load i16*, i16** %5, align 8
  %42 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %41)
  %43 = icmp ne i32 %42, 0
  br label %44

44:                                               ; preds = %40, %34, %16
  %45 = phi i1 [ false, %34 ], [ false, %16 ], [ %43, %40 ]
  %46 = zext i1 %45 to i32
  %47 = load float, float* %7, align 4
  ret float %47
}

; Function Attrs: nounwind
declare dso_local double @log(double) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @findk(i16* %0, i32* %1, i32 %2, i32 %3) #0 {
  %5 = alloca i16*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca float, align 4
  %15 = alloca float, align 4
  %16 = alloca i32*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i16*, align 8
  store i16* %0, i16** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  store i32 0, i32* %10, align 4
  store i32 0, i32* %12, align 4
  store float 0xC30C6BF520000000, float* %15, align 4
  %19 = load i16*, i16** %5, align 8
  %20 = icmp ne i16* %19, null
  br i1 %20, label %21, label %27

21:                                               ; preds = %4
  %22 = load i16*, i16** %5, align 8
  %23 = load i16, i16* %22, align 2
  %24 = add i16 %23, 1
  store i16 %24, i16* %22, align 2
  %25 = zext i16 %23 to i32
  %26 = icmp ne i32 %25, 0
  br label %27

27:                                               ; preds = %21, %4
  %28 = phi i1 [ false, %4 ], [ %26, %21 ]
  %29 = zext i1 %28 to i32
  %30 = load i16*, i16** %5, align 8
  store i32 1, i32* %9, align 4
  br label %31

31:                                               ; preds = %130, %27
  %32 = load i32, i32* %9, align 4
  %33 = load i32, i32* %8, align 4
  %34 = icmp ult i32 %32, %33
  br i1 %34, label %35, label %133

35:                                               ; preds = %31
  %36 = load i32, i32* @debug, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %49

38:                                               ; preds = %35
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %40 = call i32 @fputs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), %struct._IO_FILE* %39)
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %42 = load i32, i32* %9, align 4
  %43 = call i16* bitcast (%struct.precisionType* (i32)* @utop to i16* (i32)*)(i32 %42)
  %44 = load i16*, i16** %5, align 8
  %45 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @pmul to i16* (i16*, i16*)*)(i16* %43, i16* %44)
  %46 = call i32 bitcast (i32 (%struct._IO_FILE*, %struct.precisionType*)* @fputp to i32 (%struct._IO_FILE*, i16*)*)(%struct._IO_FILE* %41, i16* %45)
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %48 = call i32 @putc(i32 10, %struct._IO_FILE* %47)
  br label %49

49:                                               ; preds = %38, %35
  %50 = load i32*, i32** %6, align 8
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %11, align 4
  %52 = load i16*, i16** %5, align 8
  %53 = load i32, i32* %9, align 4
  %54 = load i32, i32* %7, align 4
  %55 = call i32* @pfactorbase(i16* %52, i32 %53, i32* %11, i32 %54)
  store i32* %55, i32** %16, align 8
  %56 = load i32*, i32** %16, align 8
  %57 = icmp eq i32* %56, null
  br i1 %57, label %58, label %61

58:                                               ; preds = %49
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %60 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0))
  call void @exit(i32 1) #10
  unreachable

61:                                               ; preds = %49
  %62 = load i32*, i32** %16, align 8
  %63 = load i32, i32* %11, align 4
  %64 = sub i32 %63, 1
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i32, i32* %62, i64 %65
  %67 = load i32, i32* %66, align 4
  store i32 %67, i32* %13, align 4
  store float 0.000000e+00, float* %14, align 4
  store i16* getelementptr inbounds ([6543 x i16], [6543 x i16]* @primes, i64 0, i64 0), i16** %18, align 8
  br label %68

68:                                               ; preds = %74, %61
  %69 = load i16*, i16** %18, align 8
  %70 = load i16, i16* %69, align 2
  %71 = zext i16 %70 to i32
  %72 = load i32, i32* %13, align 4
  %73 = icmp ule i32 %71, %72
  br i1 %73, label %74, label %84

74:                                               ; preds = %68
  %75 = load i16*, i16** %18, align 8
  %76 = getelementptr inbounds i16, i16* %75, i32 1
  store i16* %76, i16** %18, align 8
  %77 = load i16, i16* %75, align 2
  %78 = zext i16 %77 to i32
  %79 = load i16*, i16** %5, align 8
  %80 = load i32, i32* %9, align 4
  %81 = call float @logf_(i32 %78, i16* %79, i32 %80)
  %82 = load float, float* %14, align 4
  %83 = fadd float %82, %81
  store float %83, float* %14, align 4
  br label %68

84:                                               ; preds = %68
  %85 = load i32, i32* %9, align 4
  %86 = uitofp i32 %85 to double
  %87 = call double @log(double %86) #9
  %88 = fmul double %87, 5.000000e-01
  %89 = load float, float* %14, align 4
  %90 = fpext float %89 to double
  %91 = fsub double %90, %88
  %92 = fptrunc double %91 to float
  store float %92, float* %14, align 4
  %93 = load i32, i32* @verbose, align 4
  %94 = icmp sgt i32 %93, 2
  br i1 %94, label %95, label %101

95:                                               ; preds = %84
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %97 = load i32, i32* %9, align 4
  %98 = load float, float* %14, align 4
  %99 = fpext float %98 to double
  %100 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %96, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i32 %97, double %99)
  br label %101

101:                                              ; preds = %95, %84
  %102 = load i32, i32* @debug, align 4
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %104, label %111

104:                                              ; preds = %101
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %106 = load i32, i32* %9, align 4
  %107 = uitofp i32 %106 to double
  %108 = call double @log(double %107) #9
  %109 = fmul double %108, 5.000000e-01
  %110 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %105, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), double %109)
  br label %111

111:                                              ; preds = %104, %101
  %112 = load i32, i32* @verbose, align 4
  %113 = icmp sgt i32 %112, 2
  br i1 %113, label %114, label %119

114:                                              ; preds = %111
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %116 = call i32 @fputs(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), %struct._IO_FILE* %115)
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %118 = call i32 @fflush(%struct._IO_FILE* %117)
  br label %119

119:                                              ; preds = %114, %111
  %120 = load float, float* %14, align 4
  %121 = load float, float* %15, align 4
  %122 = fcmp ogt float %120, %121
  br i1 %122, label %123, label %127

123:                                              ; preds = %119
  %124 = load float, float* %14, align 4
  store float %124, float* %15, align 4
  %125 = load i32, i32* %9, align 4
  store i32 %125, i32* %10, align 4
  %126 = load i32, i32* %11, align 4
  store i32 %126, i32* %12, align 4
  br label %127

127:                                              ; preds = %123, %119
  %128 = load i32*, i32** %16, align 8
  %129 = bitcast i32* %128 to i8*
  call void @free(i8* %129) #9
  br label %130

130:                                              ; preds = %127
  %131 = load i32, i32* %9, align 4
  %132 = add i32 %131, 1
  store i32 %132, i32* %9, align 4
  br label %31

133:                                              ; preds = %31
  %134 = load i32, i32* %12, align 4
  %135 = load i32*, i32** %6, align 8
  store i32 %134, i32* %135, align 4
  %136 = load i16*, i16** %5, align 8
  %137 = icmp ne i16* %136, null
  br i1 %137, label %138, label %148

138:                                              ; preds = %133
  %139 = load i16*, i16** %5, align 8
  %140 = load i16, i16* %139, align 2
  %141 = add i16 %140, -1
  store i16 %141, i16* %139, align 2
  %142 = zext i16 %141 to i32
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %148

144:                                              ; preds = %138
  %145 = load i16*, i16** %5, align 8
  %146 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %145)
  %147 = icmp ne i32 %146, 0
  br label %148

148:                                              ; preds = %144, %138, %133
  %149 = phi i1 [ false, %138 ], [ false, %133 ], [ %147, %144 ]
  %150 = zext i1 %149 to i32
  %151 = load i32, i32* %10, align 4
  ret i32 %151
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #2

declare dso_local i32 @putc(i32, %struct._IO_FILE*) #2

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #4

declare dso_local i32 @fflush(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local void @free(i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i16*, align 8
  %13 = alloca i16*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i32 1073741824, i32* %8, align 4
  store i32 0, i32* %10, align 4
  store i16* null, i16** %12, align 8
  store i16* null, i16** %13, align 8
  store i32 3, i32* %14, align 4
  %16 = load i8**, i8*** %5, align 8
  %17 = load i8*, i8** %16, align 8
  store i8* %17, i8** @progName, align 8
  br label %18

18:                                               ; preds = %45, %2
  %19 = load i32, i32* %4, align 4
  %20 = load i8**, i8*** %5, align 8
  %21 = call i32 (i32, i8**, i8*, ...) bitcast (i32 (...)* @getopt to i32 (i32, i8**, i8*, ...)*)(i32 %19, i8** %20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0))
  store i32 %21, i32* %11, align 4
  %22 = icmp ne i32 %21, -1
  br i1 %22, label %23, label %46

23:                                               ; preds = %18
  %24 = load i32, i32* %11, align 4
  switch i32 %24, label %40 [
    i32 97, label %25
    i32 107, label %28
    i32 105, label %31
    i32 100, label %34
    i32 118, label %37
  ]

25:                                               ; preds = %23
  %26 = load i8*, i8** @optarg, align 8
  %27 = call i32 @atoi(i8* %26) #11
  store i32 %27, i32* %14, align 4
  br label %45

28:                                               ; preds = %23
  %29 = load i8*, i8** @optarg, align 8
  %30 = call i32 @atoi(i8* %29) #11
  store i32 %30, i32* %10, align 4
  br label %45

31:                                               ; preds = %23
  %32 = load i8*, i8** @optarg, align 8
  %33 = call i32 @atoi(i8* %32) #11
  store i32 %33, i32* %8, align 4
  br label %45

34:                                               ; preds = %23
  %35 = load i32, i32* @debug, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* @debug, align 4
  br label %45

37:                                               ; preds = %23
  %38 = load i32, i32* @verbose, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* @verbose, align 4
  br label %45

40:                                               ; preds = %23
  br label %41

41:                                               ; preds = %59, %40
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %43 = load i8*, i8** @progName, align 8
  %44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.8, i64 0, i64 0), i8* %43)
  store i32 1, i32* %3, align 4
  br label %204

45:                                               ; preds = %37, %34, %31, %28, %25
  br label %18

46:                                               ; preds = %18
  %47 = load i32, i32* @optind, align 4
  %48 = load i32, i32* %4, align 4
  %49 = sub nsw i32 %48, %47
  store i32 %49, i32* %4, align 4
  %50 = load i32, i32* @optind, align 4
  %51 = load i8**, i8*** %5, align 8
  %52 = sext i32 %50 to i64
  %53 = getelementptr inbounds i8*, i8** %51, i64 %52
  store i8** %53, i8*** %5, align 8
  %54 = load i32, i32* %4, align 4
  %55 = icmp slt i32 %54, 1
  br i1 %55, label %59, label %56

56:                                               ; preds = %46
  %57 = load i32, i32* %4, align 4
  %58 = icmp sgt i32 %57, 3
  br i1 %58, label %59, label %60

59:                                               ; preds = %56, %46
  br label %41

60:                                               ; preds = %56
  %61 = load i8**, i8*** %5, align 8
  %62 = getelementptr inbounds i8*, i8** %61, i32 1
  store i8** %62, i8*** %5, align 8
  %63 = load i8*, i8** %61, align 8
  %64 = call i16* bitcast (%struct.precisionType* (i8*)* @atop to i16* (i8*)*)(i8* %63)
  %65 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %12, i16* %64)
  %66 = load i32, i32* %4, align 4
  %67 = add nsw i32 %66, -1
  store i32 %67, i32* %4, align 4
  %68 = load i32, i32* %4, align 4
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %60
  %71 = load i8**, i8*** %5, align 8
  %72 = getelementptr inbounds i8*, i8** %71, i32 1
  store i8** %72, i8*** %5, align 8
  %73 = load i8*, i8** %71, align 8
  %74 = call i32 @atoi(i8* %73) #11
  store i32 %74, i32* %6, align 4
  %75 = load i32, i32* %4, align 4
  %76 = add nsw i32 %75, -1
  store i32 %76, i32* %4, align 4
  br label %77

77:                                               ; preds = %70, %60
  %78 = load i32, i32* %4, align 4
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %87

80:                                               ; preds = %77
  %81 = load i8**, i8*** %5, align 8
  %82 = getelementptr inbounds i8*, i8** %81, i32 1
  store i8** %82, i8*** %5, align 8
  %83 = load i8*, i8** %81, align 8
  %84 = call i32 @atoi(i8* %83) #11
  store i32 %84, i32* %7, align 4
  %85 = load i32, i32* %4, align 4
  %86 = add nsw i32 %85, -1
  store i32 %86, i32* %4, align 4
  br label %87

87:                                               ; preds = %80, %77
  %88 = load i32, i32* %7, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %116

90:                                               ; preds = %87
  %91 = load i32, i32* %10, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %104

93:                                               ; preds = %90
  %94 = load i32, i32* %6, align 4
  %95 = udiv i32 %94, 2
  %96 = add i32 %95, 5
  store i32 %96, i32* %10, align 4
  %97 = load i32, i32* @verbose, align 4
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %93
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %101 = load i32, i32* %10, align 4
  %102 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i32 %101)
  br label %103

103:                                              ; preds = %99, %93
  br label %104

104:                                              ; preds = %103, %90
  %105 = load i16*, i16** %12, align 8
  %106 = load i32, i32* %14, align 4
  %107 = load i32, i32* %10, align 4
  %108 = call i32 @findk(i16* %105, i32* %6, i32 %106, i32 %107)
  store i32 %108, i32* %7, align 4
  %109 = load i32, i32* @verbose, align 4
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %111, label %115

111:                                              ; preds = %104
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %113 = load i32, i32* %7, align 4
  %114 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %112, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i32 %113)
  br label %115

115:                                              ; preds = %111, %104
  br label %116

116:                                              ; preds = %115, %87
  %117 = load i32, i32* %8, align 4
  store i32 %117, i32* %9, align 4
  %118 = load i32, i32* %6, align 4
  %119 = load i32, i32* %7, align 4
  %120 = load i32, i32* %14, align 4
  %121 = call i32 @pcfracInit(i32 %118, i32 %119, i32 %120)
  %122 = load i16*, i16** %12, align 8
  %123 = call i16* @pcfrac(i16* %122, i32* %9)
  %124 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %13, i16* %123)
  %125 = load i32, i32* %8, align 4
  %126 = load i32, i32* %9, align 4
  %127 = sub i32 %125, %126
  store i32 %127, i32* %9, align 4
  %128 = load i32, i32* @verbose, align 4
  %129 = icmp ne i32 %128, 0
  br i1 %129, label %130, label %151

130:                                              ; preds = %116
  %131 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %132 = call i32 @putc(i32 10, %struct._IO_FILE* %131)
  %133 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %134 = load i32, i32* %9, align 4
  %135 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %133, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i32 %134)
  %136 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %137 = load i32, i32* @cfracNabort, align 4
  %138 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %136, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0), i32 %137)
  %139 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %140 = load i32, i32* @cfracTsolns, align 4
  %141 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %139, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i32 %140)
  %142 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %143 = load i32, i32* @cfracT2solns, align 4
  %144 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %142, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), i32 %143)
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %146 = load i32, i32* @cfracPsolns, align 4
  %147 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %145, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i64 0, i64 0), i32 %146)
  %148 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %149 = load i32, i32* @cfracFsolns, align 4
  %150 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %148, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i32 %149)
  br label %151

151:                                              ; preds = %130, %116
  %152 = load i16*, i16** %13, align 8
  %153 = icmp ne i16* %152, null
  br i1 %153, label %154, label %173

154:                                              ; preds = %151
  %155 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %156 = load i16*, i16** %12, align 8
  %157 = call i32 bitcast (i32 (%struct._IO_FILE*, %struct.precisionType*)* @fputp to i32 (%struct._IO_FILE*, i16*)*)(%struct._IO_FILE* %155, i16* %156)
  %158 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %159 = call i32 @fputs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0), %struct._IO_FILE* %158)
  %160 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %161 = load i16*, i16** %13, align 8
  %162 = call i32 bitcast (i32 (%struct._IO_FILE*, %struct.precisionType*)* @fputp to i32 (%struct._IO_FILE*, i16*)*)(%struct._IO_FILE* %160, i16* %161)
  %163 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %164 = call i32 @fputs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), %struct._IO_FILE* %163)
  %165 = load i16*, i16** %12, align 8
  %166 = load i16*, i16** %13, align 8
  %167 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*, %struct.precisionType**, %struct.precisionType**)* @pdivmod to i16* (i16*, i16*, i16**, i16**)*)(i16* %165, i16* %166, i16** %12, i16** null)
  %168 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %169 = load i16*, i16** %12, align 8
  %170 = call i32 bitcast (i32 (%struct._IO_FILE*, %struct.precisionType*)* @fputp to i32 (%struct._IO_FILE*, i16*)*)(%struct._IO_FILE* %168, i16* %169)
  %171 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %172 = call i32 @putc(i32 10, %struct._IO_FILE* %171)
  br label %173

173:                                              ; preds = %154, %151
  %174 = load i16*, i16** %13, align 8
  %175 = icmp ne i16* %174, null
  br i1 %175, label %176, label %186

176:                                              ; preds = %173
  %177 = load i16*, i16** %13, align 8
  %178 = load i16, i16* %177, align 2
  %179 = add i16 %178, -1
  store i16 %179, i16* %177, align 2
  %180 = zext i16 %179 to i32
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %186

182:                                              ; preds = %176
  %183 = load i16*, i16** %13, align 8
  %184 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %183)
  %185 = icmp ne i32 %184, 0
  br label %186

186:                                              ; preds = %182, %176, %173
  %187 = phi i1 [ false, %176 ], [ false, %173 ], [ %185, %182 ]
  %188 = zext i1 %187 to i32
  %189 = load i16*, i16** %12, align 8
  %190 = icmp ne i16* %189, null
  br i1 %190, label %191, label %201

191:                                              ; preds = %186
  %192 = load i16*, i16** %12, align 8
  %193 = load i16, i16* %192, align 2
  %194 = add i16 %193, -1
  store i16 %194, i16* %192, align 2
  %195 = zext i16 %194 to i32
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %201

197:                                              ; preds = %191
  %198 = load i16*, i16** %12, align 8
  %199 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %198)
  %200 = icmp ne i32 %199, 0
  br label %201

201:                                              ; preds = %197, %191, %186
  %202 = phi i1 [ false, %191 ], [ false, %186 ], [ %200, %197 ]
  %203 = zext i1 %202 to i32
  store i32 0, i32* %3, align 4
  br label %204

204:                                              ; preds = %201, %41
  %205 = load i32, i32* %3, align 4
  ret i32 %205
}

declare dso_local i32 @getopt(...) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #5

; Function Attrs: noinline nounwind uwtable
define dso_local i16* @errorp(i32 %0, i8* %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load i8*, i8** %5, align 8
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %9 = call i32 @fputs(i8* %7, %struct._IO_FILE* %8)
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), %struct._IO_FILE* %10)
  %12 = load i8*, i8** %6, align 8
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %14 = call i32 @fputs(i8* %12, %struct._IO_FILE* %13)
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %16 = call i32 @fputs(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.20, i64 0, i64 0), %struct._IO_FILE* %15)
  call void @abort() #10
  unreachable
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #4

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @itop(i32 %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i16*, align 8
  %5 = alloca %struct.precisionType*, align 8
  store i32 %0, i32* %3, align 4
  %6 = call %struct.precisionType* (i32, ...) bitcast (%struct.precisionType* (i32)* @palloc to %struct.precisionType* (i32, ...)*)(i32 2)
  store %struct.precisionType* %6, %struct.precisionType** %5, align 8
  %7 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %8 = icmp eq %struct.precisionType* %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  store %struct.precisionType* %10, %struct.precisionType** %2, align 8
  br label %51

11:                                               ; preds = %1
  %12 = load i32, i32* %3, align 4
  %13 = icmp slt i32 %12, 0
  %14 = zext i1 %13 to i32
  %15 = trunc i32 %14 to i8
  %16 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %17 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %16, i32 0, i32 3
  store i8 %15, i8* %17, align 2
  %18 = icmp ne i8 %15, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load i32, i32* %3, align 4
  %21 = sub nsw i32 0, %20
  store i32 %21, i32* %3, align 4
  br label %22

22:                                               ; preds = %19, %11
  %23 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %24 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %23, i32 0, i32 4
  %25 = getelementptr inbounds [1 x i16], [1 x i16]* %24, i64 0, i64 0
  store i16* %25, i16** %4, align 8
  br label %26

26:                                               ; preds = %34, %22
  %27 = load i32, i32* %3, align 4
  %28 = and i32 %27, 65535
  %29 = trunc i32 %28 to i16
  %30 = load i16*, i16** %4, align 8
  %31 = getelementptr inbounds i16, i16* %30, i32 1
  store i16* %31, i16** %4, align 8
  store i16 %29, i16* %30, align 2
  %32 = load i32, i32* %3, align 4
  %33 = ashr i32 %32, 16
  store i32 %33, i32* %3, align 4
  br label %34

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %26, label %37

37:                                               ; preds = %34
  %38 = load i16*, i16** %4, align 8
  %39 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %40 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %39, i32 0, i32 4
  %41 = getelementptr inbounds [1 x i16], [1 x i16]* %40, i64 0, i64 0
  %42 = ptrtoint i16* %38 to i64
  %43 = ptrtoint i16* %41 to i64
  %44 = sub i64 %42, %43
  %45 = sdiv exact i64 %44, 2
  %46 = trunc i64 %45 to i16
  %47 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %48 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %47, i32 0, i32 2
  store i16 %46, i16* %48, align 2
  %49 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %50 = call %struct.precisionType* @presult(%struct.precisionType* %49)
  store %struct.precisionType* %50, %struct.precisionType** %2, align 8
  br label %51

51:                                               ; preds = %37, %9
  %52 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  ret %struct.precisionType* %52
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @ltop(i64 %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i16*, align 8
  %5 = alloca %struct.precisionType*, align 8
  store i64 %0, i64* %3, align 8
  %6 = call %struct.precisionType* (i32, ...) bitcast (%struct.precisionType* (i32)* @palloc to %struct.precisionType* (i32, ...)*)(i32 2)
  store %struct.precisionType* %6, %struct.precisionType** %5, align 8
  %7 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %8 = icmp eq %struct.precisionType* %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  store %struct.precisionType* %10, %struct.precisionType** %2, align 8
  br label %51

11:                                               ; preds = %1
  %12 = load i64, i64* %3, align 8
  %13 = icmp slt i64 %12, 0
  %14 = zext i1 %13 to i32
  %15 = trunc i32 %14 to i8
  %16 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %17 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %16, i32 0, i32 3
  store i8 %15, i8* %17, align 2
  %18 = icmp ne i8 %15, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load i64, i64* %3, align 8
  %21 = sub nsw i64 0, %20
  store i64 %21, i64* %3, align 8
  br label %22

22:                                               ; preds = %19, %11
  %23 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %24 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %23, i32 0, i32 4
  %25 = getelementptr inbounds [1 x i16], [1 x i16]* %24, i64 0, i64 0
  store i16* %25, i16** %4, align 8
  br label %26

26:                                               ; preds = %34, %22
  %27 = load i64, i64* %3, align 8
  %28 = and i64 %27, 65535
  %29 = trunc i64 %28 to i16
  %30 = load i16*, i16** %4, align 8
  %31 = getelementptr inbounds i16, i16* %30, i32 1
  store i16* %31, i16** %4, align 8
  store i16 %29, i16* %30, align 2
  %32 = load i64, i64* %3, align 8
  %33 = ashr i64 %32, 16
  store i64 %33, i64* %3, align 8
  br label %34

34:                                               ; preds = %26
  %35 = load i64, i64* %3, align 8
  %36 = icmp ne i64 %35, 0
  br i1 %36, label %26, label %37

37:                                               ; preds = %34
  %38 = load i16*, i16** %4, align 8
  %39 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %40 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %39, i32 0, i32 4
  %41 = getelementptr inbounds [1 x i16], [1 x i16]* %40, i64 0, i64 0
  %42 = ptrtoint i16* %38 to i64
  %43 = ptrtoint i16* %41 to i64
  %44 = sub i64 %42, %43
  %45 = sdiv exact i64 %44, 2
  %46 = trunc i64 %45 to i16
  %47 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %48 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %47, i32 0, i32 2
  store i16 %46, i16* %48, align 2
  %49 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %50 = call %struct.precisionType* @presult(%struct.precisionType* %49)
  store %struct.precisionType* %50, %struct.precisionType** %2, align 8
  br label %51

51:                                               ; preds = %37, %9
  %52 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  ret %struct.precisionType* %52
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @pabs(%struct.precisionType* %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  %3 = alloca %struct.precisionType*, align 8
  %4 = alloca %struct.precisionType*, align 8
  store %struct.precisionType* %0, %struct.precisionType** %3, align 8
  %5 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %6 = icmp ne %struct.precisionType* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %9 = bitcast %struct.precisionType* %8 to i16*
  %10 = load i16, i16* %9, align 2
  %11 = add i16 %10, 1
  store i16 %11, i16* %9, align 2
  %12 = zext i16 %10 to i32
  %13 = icmp ne i32 %12, 0
  br label %14

14:                                               ; preds = %7, %1
  %15 = phi i1 [ false, %1 ], [ %13, %7 ]
  %16 = zext i1 %15 to i32
  %17 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %18 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %19 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %18, i32 0, i32 2
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = call %struct.precisionType* (i32, ...) bitcast (%struct.precisionType* (i32)* @palloc to %struct.precisionType* (i32, ...)*)(i32 %21)
  store %struct.precisionType* %22, %struct.precisionType** %4, align 8
  %23 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %24 = icmp eq %struct.precisionType* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %14
  %26 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  store %struct.precisionType* %26, %struct.precisionType** %2, align 8
  br label %61

27:                                               ; preds = %14
  %28 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %29 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %28, i32 0, i32 3
  store i8 0, i8* %29, align 2
  %30 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %31 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %30, i32 0, i32 4
  %32 = getelementptr inbounds [1 x i16], [1 x i16]* %31, i64 0, i64 0
  %33 = bitcast i16* %32 to i8*
  %34 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %35 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %34, i32 0, i32 4
  %36 = getelementptr inbounds [1 x i16], [1 x i16]* %35, i64 0, i64 0
  %37 = bitcast i16* %36 to i8*
  %38 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %39 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %38, i32 0, i32 2
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i64
  %42 = mul i64 %41, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %33, i8* align 2 %37, i64 %42, i1 false)
  %43 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %44 = icmp ne %struct.precisionType* %43, null
  br i1 %44, label %45, label %56

45:                                               ; preds = %27
  %46 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %47 = bitcast %struct.precisionType* %46 to i16*
  %48 = load i16, i16* %47, align 2
  %49 = add i16 %48, -1
  store i16 %49, i16* %47, align 2
  %50 = zext i16 %49 to i32
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %45
  %53 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %54 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %53)
  %55 = icmp ne i32 %54, 0
  br label %56

56:                                               ; preds = %52, %45, %27
  %57 = phi i1 [ false, %45 ], [ false, %27 ], [ %55, %52 ]
  %58 = zext i1 %57 to i32
  %59 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %60 = call %struct.precisionType* @presult(%struct.precisionType* %59)
  store %struct.precisionType* %60, %struct.precisionType** %2, align 8
  br label %61

61:                                               ; preds = %56, %25
  %62 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  ret %struct.precisionType* %62
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @padd(%struct.precisionType* %0, %struct.precisionType* %1) #0 {
  %3 = alloca %struct.precisionType*, align 8
  %4 = alloca %struct.precisionType*, align 8
  %5 = alloca %struct.precisionType*, align 8
  %6 = alloca i16*, align 8
  %7 = alloca i16*, align 8
  %8 = alloca i16*, align 8
  %9 = alloca %struct.precisionType*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  store %struct.precisionType* %0, %struct.precisionType** %4, align 8
  store %struct.precisionType* %1, %struct.precisionType** %5, align 8
  %12 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %13 = icmp ne %struct.precisionType* %12, null
  br i1 %13, label %14, label %21

14:                                               ; preds = %2
  %15 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %16 = bitcast %struct.precisionType* %15 to i16*
  %17 = load i16, i16* %16, align 2
  %18 = add i16 %17, 1
  store i16 %18, i16* %16, align 2
  %19 = zext i16 %17 to i32
  %20 = icmp ne i32 %19, 0
  br label %21

21:                                               ; preds = %14, %2
  %22 = phi i1 [ false, %2 ], [ %20, %14 ]
  %23 = zext i1 %22 to i32
  %24 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %25 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %26 = icmp ne %struct.precisionType* %25, null
  br i1 %26, label %27, label %34

27:                                               ; preds = %21
  %28 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %29 = bitcast %struct.precisionType* %28 to i16*
  %30 = load i16, i16* %29, align 2
  %31 = add i16 %30, 1
  store i16 %31, i16* %29, align 2
  %32 = zext i16 %30 to i32
  %33 = icmp ne i32 %32, 0
  br label %34

34:                                               ; preds = %27, %21
  %35 = phi i1 [ false, %21 ], [ %33, %27 ]
  %36 = zext i1 %35 to i32
  %37 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %38 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %39 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %38, i32 0, i32 3
  %40 = load i8, i8* %39, align 2
  %41 = zext i8 %40 to i32
  %42 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %43 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %42, i32 0, i32 3
  %44 = load i8, i8* %43, align 2
  %45 = zext i8 %44 to i32
  %46 = icmp ne i32 %41, %45
  br i1 %46, label %47, label %99

47:                                               ; preds = %34
  store %struct.precisionType* null, %struct.precisionType** %9, align 8
  %48 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %49 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %48, i32 0, i32 3
  %50 = load i8, i8* %49, align 2
  %51 = icmp ne i8 %50, 0
  br i1 %51, label %52, label %75

52:                                               ; preds = %47
  %53 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %54 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %53, i32 0, i32 3
  %55 = load i8, i8* %54, align 2
  %56 = icmp ne i8 %55, 0
  %57 = xor i1 %56, true
  %58 = zext i1 %57 to i32
  %59 = trunc i32 %58 to i8
  %60 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %61 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %60, i32 0, i32 3
  store i8 %59, i8* %61, align 2
  %62 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %63 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %64 = call %struct.precisionType* @psub(%struct.precisionType* %62, %struct.precisionType* %63)
  %65 = call %struct.precisionType* @psetq(%struct.precisionType** %9, %struct.precisionType* %64)
  %66 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %67 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %66, i32 0, i32 3
  %68 = load i8, i8* %67, align 2
  %69 = icmp ne i8 %68, 0
  %70 = xor i1 %69, true
  %71 = zext i1 %70 to i32
  %72 = trunc i32 %71 to i8
  %73 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %74 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %73, i32 0, i32 3
  store i8 %72, i8* %74, align 2
  br label %98

75:                                               ; preds = %47
  %76 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %77 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %76, i32 0, i32 3
  %78 = load i8, i8* %77, align 2
  %79 = icmp ne i8 %78, 0
  %80 = xor i1 %79, true
  %81 = zext i1 %80 to i32
  %82 = trunc i32 %81 to i8
  %83 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %84 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %83, i32 0, i32 3
  store i8 %82, i8* %84, align 2
  %85 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %86 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %87 = call %struct.precisionType* @psub(%struct.precisionType* %85, %struct.precisionType* %86)
  %88 = call %struct.precisionType* @psetq(%struct.precisionType** %9, %struct.precisionType* %87)
  %89 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %90 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %89, i32 0, i32 3
  %91 = load i8, i8* %90, align 2
  %92 = icmp ne i8 %91, 0
  %93 = xor i1 %92, true
  %94 = zext i1 %93 to i32
  %95 = trunc i32 %94 to i8
  %96 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %97 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %96, i32 0, i32 3
  store i8 %95, i8* %97, align 2
  br label %98

98:                                               ; preds = %75, %52
  br label %214

99:                                               ; preds = %34
  %100 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %101 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %100, i32 0, i32 2
  %102 = load i16, i16* %101, align 2
  %103 = zext i16 %102 to i32
  %104 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %105 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %104, i32 0, i32 2
  %106 = load i16, i16* %105, align 2
  %107 = zext i16 %106 to i32
  %108 = icmp slt i32 %103, %107
  br i1 %108, label %109, label %113

109:                                              ; preds = %99
  %110 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  store %struct.precisionType* %110, %struct.precisionType** %9, align 8
  %111 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  store %struct.precisionType* %111, %struct.precisionType** %4, align 8
  %112 = load %struct.precisionType*, %struct.precisionType** %9, align 8
  store %struct.precisionType* %112, %struct.precisionType** %5, align 8
  br label %113

113:                                              ; preds = %109, %99
  %114 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %115 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %114, i32 0, i32 2
  %116 = load i16, i16* %115, align 2
  %117 = zext i16 %116 to i32
  %118 = add nsw i32 %117, 1
  %119 = call %struct.precisionType* (i32, ...) bitcast (%struct.precisionType* (i32)* @palloc to %struct.precisionType* (i32, ...)*)(i32 %118)
  store %struct.precisionType* %119, %struct.precisionType** %9, align 8
  %120 = load %struct.precisionType*, %struct.precisionType** %9, align 8
  %121 = icmp eq %struct.precisionType* %120, null
  br i1 %121, label %122, label %124

122:                                              ; preds = %113
  %123 = load %struct.precisionType*, %struct.precisionType** %9, align 8
  store %struct.precisionType* %123, %struct.precisionType** %3, align 8
  br label %249

124:                                              ; preds = %113
  %125 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %126 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %125, i32 0, i32 3
  %127 = load i8, i8* %126, align 2
  %128 = load %struct.precisionType*, %struct.precisionType** %9, align 8
  %129 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %128, i32 0, i32 3
  store i8 %127, i8* %129, align 2
  %130 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %131 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %130, i32 0, i32 4
  %132 = getelementptr inbounds [1 x i16], [1 x i16]* %131, i64 0, i64 0
  store i16* %132, i16** %7, align 8
  %133 = load %struct.precisionType*, %struct.precisionType** %9, align 8
  %134 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %133, i32 0, i32 4
  %135 = getelementptr inbounds [1 x i16], [1 x i16]* %134, i64 0, i64 0
  store i16* %135, i16** %6, align 8
  %136 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %137 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %136, i32 0, i32 4
  %138 = getelementptr inbounds [1 x i16], [1 x i16]* %137, i64 0, i64 0
  store i16* %138, i16** %8, align 8
  store i16 0, i16* %11, align 2
  br label %139

139:                                              ; preds = %161, %124
  %140 = load i16*, i16** %7, align 8
  %141 = getelementptr inbounds i16, i16* %140, i32 1
  store i16* %141, i16** %7, align 8
  %142 = load i16, i16* %140, align 2
  %143 = zext i16 %142 to i32
  %144 = load i16*, i16** %8, align 8
  %145 = getelementptr inbounds i16, i16* %144, i32 1
  store i16* %145, i16** %8, align 8
  %146 = load i16, i16* %144, align 2
  %147 = zext i16 %146 to i32
  %148 = add nsw i32 %143, %147
  store i32 %148, i32* %10, align 4
  %149 = load i16, i16* %11, align 2
  %150 = zext i16 %149 to i32
  %151 = load i32, i32* %10, align 4
  %152 = add i32 %151, %150
  store i32 %152, i32* %10, align 4
  %153 = load i32, i32* %10, align 4
  %154 = lshr i32 %153, 16
  %155 = trunc i32 %154 to i16
  store i16 %155, i16* %11, align 2
  %156 = load i32, i32* %10, align 4
  %157 = and i32 %156, 65535
  %158 = trunc i32 %157 to i16
  %159 = load i16*, i16** %6, align 8
  %160 = getelementptr inbounds i16, i16* %159, i32 1
  store i16* %160, i16** %6, align 8
  store i16 %158, i16* %159, align 2
  br label %161

161:                                              ; preds = %139
  %162 = load i16*, i16** %8, align 8
  %163 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %164 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %163, i32 0, i32 4
  %165 = getelementptr inbounds [1 x i16], [1 x i16]* %164, i64 0, i64 0
  %166 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %167 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %166, i32 0, i32 2
  %168 = load i16, i16* %167, align 2
  %169 = zext i16 %168 to i32
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i16, i16* %165, i64 %170
  %172 = icmp ult i16* %162, %171
  br i1 %172, label %139, label %173

173:                                              ; preds = %161
  br label %174

174:                                              ; preds = %186, %173
  %175 = load i16*, i16** %7, align 8
  %176 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %177 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %176, i32 0, i32 4
  %178 = getelementptr inbounds [1 x i16], [1 x i16]* %177, i64 0, i64 0
  %179 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %180 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %179, i32 0, i32 2
  %181 = load i16, i16* %180, align 2
  %182 = zext i16 %181 to i32
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i16, i16* %178, i64 %183
  %185 = icmp ult i16* %175, %184
  br i1 %185, label %186, label %202

186:                                              ; preds = %174
  %187 = load i16*, i16** %7, align 8
  %188 = getelementptr inbounds i16, i16* %187, i32 1
  store i16* %188, i16** %7, align 8
  %189 = load i16, i16* %187, align 2
  %190 = zext i16 %189 to i32
  %191 = load i16, i16* %11, align 2
  %192 = zext i16 %191 to i32
  %193 = add nsw i32 %190, %192
  store i32 %193, i32* %10, align 4
  %194 = load i32, i32* %10, align 4
  %195 = lshr i32 %194, 16
  %196 = trunc i32 %195 to i16
  store i16 %196, i16* %11, align 2
  %197 = load i32, i32* %10, align 4
  %198 = and i32 %197, 65535
  %199 = trunc i32 %198 to i16
  %200 = load i16*, i16** %6, align 8
  %201 = getelementptr inbounds i16, i16* %200, i32 1
  store i16* %201, i16** %6, align 8
  store i16 %199, i16* %200, align 2
  br label %174

202:                                              ; preds = %174
  %203 = load i16, i16* %11, align 2
  %204 = load i16*, i16** %6, align 8
  store i16 %203, i16* %204, align 2
  %205 = load i16, i16* %11, align 2
  %206 = zext i16 %205 to i32
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %213

208:                                              ; preds = %202
  %209 = load %struct.precisionType*, %struct.precisionType** %9, align 8
  %210 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %209, i32 0, i32 2
  %211 = load i16, i16* %210, align 2
  %212 = add i16 %211, -1
  store i16 %212, i16* %210, align 2
  br label %213

213:                                              ; preds = %208, %202
  br label %214

214:                                              ; preds = %213, %98
  %215 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %216 = icmp ne %struct.precisionType* %215, null
  br i1 %216, label %217, label %228

217:                                              ; preds = %214
  %218 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %219 = bitcast %struct.precisionType* %218 to i16*
  %220 = load i16, i16* %219, align 2
  %221 = add i16 %220, -1
  store i16 %221, i16* %219, align 2
  %222 = zext i16 %221 to i32
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %228

224:                                              ; preds = %217
  %225 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %226 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %225)
  %227 = icmp ne i32 %226, 0
  br label %228

228:                                              ; preds = %224, %217, %214
  %229 = phi i1 [ false, %217 ], [ false, %214 ], [ %227, %224 ]
  %230 = zext i1 %229 to i32
  %231 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %232 = icmp ne %struct.precisionType* %231, null
  br i1 %232, label %233, label %244

233:                                              ; preds = %228
  %234 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %235 = bitcast %struct.precisionType* %234 to i16*
  %236 = load i16, i16* %235, align 2
  %237 = add i16 %236, -1
  store i16 %237, i16* %235, align 2
  %238 = zext i16 %237 to i32
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %244

240:                                              ; preds = %233
  %241 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %242 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %241)
  %243 = icmp ne i32 %242, 0
  br label %244

244:                                              ; preds = %240, %233, %228
  %245 = phi i1 [ false, %233 ], [ false, %228 ], [ %243, %240 ]
  %246 = zext i1 %245 to i32
  %247 = load %struct.precisionType*, %struct.precisionType** %9, align 8
  %248 = call %struct.precisionType* @presult(%struct.precisionType* %247)
  store %struct.precisionType* %248, %struct.precisionType** %3, align 8
  br label %249

249:                                              ; preds = %244, %122
  %250 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  ret %struct.precisionType* %250
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @setBit(i8* %0, i32 %1, i32 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load i32, i32* %5, align 4
  %8 = zext i32 %7 to i64
  %9 = udiv i64 %8, 8
  %10 = load i8*, i8** %4, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %9
  store i8* %11, i8** %4, align 8
  %12 = load i32, i32* %5, align 4
  %13 = zext i32 %12 to i64
  %14 = urem i64 %13, 8
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %5, align 4
  %16 = load i32, i32* %6, align 4
  %17 = icmp ne i32 %16, 0
  %18 = zext i1 %17 to i32
  %19 = load i32, i32* %5, align 4
  %20 = shl i32 %18, %19
  %21 = load i8*, i8** %4, align 8
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = or i32 %23, %20
  %25 = trunc i32 %24 to i8
  store i8 %25, i8* %21, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @getBit(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load i32, i32* %4, align 4
  %7 = zext i32 %6 to i64
  %8 = udiv i64 %7, 8
  %9 = load i8*, i8** %3, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 %8
  store i8* %10, i8** %3, align 8
  %11 = load i32, i32* %4, align 4
  %12 = zext i32 %11 to i64
  %13 = urem i64 %12, 8
  %14 = trunc i64 %13 to i32
  store i32 %14, i32* %4, align 4
  %15 = load i8*, i8** %3, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = load i32, i32* %4, align 4
  %19 = ashr i32 %17, %18
  %20 = and i32 %19, 1
  store i32 %20, i32* %5, align 4
  %21 = load i32, i32* %5, align 4
  ret i32 %21
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @newBitVector(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  %9 = load i8*, i8** %4, align 8
  %10 = load i32, i32* %5, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %9, i64 %11
  store i8* %12, i8** %7, align 8
  %13 = load i32, i32* %5, align 4
  %14 = zext i32 %13 to i64
  %15 = add i64 %14, 8
  %16 = sub i64 %15, 1
  %17 = udiv i64 %16, 8
  %18 = mul i64 %17, 1
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %8, align 4
  %20 = load i32, i32* %8, align 4
  %21 = zext i32 %20 to i64
  %22 = call noalias i8* @malloc(i64 %21) #9
  store i8* %22, i8** %6, align 8
  %23 = load i8*, i8** %6, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %2
  %26 = load i8*, i8** %6, align 8
  store i8* %26, i8** %3, align 8
  br label %54

27:                                               ; preds = %2
  %28 = load i8*, i8** %6, align 8
  %29 = load i32, i32* %8, align 4
  %30 = zext i32 %29 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %28, i8 0, i64 %30, i1 false)
  br label %31

31:                                               ; preds = %48, %27
  %32 = load i8*, i8** %7, align 8
  %33 = getelementptr inbounds i8, i8* %32, i32 -1
  store i8* %33, i8** %7, align 8
  %34 = load i8, i8* %33, align 1
  %35 = icmp ne i8 %34, 0
  br i1 %35, label %36, label %47

36:                                               ; preds = %31
  %37 = load i8*, i8** %6, align 8
  %38 = load i8*, i8** %7, align 8
  %39 = load i8*, i8** %4, align 8
  %40 = ptrtoint i8* %38 to i64
  %41 = ptrtoint i8* %39 to i64
  %42 = sub i64 %40, %41
  %43 = trunc i64 %42 to i32
  %44 = load i8*, i8** %7, align 8
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  call void @setBit(i8* %37, i32 %43, i32 %46)
  br label %47

47:                                               ; preds = %36, %31
  br label %48

48:                                               ; preds = %47
  %49 = load i8*, i8** %7, align 8
  %50 = load i8*, i8** %4, align 8
  %51 = icmp ne i8* %49, %50
  br i1 %51, label %31, label %52

52:                                               ; preds = %48
  %53 = load i8*, i8** %6, align 8
  store i8* %53, i8** %3, align 8
  br label %54

54:                                               ; preds = %52, %25
  %55 = load i8*, i8** %3, align 8
  ret i8* %55
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind uwtable
define dso_local void @printSoln(%struct._IO_FILE* %0, i8* %1, i8* %2, i32* %3, i32 %4, i16* %5, i16* %6, i8* %7) #0 {
  %9 = alloca %struct._IO_FILE*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i16*, align 8
  %15 = alloca i16*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %9, align 8
  store i8* %1, i8** %10, align 8
  store i8* %2, i8** %11, align 8
  store i32* %3, i32** %12, align 8
  store i32 %4, i32* %13, align 4
  store i16* %5, i16** %14, align 8
  store i16* %6, i16** %15, align 8
  store i8* %7, i8** %16, align 8
  store i32 0, i32* %18, align 4
  store i32 1, i32* %17, align 4
  br label %19

19:                                               ; preds = %34, %8
  %20 = load i32, i32* %17, align 4
  %21 = load i32, i32* %13, align 4
  %22 = icmp ule i32 %20, %21
  br i1 %22, label %23, label %37

23:                                               ; preds = %19
  %24 = load i8*, i8** %16, align 8
  %25 = load i32, i32* %17, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %24, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = icmp ne i32 %29, 0
  %31 = zext i1 %30 to i32
  %32 = load i32, i32* %18, align 4
  %33 = add i32 %32, %31
  store i32 %33, i32* %18, align 4
  br label %34

34:                                               ; preds = %23
  %35 = load i32, i32* %17, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %17, align 4
  br label %19

37:                                               ; preds = %19
  %38 = load i8*, i8** %10, align 8
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %40 = call i32 @fputs(i8* %38, %struct._IO_FILE* %39)
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %42 = load i16*, i16** %14, align 8
  %43 = icmp ne i16* %42, null
  br i1 %43, label %44, label %50

44:                                               ; preds = %37
  %45 = load i16*, i16** %14, align 8
  %46 = load i16, i16* %45, align 2
  %47 = add i16 %46, 1
  store i16 %47, i16* %45, align 2
  %48 = zext i16 %46 to i32
  %49 = icmp ne i32 %48, 0
  br label %50

50:                                               ; preds = %44, %37
  %51 = phi i1 [ false, %37 ], [ %49, %44 ]
  %52 = zext i1 %51 to i32
  %53 = load i16*, i16** %14, align 8
  %54 = call i32 bitcast (i32 (%struct._IO_FILE*, %struct.precisionType*)* @fputp to i32 (%struct._IO_FILE*, i16*)*)(%struct._IO_FILE* %41, i16* %53)
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %56 = call i32 @fputs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), %struct._IO_FILE* %55)
  %57 = load i8*, i8** %16, align 8
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = and i32 %59, 1
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %50
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %64 = call i32 @putc(i32 45, %struct._IO_FILE* %63)
  br label %68

65:                                               ; preds = %50
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %67 = call i32 @putc(i32 43, %struct._IO_FILE* %66)
  br label %68

68:                                               ; preds = %65, %62
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %70 = load i16*, i16** %15, align 8
  %71 = icmp ne i16* %70, null
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = load i16*, i16** %15, align 8
  %74 = load i16, i16* %73, align 2
  %75 = add i16 %74, 1
  store i16 %75, i16* %73, align 2
  %76 = zext i16 %74 to i32
  %77 = icmp ne i32 %76, 0
  br label %78

78:                                               ; preds = %72, %68
  %79 = phi i1 [ false, %68 ], [ %77, %72 ]
  %80 = zext i1 %79 to i32
  %81 = load i16*, i16** %15, align 8
  %82 = call i32 bitcast (i32 (%struct._IO_FILE*, %struct.precisionType*)* @fputp to i32 (%struct._IO_FILE*, i16*)*)(%struct._IO_FILE* %69, i16* %81)
  %83 = load i32, i32* %18, align 4
  %84 = icmp uge i32 %83, 1
  br i1 %84, label %85, label %88

85:                                               ; preds = %78
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %87 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.36, i64 0, i64 0), %struct._IO_FILE* %86)
  br label %88

88:                                               ; preds = %85, %78
  br label %89

89:                                               ; preds = %112, %88
  %90 = load i8*, i8** %16, align 8
  %91 = getelementptr inbounds i8, i8* %90, i32 1
  store i8* %91, i8** %16, align 8
  %92 = load i8*, i8** %16, align 8
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  switch i32 %94, label %101 [
    i32 0, label %95
    i32 1, label %96
  ]

95:                                               ; preds = %89
  br label %109

96:                                               ; preds = %89
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %98 = load i32*, i32** %12, align 8
  %99 = load i32, i32* %98, align 4
  %100 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %97, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.37, i64 0, i64 0), i32 %99)
  br label %109

101:                                              ; preds = %89
  %102 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %103 = load i32*, i32** %12, align 8
  %104 = load i32, i32* %103, align 4
  %105 = load i8*, i8** %16, align 8
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  %108 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %102, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3.38, i64 0, i64 0), i32 %104, i32 %107)
  br label %109

109:                                              ; preds = %101, %96, %95
  %110 = load i32*, i32** %12, align 8
  %111 = getelementptr inbounds i32, i32* %110, i32 1
  store i32* %111, i32** %12, align 8
  br label %112

112:                                              ; preds = %109
  %113 = load i32, i32* %13, align 4
  %114 = add i32 %113, -1
  store i32 %114, i32* %13, align 4
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %89, label %116

116:                                              ; preds = %112
  %117 = load i8*, i8** %11, align 8
  %118 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %119 = call i32 @fputs(i8* %117, %struct._IO_FILE* %118)
  %120 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %121 = call i32 @fflush(%struct._IO_FILE* %120)
  %122 = load i16*, i16** %14, align 8
  %123 = icmp ne i16* %122, null
  br i1 %123, label %124, label %134

124:                                              ; preds = %116
  %125 = load i16*, i16** %14, align 8
  %126 = load i16, i16* %125, align 2
  %127 = add i16 %126, -1
  store i16 %127, i16* %125, align 2
  %128 = zext i16 %127 to i32
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %134

130:                                              ; preds = %124
  %131 = load i16*, i16** %14, align 8
  %132 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %131)
  %133 = icmp ne i32 %132, 0
  br label %134

134:                                              ; preds = %130, %124, %116
  %135 = phi i1 [ false, %124 ], [ false, %116 ], [ %133, %130 ]
  %136 = zext i1 %135 to i32
  %137 = load i16*, i16** %15, align 8
  %138 = icmp ne i16* %137, null
  br i1 %138, label %139, label %149

139:                                              ; preds = %134
  %140 = load i16*, i16** %15, align 8
  %141 = load i16, i16* %140, align 2
  %142 = add i16 %141, -1
  store i16 %142, i16* %140, align 2
  %143 = zext i16 %142 to i32
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %149

145:                                              ; preds = %139
  %146 = load i16*, i16** %15, align 8
  %147 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %146)
  %148 = icmp ne i32 %147, 0
  br label %149

149:                                              ; preds = %145, %139, %134
  %150 = phi i1 [ false, %139 ], [ false, %134 ], [ %148, %145 ]
  %151 = zext i1 %150 to i32
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @combineSoln(i16** %0, i16** %1, i8* %2, i32* %3, i32 %4, i16* %5, %struct.SolnStruc* %6) #0 {
  %8 = alloca i16**, align 8
  %9 = alloca i16**, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i16*, align 8
  %14 = alloca %struct.SolnStruc*, align 8
  %15 = alloca i32, align 4
  store i16** %0, i16*** %8, align 8
  store i16** %1, i16*** %9, align 8
  store i8* %2, i8** %10, align 8
  store i32* %3, i32** %11, align 8
  store i32 %4, i32* %12, align 4
  store i16* %5, i16** %13, align 8
  store %struct.SolnStruc* %6, %struct.SolnStruc** %14, align 8
  %16 = load i16*, i16** %13, align 8
  %17 = icmp ne i16* %16, null
  br i1 %17, label %18, label %24

18:                                               ; preds = %7
  %19 = load i16*, i16** %13, align 8
  %20 = load i16, i16* %19, align 2
  %21 = add i16 %20, 1
  store i16 %21, i16* %19, align 2
  %22 = zext i16 %20 to i32
  %23 = icmp ne i32 %22, 0
  br label %24

24:                                               ; preds = %18, %7
  %25 = phi i1 [ false, %7 ], [ %23, %18 ]
  %26 = zext i1 %25 to i32
  %27 = load i16*, i16** %13, align 8
  %28 = load %struct.SolnStruc*, %struct.SolnStruc** %14, align 8
  %29 = icmp ne %struct.SolnStruc* %28, null
  br i1 %29, label %30, label %71

30:                                               ; preds = %24
  %31 = load i16**, i16*** %8, align 8
  %32 = load %struct.SolnStruc*, %struct.SolnStruc** %14, align 8
  %33 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %32, i32 0, i32 1
  %34 = load i16*, i16** %33, align 8
  %35 = load i16**, i16*** %8, align 8
  %36 = load i16*, i16** %35, align 8
  %37 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @pmul to i16* (i16*, i16*)*)(i16* %34, i16* %36)
  %38 = load i16*, i16** %13, align 8
  %39 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*, %struct.precisionType**, %struct.precisionType**)* @pdivmod to i16* (i16*, i16*, i16**, i16**)*)(i16* %37, i16* %38, i16** null, i16** inttoptr (i64 -1 to i16**))
  %40 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %31, i16* %39)
  %41 = load i16**, i16*** %9, align 8
  %42 = load %struct.SolnStruc*, %struct.SolnStruc** %14, align 8
  %43 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %42, i32 0, i32 2
  %44 = load i16*, i16** %43, align 8
  %45 = load i16**, i16*** %9, align 8
  %46 = load i16*, i16** %45, align 8
  %47 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @pmul to i16* (i16*, i16*)*)(i16* %44, i16* %46)
  %48 = load i16*, i16** %13, align 8
  %49 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*, %struct.precisionType**, %struct.precisionType**)* @pdivmod to i16* (i16*, i16*, i16**, i16**)*)(i16* %47, i16* %48, i16** null, i16** inttoptr (i64 -1 to i16**))
  %50 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %41, i16* %49)
  %51 = load i16**, i16*** %9, align 8
  %52 = load %struct.SolnStruc*, %struct.SolnStruc** %14, align 8
  %53 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %52, i32 0, i32 3
  %54 = load i16*, i16** %53, align 8
  %55 = load i16**, i16*** %9, align 8
  %56 = load i16*, i16** %55, align 8
  %57 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @pmul to i16* (i16*, i16*)*)(i16* %54, i16* %56)
  %58 = load i16*, i16** %13, align 8
  %59 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*, %struct.precisionType**, %struct.precisionType**)* @pdivmod to i16* (i16*, i16*, i16**, i16**)*)(i16* %57, i16* %58, i16** null, i16** inttoptr (i64 -1 to i16**))
  %60 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %51, i16* %59)
  %61 = load %struct.SolnStruc*, %struct.SolnStruc** %14, align 8
  %62 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %61, i32 0, i32 4
  %63 = load i8*, i8** %62, align 8
  %64 = call i32 @getBit(i8* %63, i32 0)
  %65 = load i8*, i8** %10, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 0
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = add i32 %68, %64
  %70 = trunc i32 %69 to i8
  store i8 %70, i8* %66, align 1
  br label %71

71:                                               ; preds = %30, %24
  %72 = load i8*, i8** %10, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 0
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = and i32 %75, 1
  %77 = trunc i32 %76 to i8
  store i8 %77, i8* %73, align 1
  store i32 1, i32* %15, align 4
  br label %78

78:                                               ; preds = %169, %71
  %79 = load i32, i32* %15, align 4
  %80 = load i32, i32* %12, align 4
  %81 = icmp ule i32 %79, %80
  br i1 %81, label %82, label %172

82:                                               ; preds = %78
  %83 = load %struct.SolnStruc*, %struct.SolnStruc** %14, align 8
  %84 = icmp ne %struct.SolnStruc* %83, null
  br i1 %84, label %85, label %99

85:                                               ; preds = %82
  %86 = load %struct.SolnStruc*, %struct.SolnStruc** %14, align 8
  %87 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %86, i32 0, i32 4
  %88 = load i8*, i8** %87, align 8
  %89 = load i32, i32* %15, align 4
  %90 = call i32 @getBit(i8* %88, i32 %89)
  %91 = load i8*, i8** %10, align 8
  %92 = load i32, i32* %15, align 4
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %91, i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = add i32 %96, %90
  %98 = trunc i32 %97 to i8
  store i8 %98, i8* %94, align 1
  br label %99

99:                                               ; preds = %85, %82
  %100 = load i8*, i8** %10, align 8
  %101 = load i32, i32* %15, align 4
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %100, i64 %102
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = icmp sgt i32 %105, 2
  br i1 %106, label %107, label %140

107:                                              ; preds = %99
  %108 = load i16**, i16*** %9, align 8
  %109 = load i16**, i16*** %9, align 8
  %110 = load i16*, i16** %109, align 8
  %111 = load i32*, i32** %11, align 8
  %112 = load i32, i32* %15, align 4
  %113 = sub i32 %112, 1
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds i32, i32* %111, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = call i16* bitcast (%struct.precisionType* (i32)* @utop to i16* (i32)*)(i32 %116)
  %118 = load i8*, i8** %10, align 8
  %119 = load i32, i32* %15, align 4
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds i8, i8* %118, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = lshr i32 %123, 1
  %125 = call i16* bitcast (%struct.precisionType* (i32)* @utop to i16* (i32)*)(i32 %124)
  %126 = load i16*, i16** %13, align 8
  %127 = call i16* @ppowmod(i16* %117, i16* %125, i16* %126)
  %128 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @pmul to i16* (i16*, i16*)*)(i16* %110, i16* %127)
  %129 = load i16*, i16** %13, align 8
  %130 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*, %struct.precisionType**, %struct.precisionType**)* @pdivmod to i16* (i16*, i16*, i16**, i16**)*)(i16* %128, i16* %129, i16** null, i16** inttoptr (i64 -1 to i16**))
  %131 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %108, i16* %130)
  %132 = load i8*, i8** %10, align 8
  %133 = load i32, i32* %15, align 4
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds i8, i8* %132, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i32
  %138 = and i32 %137, 1
  %139 = trunc i32 %138 to i8
  store i8 %139, i8* %135, align 1
  br label %168

140:                                              ; preds = %99
  %141 = load i8*, i8** %10, align 8
  %142 = load i32, i32* %15, align 4
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds i8, i8* %141, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = icmp eq i32 %146, 2
  br i1 %147, label %148, label %167

148:                                              ; preds = %140
  %149 = load i16**, i16*** %9, align 8
  %150 = load i16**, i16*** %9, align 8
  %151 = load i16*, i16** %150, align 8
  %152 = load i32*, i32** %11, align 8
  %153 = load i32, i32* %15, align 4
  %154 = sub i32 %153, 1
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds i32, i32* %152, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = call i16* bitcast (%struct.precisionType* (i32)* @utop to i16* (i32)*)(i32 %157)
  %159 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @pmul to i16* (i16*, i16*)*)(i16* %151, i16* %158)
  %160 = load i16*, i16** %13, align 8
  %161 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*, %struct.precisionType**, %struct.precisionType**)* @pdivmod to i16* (i16*, i16*, i16**, i16**)*)(i16* %159, i16* %160, i16** null, i16** inttoptr (i64 -1 to i16**))
  %162 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %149, i16* %161)
  %163 = load i8*, i8** %10, align 8
  %164 = load i32, i32* %15, align 4
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds i8, i8* %163, i64 %165
  store i8 0, i8* %166, align 1
  br label %167

167:                                              ; preds = %148, %140
  br label %168

168:                                              ; preds = %167, %107
  br label %169

169:                                              ; preds = %168
  %170 = load i32, i32* %15, align 4
  %171 = add i32 %170, 1
  store i32 %171, i32* %15, align 4
  br label %78

172:                                              ; preds = %78
  %173 = load i16*, i16** %13, align 8
  %174 = icmp ne i16* %173, null
  br i1 %174, label %175, label %185

175:                                              ; preds = %172
  %176 = load i16*, i16** %13, align 8
  %177 = load i16, i16* %176, align 2
  %178 = add i16 %177, -1
  store i16 %178, i16* %176, align 2
  %179 = zext i16 %178 to i32
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %185

181:                                              ; preds = %175
  %182 = load i16*, i16** %13, align 8
  %183 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %182)
  %184 = icmp ne i32 %183, 0
  br label %185

185:                                              ; preds = %181, %175, %172
  %186 = phi i1 [ false, %175 ], [ false, %172 ], [ %184, %181 ]
  %187 = zext i1 %186 to i32
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.SolnStruc* @newSoln(i16* %0, i32* %1, i32 %2, %struct.SolnStruc* %3, i16* %4, i16* %5, i8* %6) #0 {
  %8 = alloca i16*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.SolnStruc*, align 8
  %12 = alloca i16*, align 8
  %13 = alloca i16*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca %struct.SolnStruc*, align 8
  store i16* %0, i16** %8, align 8
  store i32* %1, i32** %9, align 8
  store i32 %2, i32* %10, align 4
  store %struct.SolnStruc* %3, %struct.SolnStruc** %11, align 8
  store i16* %4, i16** %12, align 8
  store i16* %5, i16** %13, align 8
  store i8* %6, i8** %14, align 8
  %16 = call noalias i8* @malloc(i64 40) #9
  %17 = bitcast i8* %16 to %struct.SolnStruc*
  store %struct.SolnStruc* %17, %struct.SolnStruc** %15, align 8
  %18 = load %struct.SolnStruc*, %struct.SolnStruc** %15, align 8
  %19 = icmp ne %struct.SolnStruc* %18, null
  br i1 %19, label %20, label %61

20:                                               ; preds = %7
  %21 = load %struct.SolnStruc*, %struct.SolnStruc** %11, align 8
  %22 = load %struct.SolnStruc*, %struct.SolnStruc** %15, align 8
  %23 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %22, i32 0, i32 0
  store %struct.SolnStruc* %21, %struct.SolnStruc** %23, align 8
  %24 = load i16*, i16** %12, align 8
  %25 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @pnew to i16* (i16*)*)(i16* %24)
  %26 = load %struct.SolnStruc*, %struct.SolnStruc** %15, align 8
  %27 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %26, i32 0, i32 1
  store i16* %25, i16** %27, align 8
  %28 = load i16*, i16** %13, align 8
  %29 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @pnew to i16* (i16*)*)(i16* %28)
  %30 = load %struct.SolnStruc*, %struct.SolnStruc** %15, align 8
  %31 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %30, i32 0, i32 2
  store i16* %29, i16** %31, align 8
  %32 = load i16*, i16** bitcast (%struct.precisionType** @pone to i16**), align 8
  %33 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @pnew to i16* (i16*)*)(i16* %32)
  %34 = load %struct.SolnStruc*, %struct.SolnStruc** %15, align 8
  %35 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %34, i32 0, i32 3
  store i16* %33, i16** %35, align 8
  %36 = load %struct.SolnStruc*, %struct.SolnStruc** %15, align 8
  %37 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %36, i32 0, i32 1
  %38 = load %struct.SolnStruc*, %struct.SolnStruc** %15, align 8
  %39 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %38, i32 0, i32 3
  %40 = load i8*, i8** %14, align 8
  %41 = load i32*, i32** %9, align 8
  %42 = load i32, i32* %10, align 4
  %43 = load i16*, i16** %8, align 8
  %44 = icmp ne i16* %43, null
  br i1 %44, label %45, label %51

45:                                               ; preds = %20
  %46 = load i16*, i16** %8, align 8
  %47 = load i16, i16* %46, align 2
  %48 = add i16 %47, 1
  store i16 %48, i16* %46, align 2
  %49 = zext i16 %47 to i32
  %50 = icmp ne i32 %49, 0
  br label %51

51:                                               ; preds = %45, %20
  %52 = phi i1 [ false, %20 ], [ %50, %45 ]
  %53 = zext i1 %52 to i32
  %54 = load i16*, i16** %8, align 8
  call void @combineSoln(i16** %37, i16** %39, i8* %40, i32* %41, i32 %42, i16* %54, %struct.SolnStruc* null)
  %55 = load i8*, i8** %14, align 8
  %56 = load i32, i32* %10, align 4
  %57 = add i32 %56, 1
  %58 = call i8* @newBitVector(i8* %55, i32 %57)
  %59 = load %struct.SolnStruc*, %struct.SolnStruc** %15, align 8
  %60 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %59, i32 0, i32 4
  store i8* %58, i8** %60, align 8
  br label %61

61:                                               ; preds = %51, %7
  %62 = load i16*, i16** %8, align 8
  %63 = icmp ne i16* %62, null
  br i1 %63, label %64, label %74

64:                                               ; preds = %61
  %65 = load i16*, i16** %8, align 8
  %66 = load i16, i16* %65, align 2
  %67 = add i16 %66, -1
  store i16 %67, i16* %65, align 2
  %68 = zext i16 %67 to i32
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %64
  %71 = load i16*, i16** %8, align 8
  %72 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %71)
  %73 = icmp ne i32 %72, 0
  br label %74

74:                                               ; preds = %70, %64, %61
  %75 = phi i1 [ false, %64 ], [ false, %61 ], [ %73, %70 ]
  %76 = zext i1 %75 to i32
  %77 = load %struct.SolnStruc*, %struct.SolnStruc** %15, align 8
  ret %struct.SolnStruc* %77
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @freeSoln(%struct.SolnStruc* %0) #0 {
  %2 = alloca %struct.SolnStruc*, align 8
  store %struct.SolnStruc* %0, %struct.SolnStruc** %2, align 8
  %3 = load %struct.SolnStruc*, %struct.SolnStruc** %2, align 8
  %4 = icmp ne %struct.SolnStruc* %3, null
  br i1 %4, label %5, label %74

5:                                                ; preds = %1
  %6 = load %struct.SolnStruc*, %struct.SolnStruc** %2, align 8
  %7 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %6, i32 0, i32 1
  %8 = load i16*, i16** %7, align 8
  %9 = icmp ne i16* %8, null
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = load %struct.SolnStruc*, %struct.SolnStruc** %2, align 8
  %12 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %11, i32 0, i32 1
  %13 = load i16*, i16** %12, align 8
  %14 = load i16, i16* %13, align 2
  %15 = add i16 %14, -1
  store i16 %15, i16* %13, align 2
  %16 = zext i16 %15 to i32
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %10
  %19 = load %struct.SolnStruc*, %struct.SolnStruc** %2, align 8
  %20 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %19, i32 0, i32 1
  %21 = load i16*, i16** %20, align 8
  %22 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %21)
  %23 = icmp ne i32 %22, 0
  br label %24

24:                                               ; preds = %18, %10, %5
  %25 = phi i1 [ false, %10 ], [ false, %5 ], [ %23, %18 ]
  %26 = zext i1 %25 to i32
  %27 = load %struct.SolnStruc*, %struct.SolnStruc** %2, align 8
  %28 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %27, i32 0, i32 2
  %29 = load i16*, i16** %28, align 8
  %30 = icmp ne i16* %29, null
  br i1 %30, label %31, label %45

31:                                               ; preds = %24
  %32 = load %struct.SolnStruc*, %struct.SolnStruc** %2, align 8
  %33 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %32, i32 0, i32 2
  %34 = load i16*, i16** %33, align 8
  %35 = load i16, i16* %34, align 2
  %36 = add i16 %35, -1
  store i16 %36, i16* %34, align 2
  %37 = zext i16 %36 to i32
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %45

39:                                               ; preds = %31
  %40 = load %struct.SolnStruc*, %struct.SolnStruc** %2, align 8
  %41 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %40, i32 0, i32 2
  %42 = load i16*, i16** %41, align 8
  %43 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %42)
  %44 = icmp ne i32 %43, 0
  br label %45

45:                                               ; preds = %39, %31, %24
  %46 = phi i1 [ false, %31 ], [ false, %24 ], [ %44, %39 ]
  %47 = zext i1 %46 to i32
  %48 = load %struct.SolnStruc*, %struct.SolnStruc** %2, align 8
  %49 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %48, i32 0, i32 3
  %50 = load i16*, i16** %49, align 8
  %51 = icmp ne i16* %50, null
  br i1 %51, label %52, label %66

52:                                               ; preds = %45
  %53 = load %struct.SolnStruc*, %struct.SolnStruc** %2, align 8
  %54 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %53, i32 0, i32 3
  %55 = load i16*, i16** %54, align 8
  %56 = load i16, i16* %55, align 2
  %57 = add i16 %56, -1
  store i16 %57, i16* %55, align 2
  %58 = zext i16 %57 to i32
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %66

60:                                               ; preds = %52
  %61 = load %struct.SolnStruc*, %struct.SolnStruc** %2, align 8
  %62 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %61, i32 0, i32 3
  %63 = load i16*, i16** %62, align 8
  %64 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %63)
  %65 = icmp ne i32 %64, 0
  br label %66

66:                                               ; preds = %60, %52, %45
  %67 = phi i1 [ false, %52 ], [ false, %45 ], [ %65, %60 ]
  %68 = zext i1 %67 to i32
  %69 = load %struct.SolnStruc*, %struct.SolnStruc** %2, align 8
  %70 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %69, i32 0, i32 4
  %71 = load i8*, i8** %70, align 8
  call void @free(i8* %71) #9
  %72 = load %struct.SolnStruc*, %struct.SolnStruc** %2, align 8
  %73 = bitcast %struct.SolnStruc* %72 to i8*
  call void @free(i8* %73) #9
  br label %74

74:                                               ; preds = %66, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @freeSolns(%struct.SolnStruc* %0) #0 {
  %2 = alloca %struct.SolnStruc*, align 8
  %3 = alloca %struct.SolnStruc*, align 8
  store %struct.SolnStruc* %0, %struct.SolnStruc** %2, align 8
  br label %4

4:                                                ; preds = %7, %1
  %5 = load %struct.SolnStruc*, %struct.SolnStruc** %2, align 8
  %6 = icmp ne %struct.SolnStruc* %5, null
  br i1 %6, label %7, label %13

7:                                                ; preds = %4
  %8 = load %struct.SolnStruc*, %struct.SolnStruc** %2, align 8
  store %struct.SolnStruc* %8, %struct.SolnStruc** %3, align 8
  %9 = load %struct.SolnStruc*, %struct.SolnStruc** %2, align 8
  %10 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %9, i32 0, i32 0
  %11 = load %struct.SolnStruc*, %struct.SolnStruc** %10, align 8
  store %struct.SolnStruc* %11, %struct.SolnStruc** %2, align 8
  %12 = load %struct.SolnStruc*, %struct.SolnStruc** %3, align 8
  call void @freeSoln(%struct.SolnStruc* %12)
  br label %4

13:                                               ; preds = %4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.SolnStruc* @findSoln(%struct.SolnStruc* %0, i16* %1) #0 {
  %3 = alloca %struct.SolnStruc*, align 8
  %4 = alloca i16*, align 8
  store %struct.SolnStruc* %0, %struct.SolnStruc** %3, align 8
  store i16* %1, i16** %4, align 8
  %5 = load i16*, i16** %4, align 8
  %6 = icmp ne i16* %5, null
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = load i16*, i16** %4, align 8
  %9 = load i16, i16* %8, align 2
  %10 = add i16 %9, 1
  store i16 %10, i16* %8, align 2
  %11 = zext i16 %9 to i32
  %12 = icmp ne i32 %11, 0
  br label %13

13:                                               ; preds = %7, %2
  %14 = phi i1 [ false, %2 ], [ %12, %7 ]
  %15 = zext i1 %14 to i32
  %16 = load i16*, i16** %4, align 8
  br label %17

17:                                               ; preds = %28, %13
  %18 = load %struct.SolnStruc*, %struct.SolnStruc** %3, align 8
  %19 = icmp ne %struct.SolnStruc* %18, null
  br i1 %19, label %20, label %32

20:                                               ; preds = %17
  %21 = load %struct.SolnStruc*, %struct.SolnStruc** %3, align 8
  %22 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %21, i32 0, i32 2
  %23 = load i16*, i16** %22, align 8
  %24 = load i16*, i16** %4, align 8
  %25 = call i32 bitcast (i32 (%struct.precisionType*, %struct.precisionType*)* @pcmp to i32 (i16*, i16*)*)(i16* %23, i16* %24)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %20
  br label %32

28:                                               ; preds = %20
  %29 = load %struct.SolnStruc*, %struct.SolnStruc** %3, align 8
  %30 = getelementptr inbounds %struct.SolnStruc, %struct.SolnStruc* %29, i32 0, i32 0
  %31 = load %struct.SolnStruc*, %struct.SolnStruc** %30, align 8
  store %struct.SolnStruc* %31, %struct.SolnStruc** %3, align 8
  br label %17

32:                                               ; preds = %27, %17
  %33 = load i16*, i16** %4, align 8
  %34 = icmp ne i16* %33, null
  br i1 %34, label %35, label %45

35:                                               ; preds = %32
  %36 = load i16*, i16** %4, align 8
  %37 = load i16, i16* %36, align 2
  %38 = add i16 %37, -1
  store i16 %38, i16* %36, align 2
  %39 = zext i16 %38 to i32
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %35
  %42 = load i16*, i16** %4, align 8
  %43 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %42)
  %44 = icmp ne i32 %43, 0
  br label %45

45:                                               ; preds = %41, %35, %32
  %46 = phi i1 [ false, %35 ], [ false, %32 ], [ %44, %41 ]
  %47 = zext i1 %46 to i32
  %48 = load %struct.SolnStruc*, %struct.SolnStruc** %3, align 8
  ret %struct.SolnStruc* %48
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @freeEas(%struct.EasEntry* %0) #0 {
  %2 = alloca %struct.EasEntry*, align 8
  %3 = alloca %struct.EasEntry*, align 8
  store %struct.EasEntry* %0, %struct.EasEntry** %2, align 8
  %4 = load %struct.EasEntry*, %struct.EasEntry** %2, align 8
  store %struct.EasEntry* %4, %struct.EasEntry** %3, align 8
  %5 = load %struct.EasEntry*, %struct.EasEntry** %3, align 8
  %6 = icmp ne %struct.EasEntry* %5, null
  br i1 %6, label %7, label %40

7:                                                ; preds = %1
  br label %8

8:                                                ; preds = %32, %7
  %9 = load %struct.EasEntry*, %struct.EasEntry** %3, align 8
  %10 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp ne i32* %11, null
  br i1 %12, label %13, label %37

13:                                               ; preds = %8
  %14 = load %struct.EasEntry*, %struct.EasEntry** %3, align 8
  %15 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %14, i32 0, i32 1
  %16 = load i16*, i16** %15, align 8
  %17 = icmp ne i16* %16, null
  br i1 %17, label %18, label %32

18:                                               ; preds = %13
  %19 = load %struct.EasEntry*, %struct.EasEntry** %3, align 8
  %20 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %19, i32 0, i32 1
  %21 = load i16*, i16** %20, align 8
  %22 = load i16, i16* %21, align 2
  %23 = add i16 %22, -1
  store i16 %23, i16* %21, align 2
  %24 = zext i16 %23 to i32
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %18
  %27 = load %struct.EasEntry*, %struct.EasEntry** %3, align 8
  %28 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %27, i32 0, i32 1
  %29 = load i16*, i16** %28, align 8
  %30 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %29)
  %31 = icmp ne i32 %30, 0
  br label %32

32:                                               ; preds = %26, %18, %13
  %33 = phi i1 [ false, %18 ], [ false, %13 ], [ %31, %26 ]
  %34 = zext i1 %33 to i32
  %35 = load %struct.EasEntry*, %struct.EasEntry** %3, align 8
  %36 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %35, i32 1
  store %struct.EasEntry* %36, %struct.EasEntry** %3, align 8
  br label %8

37:                                               ; preds = %8
  %38 = load %struct.EasEntry*, %struct.EasEntry** %2, align 8
  %39 = bitcast %struct.EasEntry* %38 to i8*
  call void @free(i8* %39) #9
  br label %40

40:                                               ; preds = %37, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local double @pomeranceLpow(double %0, double %1) #0 {
  %3 = alloca double, align 8
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  store double %0, double* %3, align 8
  store double %1, double* %4, align 8
  %7 = load double, double* %3, align 8
  %8 = call double @log(double %7) #9
  store double %8, double* %5, align 8
  %9 = load double, double* %4, align 8
  %10 = load double, double* %5, align 8
  %11 = load double, double* %5, align 8
  %12 = call double @log(double %11) #9
  %13 = fmul double %10, %12
  %14 = call double @sqrt(double %13) #9
  %15 = fmul double %9, %14
  %16 = call double @exp(double %15) #9
  store double %16, double* %6, align 8
  %17 = load double, double* %6, align 8
  ret double %17
}

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #3

; Function Attrs: nounwind
declare dso_local double @exp(double) #3

; Function Attrs: noinline nounwind uwtable
define dso_local double @cfracA(double %0, i32 %1) #0 {
  %3 = alloca double, align 8
  %4 = alloca i32, align 4
  store double %0, double* %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = uitofp i32 %5 to double
  %7 = fadd double %6, 1.000000e+00
  %8 = fdiv double 2.000000e+00, %7
  %9 = fadd double 6.000000e+00, %8
  %10 = call double @sqrt(double %9) #9
  %11 = fdiv double 1.000000e+00, %10
  ret double %11
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @pfactorbase(i16* %0, i32 %1, i32* %2, i32 %3) #0 {
  %5 = alloca i16*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca i16*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i16*, align 8
  store i16* %0, i16** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32* %2, i32** %7, align 8
  store i32 %3, i32* %8, align 4
  store i16* getelementptr inbounds ([6543 x i16], [6543 x i16]* @primes, i64 0, i64 0), i16** %11, align 8
  %17 = load i32*, i32** %7, align 8
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %12, align 4
  %19 = load i32, i32* @primesize, align 4
  %20 = sub i32 %19, 1
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds [0 x i16], [0 x i16]* bitcast ([6543 x i16]* @primes to [0 x i16]*), i64 0, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  store i32 %24, i32* %13, align 4
  store i32* null, i32** %14, align 8
  %25 = load i16*, i16** %5, align 8
  %26 = icmp ne i16* %25, null
  br i1 %26, label %27, label %33

27:                                               ; preds = %4
  %28 = load i16*, i16** %5, align 8
  %29 = load i16, i16* %28, align 2
  %30 = add i16 %29, 1
  store i16 %30, i16* %28, align 2
  %31 = zext i16 %29 to i32
  %32 = icmp ne i32 %31, 0
  br label %33

33:                                               ; preds = %27, %4
  %34 = phi i1 [ false, %4 ], [ %32, %27 ]
  %35 = zext i1 %34 to i32
  %36 = load i16*, i16** %5, align 8
  %37 = load i32, i32* %6, align 4
  %38 = call i16* bitcast (%struct.precisionType* (i32)* @utop to i16* (i32)*)(i32 %37)
  %39 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @pmul to i16* (i16*, i16*)*)(i16* %36, i16* %38)
  %40 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @pnew to i16* (i16*)*)(i16* %39)
  store i16* %40, i16** %16, align 8
  %41 = load i32*, i32** %7, align 8
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %75

44:                                               ; preds = %33
  %45 = load i16*, i16** %16, align 8
  %46 = call double bitcast (double (%struct.precisionType*)* @ptod to double (i16*)*)(i16* %45)
  store double %46, double* %9, align 8
  %47 = load double, double* %9, align 8
  %48 = load i32, i32* %8, align 4
  %49 = call double @cfracA(double %47, i32 %48)
  store double %49, double* %10, align 8
  %50 = load double, double* %9, align 8
  %51 = load double, double* %10, align 8
  %52 = call double @pomeranceLpow(double %50, double %51)
  %53 = fadd double %52, 5.000000e-01
  %54 = fptoui double %53 to i32
  store i32 %54, i32* %13, align 4
  br label %55

55:                                               ; preds = %64, %44
  %56 = load i16*, i16** %11, align 8
  %57 = getelementptr inbounds i16, i16* %56, i32 1
  store i16* %57, i16** %11, align 8
  %58 = load i16, i16* %56, align 2
  %59 = zext i16 %58 to i32
  %60 = load i32, i32* %13, align 4
  %61 = icmp uge i32 %59, %60
  br i1 %61, label %62, label %63

62:                                               ; preds = %55
  br label %69

63:                                               ; preds = %55
  br label %64

64:                                               ; preds = %63
  %65 = load i16*, i16** %11, align 8
  %66 = load i16, i16* %65, align 2
  %67 = zext i16 %66 to i32
  %68 = icmp ne i32 %67, 1
  br i1 %68, label %55, label %69

69:                                               ; preds = %64, %62
  %70 = load i16*, i16** %11, align 8
  %71 = ptrtoint i16* %70 to i64
  %72 = sub i64 %71, ptrtoint ([6543 x i16]* @primes to i64)
  %73 = sdiv exact i64 %72, 2
  %74 = trunc i64 %73 to i32
  store i32 %74, i32* %12, align 4
  store i16* getelementptr inbounds ([6543 x i16], [6543 x i16]* @primes, i64 0, i64 0), i16** %11, align 8
  br label %75

75:                                               ; preds = %69, %33
  %76 = load i32, i32* %12, align 4
  %77 = zext i32 %76 to i64
  %78 = mul i64 %77, 4
  %79 = call noalias i8* @malloc(i64 %78) #9
  %80 = bitcast i8* %79 to i32*
  store i32* %80, i32** %14, align 8
  %81 = load i32*, i32** %14, align 8
  %82 = icmp eq i32* %81, null
  br i1 %82, label %83, label %84

83:                                               ; preds = %75
  br label %146

84:                                               ; preds = %75
  %85 = load i32*, i32** %14, align 8
  store i32* %85, i32** %15, align 8
  %86 = load i16*, i16** %11, align 8
  %87 = getelementptr inbounds i16, i16* %86, i32 1
  store i16* %87, i16** %11, align 8
  %88 = load i16, i16* %86, align 2
  %89 = zext i16 %88 to i32
  %90 = load i32*, i32** %15, align 8
  %91 = getelementptr inbounds i32, i32* %90, i32 1
  store i32* %91, i32** %15, align 8
  store i32 %89, i32* %90, align 4
  store i32 1, i32* %12, align 4
  %92 = load i32, i32* %12, align 4
  %93 = load i32*, i32** %7, align 8
  %94 = load i32, i32* %93, align 4
  %95 = icmp ne i32 %92, %94
  br i1 %95, label %96, label %143

96:                                               ; preds = %84
  br label %97

97:                                               ; preds = %137, %96
  %98 = load i16*, i16** %16, align 8
  %99 = load i16*, i16** %11, align 8
  %100 = load i16, i16* %99, align 2
  %101 = zext i16 %100 to i32
  %102 = call i16* bitcast (%struct.precisionType* (i32)* @utop to i16* (i32)*)(i32 %101)
  %103 = load i16*, i16** bitcast (%struct.precisionType** @pone to i16**), align 8
  %104 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @psub to i16* (i16*, i16*)*)(i16* %102, i16* %103)
  %105 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @phalf to i16* (i16*)*)(i16* %104)
  %106 = load i16*, i16** %11, align 8
  %107 = load i16, i16* %106, align 2
  %108 = zext i16 %107 to i32
  %109 = call i16* bitcast (%struct.precisionType* (i32)* @utop to i16* (i32)*)(i32 %108)
  %110 = call i16* @ppowmod(i16* %98, i16* %105, i16* %109)
  %111 = call i32 bitcast (i32 (%struct.precisionType*, i32)* @picmp to i32 (i16*, i32)*)(i16* %110, i32 1)
  %112 = icmp sle i32 %111, 0
  br i1 %112, label %113, label %134

113:                                              ; preds = %97
  %114 = load i16*, i16** %11, align 8
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = load i32*, i32** %15, align 8
  %118 = getelementptr inbounds i32, i32* %117, i32 1
  store i32* %118, i32** %15, align 8
  store i32 %116, i32* %117, align 4
  %119 = load i32, i32* %12, align 4
  %120 = add i32 %119, 1
  store i32 %120, i32* %12, align 4
  %121 = load i32, i32* %12, align 4
  %122 = load i32*, i32** %7, align 8
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %121, %123
  br i1 %124, label %125, label %126

125:                                              ; preds = %113
  br label %142

126:                                              ; preds = %113
  %127 = load i16*, i16** %11, align 8
  %128 = load i16, i16* %127, align 2
  %129 = zext i16 %128 to i32
  %130 = load i32, i32* %13, align 4
  %131 = icmp uge i32 %129, %130
  br i1 %131, label %132, label %133

132:                                              ; preds = %126
  br label %142

133:                                              ; preds = %126
  br label %134

134:                                              ; preds = %133, %97
  %135 = load i16*, i16** %11, align 8
  %136 = getelementptr inbounds i16, i16* %135, i32 1
  store i16* %136, i16** %11, align 8
  br label %137

137:                                              ; preds = %134
  %138 = load i16*, i16** %11, align 8
  %139 = load i16, i16* %138, align 2
  %140 = zext i16 %139 to i32
  %141 = icmp ne i32 %140, 1
  br i1 %141, label %97, label %142

142:                                              ; preds = %137, %132, %125
  br label %143

143:                                              ; preds = %142, %84
  %144 = load i32, i32* %12, align 4
  %145 = load i32*, i32** %7, align 8
  store i32 %144, i32* %145, align 4
  br label %146

146:                                              ; preds = %143, %83
  %147 = load i16*, i16** %16, align 8
  %148 = icmp ne i16* %147, null
  br i1 %148, label %149, label %159

149:                                              ; preds = %146
  %150 = load i16*, i16** %16, align 8
  %151 = load i16, i16* %150, align 2
  %152 = add i16 %151, -1
  store i16 %152, i16* %150, align 2
  %153 = zext i16 %152 to i32
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %159

155:                                              ; preds = %149
  %156 = load i16*, i16** %16, align 8
  %157 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %156)
  %158 = icmp ne i32 %157, 0
  br label %159

159:                                              ; preds = %155, %149, %146
  %160 = phi i1 [ false, %149 ], [ false, %146 ], [ %158, %155 ]
  %161 = zext i1 %160 to i32
  %162 = load i16*, i16** %5, align 8
  %163 = icmp ne i16* %162, null
  br i1 %163, label %164, label %174

164:                                              ; preds = %159
  %165 = load i16*, i16** %5, align 8
  %166 = load i16, i16* %165, align 2
  %167 = add i16 %166, -1
  store i16 %167, i16* %165, align 2
  %168 = zext i16 %167 to i32
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %174

170:                                              ; preds = %164
  %171 = load i16*, i16** %5, align 8
  %172 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %171)
  %173 = icmp ne i32 %172, 0
  br label %174

174:                                              ; preds = %170, %164, %159
  %175 = phi i1 [ false, %164 ], [ false, %159 ], [ %173, %170 ]
  %176 = zext i1 %175 to i32
  %177 = load i32*, i32** %14, align 8
  ret i32* %177
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.EasEntry* @getEas(i16* %0, i32 %1, i32* %2, i32 %3, i32 %4) #0 {
  %6 = alloca %struct.EasEntry*, align 8
  %7 = alloca i16*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i16*, align 8
  %25 = alloca %struct.EasEntry*, align 8
  store i16* %0, i16** %7, align 8
  store i32 %1, i32* %8, align 4
  store i32* %2, i32** %9, align 8
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  %26 = load i32, i32* %11, align 4
  %27 = uitofp i32 %26 to double
  %28 = fadd double %27, 1.000000e+00
  %29 = fdiv double 1.000000e+00, %28
  store double %29, double* %12, align 8
  %30 = load double, double* %12, align 8
  %31 = fmul double 2.000000e+00, %30
  %32 = fadd double 6.000000e+00, %31
  %33 = call double @sqrt(double %32) #9
  %34 = fdiv double 1.000000e+00, %33
  store double %34, double* %13, align 8
  %35 = load double, double* %13, align 8
  %36 = load double, double* %12, align 8
  %37 = fmul double %35, %36
  store double %37, double* %14, align 8
  store double 1.000000e+00, double* %15, align 8
  store double 0.000000e+00, double* %16, align 8
  store i16* null, i16** %24, align 8
  %38 = load i32, i32* %11, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %5
  store %struct.EasEntry* null, %struct.EasEntry** %6, align 8
  br label %215

41:                                               ; preds = %5
  %42 = load i32, i32* %11, align 4
  %43 = add i32 %42, 1
  %44 = zext i32 %43 to i64
  %45 = mul i64 %44, 16
  %46 = call noalias i8* @malloc(i64 %45) #9
  %47 = bitcast i8* %46 to %struct.EasEntry*
  store %struct.EasEntry* %47, %struct.EasEntry** %25, align 8
  %48 = load %struct.EasEntry*, %struct.EasEntry** %25, align 8
  %49 = icmp eq %struct.EasEntry* %48, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %41
  %51 = load %struct.EasEntry*, %struct.EasEntry** %25, align 8
  store %struct.EasEntry* %51, %struct.EasEntry** %6, align 8
  br label %215

52:                                               ; preds = %41
  %53 = load i32, i32* %8, align 4
  %54 = call i16* bitcast (%struct.precisionType* (i32)* @utop to i16* (i32)*)(i32 %53)
  %55 = load i16*, i16** %7, align 8
  %56 = icmp ne i16* %55, null
  br i1 %56, label %57, label %63

57:                                               ; preds = %52
  %58 = load i16*, i16** %7, align 8
  %59 = load i16, i16* %58, align 2
  %60 = add i16 %59, 1
  store i16 %60, i16* %58, align 2
  %61 = zext i16 %59 to i32
  %62 = icmp ne i32 %61, 0
  br label %63

63:                                               ; preds = %57, %52
  %64 = phi i1 [ false, %52 ], [ %62, %57 ]
  %65 = zext i1 %64 to i32
  %66 = load i16*, i16** %7, align 8
  %67 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @pmul to i16* (i16*, i16*)*)(i16* %54, i16* %66)
  %68 = call double bitcast (double (%struct.precisionType*)* @ptod to double (i16*)*)(i16* %67)
  store double %68, double* %17, align 8
  store i32 1, i32* %21, align 4
  br label %69

69:                                               ; preds = %168, %63
  %70 = load i32, i32* %21, align 4
  %71 = load i32, i32* %11, align 4
  %72 = icmp ule i32 %70, %71
  br i1 %72, label %73, label %171

73:                                               ; preds = %69
  %74 = load %struct.EasEntry*, %struct.EasEntry** %25, align 8
  %75 = load i32, i32* %21, align 4
  %76 = sub i32 %75, 1
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %74, i64 %77
  %79 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %78, i32 0, i32 0
  store i32* null, i32** %79, align 8
  %80 = load %struct.EasEntry*, %struct.EasEntry** %25, align 8
  %81 = load i32, i32* %21, align 4
  %82 = sub i32 %81, 1
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %80, i64 %83
  %85 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %84, i32 0, i32 1
  store i16* null, i16** %85, align 8
  %86 = load double, double* %14, align 8
  %87 = load double, double* %16, align 8
  %88 = fadd double %87, %86
  store double %88, double* %16, align 8
  %89 = load double, double* %16, align 8
  %90 = fmul double 4.000000e+00, %89
  %91 = load double, double* %16, align 8
  %92 = fmul double %90, %91
  %93 = load i32, i32* %21, align 4
  %94 = uitofp i32 %93 to double
  %95 = fdiv double %92, %94
  store double %95, double* %20, align 8
  %96 = load double, double* %20, align 8
  %97 = load double, double* %15, align 8
  %98 = fsub double %97, %96
  store double %98, double* %15, align 8
  %99 = load double, double* %17, align 8
  %100 = load double, double* %16, align 8
  %101 = call double @pomeranceLpow(double %99, double %100)
  store double %101, double* %18, align 8
  %102 = load double, double* %17, align 8
  %103 = load double, double* %15, align 8
  %104 = fmul double 5.000000e-01, %103
  %105 = call double @pow(double %102, double %104) #9
  store double %105, double* %19, align 8
  %106 = load double, double* %18, align 8
  %107 = fadd double %106, 5.000000e-01
  %108 = fptoui double %107 to i32
  store i32 %108, i32* %23, align 4
  %109 = load double, double* %19, align 8
  %110 = call i16* bitcast (%struct.precisionType* (double)* @dtop to i16* (double)*)(double %109)
  %111 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %24, i16* %110)
  store i32 0, i32* %22, align 4
  br label %112

112:                                              ; preds = %126, %73
  %113 = load i32, i32* %22, align 4
  %114 = load i32, i32* %10, align 4
  %115 = icmp ult i32 %113, %114
  br i1 %115, label %116, label %129

116:                                              ; preds = %112
  %117 = load i32*, i32** %9, align 8
  %118 = load i32, i32* %22, align 4
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds i32, i32* %117, i64 %119
  %121 = load i32, i32* %120, align 4
  %122 = load i32, i32* %23, align 4
  %123 = icmp uge i32 %121, %122
  br i1 %123, label %124, label %125

124:                                              ; preds = %116
  br label %130

125:                                              ; preds = %116
  br label %126

126:                                              ; preds = %125
  %127 = load i32, i32* %22, align 4
  %128 = add i32 %127, 1
  store i32 %128, i32* %22, align 4
  br label %112

129:                                              ; preds = %112
  br label %171

130:                                              ; preds = %124
  %131 = load i32, i32* @verbose, align 4
  %132 = icmp sgt i32 %131, 1
  br i1 %132, label %133, label %149

133:                                              ; preds = %130
  %134 = load i32, i32* %21, align 4
  %135 = load i32*, i32** %9, align 8
  %136 = load i32, i32* %22, align 4
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds i32, i32* %135, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = load i32, i32* %23, align 4
  %141 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.41, i64 0, i64 0), i32 %134, i32 %139, i32 %140)
  %142 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %143 = load i16*, i16** %24, align 8
  %144 = call i32 bitcast (i32 (%struct._IO_FILE*, %struct.precisionType*)* @fputp to i32 (%struct._IO_FILE*, i16*)*)(%struct._IO_FILE* %142, i16* %143)
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %146 = call i32 @putc(i32 10, %struct._IO_FILE* %145)
  %147 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %148 = call i32 @fflush(%struct._IO_FILE* %147)
  br label %149

149:                                              ; preds = %133, %130
  %150 = load i32*, i32** %9, align 8
  %151 = load i32, i32* %22, align 4
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds i32, i32* %150, i64 %152
  %154 = load %struct.EasEntry*, %struct.EasEntry** %25, align 8
  %155 = load i32, i32* %21, align 4
  %156 = sub i32 %155, 1
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %154, i64 %157
  %159 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %158, i32 0, i32 0
  store i32* %153, i32** %159, align 8
  %160 = load %struct.EasEntry*, %struct.EasEntry** %25, align 8
  %161 = load i32, i32* %21, align 4
  %162 = sub i32 %161, 1
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %160, i64 %163
  %165 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %164, i32 0, i32 1
  %166 = load i16*, i16** %24, align 8
  %167 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %165, i16* %166)
  br label %168

168:                                              ; preds = %149
  %169 = load i32, i32* %21, align 4
  %170 = add i32 %169, 1
  store i32 %170, i32* %21, align 4
  br label %69

171:                                              ; preds = %129, %69
  %172 = load %struct.EasEntry*, %struct.EasEntry** %25, align 8
  %173 = load i32, i32* %21, align 4
  %174 = sub i32 %173, 1
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %172, i64 %175
  %177 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %176, i32 0, i32 0
  store i32* null, i32** %177, align 8
  %178 = load %struct.EasEntry*, %struct.EasEntry** %25, align 8
  %179 = load i32, i32* %21, align 4
  %180 = sub i32 %179, 1
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %178, i64 %181
  %183 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %182, i32 0, i32 1
  store i16* null, i16** %183, align 8
  %184 = load i16*, i16** %24, align 8
  %185 = icmp ne i16* %184, null
  br i1 %185, label %186, label %196

186:                                              ; preds = %171
  %187 = load i16*, i16** %24, align 8
  %188 = load i16, i16* %187, align 2
  %189 = add i16 %188, -1
  store i16 %189, i16* %187, align 2
  %190 = zext i16 %189 to i32
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %196

192:                                              ; preds = %186
  %193 = load i16*, i16** %24, align 8
  %194 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %193)
  %195 = icmp ne i32 %194, 0
  br label %196

196:                                              ; preds = %192, %186, %171
  %197 = phi i1 [ false, %186 ], [ false, %171 ], [ %195, %192 ]
  %198 = zext i1 %197 to i32
  %199 = load i16*, i16** %7, align 8
  %200 = icmp ne i16* %199, null
  br i1 %200, label %201, label %211

201:                                              ; preds = %196
  %202 = load i16*, i16** %7, align 8
  %203 = load i16, i16* %202, align 2
  %204 = add i16 %203, -1
  store i16 %204, i16* %202, align 2
  %205 = zext i16 %204 to i32
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %211

207:                                              ; preds = %201
  %208 = load i16*, i16** %7, align 8
  %209 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %208)
  %210 = icmp ne i32 %209, 0
  br label %211

211:                                              ; preds = %207, %201, %196
  %212 = phi i1 [ false, %201 ], [ false, %196 ], [ %210, %207 ]
  %213 = zext i1 %212 to i32
  %214 = load %struct.EasEntry*, %struct.EasEntry** %25, align 8
  store %struct.EasEntry* %214, %struct.EasEntry** %6, align 8
  br label %215

215:                                              ; preds = %211, %50, %40
  %216 = load %struct.EasEntry*, %struct.EasEntry** %6, align 8
  ret %struct.EasEntry* %216
}

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #3

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @pfactorQ(i16** %0, i16* %1, i32* %2, i8* %3, i32 %4, %struct.EasEntry* %5) #0 {
  %7 = alloca i16**, align 8
  %8 = alloca i16*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.EasEntry*, align 8
  %13 = alloca i16*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32*, align 8
  store i16** %0, i16*** %7, align 8
  store i16* %1, i16** %8, align 8
  store i32* %2, i32** %9, align 8
  store i8* %3, i8** %10, align 8
  store i32 %4, i32* %11, align 4
  store %struct.EasEntry* %5, %struct.EasEntry** %12, align 8
  store i16* null, i16** %13, align 8
  %17 = load i32*, i32** %9, align 8
  %18 = load i32, i32* %11, align 4
  %19 = sub i32 %18, 1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i32, i32* %17, i64 %20
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %14, align 4
  store i32 0, i32* %15, align 4
  store i32* null, i32** %16, align 8
  %23 = load i16*, i16** %8, align 8
  %24 = icmp ne i16* %23, null
  br i1 %24, label %25, label %31

25:                                               ; preds = %6
  %26 = load i16*, i16** %8, align 8
  %27 = load i16, i16* %26, align 2
  %28 = add i16 %27, 1
  store i16 %28, i16* %26, align 2
  %29 = zext i16 %27 to i32
  %30 = icmp ne i32 %29, 0
  br label %31

31:                                               ; preds = %25, %6
  %32 = phi i1 [ false, %6 ], [ %30, %25 ]
  %33 = zext i1 %32 to i32
  %34 = load i16*, i16** %8, align 8
  %35 = load %struct.EasEntry*, %struct.EasEntry** %12, align 8
  %36 = icmp ne %struct.EasEntry* %35, null
  br i1 %36, label %37, label %45

37:                                               ; preds = %31
  %38 = load %struct.EasEntry*, %struct.EasEntry** %12, align 8
  %39 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %38, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  store i32* %40, i32** %16, align 8
  %41 = load %struct.EasEntry*, %struct.EasEntry** %12, align 8
  %42 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %41, i32 0, i32 1
  %43 = load i16*, i16** %42, align 8
  %44 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %13, i16* %43)
  br label %45

45:                                               ; preds = %37, %31
  %46 = load i8*, i8** %10, align 8
  %47 = load i32, i32* %11, align 4
  %48 = zext i32 %47 to i64
  %49 = mul i64 %48, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %46, i8 0, i64 %49, i1 false)
  br label %50

50:                                               ; preds = %55, %45
  %51 = load i16*, i16** %8, align 8
  %52 = call i32 bitcast (i32 (%struct.precisionType*)* @podd to i32 (i16*)*)(i16* %51)
  %53 = icmp ne i32 %52, 0
  %54 = xor i1 %53, true
  br i1 %54, label %55, label %62

55:                                               ; preds = %50
  %56 = load i16*, i16** %8, align 8
  %57 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @phalf to i16* (i16*)*)(i16* %56)
  %58 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %8, i16* %57)
  %59 = load i8*, i8** %10, align 8
  %60 = load i8, i8* %59, align 1
  %61 = add i8 %60, 1
  store i8 %61, i8* %59, align 1
  br label %50

62:                                               ; preds = %50
  %63 = load i32, i32* %11, align 4
  %64 = add i32 %63, -1
  store i32 %64, i32* %11, align 4
  br label %65

65:                                               ; preds = %106, %62
  %66 = load i8*, i8** %10, align 8
  %67 = getelementptr inbounds i8, i8* %66, i32 1
  store i8* %67, i8** %10, align 8
  %68 = load i32*, i32** %9, align 8
  %69 = getelementptr inbounds i32, i32* %68, i32 1
  store i32* %69, i32** %9, align 8
  %70 = load i32*, i32** %9, align 8
  %71 = load i32*, i32** %16, align 8
  %72 = icmp eq i32* %70, %71
  br i1 %72, label %73, label %89

73:                                               ; preds = %65
  %74 = load i16*, i16** %8, align 8
  %75 = load i16*, i16** %13, align 8
  %76 = call i32 bitcast (i32 (%struct.precisionType*, %struct.precisionType*)* @pcmp to i32 (i16*, i16*)*)(i16* %74, i16* %75)
  %77 = icmp sgt i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %73
  store i32 -2, i32* %15, align 4
  br label %126

79:                                               ; preds = %73
  %80 = load %struct.EasEntry*, %struct.EasEntry** %12, align 8
  %81 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %80, i32 1
  store %struct.EasEntry* %81, %struct.EasEntry** %12, align 8
  %82 = load %struct.EasEntry*, %struct.EasEntry** %12, align 8
  %83 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %82, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  store i32* %84, i32** %16, align 8
  %85 = load %struct.EasEntry*, %struct.EasEntry** %12, align 8
  %86 = getelementptr inbounds %struct.EasEntry, %struct.EasEntry* %85, i32 0, i32 1
  %87 = load i16*, i16** %86, align 8
  %88 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %13, i16* %87)
  br label %89

89:                                               ; preds = %79, %65
  br label %90

90:                                               ; preds = %96, %89
  %91 = load i16*, i16** %8, align 8
  %92 = load i32*, i32** %9, align 8
  %93 = load i32, i32* %92, align 4
  %94 = call i32 bitcast (i32 (%struct.precisionType*, i32)* @pimod to i32 (i16*, i32)*)(i16* %91, i32 %93)
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %105

96:                                               ; preds = %90
  %97 = load i16*, i16** %8, align 8
  %98 = load i32*, i32** %9, align 8
  %99 = load i32, i32* %98, align 4
  %100 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, i32)* @pidiv to i16* (i16*, i32)*)(i16* %97, i32 %99)
  %101 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %8, i16* %100)
  %102 = load i8*, i8** %10, align 8
  %103 = load i8, i8* %102, align 1
  %104 = add i8 %103, 1
  store i8 %104, i8* %102, align 1
  br label %90

105:                                              ; preds = %90
  br label %106

106:                                              ; preds = %105
  %107 = load i32, i32* %11, align 4
  %108 = add i32 %107, -1
  store i32 %108, i32* %11, align 4
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %65, label %110

110:                                              ; preds = %106
  store i32 -1, i32* %15, align 4
  %111 = load i16*, i16** %8, align 8
  %112 = call i32 bitcast (i32 (%struct.precisionType*, i32)* @picmp to i32 (i16*, i32)*)(i16* %111, i32 1)
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %110
  store i32 1, i32* %15, align 4
  br label %125

115:                                              ; preds = %110
  %116 = load i16*, i16** %8, align 8
  %117 = load i32*, i32** %9, align 8
  %118 = load i32, i32* %117, align 4
  %119 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, i32)* @pidiv to i16* (i16*, i32)*)(i16* %116, i32 %118)
  %120 = load i32, i32* %14, align 4
  %121 = call i32 bitcast (i32 (%struct.precisionType*, i32)* @picmp to i32 (i16*, i32)*)(i16* %119, i32 %120)
  %122 = icmp sle i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %115
  store i32 0, i32* %15, align 4
  br label %124

124:                                              ; preds = %123, %115
  br label %125

125:                                              ; preds = %124, %114
  br label %126

126:                                              ; preds = %125, %78
  %127 = load i16**, i16*** %7, align 8
  %128 = load i16*, i16** %8, align 8
  %129 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %127, i16* %128)
  %130 = load i16*, i16** %8, align 8
  %131 = icmp ne i16* %130, null
  br i1 %131, label %132, label %142

132:                                              ; preds = %126
  %133 = load i16*, i16** %8, align 8
  %134 = load i16, i16* %133, align 2
  %135 = add i16 %134, -1
  store i16 %135, i16* %133, align 2
  %136 = zext i16 %135 to i32
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %142

138:                                              ; preds = %132
  %139 = load i16*, i16** %8, align 8
  %140 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %139)
  %141 = icmp ne i32 %140, 0
  br label %142

142:                                              ; preds = %138, %132, %126
  %143 = phi i1 [ false, %132 ], [ false, %126 ], [ %141, %138 ]
  %144 = zext i1 %143 to i32
  %145 = load i16*, i16** %13, align 8
  %146 = icmp ne i16* %145, null
  br i1 %146, label %147, label %157

147:                                              ; preds = %142
  %148 = load i16*, i16** %13, align 8
  %149 = load i16, i16* %148, align 2
  %150 = add i16 %149, -1
  store i16 %150, i16* %148, align 2
  %151 = zext i16 %150 to i32
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %157

153:                                              ; preds = %147
  %154 = load i16*, i16** %13, align 8
  %155 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %154)
  %156 = icmp ne i32 %155, 0
  br label %157

157:                                              ; preds = %153, %147, %142
  %158 = phi i1 [ false, %147 ], [ false, %142 ], [ %156, %153 ]
  %159 = zext i1 %158 to i32
  %160 = load i32, i32* %15, align 4
  ret i32 %160
}

; Function Attrs: noinline nounwind uwtable
define dso_local i16* @pcfrac(i16* %0, i32* %1) #0 {
  %3 = alloca i16*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.SolnStruc*, align 8
  %9 = alloca %struct.SolnStruc*, align 8
  %10 = alloca %struct.SolnStruc*, align 8
  %11 = alloca %struct.SolnStruc**, align 8
  %12 = alloca %struct.EasEntry*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i16*, align 8
  %22 = alloca i16*, align 8
  %23 = alloca i16*, align 8
  %24 = alloca i16*, align 8
  %25 = alloca i16*, align 8
  %26 = alloca i16*, align 8
  %27 = alloca i16*, align 8
  %28 = alloca i16*, align 8
  %29 = alloca i16*, align 8
  %30 = alloca i16*, align 8
  %31 = alloca i16*, align 8
  %32 = alloca i16*, align 8
  %33 = alloca i16*, align 8
  %34 = alloca i16*, align 8
  store i16* %0, i16** %3, align 8
  store i32* %1, i32** %4, align 8
  %35 = load i32, i32* @pcfrac_k, align 4
  store i32 %35, i32* %5, align 4
  %36 = load i32, i32* @pcfrac_m, align 4
  store i32 %36, i32* %6, align 4
  %37 = load i32, i32* @pcfrac_aborts, align 4
  store i32 %37, i32* %7, align 4
  store %struct.SolnStruc* null, %struct.SolnStruc** %8, align 8
  store %struct.EasEntry* null, %struct.EasEntry** %12, align 8
  store i32* null, i32** %13, align 8
  store i8* null, i8** %14, align 8
  store i32 0, i32* %16, align 4
  store i32 0, i32* %17, align 4
  store i16* null, i16** %21, align 8
  store i16* null, i16** %22, align 8
  store i16* null, i16** %23, align 8
  store i16* null, i16** %24, align 8
  store i16* null, i16** %25, align 8
  store i16* null, i16** %26, align 8
  store i16* null, i16** %27, align 8
  store i16* null, i16** %28, align 8
  store i16* null, i16** %29, align 8
  store i16* null, i16** %30, align 8
  store i16* null, i16** %31, align 8
  store i16* null, i16** %32, align 8
  store i16* null, i16** %33, align 8
  %38 = load i16*, i16** %3, align 8
  %39 = icmp ne i16* %38, null
  br i1 %39, label %40, label %46

40:                                               ; preds = %2
  %41 = load i16*, i16** %3, align 8
  %42 = load i16, i16* %41, align 2
  %43 = add i16 %42, 1
  store i16 %43, i16* %41, align 2
  %44 = zext i16 %42 to i32
  %45 = icmp ne i32 %44, 0
  br label %46

46:                                               ; preds = %40, %2
  %47 = phi i1 [ false, %2 ], [ %45, %40 ]
  %48 = zext i1 %47 to i32
  %49 = load i16*, i16** %3, align 8
  %50 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @pnew to i16* (i16*)*)(i16* %49)
  store i16* %50, i16** %34, align 8
  %51 = load i16*, i16** %3, align 8
  %52 = load i32, i32* %5, align 4
  %53 = load i32, i32* %7, align 4
  %54 = call i32* @pfactorbase(i16* %51, i32 %52, i32* %6, i32 %53)
  store i32* %54, i32** %13, align 8
  %55 = load i32, i32* %6, align 4
  %56 = add i32 %55, 2
  %57 = zext i32 %56 to i64
  %58 = mul i64 %57, 8
  %59 = trunc i64 %58 to i32
  store i32 %59, i32* %15, align 4
  %60 = load i32, i32* %15, align 4
  %61 = zext i32 %60 to i64
  %62 = call noalias i8* @malloc(i64 %61) #9
  %63 = bitcast i8* %62 to %struct.SolnStruc**
  store %struct.SolnStruc** %63, %struct.SolnStruc*** %11, align 8
  %64 = load %struct.SolnStruc**, %struct.SolnStruc*** %11, align 8
  %65 = icmp eq %struct.SolnStruc** %64, null
  br i1 %65, label %66, label %67

66:                                               ; preds = %46
  br label %76

67:                                               ; preds = %46
  %68 = load i32, i32* %6, align 4
  %69 = add i32 %68, 1
  %70 = zext i32 %69 to i64
  %71 = mul i64 %70, 1
  %72 = call noalias i8* @malloc(i64 %71) #9
  store i8* %72, i8** %14, align 8
  %73 = load i8*, i8** %14, align 8
  %74 = icmp eq i8* %73, null
  br i1 %74, label %75, label %78

75:                                               ; preds = %67
  br label %76

76:                                               ; preds = %75, %66
  %77 = call i16* @errorp(i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.44, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.45, i64 0, i64 0))
  br label %472

78:                                               ; preds = %67
  %79 = load %struct.SolnStruc**, %struct.SolnStruc*** %11, align 8
  %80 = bitcast %struct.SolnStruc** %79 to i8*
  %81 = load i32, i32* %15, align 4
  %82 = zext i32 %81 to i64
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 %82, i1 false)
  %83 = load i32*, i32** %4, align 8
  %84 = icmp ne i32* %83, null
  br i1 %84, label %85, label %88

85:                                               ; preds = %78
  %86 = load i32*, i32** %4, align 8
  %87 = load i32, i32* %86, align 4
  store i32 %87, i32* %17, align 4
  br label %88

88:                                               ; preds = %85, %78
  store i32 0, i32* @cfracNabort, align 4
  store i32 0, i32* @cfracFsolns, align 4
  store i32 0, i32* @cfracT2solns, align 4
  store i32 0, i32* @cfracPsolns, align 4
  store i32 0, i32* @cfracTsolns, align 4
  %89 = load i16*, i16** %3, align 8
  %90 = load i32, i32* %5, align 4
  %91 = load i32*, i32** %13, align 8
  %92 = load i32, i32* %6, align 4
  %93 = load i32, i32* %7, align 4
  %94 = call %struct.EasEntry* @getEas(i16* %89, i32 %90, i32* %91, i32 %92, i32 %93)
  store %struct.EasEntry* %94, %struct.EasEntry** %12, align 8
  %95 = load i32, i32* @verbose, align 4
  %96 = icmp sgt i32 %95, 1
  br i1 %96, label %97, label %121

97:                                               ; preds = %88
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %99 = load i32, i32* %6, align 4
  %100 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %98, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7.46, i64 0, i64 0), i32 %99)
  store i32 0, i32* %19, align 4
  br label %101

101:                                              ; preds = %113, %97
  %102 = load i32, i32* %19, align 4
  %103 = load i32, i32* %6, align 4
  %104 = icmp ult i32 %102, %103
  br i1 %104, label %105, label %116

105:                                              ; preds = %101
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %107 = load i32*, i32** %13, align 8
  %108 = load i32, i32* %19, align 4
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds i32, i32* %107, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %106, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8.47, i64 0, i64 0), i32 %111)
  br label %113

113:                                              ; preds = %105
  %114 = load i32, i32* %19, align 4
  %115 = add i32 %114, 1
  store i32 %115, i32* %19, align 4
  br label %101

116:                                              ; preds = %101
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %118 = call i32 @putc(i32 10, %struct._IO_FILE* %117)
  %119 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %120 = call i32 @fflush(%struct._IO_FILE* %119)
  br label %121

121:                                              ; preds = %116, %88
  %122 = load i32, i32* %5, align 4
  %123 = call i16* bitcast (%struct.precisionType* (i32)* @utop to i16* (i32)*)(i32 %122)
  %124 = load i16*, i16** %3, align 8
  %125 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @pmul to i16* (i16*, i16*)*)(i16* %123, i16* %124)
  %126 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %21, i16* %125)
  %127 = load i16*, i16** %21, align 8
  %128 = call i16* @psqrt(i16* %127)
  %129 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %22, i16* %128)
  %130 = load i16*, i16** %22, align 8
  %131 = load i16*, i16** %22, align 8
  %132 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @padd to i16* (i16*, i16*)*)(i16* %130, i16* %131)
  %133 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %23, i16* %132)
  %134 = load i16*, i16** %23, align 8
  %135 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %24, i16* %134)
  %136 = load i16*, i16** %23, align 8
  %137 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %25, i16* %136)
  %138 = load i16*, i16** bitcast (%struct.precisionType** @pone to i16**), align 8
  %139 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %26, i16* %138)
  %140 = load i16*, i16** %21, align 8
  %141 = load i16*, i16** %22, align 8
  %142 = load i16*, i16** %22, align 8
  %143 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @pmul to i16* (i16*, i16*)*)(i16* %141, i16* %142)
  %144 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @psub to i16* (i16*, i16*)*)(i16* %140, i16* %143)
  %145 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %27, i16* %144)
  %146 = load i16*, i16** bitcast (%struct.precisionType** @pone to i16**), align 8
  %147 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %28, i16* %146)
  %148 = load i16*, i16** %22, align 8
  %149 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %29, i16* %148)
  %150 = load i16*, i16** bitcast (%struct.precisionType** @pzero to i16**), align 8
  %151 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %32, i16* %150)
  br label %152

152:                                              ; preds = %436, %121
  br label %153

153:                                              ; preds = %364, %260, %152
  br label %154

154:                                              ; preds = %229, %153
  %155 = load i32, i32* %17, align 4
  %156 = add i32 %155, -1
  store i32 %156, i32* %17, align 4
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %154
  br label %472

159:                                              ; preds = %154
  %160 = load i16*, i16** %28, align 8
  %161 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %21, i16* %160)
  %162 = load i16*, i16** %32, align 8
  %163 = load i16*, i16** %28, align 8
  %164 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @pmul to i16* (i16*, i16*)*)(i16* %162, i16* %163)
  %165 = load i16*, i16** %29, align 8
  %166 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @padd to i16* (i16*, i16*)*)(i16* %164, i16* %165)
  %167 = load i16*, i16** %3, align 8
  %168 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*, %struct.precisionType**, %struct.precisionType**)* @pdivmod to i16* (i16*, i16*, i16**, i16**)*)(i16* %166, i16* %167, i16** null, i16** %28)
  %169 = load i16*, i16** %21, align 8
  %170 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %29, i16* %169)
  %171 = load i16*, i16** %26, align 8
  %172 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %21, i16* %171)
  %173 = load i16*, i16** %32, align 8
  %174 = load i16*, i16** %25, align 8
  %175 = load i16*, i16** %24, align 8
  %176 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @psub to i16* (i16*, i16*)*)(i16* %174, i16* %175)
  %177 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @pmul to i16* (i16*, i16*)*)(i16* %173, i16* %176)
  %178 = load i16*, i16** %27, align 8
  %179 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @padd to i16* (i16*, i16*)*)(i16* %177, i16* %178)
  %180 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %26, i16* %179)
  %181 = load i16*, i16** %21, align 8
  %182 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %27, i16* %181)
  %183 = load i16*, i16** %24, align 8
  %184 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %25, i16* %183)
  %185 = load i16*, i16** bitcast (%struct.precisionType** @pone to i16**), align 8
  %186 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %32, i16* %185)
  %187 = load i16*, i16** %24, align 8
  %188 = load i16*, i16** %26, align 8
  %189 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @psub to i16* (i16*, i16*)*)(i16* %187, i16* %188)
  %190 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %33, i16* %189)
  %191 = load i16*, i16** %33, align 8
  %192 = load i16*, i16** %26, align 8
  %193 = call i32 bitcast (i32 (%struct.precisionType*, %struct.precisionType*)* @pcmp to i32 (i16*, i16*)*)(i16* %191, i16* %192)
  %194 = icmp sge i32 %193, 0
  br i1 %194, label %195, label %199

195:                                              ; preds = %159
  %196 = load i16*, i16** %24, align 8
  %197 = load i16*, i16** %26, align 8
  %198 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*, %struct.precisionType**, %struct.precisionType**)* @pdivmod to i16* (i16*, i16*, i16**, i16**)*)(i16* %196, i16* %197, i16** %32, i16** %33)
  br label %199

199:                                              ; preds = %195, %159
  %200 = load i16*, i16** %23, align 8
  %201 = load i16*, i16** %33, align 8
  %202 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @psub to i16* (i16*, i16*)*)(i16* %200, i16* %201)
  %203 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %24, i16* %202)
  %204 = load i32, i32* %16, align 4
  %205 = sub i32 1, %204
  store i32 %205, i32* %16, align 4
  %206 = load i32, i32* %16, align 4
  %207 = trunc i32 %206 to i8
  %208 = load i8*, i8** %14, align 8
  %209 = getelementptr inbounds i8, i8* %208, i64 0
  store i8 %207, i8* %209, align 1
  %210 = load i16*, i16** %26, align 8
  %211 = load i32*, i32** %13, align 8
  %212 = load i8*, i8** %14, align 8
  %213 = getelementptr inbounds i8, i8* %212, i64 1
  %214 = load i32, i32* %6, align 4
  %215 = load %struct.EasEntry*, %struct.EasEntry** %12, align 8
  %216 = call i32 @pfactorQ(i16** %21, i16* %210, i32* %211, i8* %213, i32 %214, %struct.EasEntry* %215)
  store i32 %216, i32* %20, align 4
  %217 = load i32, i32* %20, align 4
  %218 = icmp slt i32 %217, -1
  br i1 %218, label %219, label %222

219:                                              ; preds = %199
  %220 = load i32, i32* @cfracNabort, align 4
  %221 = add i32 %220, 1
  store i32 %221, i32* @cfracNabort, align 4
  br label %222

222:                                              ; preds = %219, %199
  %223 = load i16*, i16** %26, align 8
  %224 = call i32 bitcast (i32 (%struct.precisionType*, i32)* @picmp to i32 (i16*, i32)*)(i16* %223, i32 1)
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %228

226:                                              ; preds = %222
  %227 = call i16* @errorp(i32 4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.44, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.48, i64 0, i64 0))
  br label %472

228:                                              ; preds = %222
  br label %229

229:                                              ; preds = %228
  %230 = load i32, i32* %20, align 4
  %231 = icmp slt i32 %230, 0
  br i1 %231, label %154, label %232

232:                                              ; preds = %229
  %233 = load i16*, i16** %28, align 8
  %234 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %30, i16* %233)
  %235 = load i32, i32* %20, align 4
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %305

237:                                              ; preds = %232
  %238 = load %struct.SolnStruc*, %struct.SolnStruc** %8, align 8
  %239 = load i16*, i16** %21, align 8
  %240 = call %struct.SolnStruc* @findSoln(%struct.SolnStruc* %238, i16* %239)
  store %struct.SolnStruc* %240, %struct.SolnStruc** %9, align 8
  %241 = icmp eq %struct.SolnStruc* %240, null
  br i1 %241, label %242, label %269

242:                                              ; preds = %237
  %243 = load i32, i32* @cfracTsolns, align 4
  %244 = add i32 %243, 1
  store i32 %244, i32* @cfracTsolns, align 4
  %245 = load i32, i32* @verbose, align 4
  %246 = icmp sge i32 %245, 2
  br i1 %246, label %247, label %250

247:                                              ; preds = %242
  %248 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %249 = call i32 @putc(i32 46, %struct._IO_FILE* %248)
  br label %250

250:                                              ; preds = %247, %242
  %251 = load i32, i32* @verbose, align 4
  %252 = icmp sgt i32 %251, 3
  br i1 %252, label %253, label %260

253:                                              ; preds = %250
  %254 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %255 = load i32*, i32** %13, align 8
  %256 = load i32, i32* %6, align 4
  %257 = load i16*, i16** %30, align 8
  %258 = load i16*, i16** %21, align 8
  %259 = load i8*, i8** %14, align 8
  call void @printSoln(%struct._IO_FILE* %254, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.49, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.50, i64 0, i64 0), i32* %255, i32 %256, i16* %257, i16* %258, i8* %259)
  br label %260

260:                                              ; preds = %253, %250
  %261 = load i16*, i16** %3, align 8
  %262 = load i32*, i32** %13, align 8
  %263 = load i32, i32* %6, align 4
  %264 = load %struct.SolnStruc*, %struct.SolnStruc** %8, align 8
  %265 = load i16*, i16** %30, align 8
  %266 = load i16*, i16** %21, align 8
  %267 = load i8*, i8** %14, align 8
  %268 = call %struct.SolnStruc* @newSoln(i16* %261, i32* %262, i32 %263, %struct.SolnStruc* %264, i16* %265, i16* %266, i8* %267)
  store %struct.SolnStruc* %268, %struct.SolnStruc** %8, align 8
  br label %153

269:                                              ; preds = %237
  %270 = load i32, i32* @verbose, align 4
  %271 = icmp sgt i32 %270, 3
  br i1 %271, label %272, label %279

272:                                              ; preds = %269
  %273 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %274 = load i32*, i32** %13, align 8
  %275 = load i32, i32* %6, align 4
  %276 = load i16*, i16** %30, align 8
  %277 = load i16*, i16** %21, align 8
  %278 = load i8*, i8** %14, align 8
  call void @printSoln(%struct._IO_FILE* %273, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.49, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12.51, i64 0, i64 0), i32* %274, i32 %275, i16* %276, i16* %277, i8* %278)
  br label %279

279:                                              ; preds = %272, %269
  %280 = load i16*, i16** bitcast (%struct.precisionType** @pone to i16**), align 8
  %281 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %21, i16* %280)
  %282 = load i8*, i8** %14, align 8
  %283 = load i32*, i32** %13, align 8
  %284 = load i32, i32* %6, align 4
  %285 = load i16*, i16** %3, align 8
  %286 = load %struct.SolnStruc*, %struct.SolnStruc** %9, align 8
  call void @combineSoln(i16** %30, i16** %21, i8* %282, i32* %283, i32 %284, i16* %285, %struct.SolnStruc* %286)
  %287 = load i32, i32* @cfracT2solns, align 4
  %288 = add i32 %287, 1
  store i32 %288, i32* @cfracT2solns, align 4
  %289 = load i32, i32* @verbose, align 4
  %290 = icmp ne i32 %289, 0
  br i1 %290, label %291, label %294

291:                                              ; preds = %279
  %292 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %293 = call i32 @putc(i32 35, %struct._IO_FILE* %292)
  br label %294

294:                                              ; preds = %291, %279
  %295 = load i32, i32* @verbose, align 4
  %296 = icmp sgt i32 %295, 2
  br i1 %296, label %297, label %304

297:                                              ; preds = %294
  %298 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %299 = load i32*, i32** %13, align 8
  %300 = load i32, i32* %6, align 4
  %301 = load i16*, i16** %30, align 8
  %302 = load i16*, i16** %21, align 8
  %303 = load i8*, i8** %14, align 8
  call void @printSoln(%struct._IO_FILE* %298, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13.52, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14.53, i64 0, i64 0), i32* %299, i32 %300, i16* %301, i16* %302, i8* %303)
  br label %304

304:                                              ; preds = %297, %294
  br label %328

305:                                              ; preds = %232
  %306 = load i8*, i8** %14, align 8
  %307 = load i32*, i32** %13, align 8
  %308 = load i32, i32* %6, align 4
  %309 = load i16*, i16** %3, align 8
  call void @combineSoln(i16** %30, i16** %21, i8* %306, i32* %307, i32 %308, i16* %309, %struct.SolnStruc* null)
  %310 = load i32, i32* @cfracPsolns, align 4
  %311 = add i32 %310, 1
  store i32 %311, i32* @cfracPsolns, align 4
  %312 = load i32, i32* @verbose, align 4
  %313 = icmp ne i32 %312, 0
  br i1 %313, label %314, label %317

314:                                              ; preds = %305
  %315 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %316 = call i32 @putc(i32 42, %struct._IO_FILE* %315)
  br label %317

317:                                              ; preds = %314, %305
  %318 = load i32, i32* @verbose, align 4
  %319 = icmp sgt i32 %318, 2
  br i1 %319, label %320, label %327

320:                                              ; preds = %317
  %321 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %322 = load i32*, i32** %13, align 8
  %323 = load i32, i32* %6, align 4
  %324 = load i16*, i16** %30, align 8
  %325 = load i16*, i16** %21, align 8
  %326 = load i8*, i8** %14, align 8
  call void @printSoln(%struct._IO_FILE* %321, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.54, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14.53, i64 0, i64 0), i32* %322, i32 %323, i16* %324, i16* %325, i8* %326)
  br label %327

327:                                              ; preds = %320, %317
  br label %328

328:                                              ; preds = %327, %304
  %329 = load i32, i32* %6, align 4
  %330 = add i32 %329, 1
  store i32 %330, i32* %18, align 4
  br label %331

331:                                              ; preds = %384, %328
  %332 = load i32, i32* %18, align 4
  %333 = add i32 %332, -1
  store i32 %333, i32* %18, align 4
  %334 = load i8*, i8** %14, align 8
  %335 = load i32, i32* %18, align 4
  %336 = zext i32 %335 to i64
  %337 = getelementptr inbounds i8, i8* %334, i64 %336
  %338 = load i8, i8* %337, align 1
  %339 = icmp ne i8 %338, 0
  br i1 %339, label %340, label %383

340:                                              ; preds = %331
  %341 = load %struct.SolnStruc**, %struct.SolnStruc*** %11, align 8
  %342 = load i32, i32* %18, align 4
  %343 = zext i32 %342 to i64
  %344 = getelementptr inbounds %struct.SolnStruc*, %struct.SolnStruc** %341, i64 %343
  %345 = load %struct.SolnStruc*, %struct.SolnStruc** %344, align 8
  store %struct.SolnStruc* %345, %struct.SolnStruc** %10, align 8
  %346 = load %struct.SolnStruc*, %struct.SolnStruc** %10, align 8
  %347 = icmp eq %struct.SolnStruc* %346, null
  br i1 %347, label %348, label %377

348:                                              ; preds = %340
  %349 = load i32, i32* @verbose, align 4
  %350 = icmp sgt i32 %349, 3
  br i1 %350, label %351, label %358

351:                                              ; preds = %348
  %352 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %353 = load i32*, i32** %13, align 8
  %354 = load i32, i32* %6, align 4
  %355 = load i16*, i16** %30, align 8
  %356 = load i16*, i16** %21, align 8
  %357 = load i8*, i8** %14, align 8
  call void @printSoln(%struct._IO_FILE* %352, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16.55, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14.53, i64 0, i64 0), i32* %353, i32 %354, i16* %355, i16* %356, i8* %357)
  br label %358

358:                                              ; preds = %351, %348
  %359 = load i32, i32* @verbose, align 4
  %360 = icmp sgt i32 %359, 2
  br i1 %360, label %361, label %364

361:                                              ; preds = %358
  %362 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %363 = call i32 @putc(i32 10, %struct._IO_FILE* %362)
  br label %364

364:                                              ; preds = %361, %358
  %365 = load i16*, i16** %3, align 8
  %366 = load i32*, i32** %13, align 8
  %367 = load i32, i32* %6, align 4
  %368 = load %struct.SolnStruc*, %struct.SolnStruc** %10, align 8
  %369 = load i16*, i16** %30, align 8
  %370 = load i16*, i16** %21, align 8
  %371 = load i8*, i8** %14, align 8
  %372 = call %struct.SolnStruc* @newSoln(i16* %365, i32* %366, i32 %367, %struct.SolnStruc* %368, i16* %369, i16* %370, i8* %371)
  %373 = load %struct.SolnStruc**, %struct.SolnStruc*** %11, align 8
  %374 = load i32, i32* %18, align 4
  %375 = zext i32 %374 to i64
  %376 = getelementptr inbounds %struct.SolnStruc*, %struct.SolnStruc** %373, i64 %375
  store %struct.SolnStruc* %372, %struct.SolnStruc** %376, align 8
  br label %153

377:                                              ; preds = %340
  %378 = load i8*, i8** %14, align 8
  %379 = load i32*, i32** %13, align 8
  %380 = load i32, i32* %6, align 4
  %381 = load i16*, i16** %3, align 8
  %382 = load %struct.SolnStruc*, %struct.SolnStruc** %10, align 8
  call void @combineSoln(i16** %30, i16** %21, i8* %378, i32* %379, i32 %380, i16* %381, %struct.SolnStruc* %382)
  br label %383

383:                                              ; preds = %377, %331
  br label %384

384:                                              ; preds = %383
  %385 = load i32, i32* %18, align 4
  %386 = icmp ne i32 %385, 0
  br i1 %386, label %331, label %387

387:                                              ; preds = %384
  %388 = load i32, i32* @cfracFsolns, align 4
  %389 = add i32 %388, 1
  store i32 %389, i32* @cfracFsolns, align 4
  %390 = load i16*, i16** %21, align 8
  %391 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %31, i16* %390)
  %392 = load i32, i32* @verbose, align 4
  switch i32 %392, label %400 [
    i32 0, label %393
    i32 1, label %394
    i32 2, label %397
  ]

393:                                              ; preds = %387
  br label %423

394:                                              ; preds = %387
  %395 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %396 = call i32 @putc(i32 47, %struct._IO_FILE* %395)
  br label %423

397:                                              ; preds = %387
  %398 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %399 = call i32 @putc(i32 10, %struct._IO_FILE* %398)
  br label %423

400:                                              ; preds = %387
  %401 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %402 = call i32 @putc(i32 10, %struct._IO_FILE* %401)
  %403 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %404 = load i32*, i32** %13, align 8
  %405 = load i32, i32* %6, align 4
  %406 = load i16*, i16** %30, align 8
  %407 = load i16*, i16** %21, align 8
  %408 = load i8*, i8** %14, align 8
  call void @printSoln(%struct._IO_FILE* %403, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17.56, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.50, i64 0, i64 0), i32* %404, i32 %405, i16* %406, i16* %407, i8* %408)
  %409 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %410 = call i32 @fputs(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18.57, i64 0, i64 0), %struct._IO_FILE* %409)
  %411 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %412 = load i16*, i16** %30, align 8
  %413 = call i32 bitcast (i32 (%struct._IO_FILE*, %struct.precisionType*)* @fputp to i32 (%struct._IO_FILE*, i16*)*)(%struct._IO_FILE* %411, i16* %412)
  %414 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %415 = call i32 @fputs(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.58, i64 0, i64 0), %struct._IO_FILE* %414)
  %416 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %417 = load i16*, i16** %31, align 8
  %418 = call i32 bitcast (i32 (%struct._IO_FILE*, %struct.precisionType*)* @fputp to i32 (%struct._IO_FILE*, i16*)*)(%struct._IO_FILE* %416, i16* %417)
  %419 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %420 = call i32 @putc(i32 10, %struct._IO_FILE* %419)
  %421 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %422 = call i32 @fflush(%struct._IO_FILE* %421)
  br label %423

423:                                              ; preds = %400, %397, %394, %393
  br label %424

424:                                              ; preds = %423
  %425 = load i16*, i16** %30, align 8
  %426 = load i16*, i16** %31, align 8
  %427 = call i32 bitcast (i32 (%struct.precisionType*, %struct.precisionType*)* @pcmp to i32 (i16*, i16*)*)(i16* %425, i16* %426)
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %436, label %429

429:                                              ; preds = %424
  %430 = load i16*, i16** %30, align 8
  %431 = load i16*, i16** %31, align 8
  %432 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @padd to i16* (i16*, i16*)*)(i16* %430, i16* %431)
  %433 = load i16*, i16** %3, align 8
  %434 = call i32 bitcast (i32 (%struct.precisionType*, %struct.precisionType*)* @pcmp to i32 (i16*, i16*)*)(i16* %432, i16* %433)
  %435 = icmp eq i32 %434, 0
  br label %436

436:                                              ; preds = %429, %424
  %437 = phi i1 [ true, %424 ], [ %435, %429 ]
  br i1 %437, label %152, label %438

438:                                              ; preds = %436
  %439 = load i16*, i16** %30, align 8
  %440 = load i16*, i16** %31, align 8
  %441 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @padd to i16* (i16*, i16*)*)(i16* %439, i16* %440)
  %442 = load i16*, i16** %3, align 8
  %443 = call i16* @pgcd(i16* %441, i16* %442)
  %444 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %34, i16* %443)
  %445 = load i16*, i16** %34, align 8
  %446 = load i16*, i16** bitcast (%struct.precisionType** @pone to i16**), align 8
  %447 = call i32 bitcast (i32 (%struct.precisionType*, %struct.precisionType*)* @pcmp to i32 (i16*, i16*)*)(i16* %445, i16* %446)
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %454, label %449

449:                                              ; preds = %438
  %450 = load i16*, i16** %34, align 8
  %451 = load i16*, i16** %3, align 8
  %452 = call i32 bitcast (i32 (%struct.precisionType*, %struct.precisionType*)* @pcmp to i32 (i16*, i16*)*)(i16* %450, i16* %451)
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %454, label %471

454:                                              ; preds = %449, %438
  %455 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %456 = call i32 @fputs(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.20, i64 0, i64 0), %struct._IO_FILE* %455)
  %457 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %458 = call i32 @fputs(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0), %struct._IO_FILE* %457)
  %459 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %460 = load i16*, i16** %30, align 8
  %461 = call i32 bitcast (i32 (%struct._IO_FILE*, %struct.precisionType*)* @fputp to i32 (%struct._IO_FILE*, i16*)*)(%struct._IO_FILE* %459, i16* %460)
  %462 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %463 = call i32 @fputs(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0), %struct._IO_FILE* %462)
  %464 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %465 = load i16*, i16** %31, align 8
  %466 = call i32 bitcast (i32 (%struct._IO_FILE*, %struct.precisionType*)* @fputp to i32 (%struct._IO_FILE*, i16*)*)(%struct._IO_FILE* %464, i16* %465)
  %467 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %468 = call i32 @putc(i32 10, %struct._IO_FILE* %467)
  %469 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %470 = call i32 @fflush(%struct._IO_FILE* %469)
  call void @abort() #10
  unreachable

471:                                              ; preds = %449
  br label %472

472:                                              ; preds = %471, %226, %158, %76
  %473 = load i32*, i32** %4, align 8
  %474 = icmp ne i32* %473, null
  br i1 %474, label %475, label %478

475:                                              ; preds = %472
  %476 = load i32, i32* %17, align 4
  %477 = load i32*, i32** %4, align 8
  store i32 %476, i32* %477, align 4
  br label %478

478:                                              ; preds = %475, %472
  %479 = load %struct.SolnStruc**, %struct.SolnStruc*** %11, align 8
  %480 = icmp ne %struct.SolnStruc** %479, null
  br i1 %480, label %481, label %496

481:                                              ; preds = %478
  store i32 0, i32* %19, align 4
  br label %482

482:                                              ; preds = %492, %481
  %483 = load i32, i32* %19, align 4
  %484 = load i32, i32* %6, align 4
  %485 = icmp ule i32 %483, %484
  br i1 %485, label %486, label %495

486:                                              ; preds = %482
  %487 = load %struct.SolnStruc**, %struct.SolnStruc*** %11, align 8
  %488 = load i32, i32* %19, align 4
  %489 = zext i32 %488 to i64
  %490 = getelementptr inbounds %struct.SolnStruc*, %struct.SolnStruc** %487, i64 %489
  %491 = load %struct.SolnStruc*, %struct.SolnStruc** %490, align 8
  call void @freeSoln(%struct.SolnStruc* %491)
  br label %492

492:                                              ; preds = %486
  %493 = load i32, i32* %19, align 4
  %494 = add i32 %493, 1
  store i32 %494, i32* %19, align 4
  br label %482

495:                                              ; preds = %482
  br label %496

496:                                              ; preds = %495, %478
  %497 = load %struct.EasEntry*, %struct.EasEntry** %12, align 8
  call void @freeEas(%struct.EasEntry* %497)
  %498 = load %struct.SolnStruc*, %struct.SolnStruc** %8, align 8
  call void @freeSolns(%struct.SolnStruc* %498)
  %499 = load i8*, i8** %14, align 8
  call void @free(i8* %499) #9
  %500 = load i32*, i32** %13, align 8
  %501 = bitcast i32* %500 to i8*
  call void @free(i8* %501) #9
  %502 = load i16*, i16** %22, align 8
  %503 = icmp ne i16* %502, null
  br i1 %503, label %504, label %514

504:                                              ; preds = %496
  %505 = load i16*, i16** %22, align 8
  %506 = load i16, i16* %505, align 2
  %507 = add i16 %506, -1
  store i16 %507, i16* %505, align 2
  %508 = zext i16 %507 to i32
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %510, label %514

510:                                              ; preds = %504
  %511 = load i16*, i16** %22, align 8
  %512 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %511)
  %513 = icmp ne i32 %512, 0
  br label %514

514:                                              ; preds = %510, %504, %496
  %515 = phi i1 [ false, %504 ], [ false, %496 ], [ %513, %510 ]
  %516 = zext i1 %515 to i32
  %517 = load i16*, i16** %23, align 8
  %518 = icmp ne i16* %517, null
  br i1 %518, label %519, label %529

519:                                              ; preds = %514
  %520 = load i16*, i16** %23, align 8
  %521 = load i16, i16* %520, align 2
  %522 = add i16 %521, -1
  store i16 %522, i16* %520, align 2
  %523 = zext i16 %522 to i32
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %525, label %529

525:                                              ; preds = %519
  %526 = load i16*, i16** %23, align 8
  %527 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %526)
  %528 = icmp ne i32 %527, 0
  br label %529

529:                                              ; preds = %525, %519, %514
  %530 = phi i1 [ false, %519 ], [ false, %514 ], [ %528, %525 ]
  %531 = zext i1 %530 to i32
  %532 = load i16*, i16** %24, align 8
  %533 = icmp ne i16* %532, null
  br i1 %533, label %534, label %544

534:                                              ; preds = %529
  %535 = load i16*, i16** %24, align 8
  %536 = load i16, i16* %535, align 2
  %537 = add i16 %536, -1
  store i16 %537, i16* %535, align 2
  %538 = zext i16 %537 to i32
  %539 = icmp eq i32 %538, 0
  br i1 %539, label %540, label %544

540:                                              ; preds = %534
  %541 = load i16*, i16** %24, align 8
  %542 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %541)
  %543 = icmp ne i32 %542, 0
  br label %544

544:                                              ; preds = %540, %534, %529
  %545 = phi i1 [ false, %534 ], [ false, %529 ], [ %543, %540 ]
  %546 = zext i1 %545 to i32
  %547 = load i16*, i16** %25, align 8
  %548 = icmp ne i16* %547, null
  br i1 %548, label %549, label %559

549:                                              ; preds = %544
  %550 = load i16*, i16** %25, align 8
  %551 = load i16, i16* %550, align 2
  %552 = add i16 %551, -1
  store i16 %552, i16* %550, align 2
  %553 = zext i16 %552 to i32
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %555, label %559

555:                                              ; preds = %549
  %556 = load i16*, i16** %25, align 8
  %557 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %556)
  %558 = icmp ne i32 %557, 0
  br label %559

559:                                              ; preds = %555, %549, %544
  %560 = phi i1 [ false, %549 ], [ false, %544 ], [ %558, %555 ]
  %561 = zext i1 %560 to i32
  %562 = load i16*, i16** %26, align 8
  %563 = icmp ne i16* %562, null
  br i1 %563, label %564, label %574

564:                                              ; preds = %559
  %565 = load i16*, i16** %26, align 8
  %566 = load i16, i16* %565, align 2
  %567 = add i16 %566, -1
  store i16 %567, i16* %565, align 2
  %568 = zext i16 %567 to i32
  %569 = icmp eq i32 %568, 0
  br i1 %569, label %570, label %574

570:                                              ; preds = %564
  %571 = load i16*, i16** %26, align 8
  %572 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %571)
  %573 = icmp ne i32 %572, 0
  br label %574

574:                                              ; preds = %570, %564, %559
  %575 = phi i1 [ false, %564 ], [ false, %559 ], [ %573, %570 ]
  %576 = zext i1 %575 to i32
  %577 = load i16*, i16** %27, align 8
  %578 = icmp ne i16* %577, null
  br i1 %578, label %579, label %589

579:                                              ; preds = %574
  %580 = load i16*, i16** %27, align 8
  %581 = load i16, i16* %580, align 2
  %582 = add i16 %581, -1
  store i16 %582, i16* %580, align 2
  %583 = zext i16 %582 to i32
  %584 = icmp eq i32 %583, 0
  br i1 %584, label %585, label %589

585:                                              ; preds = %579
  %586 = load i16*, i16** %27, align 8
  %587 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %586)
  %588 = icmp ne i32 %587, 0
  br label %589

589:                                              ; preds = %585, %579, %574
  %590 = phi i1 [ false, %579 ], [ false, %574 ], [ %588, %585 ]
  %591 = zext i1 %590 to i32
  %592 = load i16*, i16** %28, align 8
  %593 = icmp ne i16* %592, null
  br i1 %593, label %594, label %604

594:                                              ; preds = %589
  %595 = load i16*, i16** %28, align 8
  %596 = load i16, i16* %595, align 2
  %597 = add i16 %596, -1
  store i16 %597, i16* %595, align 2
  %598 = zext i16 %597 to i32
  %599 = icmp eq i32 %598, 0
  br i1 %599, label %600, label %604

600:                                              ; preds = %594
  %601 = load i16*, i16** %28, align 8
  %602 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %601)
  %603 = icmp ne i32 %602, 0
  br label %604

604:                                              ; preds = %600, %594, %589
  %605 = phi i1 [ false, %594 ], [ false, %589 ], [ %603, %600 ]
  %606 = zext i1 %605 to i32
  %607 = load i16*, i16** %29, align 8
  %608 = icmp ne i16* %607, null
  br i1 %608, label %609, label %619

609:                                              ; preds = %604
  %610 = load i16*, i16** %29, align 8
  %611 = load i16, i16* %610, align 2
  %612 = add i16 %611, -1
  store i16 %612, i16* %610, align 2
  %613 = zext i16 %612 to i32
  %614 = icmp eq i32 %613, 0
  br i1 %614, label %615, label %619

615:                                              ; preds = %609
  %616 = load i16*, i16** %29, align 8
  %617 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %616)
  %618 = icmp ne i32 %617, 0
  br label %619

619:                                              ; preds = %615, %609, %604
  %620 = phi i1 [ false, %609 ], [ false, %604 ], [ %618, %615 ]
  %621 = zext i1 %620 to i32
  %622 = load i16*, i16** %30, align 8
  %623 = icmp ne i16* %622, null
  br i1 %623, label %624, label %634

624:                                              ; preds = %619
  %625 = load i16*, i16** %30, align 8
  %626 = load i16, i16* %625, align 2
  %627 = add i16 %626, -1
  store i16 %627, i16* %625, align 2
  %628 = zext i16 %627 to i32
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %630, label %634

630:                                              ; preds = %624
  %631 = load i16*, i16** %30, align 8
  %632 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %631)
  %633 = icmp ne i32 %632, 0
  br label %634

634:                                              ; preds = %630, %624, %619
  %635 = phi i1 [ false, %624 ], [ false, %619 ], [ %633, %630 ]
  %636 = zext i1 %635 to i32
  %637 = load i16*, i16** %31, align 8
  %638 = icmp ne i16* %637, null
  br i1 %638, label %639, label %649

639:                                              ; preds = %634
  %640 = load i16*, i16** %31, align 8
  %641 = load i16, i16* %640, align 2
  %642 = add i16 %641, -1
  store i16 %642, i16* %640, align 2
  %643 = zext i16 %642 to i32
  %644 = icmp eq i32 %643, 0
  br i1 %644, label %645, label %649

645:                                              ; preds = %639
  %646 = load i16*, i16** %31, align 8
  %647 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %646)
  %648 = icmp ne i32 %647, 0
  br label %649

649:                                              ; preds = %645, %639, %634
  %650 = phi i1 [ false, %639 ], [ false, %634 ], [ %648, %645 ]
  %651 = zext i1 %650 to i32
  %652 = load i16*, i16** %32, align 8
  %653 = icmp ne i16* %652, null
  br i1 %653, label %654, label %664

654:                                              ; preds = %649
  %655 = load i16*, i16** %32, align 8
  %656 = load i16, i16* %655, align 2
  %657 = add i16 %656, -1
  store i16 %657, i16* %655, align 2
  %658 = zext i16 %657 to i32
  %659 = icmp eq i32 %658, 0
  br i1 %659, label %660, label %664

660:                                              ; preds = %654
  %661 = load i16*, i16** %32, align 8
  %662 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %661)
  %663 = icmp ne i32 %662, 0
  br label %664

664:                                              ; preds = %660, %654, %649
  %665 = phi i1 [ false, %654 ], [ false, %649 ], [ %663, %660 ]
  %666 = zext i1 %665 to i32
  %667 = load i16*, i16** %33, align 8
  %668 = icmp ne i16* %667, null
  br i1 %668, label %669, label %679

669:                                              ; preds = %664
  %670 = load i16*, i16** %33, align 8
  %671 = load i16, i16* %670, align 2
  %672 = add i16 %671, -1
  store i16 %672, i16* %670, align 2
  %673 = zext i16 %672 to i32
  %674 = icmp eq i32 %673, 0
  br i1 %674, label %675, label %679

675:                                              ; preds = %669
  %676 = load i16*, i16** %33, align 8
  %677 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %676)
  %678 = icmp ne i32 %677, 0
  br label %679

679:                                              ; preds = %675, %669, %664
  %680 = phi i1 [ false, %669 ], [ false, %664 ], [ %678, %675 ]
  %681 = zext i1 %680 to i32
  %682 = load i16*, i16** %21, align 8
  %683 = icmp ne i16* %682, null
  br i1 %683, label %684, label %694

684:                                              ; preds = %679
  %685 = load i16*, i16** %21, align 8
  %686 = load i16, i16* %685, align 2
  %687 = add i16 %686, -1
  store i16 %687, i16* %685, align 2
  %688 = zext i16 %687 to i32
  %689 = icmp eq i32 %688, 0
  br i1 %689, label %690, label %694

690:                                              ; preds = %684
  %691 = load i16*, i16** %21, align 8
  %692 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %691)
  %693 = icmp ne i32 %692, 0
  br label %694

694:                                              ; preds = %690, %684, %679
  %695 = phi i1 [ false, %684 ], [ false, %679 ], [ %693, %690 ]
  %696 = zext i1 %695 to i32
  %697 = load i16*, i16** %3, align 8
  %698 = icmp ne i16* %697, null
  br i1 %698, label %699, label %709

699:                                              ; preds = %694
  %700 = load i16*, i16** %3, align 8
  %701 = load i16, i16* %700, align 2
  %702 = add i16 %701, -1
  store i16 %702, i16* %700, align 2
  %703 = zext i16 %702 to i32
  %704 = icmp eq i32 %703, 0
  br i1 %704, label %705, label %709

705:                                              ; preds = %699
  %706 = load i16*, i16** %3, align 8
  %707 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %706)
  %708 = icmp ne i32 %707, 0
  br label %709

709:                                              ; preds = %705, %699, %694
  %710 = phi i1 [ false, %699 ], [ false, %694 ], [ %708, %705 ]
  %711 = zext i1 %710 to i32
  %712 = load i16*, i16** %34, align 8
  %713 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @presult to i16* (i16*)*)(i16* %712)
  ret i16* %713
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @pcfracInit(i32 %0, i32 %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load i32, i32* %4, align 4
  store i32 %7, i32* @pcfrac_m, align 4
  %8 = load i32, i32* %5, align 4
  store i32 %8, i32* @pcfrac_k, align 4
  %9 = load i32, i32* %6, align 4
  store i32 %9, i32* @pcfrac_aborts, align 4
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @pcmpz(%struct.precisionType* %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  %3 = alloca i16*, align 8
  %4 = alloca i32, align 4
  store %struct.precisionType* %0, %struct.precisionType** %2, align 8
  %5 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %6 = icmp ne %struct.precisionType* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %9 = bitcast %struct.precisionType* %8 to i16*
  %10 = load i16, i16* %9, align 2
  %11 = add i16 %10, 1
  store i16 %11, i16* %9, align 2
  %12 = zext i16 %10 to i32
  %13 = icmp ne i32 %12, 0
  br label %14

14:                                               ; preds = %7, %1
  %15 = phi i1 [ false, %1 ], [ %13, %7 ]
  %16 = zext i1 %15 to i32
  %17 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  store i32 0, i32* %4, align 4
  %18 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %19 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %18, i32 0, i32 4
  %20 = getelementptr inbounds [1 x i16], [1 x i16]* %19, i64 0, i64 0
  store i16* %20, i16** %3, align 8
  br label %21

21:                                               ; preds = %36, %14
  %22 = load i16*, i16** %3, align 8
  %23 = getelementptr inbounds i16, i16* %22, i32 1
  store i16* %23, i16** %3, align 8
  %24 = load i16, i16* %22, align 2
  %25 = zext i16 %24 to i32
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %35

27:                                               ; preds = %21
  %28 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %29 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %28, i32 0, i32 3
  %30 = load i8, i8* %29, align 2
  %31 = icmp ne i8 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %27
  store i32 -1, i32* %4, align 4
  br label %34

33:                                               ; preds = %27
  store i32 1, i32* %4, align 4
  br label %34

34:                                               ; preds = %33, %32
  br label %48

35:                                               ; preds = %21
  br label %36

36:                                               ; preds = %35
  %37 = load i16*, i16** %3, align 8
  %38 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %39 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %38, i32 0, i32 4
  %40 = getelementptr inbounds [1 x i16], [1 x i16]* %39, i64 0, i64 0
  %41 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %42 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %41, i32 0, i32 2
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i32
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i16, i16* %40, i64 %45
  %47 = icmp ult i16* %37, %46
  br i1 %47, label %21, label %48

48:                                               ; preds = %36, %34
  %49 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %50 = icmp ne %struct.precisionType* %49, null
  br i1 %50, label %51, label %62

51:                                               ; preds = %48
  %52 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %53 = bitcast %struct.precisionType* %52 to i16*
  %54 = load i16, i16* %53, align 2
  %55 = add i16 %54, -1
  store i16 %55, i16* %53, align 2
  %56 = zext i16 %55 to i32
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %62

58:                                               ; preds = %51
  %59 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %60 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %59)
  %61 = icmp ne i32 %60, 0
  br label %62

62:                                               ; preds = %58, %51, %48
  %63 = phi i1 [ false, %51 ], [ false, %48 ], [ %61, %58 ]
  %64 = zext i1 %63 to i32
  %65 = load i32, i32* %4, align 4
  ret i32 %65
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @pcmp(%struct.precisionType* %0, %struct.precisionType* %1) #0 {
  %3 = alloca %struct.precisionType*, align 8
  %4 = alloca %struct.precisionType*, align 8
  %5 = alloca i16*, align 8
  %6 = alloca i16*, align 8
  %7 = alloca i32, align 4
  store %struct.precisionType* %0, %struct.precisionType** %3, align 8
  store %struct.precisionType* %1, %struct.precisionType** %4, align 8
  %8 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %9 = icmp ne %struct.precisionType* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %2
  %11 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %12 = bitcast %struct.precisionType* %11 to i16*
  %13 = load i16, i16* %12, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %12, align 2
  %15 = zext i16 %13 to i32
  %16 = icmp ne i32 %15, 0
  br label %17

17:                                               ; preds = %10, %2
  %18 = phi i1 [ false, %2 ], [ %16, %10 ]
  %19 = zext i1 %18 to i32
  %20 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %21 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %22 = icmp ne %struct.precisionType* %21, null
  br i1 %22, label %23, label %30

23:                                               ; preds = %17
  %24 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %25 = bitcast %struct.precisionType* %24 to i16*
  %26 = load i16, i16* %25, align 2
  %27 = add i16 %26, 1
  store i16 %27, i16* %25, align 2
  %28 = zext i16 %26 to i32
  %29 = icmp ne i32 %28, 0
  br label %30

30:                                               ; preds = %23, %17
  %31 = phi i1 [ false, %17 ], [ %29, %23 ]
  %32 = zext i1 %31 to i32
  %33 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %34 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %35 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %34, i32 0, i32 3
  %36 = load i8, i8* %35, align 2
  %37 = zext i8 %36 to i32
  %38 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %39 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %38, i32 0, i32 3
  %40 = load i8, i8* %39, align 2
  %41 = zext i8 %40 to i32
  %42 = icmp ne i32 %37, %41
  br i1 %42, label %43, label %51

43:                                               ; preds = %30
  %44 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %45 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %44, i32 0, i32 3
  %46 = load i8, i8* %45, align 2
  %47 = icmp ne i8 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %43
  store i32 -1, i32* %7, align 4
  br label %50

49:                                               ; preds = %43
  store i32 1, i32* %7, align 4
  br label %50

50:                                               ; preds = %49, %48
  br label %129

51:                                               ; preds = %30
  %52 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %53 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %52, i32 0, i32 2
  %54 = load i16, i16* %53, align 2
  %55 = zext i16 %54 to i32
  %56 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %57 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %56, i32 0, i32 2
  %58 = load i16, i16* %57, align 2
  %59 = zext i16 %58 to i32
  %60 = sub nsw i32 %55, %59
  store i32 %60, i32* %7, align 4
  %61 = load i32, i32* %7, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %120

63:                                               ; preds = %51
  %64 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %65 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %64, i32 0, i32 4
  %66 = getelementptr inbounds [1 x i16], [1 x i16]* %65, i64 0, i64 0
  %67 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %68 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %67, i32 0, i32 2
  %69 = load i16, i16* %68, align 2
  %70 = zext i16 %69 to i32
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i16, i16* %66, i64 %71
  store i16* %72, i16** %5, align 8
  %73 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %74 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %73, i32 0, i32 4
  %75 = getelementptr inbounds [1 x i16], [1 x i16]* %74, i64 0, i64 0
  %76 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %77 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %76, i32 0, i32 2
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i32
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i16, i16* %75, i64 %80
  store i16* %81, i16** %6, align 8
  br label %82

82:                                               ; preds = %94, %63
  %83 = load i16*, i16** %5, align 8
  %84 = getelementptr inbounds i16, i16* %83, i32 -1
  store i16* %84, i16** %5, align 8
  %85 = load i16, i16* %84, align 2
  %86 = zext i16 %85 to i32
  %87 = load i16*, i16** %6, align 8
  %88 = getelementptr inbounds i16, i16* %87, i32 -1
  store i16* %88, i16** %6, align 8
  %89 = load i16, i16* %88, align 2
  %90 = zext i16 %89 to i32
  %91 = icmp ne i32 %86, %90
  br i1 %91, label %92, label %93

92:                                               ; preds = %82
  br label %100

93:                                               ; preds = %82
  br label %94

94:                                               ; preds = %93
  %95 = load i16*, i16** %6, align 8
  %96 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %97 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %96, i32 0, i32 4
  %98 = getelementptr inbounds [1 x i16], [1 x i16]* %97, i64 0, i64 0
  %99 = icmp ugt i16* %95, %98
  br i1 %99, label %82, label %100

100:                                              ; preds = %94, %92
  %101 = load i16*, i16** %5, align 8
  %102 = load i16, i16* %101, align 2
  %103 = zext i16 %102 to i32
  %104 = load i16*, i16** %6, align 8
  %105 = load i16, i16* %104, align 2
  %106 = zext i16 %105 to i32
  %107 = icmp sgt i32 %103, %106
  br i1 %107, label %108, label %109

108:                                              ; preds = %100
  store i32 1, i32* %7, align 4
  br label %119

109:                                              ; preds = %100
  %110 = load i16*, i16** %5, align 8
  %111 = load i16, i16* %110, align 2
  %112 = zext i16 %111 to i32
  %113 = load i16*, i16** %6, align 8
  %114 = load i16, i16* %113, align 2
  %115 = zext i16 %114 to i32
  %116 = icmp slt i32 %112, %115
  br i1 %116, label %117, label %118

117:                                              ; preds = %109
  store i32 -1, i32* %7, align 4
  br label %118

118:                                              ; preds = %117, %109
  br label %119

119:                                              ; preds = %118, %108
  br label %120

120:                                              ; preds = %119, %51
  %121 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %122 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %121, i32 0, i32 3
  %123 = load i8, i8* %122, align 2
  %124 = icmp ne i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %120
  %126 = load i32, i32* %7, align 4
  %127 = sub nsw i32 0, %126
  store i32 %127, i32* %7, align 4
  br label %128

128:                                              ; preds = %125, %120
  br label %129

129:                                              ; preds = %128, %50
  %130 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %131 = icmp ne %struct.precisionType* %130, null
  br i1 %131, label %132, label %143

132:                                              ; preds = %129
  %133 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %134 = bitcast %struct.precisionType* %133 to i16*
  %135 = load i16, i16* %134, align 2
  %136 = add i16 %135, -1
  store i16 %136, i16* %134, align 2
  %137 = zext i16 %136 to i32
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %143

139:                                              ; preds = %132
  %140 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %141 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %140)
  %142 = icmp ne i32 %141, 0
  br label %143

143:                                              ; preds = %139, %132, %129
  %144 = phi i1 [ false, %132 ], [ false, %129 ], [ %142, %139 ]
  %145 = zext i1 %144 to i32
  %146 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %147 = icmp ne %struct.precisionType* %146, null
  br i1 %147, label %148, label %159

148:                                              ; preds = %143
  %149 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %150 = bitcast %struct.precisionType* %149 to i16*
  %151 = load i16, i16* %150, align 2
  %152 = add i16 %151, -1
  store i16 %152, i16* %150, align 2
  %153 = zext i16 %152 to i32
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %159

155:                                              ; preds = %148
  %156 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %157 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %156)
  %158 = icmp ne i32 %157, 0
  br label %159

159:                                              ; preds = %155, %148, %143
  %160 = phi i1 [ false, %148 ], [ false, %143 ], [ %158, %155 ]
  %161 = zext i1 %160 to i32
  %162 = load i32, i32* %7, align 4
  ret i32 %162
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @pdivmod(%struct.precisionType* %0, %struct.precisionType* %1, %struct.precisionType** %2, %struct.precisionType** %3) #0 {
  %5 = alloca %struct.precisionType*, align 8
  %6 = alloca %struct.precisionType*, align 8
  %7 = alloca %struct.precisionType*, align 8
  %8 = alloca %struct.precisionType**, align 8
  %9 = alloca %struct.precisionType**, align 8
  %10 = alloca i16*, align 8
  %11 = alloca i16*, align 8
  %12 = alloca i16*, align 8
  %13 = alloca i16*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca i16, align 2
  %19 = alloca i16, align 2
  %20 = alloca i16, align 2
  %21 = alloca %struct.precisionType*, align 8
  %22 = alloca %struct.precisionType*, align 8
  %23 = alloca %struct.precisionType*, align 8
  store %struct.precisionType* %0, %struct.precisionType** %6, align 8
  store %struct.precisionType* %1, %struct.precisionType** %7, align 8
  store %struct.precisionType** %2, %struct.precisionType*** %8, align 8
  store %struct.precisionType** %3, %struct.precisionType*** %9, align 8
  %24 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %25 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %24, i32 0, i32 2
  %26 = load i16, i16* %25, align 2
  store i16 %26, i16* %17, align 2
  %27 = load %struct.precisionType*, %struct.precisionType** %6, align 8
  %28 = icmp ne %struct.precisionType* %27, null
  br i1 %28, label %29, label %36

29:                                               ; preds = %4
  %30 = load %struct.precisionType*, %struct.precisionType** %6, align 8
  %31 = bitcast %struct.precisionType* %30 to i16*
  %32 = load i16, i16* %31, align 2
  %33 = add i16 %32, 1
  store i16 %33, i16* %31, align 2
  %34 = zext i16 %32 to i32
  %35 = icmp ne i32 %34, 0
  br label %36

36:                                               ; preds = %29, %4
  %37 = phi i1 [ false, %4 ], [ %35, %29 ]
  %38 = zext i1 %37 to i32
  %39 = load %struct.precisionType*, %struct.precisionType** %6, align 8
  %40 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %41 = icmp ne %struct.precisionType* %40, null
  br i1 %41, label %42, label %49

42:                                               ; preds = %36
  %43 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %44 = bitcast %struct.precisionType* %43 to i16*
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, 1
  store i16 %46, i16* %44, align 2
  %47 = zext i16 %45 to i32
  %48 = icmp ne i32 %47, 0
  br label %49

49:                                               ; preds = %42, %36
  %50 = phi i1 [ false, %36 ], [ %48, %42 ]
  %51 = zext i1 %50 to i32
  %52 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %53 = load %struct.precisionType*, %struct.precisionType** %6, align 8
  %54 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %53, i32 0, i32 2
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = load i16, i16* %17, align 2
  %58 = zext i16 %57 to i32
  %59 = icmp slt i32 %56, %58
  br i1 %59, label %60, label %65

60:                                               ; preds = %49
  store %struct.precisionType* null, %struct.precisionType** %21, align 8
  store %struct.precisionType* null, %struct.precisionType** %22, align 8
  %61 = load %struct.precisionType*, %struct.precisionType** @pzero, align 8
  %62 = call %struct.precisionType* @psetq(%struct.precisionType** %21, %struct.precisionType* %61)
  %63 = load %struct.precisionType*, %struct.precisionType** %6, align 8
  %64 = call %struct.precisionType* @psetq(%struct.precisionType** %22, %struct.precisionType* %63)
  br label %644

65:                                               ; preds = %49
  %66 = load %struct.precisionType*, %struct.precisionType** %6, align 8
  %67 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %66, i32 0, i32 2
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i32
  %70 = load i16, i16* %17, align 2
  %71 = zext i16 %70 to i32
  %72 = sub nsw i32 %69, %71
  %73 = trunc i32 %72 to i16
  store i16 %73, i16* %18, align 2
  %74 = load %struct.precisionType*, %struct.precisionType** %6, align 8
  %75 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %74, i32 0, i32 4
  %76 = getelementptr inbounds [1 x i16], [1 x i16]* %75, i64 0, i64 0
  %77 = load i16, i16* %18, align 2
  %78 = zext i16 %77 to i32
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i16, i16* %76, i64 %79
  %81 = load i16, i16* %17, align 2
  %82 = zext i16 %81 to i32
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i16, i16* %80, i64 %83
  store i16* %84, i16** %10, align 8
  %85 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %86 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %85, i32 0, i32 4
  %87 = getelementptr inbounds [1 x i16], [1 x i16]* %86, i64 0, i64 0
  %88 = load i16, i16* %17, align 2
  %89 = zext i16 %88 to i32
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i16, i16* %87, i64 %90
  store i16* %91, i16** %11, align 8
  %92 = load i16, i16* %18, align 2
  %93 = zext i16 %92 to i32
  %94 = add nsw i32 %93, 1
  %95 = call %struct.precisionType* (i32, ...) bitcast (%struct.precisionType* (i32)* @palloc to %struct.precisionType* (i32, ...)*)(i32 %94)
  store %struct.precisionType* %95, %struct.precisionType** %21, align 8
  %96 = load %struct.precisionType*, %struct.precisionType** %21, align 8
  %97 = icmp eq %struct.precisionType* %96, null
  br i1 %97, label %98, label %100

98:                                               ; preds = %65
  %99 = load %struct.precisionType*, %struct.precisionType** %21, align 8
  store %struct.precisionType* %99, %struct.precisionType** %5, align 8
  br label %782

100:                                              ; preds = %65
  %101 = load %struct.precisionType*, %struct.precisionType** %6, align 8
  %102 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %101, i32 0, i32 3
  %103 = load i8, i8* %102, align 2
  %104 = zext i8 %103 to i32
  %105 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %106 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %105, i32 0, i32 3
  %107 = load i8, i8* %106, align 2
  %108 = zext i8 %107 to i32
  %109 = icmp ne i32 %104, %108
  %110 = zext i1 %109 to i32
  %111 = trunc i32 %110 to i8
  %112 = load %struct.precisionType*, %struct.precisionType** %21, align 8
  %113 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %112, i32 0, i32 3
  store i8 %111, i8* %113, align 2
  %114 = load i16, i16* %17, align 2
  %115 = zext i16 %114 to i32
  %116 = call %struct.precisionType* (i32, ...) bitcast (%struct.precisionType* (i32)* @palloc to %struct.precisionType* (i32, ...)*)(i32 %115)
  store %struct.precisionType* %116, %struct.precisionType** %22, align 8
  %117 = load %struct.precisionType*, %struct.precisionType** %22, align 8
  %118 = icmp eq %struct.precisionType* %117, null
  br i1 %118, label %119, label %137

119:                                              ; preds = %100
  %120 = load %struct.precisionType*, %struct.precisionType** %21, align 8
  %121 = icmp ne %struct.precisionType* %120, null
  br i1 %121, label %122, label %133

122:                                              ; preds = %119
  %123 = load %struct.precisionType*, %struct.precisionType** %21, align 8
  %124 = bitcast %struct.precisionType* %123 to i16*
  %125 = load i16, i16* %124, align 2
  %126 = add i16 %125, -1
  store i16 %126, i16* %124, align 2
  %127 = zext i16 %126 to i32
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %133

129:                                              ; preds = %122
  %130 = load %struct.precisionType*, %struct.precisionType** %21, align 8
  %131 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %130)
  %132 = icmp ne i32 %131, 0
  br label %133

133:                                              ; preds = %129, %122, %119
  %134 = phi i1 [ false, %122 ], [ false, %119 ], [ %132, %129 ]
  %135 = zext i1 %134 to i32
  %136 = load %struct.precisionType*, %struct.precisionType** %22, align 8
  store %struct.precisionType* %136, %struct.precisionType** %5, align 8
  br label %782

137:                                              ; preds = %100
  %138 = load %struct.precisionType*, %struct.precisionType** %6, align 8
  %139 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %138, i32 0, i32 3
  %140 = load i8, i8* %139, align 2
  %141 = load %struct.precisionType*, %struct.precisionType** %22, align 8
  %142 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %141, i32 0, i32 3
  store i8 %140, i8* %142, align 2
  %143 = load %struct.precisionType*, %struct.precisionType** %21, align 8
  %144 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %143, i32 0, i32 4
  %145 = getelementptr inbounds [1 x i16], [1 x i16]* %144, i64 0, i64 0
  %146 = load i16, i16* %18, align 2
  %147 = zext i16 %146 to i32
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i16, i16* %145, i64 %148
  %150 = getelementptr inbounds i16, i16* %149, i64 1
  store i16* %150, i16** %12, align 8
  %151 = load i16, i16* %17, align 2
  %152 = zext i16 %151 to i32
  %153 = icmp eq i32 %152, 1
  br i1 %153, label %154, label %205

154:                                              ; preds = %137
  %155 = load i16*, i16** %11, align 8
  %156 = getelementptr inbounds i16, i16* %155, i32 -1
  store i16* %156, i16** %11, align 8
  %157 = load i16, i16* %156, align 2
  store i16 %157, i16* %19, align 2
  %158 = load i16, i16* %19, align 2
  %159 = zext i16 %158 to i32
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %164

161:                                              ; preds = %154
  %162 = call %struct.precisionType* bitcast (i16* (i32, i8*, i8*)* @errorp to %struct.precisionType* (i32, i8*, i8*)*)(i32 4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.70, i64 0, i64 0))
  %163 = call %struct.precisionType* @pnew(%struct.precisionType* %162)
  store %struct.precisionType* %163, %struct.precisionType** %21, align 8
  br label %204

164:                                              ; preds = %154
  %165 = load %struct.precisionType*, %struct.precisionType** %22, align 8
  %166 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %165, i32 0, i32 4
  %167 = getelementptr inbounds [1 x i16], [1 x i16]* %166, i64 0, i64 0
  %168 = load i16, i16* %17, align 2
  %169 = zext i16 %168 to i32
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i16, i16* %167, i64 %170
  store i16* %171, i16** %11, align 8
  store i16 0, i16* %16, align 2
  br label %172

172:                                              ; preds = %194, %164
  %173 = load i16, i16* %16, align 2
  %174 = zext i16 %173 to i32
  %175 = shl i32 %174, 16
  store i32 %175, i32* %14, align 4
  %176 = load i16*, i16** %10, align 8
  %177 = getelementptr inbounds i16, i16* %176, i32 -1
  store i16* %177, i16** %10, align 8
  %178 = load i16, i16* %177, align 2
  %179 = zext i16 %178 to i32
  %180 = load i32, i32* %14, align 4
  %181 = add i32 %180, %179
  store i32 %181, i32* %14, align 4
  %182 = load i32, i32* %14, align 4
  %183 = load i16, i16* %19, align 2
  %184 = zext i16 %183 to i32
  %185 = udiv i32 %182, %184
  %186 = trunc i32 %185 to i16
  %187 = load i16*, i16** %12, align 8
  %188 = getelementptr inbounds i16, i16* %187, i32 -1
  store i16* %188, i16** %12, align 8
  store i16 %186, i16* %188, align 2
  %189 = load i32, i32* %14, align 4
  %190 = load i16, i16* %19, align 2
  %191 = zext i16 %190 to i32
  %192 = urem i32 %189, %191
  %193 = trunc i32 %192 to i16
  store i16 %193, i16* %16, align 2
  br label %194

194:                                              ; preds = %172
  %195 = load i16*, i16** %10, align 8
  %196 = load %struct.precisionType*, %struct.precisionType** %6, align 8
  %197 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %196, i32 0, i32 4
  %198 = getelementptr inbounds [1 x i16], [1 x i16]* %197, i64 0, i64 0
  %199 = icmp ugt i16* %195, %198
  br i1 %199, label %172, label %200

200:                                              ; preds = %194
  %201 = load i16, i16* %16, align 2
  %202 = load i16*, i16** %11, align 8
  %203 = getelementptr inbounds i16, i16* %202, i32 -1
  store i16* %203, i16** %11, align 8
  store i16 %201, i16* %203, align 2
  br label %204

204:                                              ; preds = %200, %161
  br label %612

205:                                              ; preds = %137
  %206 = load i16*, i16** %11, align 8
  %207 = getelementptr inbounds i16, i16* %206, i32 -1
  store i16* %207, i16** %11, align 8
  %208 = load i16, i16* %207, align 2
  %209 = zext i16 %208 to i32
  %210 = add nsw i32 %209, 1
  %211 = sdiv i32 65536, %210
  %212 = trunc i32 %211 to i16
  store i16 %212, i16* %19, align 2
  %213 = load i16, i16* %17, align 2
  %214 = zext i16 %213 to i32
  %215 = call %struct.precisionType* (i32, ...) bitcast (%struct.precisionType* (i32)* @palloc to %struct.precisionType* (i32, ...)*)(i32 %214)
  store %struct.precisionType* %215, %struct.precisionType** %23, align 8
  %216 = load %struct.precisionType*, %struct.precisionType** %23, align 8
  %217 = icmp eq %struct.precisionType* %216, null
  br i1 %217, label %218, label %220

218:                                              ; preds = %205
  %219 = load %struct.precisionType*, %struct.precisionType** %23, align 8
  store %struct.precisionType* %219, %struct.precisionType** %5, align 8
  br label %782

220:                                              ; preds = %205
  %221 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %222 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %221, i32 0, i32 4
  %223 = getelementptr inbounds [1 x i16], [1 x i16]* %222, i64 0, i64 0
  store i16* %223, i16** %11, align 8
  %224 = load %struct.precisionType*, %struct.precisionType** %23, align 8
  %225 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %224, i32 0, i32 4
  %226 = getelementptr inbounds [1 x i16], [1 x i16]* %225, i64 0, i64 0
  store i16* %226, i16** %10, align 8
  %227 = load i16*, i16** %11, align 8
  %228 = load i16, i16* %17, align 2
  %229 = zext i16 %228 to i32
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds i16, i16* %227, i64 %230
  store i16* %231, i16** %13, align 8
  store i16 0, i16* %16, align 2
  br label %232

232:                                              ; preds = %252, %220
  %233 = load i16*, i16** %11, align 8
  %234 = getelementptr inbounds i16, i16* %233, i32 1
  store i16* %234, i16** %11, align 8
  %235 = load i16, i16* %233, align 2
  %236 = zext i16 %235 to i32
  %237 = load i16, i16* %19, align 2
  %238 = zext i16 %237 to i32
  %239 = mul nsw i32 %236, %238
  store i32 %239, i32* %14, align 4
  %240 = load i16, i16* %16, align 2
  %241 = zext i16 %240 to i32
  %242 = load i32, i32* %14, align 4
  %243 = add i32 %242, %241
  store i32 %243, i32* %14, align 4
  %244 = load i32, i32* %14, align 4
  %245 = lshr i32 %244, 16
  %246 = trunc i32 %245 to i16
  store i16 %246, i16* %16, align 2
  %247 = load i32, i32* %14, align 4
  %248 = and i32 %247, 65535
  %249 = trunc i32 %248 to i16
  %250 = load i16*, i16** %10, align 8
  %251 = getelementptr inbounds i16, i16* %250, i32 1
  store i16* %251, i16** %10, align 8
  store i16 %249, i16* %250, align 2
  br label %252

252:                                              ; preds = %232
  %253 = load i16*, i16** %11, align 8
  %254 = load i16*, i16** %13, align 8
  %255 = icmp ult i16* %253, %254
  br i1 %255, label %232, label %256

256:                                              ; preds = %252
  %257 = load %struct.precisionType*, %struct.precisionType** %23, align 8
  %258 = call %struct.precisionType* @psetq(%struct.precisionType** %7, %struct.precisionType* %257)
  %259 = load %struct.precisionType*, %struct.precisionType** %23, align 8
  %260 = icmp ne %struct.precisionType* %259, null
  br i1 %260, label %261, label %272

261:                                              ; preds = %256
  %262 = load %struct.precisionType*, %struct.precisionType** %23, align 8
  %263 = bitcast %struct.precisionType* %262 to i16*
  %264 = load i16, i16* %263, align 2
  %265 = add i16 %264, -1
  store i16 %265, i16* %263, align 2
  %266 = zext i16 %265 to i32
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %272

268:                                              ; preds = %261
  %269 = load %struct.precisionType*, %struct.precisionType** %23, align 8
  %270 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %269)
  %271 = icmp ne i32 %270, 0
  br label %272

272:                                              ; preds = %268, %261, %256
  %273 = phi i1 [ false, %261 ], [ false, %256 ], [ %271, %268 ]
  %274 = zext i1 %273 to i32
  %275 = load i16, i16* %18, align 2
  %276 = zext i16 %275 to i32
  %277 = load i16, i16* %17, align 2
  %278 = zext i16 %277 to i32
  %279 = add nsw i32 %276, %278
  %280 = add nsw i32 %279, 1
  %281 = call %struct.precisionType* (i32, ...) bitcast (%struct.precisionType* (i32)* @palloc to %struct.precisionType* (i32, ...)*)(i32 %280)
  store %struct.precisionType* %281, %struct.precisionType** %23, align 8
  %282 = load %struct.precisionType*, %struct.precisionType** %23, align 8
  %283 = icmp eq %struct.precisionType* %282, null
  br i1 %283, label %284, label %286

284:                                              ; preds = %272
  %285 = load %struct.precisionType*, %struct.precisionType** %23, align 8
  store %struct.precisionType* %285, %struct.precisionType** %5, align 8
  br label %782

286:                                              ; preds = %272
  %287 = load %struct.precisionType*, %struct.precisionType** %6, align 8
  %288 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %287, i32 0, i32 4
  %289 = getelementptr inbounds [1 x i16], [1 x i16]* %288, i64 0, i64 0
  store i16* %289, i16** %10, align 8
  %290 = load %struct.precisionType*, %struct.precisionType** %23, align 8
  %291 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %290, i32 0, i32 4
  %292 = getelementptr inbounds [1 x i16], [1 x i16]* %291, i64 0, i64 0
  store i16* %292, i16** %11, align 8
  %293 = load i16*, i16** %10, align 8
  %294 = load i16, i16* %18, align 2
  %295 = zext i16 %294 to i32
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds i16, i16* %293, i64 %296
  %298 = load i16, i16* %17, align 2
  %299 = zext i16 %298 to i32
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds i16, i16* %297, i64 %300
  store i16* %301, i16** %13, align 8
  br label %302

302:                                              ; preds = %322, %286
  %303 = load i16*, i16** %10, align 8
  %304 = getelementptr inbounds i16, i16* %303, i32 1
  store i16* %304, i16** %10, align 8
  %305 = load i16, i16* %303, align 2
  %306 = zext i16 %305 to i32
  %307 = load i16, i16* %19, align 2
  %308 = zext i16 %307 to i32
  %309 = mul nsw i32 %306, %308
  store i32 %309, i32* %14, align 4
  %310 = load i16, i16* %16, align 2
  %311 = zext i16 %310 to i32
  %312 = load i32, i32* %14, align 4
  %313 = add i32 %312, %311
  store i32 %313, i32* %14, align 4
  %314 = load i32, i32* %14, align 4
  %315 = lshr i32 %314, 16
  %316 = trunc i32 %315 to i16
  store i16 %316, i16* %16, align 2
  %317 = load i32, i32* %14, align 4
  %318 = and i32 %317, 65535
  %319 = trunc i32 %318 to i16
  %320 = load i16*, i16** %11, align 8
  %321 = getelementptr inbounds i16, i16* %320, i32 1
  store i16* %321, i16** %11, align 8
  store i16 %319, i16* %320, align 2
  br label %322

322:                                              ; preds = %302
  %323 = load i16*, i16** %10, align 8
  %324 = load i16*, i16** %13, align 8
  %325 = icmp ult i16* %323, %324
  br i1 %325, label %302, label %326

326:                                              ; preds = %322
  %327 = load i16, i16* %16, align 2
  %328 = load i16*, i16** %11, align 8
  store i16 %327, i16* %328, align 2
  %329 = load %struct.precisionType*, %struct.precisionType** %23, align 8
  %330 = call %struct.precisionType* @psetq(%struct.precisionType** %6, %struct.precisionType* %329)
  %331 = load %struct.precisionType*, %struct.precisionType** %23, align 8
  %332 = icmp ne %struct.precisionType* %331, null
  br i1 %332, label %333, label %344

333:                                              ; preds = %326
  %334 = load %struct.precisionType*, %struct.precisionType** %23, align 8
  %335 = bitcast %struct.precisionType* %334 to i16*
  %336 = load i16, i16* %335, align 2
  %337 = add i16 %336, -1
  store i16 %337, i16* %335, align 2
  %338 = zext i16 %337 to i32
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %344

340:                                              ; preds = %333
  %341 = load %struct.precisionType*, %struct.precisionType** %23, align 8
  %342 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %341)
  %343 = icmp ne i32 %342, 0
  br label %344

344:                                              ; preds = %340, %333, %326
  %345 = phi i1 [ false, %333 ], [ false, %326 ], [ %343, %340 ]
  %346 = zext i1 %345 to i32
  %347 = load %struct.precisionType*, %struct.precisionType** %6, align 8
  %348 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %347, i32 0, i32 4
  %349 = getelementptr inbounds [1 x i16], [1 x i16]* %348, i64 0, i64 0
  %350 = load i16, i16* %18, align 2
  %351 = zext i16 %350 to i32
  %352 = sext i32 %351 to i64
  %353 = getelementptr inbounds i16, i16* %349, i64 %352
  %354 = getelementptr inbounds i16, i16* %353, i64 1
  store i16* %354, i16** %10, align 8
  br label %355

355:                                              ; preds = %561, %344
  %356 = load i16*, i16** %10, align 8
  %357 = getelementptr inbounds i16, i16* %356, i32 -1
  store i16* %357, i16** %10, align 8
  %358 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %359 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %358, i32 0, i32 4
  %360 = getelementptr inbounds [1 x i16], [1 x i16]* %359, i64 0, i64 0
  %361 = load i16, i16* %17, align 2
  %362 = zext i16 %361 to i32
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds i16, i16* %360, i64 %363
  store i16* %364, i16** %11, align 8
  %365 = load i16*, i16** %10, align 8
  %366 = load i16, i16* %17, align 2
  %367 = zext i16 %366 to i32
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds i16, i16* %365, i64 %368
  store i16* %369, i16** %13, align 8
  %370 = load i16*, i16** %13, align 8
  %371 = load i16, i16* %370, align 2
  %372 = zext i16 %371 to i32
  %373 = load i16*, i16** %11, align 8
  %374 = getelementptr inbounds i16, i16* %373, i32 -1
  store i16* %374, i16** %11, align 8
  %375 = load i16, i16* %374, align 2
  %376 = zext i16 %375 to i32
  %377 = icmp eq i32 %372, %376
  br i1 %377, label %378, label %379

378:                                              ; preds = %355
  store i16 -1, i16* %20, align 2
  br label %435

379:                                              ; preds = %355
  %380 = load i16*, i16** %13, align 8
  %381 = load i16, i16* %380, align 2
  %382 = zext i16 %381 to i32
  %383 = shl i32 %382, 16
  store i32 %383, i32* %14, align 4
  %384 = load i16*, i16** %13, align 8
  %385 = getelementptr inbounds i16, i16* %384, i32 -1
  store i16* %385, i16** %13, align 8
  %386 = load i16, i16* %385, align 2
  %387 = zext i16 %386 to i32
  %388 = load i32, i32* %14, align 4
  %389 = add i32 %388, %387
  store i32 %389, i32* %14, align 4
  %390 = load i32, i32* %14, align 4
  %391 = load i16*, i16** %11, align 8
  %392 = load i16, i16* %391, align 2
  %393 = zext i16 %392 to i32
  %394 = udiv i32 %390, %393
  %395 = trunc i32 %394 to i16
  store i16 %395, i16* %20, align 2
  %396 = load i32, i32* %14, align 4
  %397 = load i16*, i16** %11, align 8
  %398 = load i16, i16* %397, align 2
  %399 = zext i16 %398 to i32
  %400 = urem i32 %396, %399
  store i32 %400, i32* %14, align 4
  %401 = load i16*, i16** %11, align 8
  %402 = getelementptr inbounds i16, i16* %401, i32 -1
  store i16* %402, i16** %11, align 8
  %403 = load i16*, i16** %13, align 8
  %404 = getelementptr inbounds i16, i16* %403, i32 -1
  store i16* %404, i16** %13, align 8
  br label %405

405:                                              ; preds = %431, %379
  %406 = load i16*, i16** %11, align 8
  %407 = load i16, i16* %406, align 2
  %408 = zext i16 %407 to i32
  %409 = load i16, i16* %20, align 2
  %410 = zext i16 %409 to i32
  %411 = mul nsw i32 %408, %410
  %412 = load i32, i32* %14, align 4
  %413 = shl i32 %412, 16
  %414 = load i16*, i16** %13, align 8
  %415 = load i16, i16* %414, align 2
  %416 = zext i16 %415 to i32
  %417 = add i32 %413, %416
  %418 = icmp ugt i32 %411, %417
  br i1 %418, label %419, label %432

419:                                              ; preds = %405
  %420 = load i16, i16* %20, align 2
  %421 = add i16 %420, -1
  store i16 %421, i16* %20, align 2
  %422 = load i16*, i16** %11, align 8
  %423 = getelementptr inbounds i16, i16* %422, i64 1
  %424 = load i16, i16* %423, align 2
  %425 = zext i16 %424 to i32
  %426 = load i32, i32* %14, align 4
  %427 = add i32 %426, %425
  store i32 %427, i32* %14, align 4
  %428 = load i32, i32* %14, align 4
  %429 = icmp uge i32 %428, 65536
  br i1 %429, label %430, label %431

430:                                              ; preds = %419
  br label %432

431:                                              ; preds = %419
  br label %405

432:                                              ; preds = %430, %405
  %433 = load i16*, i16** %13, align 8
  %434 = getelementptr inbounds i16, i16* %433, i64 2
  store i16* %434, i16** %13, align 8
  br label %435

435:                                              ; preds = %432, %378
  %436 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %437 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %436, i32 0, i32 4
  %438 = getelementptr inbounds [1 x i16], [1 x i16]* %437, i64 0, i64 0
  store i16* %438, i16** %11, align 8
  store i16 1, i16* %15, align 2
  store i16 0, i16* %16, align 2
  br label %439

439:                                              ; preds = %474, %435
  %440 = load i16, i16* %20, align 2
  %441 = zext i16 %440 to i32
  %442 = load i16*, i16** %11, align 8
  %443 = getelementptr inbounds i16, i16* %442, i32 1
  store i16* %443, i16** %11, align 8
  %444 = load i16, i16* %442, align 2
  %445 = zext i16 %444 to i32
  %446 = mul nsw i32 %441, %445
  store i32 %446, i32* %14, align 4
  %447 = load i16, i16* %16, align 2
  %448 = zext i16 %447 to i32
  %449 = load i32, i32* %14, align 4
  %450 = add i32 %449, %448
  store i32 %450, i32* %14, align 4
  %451 = load i32, i32* %14, align 4
  %452 = lshr i32 %451, 16
  %453 = trunc i32 %452 to i16
  store i16 %453, i16* %16, align 2
  %454 = load i32, i32* %14, align 4
  %455 = and i32 %454, 65535
  store i32 %455, i32* %14, align 4
  %456 = load i32, i32* %14, align 4
  %457 = sub i32 65535, %456
  store i32 %457, i32* %14, align 4
  %458 = load i16*, i16** %10, align 8
  %459 = load i16, i16* %458, align 2
  %460 = zext i16 %459 to i32
  %461 = load i16, i16* %15, align 2
  %462 = zext i16 %461 to i32
  %463 = add nsw i32 %460, %462
  %464 = load i32, i32* %14, align 4
  %465 = add i32 %464, %463
  store i32 %465, i32* %14, align 4
  %466 = load i32, i32* %14, align 4
  %467 = lshr i32 %466, 16
  %468 = trunc i32 %467 to i16
  store i16 %468, i16* %15, align 2
  %469 = load i32, i32* %14, align 4
  %470 = and i32 %469, 65535
  %471 = trunc i32 %470 to i16
  %472 = load i16*, i16** %10, align 8
  %473 = getelementptr inbounds i16, i16* %472, i32 1
  store i16* %473, i16** %10, align 8
  store i16 %471, i16* %472, align 2
  br label %474

474:                                              ; preds = %439
  %475 = load i16*, i16** %10, align 8
  %476 = load i16*, i16** %13, align 8
  %477 = icmp ult i16* %475, %476
  br i1 %477, label %439, label %478

478:                                              ; preds = %474
  %479 = load i16, i16* %16, align 2
  %480 = zext i16 %479 to i32
  %481 = sub nsw i32 65535, %480
  store i32 %481, i32* %14, align 4
  %482 = load i16*, i16** %10, align 8
  %483 = load i16, i16* %482, align 2
  %484 = zext i16 %483 to i32
  %485 = load i16, i16* %15, align 2
  %486 = zext i16 %485 to i32
  %487 = add nsw i32 %484, %486
  %488 = load i32, i32* %14, align 4
  %489 = add i32 %488, %487
  store i32 %489, i32* %14, align 4
  %490 = load i32, i32* %14, align 4
  %491 = lshr i32 %490, 16
  %492 = trunc i32 %491 to i16
  store i16 %492, i16* %15, align 2
  %493 = load i32, i32* %14, align 4
  %494 = and i32 %493, 65535
  %495 = trunc i32 %494 to i16
  %496 = load i16*, i16** %10, align 8
  store i16 %495, i16* %496, align 2
  %497 = load i16, i16* %17, align 2
  %498 = zext i16 %497 to i32
  %499 = load i16*, i16** %10, align 8
  %500 = sext i32 %498 to i64
  %501 = sub i64 0, %500
  %502 = getelementptr inbounds i16, i16* %499, i64 %501
  store i16* %502, i16** %10, align 8
  %503 = load i16, i16* %15, align 2
  %504 = zext i16 %503 to i32
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %506, label %557

506:                                              ; preds = %478
  %507 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %508 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %507, i32 0, i32 4
  %509 = getelementptr inbounds [1 x i16], [1 x i16]* %508, i64 0, i64 0
  store i16* %509, i16** %11, align 8
  %510 = load i16*, i16** %10, align 8
  %511 = load i16, i16* %17, align 2
  %512 = zext i16 %511 to i32
  %513 = sext i32 %512 to i64
  %514 = getelementptr inbounds i16, i16* %510, i64 %513
  store i16* %514, i16** %13, align 8
  br label %515

515:                                              ; preds = %536, %506
  %516 = load i16*, i16** %10, align 8
  %517 = load i16, i16* %516, align 2
  %518 = zext i16 %517 to i32
  %519 = load i16*, i16** %11, align 8
  %520 = getelementptr inbounds i16, i16* %519, i32 1
  store i16* %520, i16** %11, align 8
  %521 = load i16, i16* %519, align 2
  %522 = zext i16 %521 to i32
  %523 = add nsw i32 %518, %522
  store i32 %523, i32* %14, align 4
  %524 = load i16, i16* %15, align 2
  %525 = zext i16 %524 to i32
  %526 = load i32, i32* %14, align 4
  %527 = add i32 %526, %525
  store i32 %527, i32* %14, align 4
  %528 = load i32, i32* %14, align 4
  %529 = lshr i32 %528, 16
  %530 = trunc i32 %529 to i16
  store i16 %530, i16* %15, align 2
  %531 = load i32, i32* %14, align 4
  %532 = and i32 %531, 65535
  %533 = trunc i32 %532 to i16
  %534 = load i16*, i16** %10, align 8
  %535 = getelementptr inbounds i16, i16* %534, i32 1
  store i16* %535, i16** %10, align 8
  store i16 %533, i16* %534, align 2
  br label %536

536:                                              ; preds = %515
  %537 = load i16*, i16** %10, align 8
  %538 = load i16*, i16** %13, align 8
  %539 = icmp ult i16* %537, %538
  br i1 %539, label %515, label %540

540:                                              ; preds = %536
  %541 = load i16, i16* %15, align 2
  %542 = zext i16 %541 to i32
  %543 = sub nsw i32 %542, 65536
  %544 = load i16*, i16** %10, align 8
  %545 = load i16, i16* %544, align 2
  %546 = zext i16 %545 to i32
  %547 = add nsw i32 %546, %543
  %548 = trunc i32 %547 to i16
  store i16 %548, i16* %544, align 2
  %549 = load i16, i16* %17, align 2
  %550 = zext i16 %549 to i32
  %551 = load i16*, i16** %10, align 8
  %552 = sext i32 %550 to i64
  %553 = sub i64 0, %552
  %554 = getelementptr inbounds i16, i16* %551, i64 %553
  store i16* %554, i16** %10, align 8
  %555 = load i16, i16* %20, align 2
  %556 = add i16 %555, -1
  store i16 %556, i16* %20, align 2
  br label %557

557:                                              ; preds = %540, %478
  %558 = load i16, i16* %20, align 2
  %559 = load i16*, i16** %12, align 8
  %560 = getelementptr inbounds i16, i16* %559, i32 -1
  store i16* %560, i16** %12, align 8
  store i16 %558, i16* %560, align 2
  br label %561

561:                                              ; preds = %557
  %562 = load i16*, i16** %10, align 8
  %563 = load %struct.precisionType*, %struct.precisionType** %6, align 8
  %564 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %563, i32 0, i32 4
  %565 = getelementptr inbounds [1 x i16], [1 x i16]* %564, i64 0, i64 0
  %566 = icmp ugt i16* %562, %565
  br i1 %566, label %355, label %567

567:                                              ; preds = %561
  %568 = load %struct.precisionType*, %struct.precisionType** %6, align 8
  %569 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %568, i32 0, i32 4
  %570 = getelementptr inbounds [1 x i16], [1 x i16]* %569, i64 0, i64 0
  %571 = load i16, i16* %17, align 2
  %572 = zext i16 %571 to i32
  %573 = sext i32 %572 to i64
  %574 = getelementptr inbounds i16, i16* %570, i64 %573
  store i16* %574, i16** %10, align 8
  %575 = load %struct.precisionType*, %struct.precisionType** %22, align 8
  %576 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %575, i32 0, i32 4
  %577 = getelementptr inbounds [1 x i16], [1 x i16]* %576, i64 0, i64 0
  %578 = load i16, i16* %17, align 2
  %579 = zext i16 %578 to i32
  %580 = sext i32 %579 to i64
  %581 = getelementptr inbounds i16, i16* %577, i64 %580
  store i16* %581, i16** %11, align 8
  store i16 0, i16* %16, align 2
  br label %582

582:                                              ; preds = %604, %567
  %583 = load i16, i16* %16, align 2
  %584 = zext i16 %583 to i32
  %585 = shl i32 %584, 16
  store i32 %585, i32* %14, align 4
  %586 = load i16*, i16** %10, align 8
  %587 = getelementptr inbounds i16, i16* %586, i32 -1
  store i16* %587, i16** %10, align 8
  %588 = load i16, i16* %587, align 2
  %589 = zext i16 %588 to i32
  %590 = load i32, i32* %14, align 4
  %591 = add i32 %590, %589
  store i32 %591, i32* %14, align 4
  %592 = load i32, i32* %14, align 4
  %593 = load i16, i16* %19, align 2
  %594 = zext i16 %593 to i32
  %595 = udiv i32 %592, %594
  %596 = trunc i32 %595 to i16
  %597 = load i16*, i16** %11, align 8
  %598 = getelementptr inbounds i16, i16* %597, i32 -1
  store i16* %598, i16** %11, align 8
  store i16 %596, i16* %598, align 2
  %599 = load i32, i32* %14, align 4
  %600 = load i16, i16* %19, align 2
  %601 = zext i16 %600 to i32
  %602 = urem i32 %599, %601
  %603 = trunc i32 %602 to i16
  store i16 %603, i16* %16, align 2
  br label %604

604:                                              ; preds = %582
  %605 = load i16*, i16** %10, align 8
  %606 = load %struct.precisionType*, %struct.precisionType** %6, align 8
  %607 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %606, i32 0, i32 4
  %608 = getelementptr inbounds [1 x i16], [1 x i16]* %607, i64 0, i64 0
  %609 = icmp ugt i16* %605, %608
  br i1 %609, label %582, label %610

610:                                              ; preds = %604
  %611 = load %struct.precisionType*, %struct.precisionType** %22, align 8
  call void (%struct.precisionType*, ...) bitcast (void (%struct.precisionType*)* @pnorm to void (%struct.precisionType*, ...)*)(%struct.precisionType* %611)
  br label %612

612:                                              ; preds = %610, %204
  %613 = load i16, i16* %18, align 2
  %614 = zext i16 %613 to i32
  %615 = icmp sgt i32 %614, 0
  br i1 %615, label %616, label %629

616:                                              ; preds = %612
  %617 = load i16*, i16** %12, align 8
  %618 = load i16, i16* %18, align 2
  %619 = zext i16 %618 to i64
  %620 = getelementptr inbounds i16, i16* %617, i64 %619
  %621 = load i16, i16* %620, align 2
  %622 = zext i16 %621 to i32
  %623 = icmp eq i32 %622, 0
  br i1 %623, label %624, label %629

624:                                              ; preds = %616
  %625 = load %struct.precisionType*, %struct.precisionType** %21, align 8
  %626 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %625, i32 0, i32 2
  %627 = load i16, i16* %626, align 2
  %628 = add i16 %627, -1
  store i16 %628, i16* %626, align 2
  br label %629

629:                                              ; preds = %624, %616, %612
  %630 = load %struct.precisionType*, %struct.precisionType** %21, align 8
  %631 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %630, i32 0, i32 2
  %632 = load i16, i16* %631, align 2
  %633 = zext i16 %632 to i32
  %634 = icmp eq i32 %633, 1
  br i1 %634, label %635, label %643

635:                                              ; preds = %629
  %636 = load i16*, i16** %12, align 8
  %637 = load i16, i16* %636, align 2
  %638 = zext i16 %637 to i32
  %639 = icmp eq i32 %638, 0
  br i1 %639, label %640, label %643

640:                                              ; preds = %635
  %641 = load %struct.precisionType*, %struct.precisionType** %21, align 8
  %642 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %641, i32 0, i32 3
  store i8 0, i8* %642, align 2
  br label %643

643:                                              ; preds = %640, %635, %629
  br label %644

644:                                              ; preds = %643, %60
  %645 = load %struct.precisionType*, %struct.precisionType** %6, align 8
  %646 = icmp ne %struct.precisionType* %645, null
  br i1 %646, label %647, label %658

647:                                              ; preds = %644
  %648 = load %struct.precisionType*, %struct.precisionType** %6, align 8
  %649 = bitcast %struct.precisionType* %648 to i16*
  %650 = load i16, i16* %649, align 2
  %651 = add i16 %650, -1
  store i16 %651, i16* %649, align 2
  %652 = zext i16 %651 to i32
  %653 = icmp eq i32 %652, 0
  br i1 %653, label %654, label %658

654:                                              ; preds = %647
  %655 = load %struct.precisionType*, %struct.precisionType** %6, align 8
  %656 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %655)
  %657 = icmp ne i32 %656, 0
  br label %658

658:                                              ; preds = %654, %647, %644
  %659 = phi i1 [ false, %647 ], [ false, %644 ], [ %657, %654 ]
  %660 = zext i1 %659 to i32
  %661 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %662 = icmp ne %struct.precisionType* %661, null
  br i1 %662, label %663, label %674

663:                                              ; preds = %658
  %664 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %665 = bitcast %struct.precisionType* %664 to i16*
  %666 = load i16, i16* %665, align 2
  %667 = add i16 %666, -1
  store i16 %667, i16* %665, align 2
  %668 = zext i16 %667 to i32
  %669 = icmp eq i32 %668, 0
  br i1 %669, label %670, label %674

670:                                              ; preds = %663
  %671 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %672 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %671)
  %673 = icmp ne i32 %672, 0
  br label %674

674:                                              ; preds = %670, %663, %658
  %675 = phi i1 [ false, %663 ], [ false, %658 ], [ %673, %670 ]
  %676 = zext i1 %675 to i32
  %677 = load %struct.precisionType**, %struct.precisionType*** %9, align 8
  %678 = icmp eq %struct.precisionType** %677, inttoptr (i64 -1 to %struct.precisionType**)
  br i1 %678, label %679, label %705

679:                                              ; preds = %674
  %680 = load %struct.precisionType**, %struct.precisionType*** %8, align 8
  %681 = icmp ne %struct.precisionType** %680, null
  br i1 %681, label %682, label %686

682:                                              ; preds = %679
  %683 = load %struct.precisionType**, %struct.precisionType*** %8, align 8
  %684 = load %struct.precisionType*, %struct.precisionType** %21, align 8
  %685 = call %struct.precisionType* @psetq(%struct.precisionType** %683, %struct.precisionType* %684)
  br label %686

686:                                              ; preds = %682, %679
  %687 = load %struct.precisionType*, %struct.precisionType** %21, align 8
  %688 = icmp ne %struct.precisionType* %687, null
  br i1 %688, label %689, label %700

689:                                              ; preds = %686
  %690 = load %struct.precisionType*, %struct.precisionType** %21, align 8
  %691 = bitcast %struct.precisionType* %690 to i16*
  %692 = load i16, i16* %691, align 2
  %693 = add i16 %692, -1
  store i16 %693, i16* %691, align 2
  %694 = zext i16 %693 to i32
  %695 = icmp eq i32 %694, 0
  br i1 %695, label %696, label %700

696:                                              ; preds = %689
  %697 = load %struct.precisionType*, %struct.precisionType** %21, align 8
  %698 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %697)
  %699 = icmp ne i32 %698, 0
  br label %700

700:                                              ; preds = %696, %689, %686
  %701 = phi i1 [ false, %689 ], [ false, %686 ], [ %699, %696 ]
  %702 = zext i1 %701 to i32
  %703 = load %struct.precisionType*, %struct.precisionType** %22, align 8
  %704 = call %struct.precisionType* @presult(%struct.precisionType* %703)
  store %struct.precisionType* %704, %struct.precisionType** %5, align 8
  br label %782

705:                                              ; preds = %674
  %706 = load %struct.precisionType**, %struct.precisionType*** %8, align 8
  %707 = icmp eq %struct.precisionType** %706, inttoptr (i64 -1 to %struct.precisionType**)
  br i1 %707, label %708, label %734

708:                                              ; preds = %705
  %709 = load %struct.precisionType**, %struct.precisionType*** %9, align 8
  %710 = icmp ne %struct.precisionType** %709, null
  br i1 %710, label %711, label %715

711:                                              ; preds = %708
  %712 = load %struct.precisionType**, %struct.precisionType*** %9, align 8
  %713 = load %struct.precisionType*, %struct.precisionType** %22, align 8
  %714 = call %struct.precisionType* @psetq(%struct.precisionType** %712, %struct.precisionType* %713)
  br label %715

715:                                              ; preds = %711, %708
  %716 = load %struct.precisionType*, %struct.precisionType** %22, align 8
  %717 = icmp ne %struct.precisionType* %716, null
  br i1 %717, label %718, label %729

718:                                              ; preds = %715
  %719 = load %struct.precisionType*, %struct.precisionType** %22, align 8
  %720 = bitcast %struct.precisionType* %719 to i16*
  %721 = load i16, i16* %720, align 2
  %722 = add i16 %721, -1
  store i16 %722, i16* %720, align 2
  %723 = zext i16 %722 to i32
  %724 = icmp eq i32 %723, 0
  br i1 %724, label %725, label %729

725:                                              ; preds = %718
  %726 = load %struct.precisionType*, %struct.precisionType** %22, align 8
  %727 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %726)
  %728 = icmp ne i32 %727, 0
  br label %729

729:                                              ; preds = %725, %718, %715
  %730 = phi i1 [ false, %718 ], [ false, %715 ], [ %728, %725 ]
  %731 = zext i1 %730 to i32
  %732 = load %struct.precisionType*, %struct.precisionType** %21, align 8
  %733 = call %struct.precisionType* @presult(%struct.precisionType* %732)
  store %struct.precisionType* %733, %struct.precisionType** %5, align 8
  br label %782

734:                                              ; preds = %705
  br label %735

735:                                              ; preds = %734
  %736 = load %struct.precisionType**, %struct.precisionType*** %8, align 8
  %737 = icmp ne %struct.precisionType** %736, null
  br i1 %737, label %738, label %742

738:                                              ; preds = %735
  %739 = load %struct.precisionType**, %struct.precisionType*** %8, align 8
  %740 = load %struct.precisionType*, %struct.precisionType** %21, align 8
  %741 = call %struct.precisionType* @psetq(%struct.precisionType** %739, %struct.precisionType* %740)
  br label %742

742:                                              ; preds = %738, %735
  %743 = load %struct.precisionType**, %struct.precisionType*** %9, align 8
  %744 = icmp ne %struct.precisionType** %743, null
  br i1 %744, label %745, label %749

745:                                              ; preds = %742
  %746 = load %struct.precisionType**, %struct.precisionType*** %9, align 8
  %747 = load %struct.precisionType*, %struct.precisionType** %22, align 8
  %748 = call %struct.precisionType* @psetq(%struct.precisionType** %746, %struct.precisionType* %747)
  br label %749

749:                                              ; preds = %745, %742
  %750 = load %struct.precisionType*, %struct.precisionType** %21, align 8
  %751 = icmp ne %struct.precisionType* %750, null
  br i1 %751, label %752, label %763

752:                                              ; preds = %749
  %753 = load %struct.precisionType*, %struct.precisionType** %21, align 8
  %754 = bitcast %struct.precisionType* %753 to i16*
  %755 = load i16, i16* %754, align 2
  %756 = add i16 %755, -1
  store i16 %756, i16* %754, align 2
  %757 = zext i16 %756 to i32
  %758 = icmp eq i32 %757, 0
  br i1 %758, label %759, label %763

759:                                              ; preds = %752
  %760 = load %struct.precisionType*, %struct.precisionType** %21, align 8
  %761 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %760)
  %762 = icmp ne i32 %761, 0
  br label %763

763:                                              ; preds = %759, %752, %749
  %764 = phi i1 [ false, %752 ], [ false, %749 ], [ %762, %759 ]
  %765 = zext i1 %764 to i32
  %766 = load %struct.precisionType*, %struct.precisionType** %22, align 8
  %767 = icmp ne %struct.precisionType* %766, null
  br i1 %767, label %768, label %779

768:                                              ; preds = %763
  %769 = load %struct.precisionType*, %struct.precisionType** %22, align 8
  %770 = bitcast %struct.precisionType* %769 to i16*
  %771 = load i16, i16* %770, align 2
  %772 = add i16 %771, -1
  store i16 %772, i16* %770, align 2
  %773 = zext i16 %772 to i32
  %774 = icmp eq i32 %773, 0
  br i1 %774, label %775, label %779

775:                                              ; preds = %768
  %776 = load %struct.precisionType*, %struct.precisionType** %22, align 8
  %777 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %776)
  %778 = icmp ne i32 %777, 0
  br label %779

779:                                              ; preds = %775, %768, %763
  %780 = phi i1 [ false, %768 ], [ false, %763 ], [ %778, %775 ]
  %781 = zext i1 %780 to i32
  store %struct.precisionType* null, %struct.precisionType** %5, align 8
  br label %782

782:                                              ; preds = %779, %729, %700, %284, %218, %133, %98
  %783 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  ret %struct.precisionType* %783
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @dtop(double %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  %3 = alloca double, align 8
  %4 = alloca i16*, align 8
  %5 = alloca %struct.precisionType*, align 8
  store double %0, double* %3, align 8
  %6 = call %struct.precisionType* (i32, ...) bitcast (%struct.precisionType* (i32)* @palloc to %struct.precisionType* (i32, ...)*)(i32 129)
  store %struct.precisionType* %6, %struct.precisionType** %5, align 8
  %7 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %8 = icmp eq %struct.precisionType* %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  store %struct.precisionType* %10, %struct.precisionType** %2, align 8
  br label %52

11:                                               ; preds = %1
  %12 = load double, double* %3, align 8
  %13 = fcmp olt double %12, 0.000000e+00
  br i1 %13, label %14, label %19

14:                                               ; preds = %11
  %15 = load double, double* %3, align 8
  %16 = fneg double %15
  store double %16, double* %3, align 8
  %17 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %18 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %17, i32 0, i32 3
  store i8 1, i8* %18, align 2
  br label %22

19:                                               ; preds = %11
  %20 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %21 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %20, i32 0, i32 3
  store i8 0, i8* %21, align 2
  br label %22

22:                                               ; preds = %19, %14
  %23 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %24 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %23, i32 0, i32 4
  %25 = getelementptr inbounds [1 x i16], [1 x i16]* %24, i64 0, i64 0
  store i16* %25, i16** %4, align 8
  br label %26

26:                                               ; preds = %35, %22
  %27 = load double, double* %3, align 8
  %28 = call double @fmod(double %27, double 6.553600e+04) #9
  %29 = fptoui double %28 to i16
  %30 = load i16*, i16** %4, align 8
  %31 = getelementptr inbounds i16, i16* %30, i32 1
  store i16* %31, i16** %4, align 8
  store i16 %29, i16* %30, align 2
  %32 = load double, double* %3, align 8
  %33 = fdiv double %32, 6.553600e+04
  %34 = call double @llvm.floor.f64(double %33)
  store double %34, double* %3, align 8
  br label %35

35:                                               ; preds = %26
  %36 = load double, double* %3, align 8
  %37 = fcmp une double %36, 0.000000e+00
  br i1 %37, label %26, label %38

38:                                               ; preds = %35
  %39 = load i16*, i16** %4, align 8
  %40 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %41 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %40, i32 0, i32 4
  %42 = getelementptr inbounds [1 x i16], [1 x i16]* %41, i64 0, i64 0
  %43 = ptrtoint i16* %39 to i64
  %44 = ptrtoint i16* %42 to i64
  %45 = sub i64 %43, %44
  %46 = sdiv exact i64 %45, 2
  %47 = trunc i64 %46 to i16
  %48 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %49 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %48, i32 0, i32 2
  store i16 %47, i16* %49, align 2
  %50 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %51 = call %struct.precisionType* @presult(%struct.precisionType* %50)
  store %struct.precisionType* %51, %struct.precisionType** %2, align 8
  br label %52

52:                                               ; preds = %38, %9
  %53 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  ret %struct.precisionType* %53
}

; Function Attrs: nounwind
declare dso_local double @fmod(double, double) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #7

; Function Attrs: noinline nounwind uwtable
define dso_local double @ptod(%struct.precisionType* %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  %3 = alloca i16*, align 8
  %4 = alloca double, align 8
  store %struct.precisionType* %0, %struct.precisionType** %2, align 8
  %5 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %6 = icmp ne %struct.precisionType* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %9 = bitcast %struct.precisionType* %8 to i16*
  %10 = load i16, i16* %9, align 2
  %11 = add i16 %10, 1
  store i16 %11, i16* %9, align 2
  %12 = zext i16 %10 to i32
  %13 = icmp ne i32 %12, 0
  br label %14

14:                                               ; preds = %7, %1
  %15 = phi i1 [ false, %1 ], [ %13, %7 ]
  %16 = zext i1 %15 to i32
  %17 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %18 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %19 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %18, i32 0, i32 4
  %20 = getelementptr inbounds [1 x i16], [1 x i16]* %19, i64 0, i64 0
  %21 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %22 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %21, i32 0, i32 2
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i16, i16* %20, i64 %25
  store i16* %26, i16** %3, align 8
  store double 0.000000e+00, double* %4, align 8
  br label %27

27:                                               ; preds = %35, %14
  %28 = load double, double* %4, align 8
  %29 = fmul double %28, 6.553600e+04
  %30 = load i16*, i16** %3, align 8
  %31 = getelementptr inbounds i16, i16* %30, i32 -1
  store i16* %31, i16** %3, align 8
  %32 = load i16, i16* %31, align 2
  %33 = uitofp i16 %32 to double
  %34 = fadd double %29, %33
  store double %34, double* %4, align 8
  br label %35

35:                                               ; preds = %27
  %36 = load i16*, i16** %3, align 8
  %37 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %38 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %37, i32 0, i32 4
  %39 = getelementptr inbounds [1 x i16], [1 x i16]* %38, i64 0, i64 0
  %40 = icmp ugt i16* %36, %39
  br i1 %40, label %27, label %41

41:                                               ; preds = %35
  %42 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %43 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %42, i32 0, i32 3
  %44 = load i8, i8* %43, align 2
  %45 = icmp ne i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = load double, double* %4, align 8
  %48 = fneg double %47
  store double %48, double* %4, align 8
  br label %49

49:                                               ; preds = %46, %41
  %50 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %51 = icmp ne %struct.precisionType* %50, null
  br i1 %51, label %52, label %63

52:                                               ; preds = %49
  %53 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %54 = bitcast %struct.precisionType* %53 to i16*
  %55 = load i16, i16* %54, align 2
  %56 = add i16 %55, -1
  store i16 %56, i16* %54, align 2
  %57 = zext i16 %56 to i32
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %63

59:                                               ; preds = %52
  %60 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %61 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %60)
  %62 = icmp ne i32 %61, 0
  br label %63

63:                                               ; preds = %59, %52, %49
  %64 = phi i1 [ false, %52 ], [ false, %49 ], [ %62, %59 ]
  %65 = zext i1 %64 to i32
  %66 = load double, double* %4, align 8
  ret double %66
}

; Function Attrs: noinline nounwind uwtable
define dso_local i16* @pgcd(i16* %0, i16* %1) #0 {
  %3 = alloca i16*, align 8
  %4 = alloca i16*, align 8
  %5 = alloca i16*, align 8
  %6 = alloca i16*, align 8
  %7 = alloca i16*, align 8
  %8 = alloca i16*, align 8
  store i16* %0, i16** %3, align 8
  store i16* %1, i16** %4, align 8
  %9 = load i16*, i16** %3, align 8
  %10 = icmp ne i16* %9, null
  br i1 %10, label %11, label %17

11:                                               ; preds = %2
  %12 = load i16*, i16** %3, align 8
  %13 = load i16, i16* %12, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %12, align 2
  %15 = zext i16 %13 to i32
  %16 = icmp ne i32 %15, 0
  br label %17

17:                                               ; preds = %11, %2
  %18 = phi i1 [ false, %2 ], [ %16, %11 ]
  %19 = zext i1 %18 to i32
  %20 = load i16*, i16** %3, align 8
  %21 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @pabs to i16* (i16*)*)(i16* %20)
  %22 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @pnew to i16* (i16*)*)(i16* %21)
  store i16* %22, i16** %5, align 8
  %23 = load i16*, i16** %4, align 8
  %24 = icmp ne i16* %23, null
  br i1 %24, label %25, label %31

25:                                               ; preds = %17
  %26 = load i16*, i16** %4, align 8
  %27 = load i16, i16* %26, align 2
  %28 = add i16 %27, 1
  store i16 %28, i16* %26, align 2
  %29 = zext i16 %27 to i32
  %30 = icmp ne i32 %29, 0
  br label %31

31:                                               ; preds = %25, %17
  %32 = phi i1 [ false, %17 ], [ %30, %25 ]
  %33 = zext i1 %32 to i32
  %34 = load i16*, i16** %4, align 8
  %35 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @pabs to i16* (i16*)*)(i16* %34)
  %36 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @pnew to i16* (i16*)*)(i16* %35)
  store i16* %36, i16** %6, align 8
  store i16* null, i16** %7, align 8
  store i16* null, i16** %8, align 8
  br label %37

37:                                               ; preds = %41, %31
  %38 = load i16*, i16** %6, align 8
  %39 = call i32 bitcast (i32 (%struct.precisionType*)* @pcmpz to i32 (i16*)*)(i16* %38)
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %49

41:                                               ; preds = %37
  %42 = load i16*, i16** %5, align 8
  %43 = load i16*, i16** %6, align 8
  %44 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*, %struct.precisionType**, %struct.precisionType**)* @pdivmod to i16* (i16*, i16*, i16**, i16**)*)(i16* %42, i16* %43, i16** %7, i16** %8)
  %45 = load i16*, i16** %6, align 8
  %46 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %5, i16* %45)
  %47 = load i16*, i16** %8, align 8
  %48 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %6, i16* %47)
  br label %37

49:                                               ; preds = %37
  %50 = load i16*, i16** %6, align 8
  %51 = icmp ne i16* %50, null
  br i1 %51, label %52, label %62

52:                                               ; preds = %49
  %53 = load i16*, i16** %6, align 8
  %54 = load i16, i16* %53, align 2
  %55 = add i16 %54, -1
  store i16 %55, i16* %53, align 2
  %56 = zext i16 %55 to i32
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %62

58:                                               ; preds = %52
  %59 = load i16*, i16** %6, align 8
  %60 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %59)
  %61 = icmp ne i32 %60, 0
  br label %62

62:                                               ; preds = %58, %52, %49
  %63 = phi i1 [ false, %52 ], [ false, %49 ], [ %61, %58 ]
  %64 = zext i1 %63 to i32
  %65 = load i16*, i16** %7, align 8
  %66 = icmp ne i16* %65, null
  br i1 %66, label %67, label %77

67:                                               ; preds = %62
  %68 = load i16*, i16** %7, align 8
  %69 = load i16, i16* %68, align 2
  %70 = add i16 %69, -1
  store i16 %70, i16* %68, align 2
  %71 = zext i16 %70 to i32
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %67
  %74 = load i16*, i16** %7, align 8
  %75 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %74)
  %76 = icmp ne i32 %75, 0
  br label %77

77:                                               ; preds = %73, %67, %62
  %78 = phi i1 [ false, %67 ], [ false, %62 ], [ %76, %73 ]
  %79 = zext i1 %78 to i32
  %80 = load i16*, i16** %8, align 8
  %81 = icmp ne i16* %80, null
  br i1 %81, label %82, label %92

82:                                               ; preds = %77
  %83 = load i16*, i16** %8, align 8
  %84 = load i16, i16* %83, align 2
  %85 = add i16 %84, -1
  store i16 %85, i16* %83, align 2
  %86 = zext i16 %85 to i32
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %82
  %89 = load i16*, i16** %8, align 8
  %90 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %89)
  %91 = icmp ne i32 %90, 0
  br label %92

92:                                               ; preds = %88, %82, %77
  %93 = phi i1 [ false, %82 ], [ false, %77 ], [ %91, %88 ]
  %94 = zext i1 %93 to i32
  %95 = load i16*, i16** %3, align 8
  %96 = icmp ne i16* %95, null
  br i1 %96, label %97, label %107

97:                                               ; preds = %92
  %98 = load i16*, i16** %3, align 8
  %99 = load i16, i16* %98, align 2
  %100 = add i16 %99, -1
  store i16 %100, i16* %98, align 2
  %101 = zext i16 %100 to i32
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %107

103:                                              ; preds = %97
  %104 = load i16*, i16** %3, align 8
  %105 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %104)
  %106 = icmp ne i32 %105, 0
  br label %107

107:                                              ; preds = %103, %97, %92
  %108 = phi i1 [ false, %97 ], [ false, %92 ], [ %106, %103 ]
  %109 = zext i1 %108 to i32
  %110 = load i16*, i16** %4, align 8
  %111 = icmp ne i16* %110, null
  br i1 %111, label %112, label %122

112:                                              ; preds = %107
  %113 = load i16*, i16** %4, align 8
  %114 = load i16, i16* %113, align 2
  %115 = add i16 %114, -1
  store i16 %115, i16* %113, align 2
  %116 = zext i16 %115 to i32
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %122

118:                                              ; preds = %112
  %119 = load i16*, i16** %4, align 8
  %120 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %119)
  %121 = icmp ne i32 %120, 0
  br label %122

122:                                              ; preds = %118, %112, %107
  %123 = phi i1 [ false, %112 ], [ false, %107 ], [ %121, %118 ]
  %124 = zext i1 %123 to i32
  %125 = load i16*, i16** %5, align 8
  %126 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @presult to i16* (i16*)*)(i16* %125)
  ret i16* %126
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @phalf(%struct.precisionType* %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  store %struct.precisionType* %0, %struct.precisionType** %2, align 8
  %3 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %4 = load %struct.precisionType*, %struct.precisionType** @ptwo, align 8
  %5 = call %struct.precisionType* @pdivmod(%struct.precisionType* %3, %struct.precisionType* %4, %struct.precisionType** inttoptr (i64 -1 to %struct.precisionType**), %struct.precisionType** null)
  ret %struct.precisionType* %5
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @picmp(%struct.precisionType* %0, i32 %1) #0 {
  %3 = alloca %struct.precisionType*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.precisionType* %0, %struct.precisionType** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %7 = icmp ne %struct.precisionType* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %10 = bitcast %struct.precisionType* %9 to i16*
  %11 = load i16, i16* %10, align 2
  %12 = add i16 %11, 1
  store i16 %12, i16* %10, align 2
  %13 = zext i16 %11 to i32
  %14 = icmp ne i32 %13, 0
  br label %15

15:                                               ; preds = %8, %2
  %16 = phi i1 [ false, %2 ], [ %14, %8 ]
  %17 = zext i1 %16 to i32
  %18 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %19 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %20 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %19, i32 0, i32 3
  %21 = load i8, i8* %20, align 2
  %22 = icmp ne i8 %21, 0
  br i1 %22, label %23, label %49

23:                                               ; preds = %15
  store i32 -1, i32* %5, align 4
  %24 = load i32, i32* %4, align 4
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %26, label %48

26:                                               ; preds = %23
  %27 = load i32, i32* %4, align 4
  %28 = sub nsw i32 0, %27
  %29 = icmp sge i32 %28, 65536
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = call %struct.precisionType* bitcast (i16* (i32, i8*, i8*)* @errorp to %struct.precisionType* (i32, i8*, i8*)*)(i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @cmpError, i64 0, i64 0))
  br label %32

32:                                               ; preds = %30, %26
  %33 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %34 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %33, i32 0, i32 2
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %47

38:                                               ; preds = %32
  %39 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %40 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %39, i32 0, i32 4
  %41 = getelementptr inbounds [1 x i16], [1 x i16]* %40, i64 0, i64 0
  %42 = load i16, i16* %41, align 2
  %43 = zext i16 %42 to i32
  %44 = sub nsw i32 0, %43
  %45 = load i32, i32* %4, align 4
  %46 = sub nsw i32 %44, %45
  store i32 %46, i32* %5, align 4
  br label %47

47:                                               ; preds = %38, %32
  br label %48

48:                                               ; preds = %47, %23
  br label %73

49:                                               ; preds = %15
  store i32 1, i32* %5, align 4
  %50 = load i32, i32* %4, align 4
  %51 = icmp sge i32 %50, 0
  br i1 %51, label %52, label %72

52:                                               ; preds = %49
  %53 = load i32, i32* %4, align 4
  %54 = icmp sge i32 %53, 65536
  br i1 %54, label %55, label %57

55:                                               ; preds = %52
  %56 = call %struct.precisionType* bitcast (i16* (i32, i8*, i8*)* @errorp to %struct.precisionType* (i32, i8*, i8*)*)(i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @cmpError, i64 0, i64 0))
  br label %57

57:                                               ; preds = %55, %52
  %58 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %59 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %58, i32 0, i32 2
  %60 = load i16, i16* %59, align 2
  %61 = zext i16 %60 to i32
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %71

63:                                               ; preds = %57
  %64 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %65 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %64, i32 0, i32 4
  %66 = getelementptr inbounds [1 x i16], [1 x i16]* %65, i64 0, i64 0
  %67 = load i16, i16* %66, align 2
  %68 = zext i16 %67 to i32
  %69 = load i32, i32* %4, align 4
  %70 = sub nsw i32 %68, %69
  store i32 %70, i32* %5, align 4
  br label %71

71:                                               ; preds = %63, %57
  br label %72

72:                                               ; preds = %71, %49
  br label %73

73:                                               ; preds = %72, %48
  %74 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %75 = icmp ne %struct.precisionType* %74, null
  br i1 %75, label %76, label %87

76:                                               ; preds = %73
  %77 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %78 = bitcast %struct.precisionType* %77 to i16*
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -1
  store i16 %80, i16* %78, align 2
  %81 = zext i16 %80 to i32
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %76
  %84 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %85 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %84)
  %86 = icmp ne i32 %85, 0
  br label %87

87:                                               ; preds = %83, %76, %73
  %88 = phi i1 [ false, %76 ], [ false, %73 ], [ %86, %83 ]
  %89 = zext i1 %88 to i32
  %90 = load i32, i32* %5, align 4
  ret i32 %90
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @pidiv(%struct.precisionType* %0, i32 %1) #0 {
  %3 = alloca %struct.precisionType*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i16*, align 8
  %6 = alloca i16*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca %struct.precisionType*, align 8
  store %struct.precisionType* %0, %struct.precisionType** %3, align 8
  store i32 %1, i32* %4, align 4
  %12 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %13 = icmp ne %struct.precisionType* %12, null
  br i1 %13, label %14, label %21

14:                                               ; preds = %2
  %15 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %16 = bitcast %struct.precisionType* %15 to i16*
  %17 = load i16, i16* %16, align 2
  %18 = add i16 %17, 1
  store i16 %18, i16* %16, align 2
  %19 = zext i16 %17 to i32
  %20 = icmp ne i32 %19, 0
  br label %21

21:                                               ; preds = %14, %2
  %22 = phi i1 [ false, %2 ], [ %20, %14 ]
  %23 = zext i1 %22 to i32
  %24 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %25 = load i32, i32* %4, align 4
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %21
  %28 = load i32, i32* %4, align 4
  %29 = sub nsw i32 0, %28
  %30 = trunc i32 %29 to i16
  store i16 %30, i16* %9, align 2
  br label %34

31:                                               ; preds = %21
  %32 = load i32, i32* %4, align 4
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %9, align 2
  br label %34

34:                                               ; preds = %31, %27
  %35 = load i16, i16* %9, align 2
  %36 = zext i16 %35 to i32
  %37 = icmp sge i32 %36, 65536
  br i1 %37, label %38, label %41

38:                                               ; preds = %34
  %39 = call %struct.precisionType* bitcast (i16* (i32, i8*, i8*)* @errorp to %struct.precisionType* (i32, i8*, i8*)*)(i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.85, i64 0, i64 0))
  %40 = call %struct.precisionType* @pnew(%struct.precisionType* %39)
  store %struct.precisionType* %40, %struct.precisionType** %11, align 8
  br label %150

41:                                               ; preds = %34
  %42 = load i16, i16* %9, align 2
  %43 = zext i16 %42 to i32
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = call %struct.precisionType* bitcast (i16* (i32, i8*, i8*)* @errorp to %struct.precisionType* (i32, i8*, i8*)*)(i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.86, i64 0, i64 0))
  %47 = call %struct.precisionType* @pnew(%struct.precisionType* %46)
  store %struct.precisionType* %47, %struct.precisionType** %11, align 8
  br label %150

48:                                               ; preds = %41
  %49 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %50 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %49, i32 0, i32 2
  %51 = load i16, i16* %50, align 2
  store i16 %51, i16* %10, align 2
  %52 = load i16, i16* %10, align 2
  %53 = zext i16 %52 to i32
  %54 = call %struct.precisionType* (i32, ...) bitcast (%struct.precisionType* (i32)* @palloc to %struct.precisionType* (i32, ...)*)(i32 %53)
  store %struct.precisionType* %54, %struct.precisionType** %11, align 8
  %55 = load %struct.precisionType*, %struct.precisionType** %11, align 8
  %56 = icmp eq %struct.precisionType* %55, null
  br i1 %56, label %57, label %58

57:                                               ; preds = %48
  br label %150

58:                                               ; preds = %48
  %59 = load %struct.precisionType*, %struct.precisionType** %11, align 8
  %60 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %59, i32 0, i32 4
  %61 = getelementptr inbounds [1 x i16], [1 x i16]* %60, i64 0, i64 0
  %62 = load i16, i16* %10, align 2
  %63 = zext i16 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i16, i16* %61, i64 %64
  store i16* %65, i16** %6, align 8
  %66 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %67 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %66, i32 0, i32 4
  %68 = getelementptr inbounds [1 x i16], [1 x i16]* %67, i64 0, i64 0
  %69 = load i16, i16* %10, align 2
  %70 = zext i16 %69 to i32
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i16, i16* %68, i64 %71
  store i16* %72, i16** %5, align 8
  store i16 0, i16* %8, align 2
  br label %73

73:                                               ; preds = %95, %58
  %74 = load i16, i16* %8, align 2
  %75 = zext i16 %74 to i32
  %76 = shl i32 %75, 16
  store i32 %76, i32* %7, align 4
  %77 = load i16*, i16** %5, align 8
  %78 = getelementptr inbounds i16, i16* %77, i32 -1
  store i16* %78, i16** %5, align 8
  %79 = load i16, i16* %78, align 2
  %80 = zext i16 %79 to i32
  %81 = load i32, i32* %7, align 4
  %82 = add i32 %81, %80
  store i32 %82, i32* %7, align 4
  %83 = load i32, i32* %7, align 4
  %84 = load i16, i16* %9, align 2
  %85 = zext i16 %84 to i32
  %86 = udiv i32 %83, %85
  %87 = trunc i32 %86 to i16
  %88 = load i16*, i16** %6, align 8
  %89 = getelementptr inbounds i16, i16* %88, i32 -1
  store i16* %89, i16** %6, align 8
  store i16 %87, i16* %89, align 2
  %90 = load i32, i32* %7, align 4
  %91 = load i16, i16* %9, align 2
  %92 = zext i16 %91 to i32
  %93 = urem i32 %90, %92
  %94 = trunc i32 %93 to i16
  store i16 %94, i16* %8, align 2
  br label %95

95:                                               ; preds = %73
  %96 = load i16*, i16** %5, align 8
  %97 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %98 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %97, i32 0, i32 4
  %99 = getelementptr inbounds [1 x i16], [1 x i16]* %98, i64 0, i64 0
  %100 = icmp ugt i16* %96, %99
  br i1 %100, label %73, label %101

101:                                              ; preds = %95
  %102 = load i16, i16* %10, align 2
  %103 = zext i16 %102 to i32
  %104 = icmp sgt i32 %103, 1
  br i1 %104, label %105, label %121

105:                                              ; preds = %101
  %106 = load %struct.precisionType*, %struct.precisionType** %11, align 8
  %107 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %106, i32 0, i32 4
  %108 = load i16, i16* %10, align 2
  %109 = zext i16 %108 to i32
  %110 = sub nsw i32 %109, 1
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [1 x i16], [1 x i16]* %107, i64 0, i64 %111
  %113 = load i16, i16* %112, align 2
  %114 = zext i16 %113 to i32
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %121

116:                                              ; preds = %105
  %117 = load %struct.precisionType*, %struct.precisionType** %11, align 8
  %118 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %117, i32 0, i32 2
  %119 = load i16, i16* %118, align 2
  %120 = add i16 %119, -1
  store i16 %120, i16* %118, align 2
  br label %121

121:                                              ; preds = %116, %105, %101
  %122 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %123 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %122, i32 0, i32 3
  %124 = load i8, i8* %123, align 2
  %125 = zext i8 %124 to i32
  %126 = load i32, i32* %4, align 4
  %127 = icmp slt i32 %126, 0
  %128 = zext i1 %127 to i32
  %129 = icmp ne i32 %125, %128
  %130 = zext i1 %129 to i32
  %131 = trunc i32 %130 to i8
  %132 = load %struct.precisionType*, %struct.precisionType** %11, align 8
  %133 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %132, i32 0, i32 3
  store i8 %131, i8* %133, align 2
  %134 = load %struct.precisionType*, %struct.precisionType** %11, align 8
  %135 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %134, i32 0, i32 2
  %136 = load i16, i16* %135, align 2
  %137 = zext i16 %136 to i32
  %138 = icmp eq i32 %137, 1
  br i1 %138, label %139, label %149

139:                                              ; preds = %121
  %140 = load %struct.precisionType*, %struct.precisionType** %11, align 8
  %141 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %140, i32 0, i32 4
  %142 = getelementptr inbounds [1 x i16], [1 x i16]* %141, i64 0, i64 0
  %143 = load i16, i16* %142, align 2
  %144 = zext i16 %143 to i32
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %149

146:                                              ; preds = %139
  %147 = load %struct.precisionType*, %struct.precisionType** %11, align 8
  %148 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %147, i32 0, i32 3
  store i8 0, i8* %148, align 2
  br label %149

149:                                              ; preds = %146, %139, %121
  br label %150

150:                                              ; preds = %149, %57, %45, %38
  %151 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %152 = icmp ne %struct.precisionType* %151, null
  br i1 %152, label %153, label %164

153:                                              ; preds = %150
  %154 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %155 = bitcast %struct.precisionType* %154 to i16*
  %156 = load i16, i16* %155, align 2
  %157 = add i16 %156, -1
  store i16 %157, i16* %155, align 2
  %158 = zext i16 %157 to i32
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %164

160:                                              ; preds = %153
  %161 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %162 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %161)
  %163 = icmp ne i32 %162, 0
  br label %164

164:                                              ; preds = %160, %153, %150
  %165 = phi i1 [ false, %153 ], [ false, %150 ], [ %163, %160 ]
  %166 = zext i1 %165 to i32
  %167 = load %struct.precisionType*, %struct.precisionType** %11, align 8
  %168 = call %struct.precisionType* @presult(%struct.precisionType* %167)
  ret %struct.precisionType* %168
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @pimod(%struct.precisionType* %0, i32 %1) #0 {
  %3 = alloca %struct.precisionType*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i16*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i32, align 4
  store %struct.precisionType* %0, %struct.precisionType** %3, align 8
  store i32 %1, i32* %4, align 4
  store i16 0, i16* %7, align 2
  store i32 0, i32* %9, align 4
  %10 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %11 = icmp ne %struct.precisionType* %10, null
  br i1 %11, label %12, label %19

12:                                               ; preds = %2
  %13 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %14 = bitcast %struct.precisionType* %13 to i16*
  %15 = load i16, i16* %14, align 2
  %16 = add i16 %15, 1
  store i16 %16, i16* %14, align 2
  %17 = zext i16 %15 to i32
  %18 = icmp ne i32 %17, 0
  br label %19

19:                                               ; preds = %12, %2
  %20 = phi i1 [ false, %2 ], [ %18, %12 ]
  %21 = zext i1 %20 to i32
  %22 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %23 = load i32, i32* %4, align 4
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %19
  %26 = load i32, i32* %4, align 4
  %27 = sub nsw i32 0, %26
  %28 = trunc i32 %27 to i16
  store i16 %28, i16* %8, align 2
  br label %32

29:                                               ; preds = %19
  %30 = load i32, i32* %4, align 4
  %31 = trunc i32 %30 to i16
  store i16 %31, i16* %8, align 2
  br label %32

32:                                               ; preds = %29, %25
  %33 = load i16, i16* %8, align 2
  %34 = zext i16 %33 to i32
  %35 = icmp sge i32 %34, 65536
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  %37 = call %struct.precisionType* bitcast (i16* (i32, i8*, i8*)* @errorp to %struct.precisionType* (i32, i8*, i8*)*)(i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.90, i64 0, i64 0))
  br label %86

38:                                               ; preds = %32
  %39 = load i16, i16* %8, align 2
  %40 = zext i16 %39 to i32
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  %43 = call %struct.precisionType* bitcast (i16* (i32, i8*, i8*)* @errorp to %struct.precisionType* (i32, i8*, i8*)*)(i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.91, i64 0, i64 0))
  br label %86

44:                                               ; preds = %38
  %45 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %46 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %45, i32 0, i32 4
  %47 = getelementptr inbounds [1 x i16], [1 x i16]* %46, i64 0, i64 0
  %48 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %49 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %48, i32 0, i32 2
  %50 = load i16, i16* %49, align 2
  %51 = zext i16 %50 to i32
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i16, i16* %47, i64 %52
  store i16* %53, i16** %5, align 8
  store i16 0, i16* %7, align 2
  br label %54

54:                                               ; preds = %69, %44
  %55 = load i16, i16* %7, align 2
  %56 = zext i16 %55 to i32
  %57 = shl i32 %56, 16
  store i32 %57, i32* %6, align 4
  %58 = load i16*, i16** %5, align 8
  %59 = getelementptr inbounds i16, i16* %58, i32 -1
  store i16* %59, i16** %5, align 8
  %60 = load i16, i16* %59, align 2
  %61 = zext i16 %60 to i32
  %62 = load i32, i32* %6, align 4
  %63 = add i32 %62, %61
  store i32 %63, i32* %6, align 4
  %64 = load i32, i32* %6, align 4
  %65 = load i16, i16* %8, align 2
  %66 = zext i16 %65 to i32
  %67 = urem i32 %64, %66
  %68 = trunc i32 %67 to i16
  store i16 %68, i16* %7, align 2
  br label %69

69:                                               ; preds = %54
  %70 = load i16*, i16** %5, align 8
  %71 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %72 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %71, i32 0, i32 4
  %73 = getelementptr inbounds [1 x i16], [1 x i16]* %72, i64 0, i64 0
  %74 = icmp ugt i16* %70, %73
  br i1 %74, label %54, label %75

75:                                               ; preds = %69
  %76 = load i16, i16* %7, align 2
  %77 = zext i16 %76 to i32
  store i32 %77, i32* %9, align 4
  %78 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %79 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %78, i32 0, i32 3
  %80 = load i8, i8* %79, align 2
  %81 = icmp ne i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %75
  %83 = load i32, i32* %9, align 4
  %84 = sub nsw i32 0, %83
  store i32 %84, i32* %9, align 4
  br label %85

85:                                               ; preds = %82, %75
  br label %86

86:                                               ; preds = %85, %42, %36
  %87 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %88 = icmp ne %struct.precisionType* %87, null
  br i1 %88, label %89, label %100

89:                                               ; preds = %86
  %90 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %91 = bitcast %struct.precisionType* %90 to i16*
  %92 = load i16, i16* %91, align 2
  %93 = add i16 %92, -1
  store i16 %93, i16* %91, align 2
  %94 = zext i16 %93 to i32
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %100

96:                                               ; preds = %89
  %97 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %98 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %97)
  %99 = icmp ne i32 %98, 0
  br label %100

100:                                              ; preds = %96, %89, %86
  %101 = phi i1 [ false, %89 ], [ false, %86 ], [ %99, %96 ]
  %102 = zext i1 %101 to i32
  %103 = load i32, i32* %9, align 4
  ret i32 %103
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fputp(%struct._IO_FILE* %0, %struct.precisionType* %1) #0 {
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca %struct.precisionType*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  store %struct.precisionType* %1, %struct.precisionType** %4, align 8
  %7 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %8 = icmp ne %struct.precisionType* %7, null
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %11 = bitcast %struct.precisionType* %10 to i16*
  %12 = load i16, i16* %11, align 2
  %13 = add i16 %12, 1
  store i16 %13, i16* %11, align 2
  %14 = zext i16 %12 to i32
  %15 = icmp ne i32 %14, 0
  br label %16

16:                                               ; preds = %9, %2
  %17 = phi i1 [ false, %2 ], [ %15, %9 ]
  %18 = zext i1 %17 to i32
  %19 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %20 = call i8* @ptoa(%struct.precisionType* %19)
  store i8* %20, i8** %6, align 8
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %22 = load i8*, i8** %6, align 8
  %23 = call i32 @fouts(%struct._IO_FILE* %21, i8* %22)
  store i32 %23, i32* %5, align 4
  %24 = load i8*, i8** %6, align 8
  %25 = call i32 (i8*, ...) bitcast (void (i8*)* @free to i32 (i8*, ...)*)(i8* %24)
  %26 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %27 = icmp ne %struct.precisionType* %26, null
  br i1 %27, label %28, label %39

28:                                               ; preds = %16
  %29 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %30 = bitcast %struct.precisionType* %29 to i16*
  %31 = load i16, i16* %30, align 2
  %32 = add i16 %31, -1
  store i16 %32, i16* %30, align 2
  %33 = zext i16 %32 to i32
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %28
  %36 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %37 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %36)
  %38 = icmp ne i32 %37, 0
  br label %39

39:                                               ; preds = %35, %28, %16
  %40 = phi i1 [ false, %28 ], [ false, %16 ], [ %38, %35 ]
  %41 = zext i1 %40 to i32
  %42 = load i32, i32* %5, align 4
  ret i32 %42
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @fouts(%struct._IO_FILE* %0, i8* %1) #0 {
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  store i8* %1, i8** %4, align 8
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  %7 = load i8*, i8** %4, align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %9, label %35

9:                                                ; preds = %2
  %10 = load i8*, i8** %4, align 8
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i32
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %35

14:                                               ; preds = %9
  br label %15

15:                                               ; preds = %32, %14
  %16 = load i32, i32* %5, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %5, align 4
  %18 = load i8*, i8** %4, align 8
  %19 = load i8, i8* %18, align 1
  %20 = sext i8 %19 to i32
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %22 = call i32 @putc(i32 %20, %struct._IO_FILE* %21)
  store i32 %22, i32* %6, align 4
  br label %23

23:                                               ; preds = %15
  %24 = load i8*, i8** %4, align 8
  %25 = getelementptr inbounds i8, i8* %24, i32 1
  store i8* %25, i8** %4, align 8
  %26 = load i8, i8* %25, align 1
  %27 = sext i8 %26 to i32
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = load i32, i32* %6, align 4
  %31 = icmp ne i32 %30, -1
  br label %32

32:                                               ; preds = %29, %23
  %33 = phi i1 [ false, %23 ], [ %31, %29 ]
  br i1 %33, label %15, label %34

34:                                               ; preds = %32
  br label %35

35:                                               ; preds = %34, %9, %2
  %36 = load i32, i32* %6, align 4
  %37 = icmp ne i32 %36, -1
  br i1 %37, label %38, label %40

38:                                               ; preds = %35
  %39 = load i32, i32* %5, align 4
  store i32 %39, i32* %6, align 4
  br label %40

40:                                               ; preds = %38, %35
  %41 = load i32, i32* %6, align 4
  ret i32 %41
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @putp(%struct.precisionType* %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store %struct.precisionType* %0, %struct.precisionType** %2, align 8
  %5 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %6 = icmp ne %struct.precisionType* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %9 = bitcast %struct.precisionType* %8 to i16*
  %10 = load i16, i16* %9, align 2
  %11 = add i16 %10, 1
  store i16 %11, i16* %9, align 2
  %12 = zext i16 %10 to i32
  %13 = icmp ne i32 %12, 0
  br label %14

14:                                               ; preds = %7, %1
  %15 = phi i1 [ false, %1 ], [ %13, %7 ]
  %16 = zext i1 %15 to i32
  %17 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %18 = call i8* @ptoa(%struct.precisionType* %17)
  store i8* %18, i8** %4, align 8
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %20 = load i8*, i8** %4, align 8
  %21 = call i32 @fouts(%struct._IO_FILE* %19, i8* %20)
  store i32 %21, i32* %3, align 4
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %23 = call i32 @putc(i32 10, %struct._IO_FILE* %22)
  store i32 %23, i32* %3, align 4
  %24 = load i8*, i8** %4, align 8
  %25 = call i32 (i8*, ...) bitcast (void (i8*)* @free to i32 (i8*, ...)*)(i8* %24)
  %26 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %27 = icmp ne %struct.precisionType* %26, null
  br i1 %27, label %28, label %39

28:                                               ; preds = %14
  %29 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %30 = bitcast %struct.precisionType* %29 to i16*
  %31 = load i16, i16* %30, align 2
  %32 = add i16 %31, -1
  store i16 %32, i16* %30, align 2
  %33 = zext i16 %32 to i32
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %28
  %36 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %37 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %36)
  %38 = icmp ne i32 %37, 0
  br label %39

39:                                               ; preds = %35, %28, %14
  %40 = phi i1 [ false, %28 ], [ false, %14 ], [ %38, %35 ]
  %41 = zext i1 %40 to i32
  %42 = load i32, i32* %3, align 4
  ret i32 %42
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fprintp(%struct._IO_FILE* %0, %struct.precisionType* %1, i32 %2) #0 {
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca %struct.precisionType*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  store %struct.precisionType* %1, %struct.precisionType** %5, align 8
  store i32 %2, i32* %6, align 4
  %10 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %11 = icmp ne %struct.precisionType* %10, null
  br i1 %11, label %12, label %19

12:                                               ; preds = %3
  %13 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %14 = bitcast %struct.precisionType* %13 to i16*
  %15 = load i16, i16* %14, align 2
  %16 = add i16 %15, 1
  store i16 %16, i16* %14, align 2
  %17 = zext i16 %15 to i32
  %18 = icmp ne i32 %17, 0
  br label %19

19:                                               ; preds = %12, %3
  %20 = phi i1 [ false, %3 ], [ %18, %12 ]
  %21 = zext i1 %20 to i32
  %22 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %23 = call i8* @ptoa(%struct.precisionType* %22)
  store i8* %23, i8** %8, align 8
  %24 = load i8*, i8** %8, align 8
  %25 = call i64 @strlen(i8* %24) #11
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %9, align 4
  %27 = load i32, i32* %6, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %43

29:                                               ; preds = %19
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %31 = load i8*, i8** %8, align 8
  %32 = call i32 @fouts(%struct._IO_FILE* %30, i8* %31)
  store i32 %32, i32* %7, align 4
  br label %33

33:                                               ; preds = %39, %29
  %34 = load i32, i32* %6, align 4
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %6, align 4
  %36 = load i32, i32* %9, align 4
  %37 = sub nsw i32 0, %36
  %38 = icmp slt i32 %34, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %41 = call i32 @putc(i32 32, %struct._IO_FILE* %40)
  br label %33

42:                                               ; preds = %33
  br label %56

43:                                               ; preds = %19
  br label %44

44:                                               ; preds = %49, %43
  %45 = load i32, i32* %6, align 4
  %46 = add nsw i32 %45, -1
  store i32 %46, i32* %6, align 4
  %47 = load i32, i32* %9, align 4
  %48 = icmp sgt i32 %45, %47
  br i1 %48, label %49, label %52

49:                                               ; preds = %44
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %51 = call i32 @putc(i32 32, %struct._IO_FILE* %50)
  br label %44

52:                                               ; preds = %44
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %54 = load i8*, i8** %8, align 8
  %55 = call i32 @fouts(%struct._IO_FILE* %53, i8* %54)
  store i32 %55, i32* %7, align 4
  br label %56

56:                                               ; preds = %52, %42
  %57 = load i8*, i8** %8, align 8
  %58 = call i32 (i8*, ...) bitcast (void (i8*)* @free to i32 (i8*, ...)*)(i8* %57)
  %59 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %60 = icmp ne %struct.precisionType* %59, null
  br i1 %60, label %61, label %72

61:                                               ; preds = %56
  %62 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %63 = bitcast %struct.precisionType* %62 to i16*
  %64 = load i16, i16* %63, align 2
  %65 = add i16 %64, -1
  store i16 %65, i16* %63, align 2
  %66 = zext i16 %65 to i32
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %61
  %69 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %70 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %69)
  %71 = icmp ne i32 %70, 0
  br label %72

72:                                               ; preds = %68, %61, %56
  %73 = phi i1 [ false, %61 ], [ false, %56 ], [ %71, %68 ]
  %74 = zext i1 %73 to i32
  %75 = load i32, i32* %7, align 4
  ret i32 %75
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #5

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @fgetp(%struct._IO_FILE* %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca %struct.precisionType*, align 8
  %5 = alloca %struct.precisionType*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  store %struct.precisionType* null, %struct.precisionType** %4, align 8
  store %struct.precisionType* null, %struct.precisionType** %5, align 8
  store i32 0, i32* %6, align 4
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %12 = call i32 @getc(%struct._IO_FILE* %11)
  store i32 %12, i32* %7, align 4
  %13 = load i32, i32* %7, align 4
  %14 = icmp ne i32 %13, -1
  br i1 %14, label %15, label %144

15:                                               ; preds = %1
  br label %16

16:                                               ; preds = %26, %15
  %17 = call i16** @__ctype_b_loc() #8
  %18 = load i16*, i16** %17, align 8
  %19 = load i32, i32* %7, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i16, i16* %18, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  %24 = and i32 %23, 8192
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %16
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %28 = call i32 @getc(%struct._IO_FILE* %27)
  store i32 %28, i32* %7, align 4
  br label %16

29:                                               ; preds = %16
  %30 = load i32, i32* %7, align 4
  %31 = icmp eq i32 %30, 45
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  store i32 1, i32* %6, align 4
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %34 = call i32 @getc(%struct._IO_FILE* %33)
  store i32 %34, i32* %7, align 4
  br label %42

35:                                               ; preds = %29
  %36 = load i32, i32* %7, align 4
  %37 = icmp eq i32 %36, 43
  br i1 %37, label %38, label %41

38:                                               ; preds = %35
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %40 = call i32 @getc(%struct._IO_FILE* %39)
  store i32 %40, i32* %7, align 4
  br label %41

41:                                               ; preds = %38, %35
  br label %42

42:                                               ; preds = %41, %32
  %43 = call i16** @__ctype_b_loc() #8
  %44 = load i16*, i16** %43, align 8
  %45 = load i32, i32* %7, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %44, i64 %46
  %48 = load i16, i16* %47, align 2
  %49 = zext i16 %48 to i32
  %50 = and i32 %49, 2048
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %134

52:                                               ; preds = %42
  %53 = load %struct.precisionType*, %struct.precisionType** @pzero, align 8
  %54 = call %struct.precisionType* @psetq(%struct.precisionType** %4, %struct.precisionType* %53)
  %55 = call %struct.precisionType* @utop(i32 1000000000)
  %56 = call %struct.precisionType* @psetq(%struct.precisionType** %5, %struct.precisionType* %55)
  br label %57

57:                                               ; preds = %90, %52
  store i32 8, i32* %10, align 4
  %58 = load i32, i32* %7, align 4
  %59 = sub nsw i32 %58, 48
  store i32 %59, i32* %8, align 4
  br label %60

60:                                               ; preds = %78, %57
  %61 = call i16** @__ctype_b_loc() #8
  %62 = load i16*, i16** %61, align 8
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %64 = call i32 @getc(%struct._IO_FILE* %63)
  store i32 %64, i32* %7, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i16, i16* %62, i64 %65
  %67 = load i16, i16* %66, align 2
  %68 = zext i16 %67 to i32
  %69 = and i32 %68, 2048
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %60
  br label %102

72:                                               ; preds = %60
  %73 = load i32, i32* %8, align 4
  %74 = mul i32 %73, 10
  %75 = load i32, i32* %7, align 4
  %76 = sub nsw i32 %75, 48
  %77 = add i32 %74, %76
  store i32 %77, i32* %8, align 4
  br label %78

78:                                               ; preds = %72
  %79 = load i32, i32* %10, align 4
  %80 = add nsw i32 %79, -1
  store i32 %80, i32* %10, align 4
  %81 = icmp sgt i32 %80, 0
  br i1 %81, label %60, label %82

82:                                               ; preds = %78
  %83 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %84 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %85 = call %struct.precisionType* @pmul(%struct.precisionType* %83, %struct.precisionType* %84)
  %86 = load i32, i32* %8, align 4
  %87 = call %struct.precisionType* @utop(i32 %86)
  %88 = call %struct.precisionType* @padd(%struct.precisionType* %85, %struct.precisionType* %87)
  %89 = call %struct.precisionType* @psetq(%struct.precisionType** %4, %struct.precisionType* %88)
  br label %90

90:                                               ; preds = %82
  %91 = call i16** @__ctype_b_loc() #8
  %92 = load i16*, i16** %91, align 8
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %94 = call i32 @getc(%struct._IO_FILE* %93)
  store i32 %94, i32* %7, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i16, i16* %92, i64 %95
  %97 = load i16, i16* %96, align 2
  %98 = zext i16 %97 to i32
  %99 = and i32 %98, 2048
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %57, label %101

101:                                              ; preds = %90
  br label %119

102:                                              ; preds = %71
  store i32 10, i32* %9, align 4
  br label %103

103:                                              ; preds = %107, %102
  %104 = load i32, i32* %10, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %10, align 4
  %106 = icmp slt i32 %104, 8
  br i1 %106, label %107, label %110

107:                                              ; preds = %103
  %108 = load i32, i32* %9, align 4
  %109 = mul i32 %108, 10
  store i32 %109, i32* %9, align 4
  br label %103

110:                                              ; preds = %103
  %111 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %112 = load i32, i32* %9, align 4
  %113 = call %struct.precisionType* @utop(i32 %112)
  %114 = call %struct.precisionType* @pmul(%struct.precisionType* %111, %struct.precisionType* %113)
  %115 = load i32, i32* %8, align 4
  %116 = call %struct.precisionType* @utop(i32 %115)
  %117 = call %struct.precisionType* @padd(%struct.precisionType* %114, %struct.precisionType* %116)
  %118 = call %struct.precisionType* @psetq(%struct.precisionType** %4, %struct.precisionType* %117)
  br label %119

119:                                              ; preds = %110, %101
  %120 = load i32, i32* %7, align 4
  %121 = icmp ne i32 %120, -1
  br i1 %121, label %122, label %126

122:                                              ; preds = %119
  %123 = load i32, i32* %7, align 4
  %124 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %125 = call i32 @ungetc(i32 %123, %struct._IO_FILE* %124)
  br label %126

126:                                              ; preds = %122, %119
  %127 = load i32, i32* %6, align 4
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %133

129:                                              ; preds = %126
  %130 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %131 = call %struct.precisionType* @pneg(%struct.precisionType* %130)
  %132 = call %struct.precisionType* @psetq(%struct.precisionType** %4, %struct.precisionType* %131)
  br label %133

133:                                              ; preds = %129, %126
  br label %143

134:                                              ; preds = %42
  %135 = load i32, i32* %7, align 4
  %136 = icmp eq i32 %135, -1
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  store %struct.precisionType* null, %struct.precisionType** %4, align 8
  br label %142

138:                                              ; preds = %134
  %139 = load i32, i32* %7, align 4
  %140 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %141 = call i32 @ungetc(i32 %139, %struct._IO_FILE* %140)
  br label %142

142:                                              ; preds = %138, %137
  br label %143

143:                                              ; preds = %142, %133
  br label %145

144:                                              ; preds = %1
  store %struct.precisionType* null, %struct.precisionType** %4, align 8
  br label %145

145:                                              ; preds = %144, %143
  %146 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %147 = icmp ne %struct.precisionType* %146, null
  br i1 %147, label %148, label %159

148:                                              ; preds = %145
  %149 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %150 = bitcast %struct.precisionType* %149 to i16*
  %151 = load i16, i16* %150, align 2
  %152 = add i16 %151, -1
  store i16 %152, i16* %150, align 2
  %153 = zext i16 %152 to i32
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %159

155:                                              ; preds = %148
  %156 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %157 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %156)
  %158 = icmp ne i32 %157, 0
  br label %159

159:                                              ; preds = %155, %148, %145
  %160 = phi i1 [ false, %148 ], [ false, %145 ], [ %158, %155 ]
  %161 = zext i1 %160 to i32
  %162 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %163 = icmp eq %struct.precisionType* %162, null
  br i1 %163, label %164, label %166

164:                                              ; preds = %159
  %165 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  store %struct.precisionType* %165, %struct.precisionType** %2, align 8
  br label %169

166:                                              ; preds = %159
  %167 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %168 = call %struct.precisionType* @presult(%struct.precisionType* %167)
  store %struct.precisionType* %168, %struct.precisionType** %2, align 8
  br label %169

169:                                              ; preds = %166, %164
  %170 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  ret %struct.precisionType* %170
}

declare dso_local i32 @getc(%struct._IO_FILE*) #2

declare dso_local i32 @ungetc(i32, %struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @pmul(%struct.precisionType* %0, %struct.precisionType* %1) #0 {
  %3 = alloca %struct.precisionType*, align 8
  %4 = alloca %struct.precisionType*, align 8
  %5 = alloca %struct.precisionType*, align 8
  %6 = alloca i16*, align 8
  %7 = alloca i16*, align 8
  %8 = alloca i16*, align 8
  %9 = alloca i16*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca i16, align 2
  %13 = alloca %struct.precisionType*, align 8
  store %struct.precisionType* %0, %struct.precisionType** %4, align 8
  store %struct.precisionType* %1, %struct.precisionType** %5, align 8
  %14 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %15 = icmp ne %struct.precisionType* %14, null
  br i1 %15, label %16, label %23

16:                                               ; preds = %2
  %17 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %18 = bitcast %struct.precisionType* %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = add i16 %19, 1
  store i16 %20, i16* %18, align 2
  %21 = zext i16 %19 to i32
  %22 = icmp ne i32 %21, 0
  br label %23

23:                                               ; preds = %16, %2
  %24 = phi i1 [ false, %2 ], [ %22, %16 ]
  %25 = zext i1 %24 to i32
  %26 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %27 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %28 = icmp ne %struct.precisionType* %27, null
  br i1 %28, label %29, label %36

29:                                               ; preds = %23
  %30 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %31 = bitcast %struct.precisionType* %30 to i16*
  %32 = load i16, i16* %31, align 2
  %33 = add i16 %32, 1
  store i16 %33, i16* %31, align 2
  %34 = zext i16 %32 to i32
  %35 = icmp ne i32 %34, 0
  br label %36

36:                                               ; preds = %29, %23
  %37 = phi i1 [ false, %23 ], [ %35, %29 ]
  %38 = zext i1 %37 to i32
  %39 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %40 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %41 = call i32 @pcmpz(%struct.precisionType* %40)
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %36
  %44 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %45 = call i32 @pcmpz(%struct.precisionType* %44)
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %43, %36
  %48 = call %struct.precisionType* (i32, ...) bitcast (%struct.precisionType* (i32)* @palloc to %struct.precisionType* (i32, ...)*)(i32 1)
  store %struct.precisionType* %48, %struct.precisionType** %13, align 8
  %49 = load %struct.precisionType*, %struct.precisionType** %13, align 8
  %50 = icmp eq %struct.precisionType* %49, null
  br i1 %50, label %51, label %53

51:                                               ; preds = %47
  %52 = load %struct.precisionType*, %struct.precisionType** %13, align 8
  store %struct.precisionType* %52, %struct.precisionType** %3, align 8
  br label %248

53:                                               ; preds = %47
  %54 = load %struct.precisionType*, %struct.precisionType** %13, align 8
  %55 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %54, i32 0, i32 3
  store i8 0, i8* %55, align 2
  %56 = load %struct.precisionType*, %struct.precisionType** %13, align 8
  %57 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %56, i32 0, i32 4
  %58 = getelementptr inbounds [1 x i16], [1 x i16]* %57, i64 0, i64 0
  store i16 0, i16* %58, align 2
  br label %213

59:                                               ; preds = %43
  %60 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %61 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %60, i32 0, i32 2
  %62 = load i16, i16* %61, align 2
  %63 = zext i16 %62 to i32
  %64 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %65 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %64, i32 0, i32 2
  %66 = load i16, i16* %65, align 2
  %67 = zext i16 %66 to i32
  %68 = icmp slt i32 %63, %67
  br i1 %68, label %69, label %73

69:                                               ; preds = %59
  %70 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  store %struct.precisionType* %70, %struct.precisionType** %13, align 8
  %71 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  store %struct.precisionType* %71, %struct.precisionType** %4, align 8
  %72 = load %struct.precisionType*, %struct.precisionType** %13, align 8
  store %struct.precisionType* %72, %struct.precisionType** %5, align 8
  br label %73

73:                                               ; preds = %69, %59
  %74 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %75 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %74, i32 0, i32 2
  %76 = load i16, i16* %75, align 2
  %77 = zext i16 %76 to i32
  %78 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %79 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %78, i32 0, i32 2
  %80 = load i16, i16* %79, align 2
  %81 = zext i16 %80 to i32
  %82 = add nsw i32 %77, %81
  %83 = call %struct.precisionType* (i32, ...) bitcast (%struct.precisionType* (i32)* @palloc to %struct.precisionType* (i32, ...)*)(i32 %82)
  store %struct.precisionType* %83, %struct.precisionType** %13, align 8
  %84 = load %struct.precisionType*, %struct.precisionType** %13, align 8
  %85 = icmp eq %struct.precisionType* %84, null
  br i1 %85, label %86, label %88

86:                                               ; preds = %73
  %87 = load %struct.precisionType*, %struct.precisionType** %13, align 8
  store %struct.precisionType* %87, %struct.precisionType** %3, align 8
  br label %248

88:                                               ; preds = %73
  %89 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %90 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %89, i32 0, i32 3
  %91 = load i8, i8* %90, align 2
  %92 = zext i8 %91 to i32
  %93 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %94 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %93, i32 0, i32 3
  %95 = load i8, i8* %94, align 2
  %96 = zext i8 %95 to i32
  %97 = icmp ne i32 %92, %96
  %98 = zext i1 %97 to i32
  %99 = trunc i32 %98 to i8
  %100 = load %struct.precisionType*, %struct.precisionType** %13, align 8
  %101 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %100, i32 0, i32 3
  store i8 %99, i8* %101, align 2
  %102 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %103 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %102, i32 0, i32 4
  %104 = getelementptr inbounds [1 x i16], [1 x i16]* %103, i64 0, i64 0
  store i16* %104, i16** %7, align 8
  %105 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %106 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %105, i32 0, i32 4
  %107 = getelementptr inbounds [1 x i16], [1 x i16]* %106, i64 0, i64 0
  store i16* %107, i16** %6, align 8
  %108 = load %struct.precisionType*, %struct.precisionType** %13, align 8
  %109 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %108, i32 0, i32 4
  %110 = getelementptr inbounds [1 x i16], [1 x i16]* %109, i64 0, i64 0
  %111 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %112 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %111, i32 0, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = zext i16 %113 to i32
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i16, i16* %110, i64 %115
  store i16* %116, i16** %8, align 8
  br label %117

117:                                              ; preds = %120, %88
  %118 = load i16*, i16** %8, align 8
  %119 = getelementptr inbounds i16, i16* %118, i32 -1
  store i16* %119, i16** %8, align 8
  store i16 0, i16* %119, align 2
  br label %120

120:                                              ; preds = %117
  %121 = load i16*, i16** %8, align 8
  %122 = load %struct.precisionType*, %struct.precisionType** %13, align 8
  %123 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %122, i32 0, i32 4
  %124 = getelementptr inbounds [1 x i16], [1 x i16]* %123, i64 0, i64 0
  %125 = icmp ugt i16* %121, %124
  br i1 %125, label %117, label %126

126:                                              ; preds = %120
  %127 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %128 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %127, i32 0, i32 4
  %129 = getelementptr inbounds [1 x i16], [1 x i16]* %128, i64 0, i64 0
  store i16* %129, i16** %6, align 8
  %130 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %131 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %130, i32 0, i32 4
  %132 = getelementptr inbounds [1 x i16], [1 x i16]* %131, i64 0, i64 0
  %133 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %134 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %133, i32 0, i32 2
  %135 = load i16, i16* %134, align 2
  %136 = zext i16 %135 to i32
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i16, i16* %132, i64 %137
  store i16* %138, i16** %9, align 8
  br label %139

139:                                              ; preds = %190, %126
  %140 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %141 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %140, i32 0, i32 4
  %142 = getelementptr inbounds [1 x i16], [1 x i16]* %141, i64 0, i64 0
  store i16* %142, i16** %7, align 8
  %143 = load %struct.precisionType*, %struct.precisionType** %13, align 8
  %144 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %143, i32 0, i32 4
  %145 = getelementptr inbounds [1 x i16], [1 x i16]* %144, i64 0, i64 0
  %146 = load i16*, i16** %6, align 8
  %147 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %148 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %147, i32 0, i32 4
  %149 = getelementptr inbounds [1 x i16], [1 x i16]* %148, i64 0, i64 0
  %150 = ptrtoint i16* %146 to i64
  %151 = ptrtoint i16* %149 to i64
  %152 = sub i64 %150, %151
  %153 = sdiv exact i64 %152, 2
  %154 = getelementptr inbounds i16, i16* %145, i64 %153
  store i16* %154, i16** %8, align 8
  store i16 0, i16* %12, align 2
  %155 = load i16*, i16** %6, align 8
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %11, align 2
  br label %157

157:                                              ; preds = %182, %139
  %158 = load i16, i16* %11, align 2
  %159 = zext i16 %158 to i32
  %160 = load i16*, i16** %7, align 8
  %161 = getelementptr inbounds i16, i16* %160, i32 1
  store i16* %161, i16** %7, align 8
  %162 = load i16, i16* %160, align 2
  %163 = zext i16 %162 to i32
  %164 = mul nsw i32 %159, %163
  store i32 %164, i32* %10, align 4
  %165 = load i16*, i16** %8, align 8
  %166 = load i16, i16* %165, align 2
  %167 = zext i16 %166 to i32
  %168 = load i32, i32* %10, align 4
  %169 = add i32 %168, %167
  store i32 %169, i32* %10, align 4
  %170 = load i16, i16* %12, align 2
  %171 = zext i16 %170 to i32
  %172 = load i32, i32* %10, align 4
  %173 = add i32 %172, %171
  store i32 %173, i32* %10, align 4
  %174 = load i32, i32* %10, align 4
  %175 = lshr i32 %174, 16
  %176 = trunc i32 %175 to i16
  store i16 %176, i16* %12, align 2
  %177 = load i32, i32* %10, align 4
  %178 = and i32 %177, 65535
  %179 = trunc i32 %178 to i16
  %180 = load i16*, i16** %8, align 8
  %181 = getelementptr inbounds i16, i16* %180, i32 1
  store i16* %181, i16** %8, align 8
  store i16 %179, i16* %180, align 2
  br label %182

182:                                              ; preds = %157
  %183 = load i16*, i16** %7, align 8
  %184 = load i16*, i16** %9, align 8
  %185 = icmp ult i16* %183, %184
  br i1 %185, label %157, label %186

186:                                              ; preds = %182
  %187 = load i16, i16* %12, align 2
  %188 = load i16*, i16** %8, align 8
  %189 = getelementptr inbounds i16, i16* %188, i32 1
  store i16* %189, i16** %8, align 8
  store i16 %187, i16* %188, align 2
  br label %190

190:                                              ; preds = %186
  %191 = load i16*, i16** %6, align 8
  %192 = getelementptr inbounds i16, i16* %191, i32 1
  store i16* %192, i16** %6, align 8
  %193 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %194 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %193, i32 0, i32 4
  %195 = getelementptr inbounds [1 x i16], [1 x i16]* %194, i64 0, i64 0
  %196 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %197 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %196, i32 0, i32 2
  %198 = load i16, i16* %197, align 2
  %199 = zext i16 %198 to i32
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i16, i16* %195, i64 %200
  %202 = icmp ult i16* %192, %201
  br i1 %202, label %139, label %203

203:                                              ; preds = %190
  %204 = load i16, i16* %12, align 2
  %205 = zext i16 %204 to i32
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %212

207:                                              ; preds = %203
  %208 = load %struct.precisionType*, %struct.precisionType** %13, align 8
  %209 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %208, i32 0, i32 2
  %210 = load i16, i16* %209, align 2
  %211 = add i16 %210, -1
  store i16 %211, i16* %209, align 2
  br label %212

212:                                              ; preds = %207, %203
  br label %213

213:                                              ; preds = %212, %53
  %214 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %215 = icmp ne %struct.precisionType* %214, null
  br i1 %215, label %216, label %227

216:                                              ; preds = %213
  %217 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %218 = bitcast %struct.precisionType* %217 to i16*
  %219 = load i16, i16* %218, align 2
  %220 = add i16 %219, -1
  store i16 %220, i16* %218, align 2
  %221 = zext i16 %220 to i32
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %227

223:                                              ; preds = %216
  %224 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %225 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %224)
  %226 = icmp ne i32 %225, 0
  br label %227

227:                                              ; preds = %223, %216, %213
  %228 = phi i1 [ false, %216 ], [ false, %213 ], [ %226, %223 ]
  %229 = zext i1 %228 to i32
  %230 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %231 = icmp ne %struct.precisionType* %230, null
  br i1 %231, label %232, label %243

232:                                              ; preds = %227
  %233 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %234 = bitcast %struct.precisionType* %233 to i16*
  %235 = load i16, i16* %234, align 2
  %236 = add i16 %235, -1
  store i16 %236, i16* %234, align 2
  %237 = zext i16 %236 to i32
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %243

239:                                              ; preds = %232
  %240 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %241 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %240)
  %242 = icmp ne i32 %241, 0
  br label %243

243:                                              ; preds = %239, %232, %227
  %244 = phi i1 [ false, %232 ], [ false, %227 ], [ %242, %239 ]
  %245 = zext i1 %244 to i32
  %246 = load %struct.precisionType*, %struct.precisionType** %13, align 8
  %247 = call %struct.precisionType* @presult(%struct.precisionType* %246)
  store %struct.precisionType* %247, %struct.precisionType** %3, align 8
  br label %248

248:                                              ; preds = %243, %86, %51
  %249 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  ret %struct.precisionType* %249
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @pneg(%struct.precisionType* %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  %3 = alloca %struct.precisionType*, align 8
  %4 = alloca %struct.precisionType*, align 8
  store %struct.precisionType* %0, %struct.precisionType** %3, align 8
  %5 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %6 = icmp ne %struct.precisionType* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %9 = bitcast %struct.precisionType* %8 to i16*
  %10 = load i16, i16* %9, align 2
  %11 = add i16 %10, 1
  store i16 %11, i16* %9, align 2
  %12 = zext i16 %10 to i32
  %13 = icmp ne i32 %12, 0
  br label %14

14:                                               ; preds = %7, %1
  %15 = phi i1 [ false, %1 ], [ %13, %7 ]
  %16 = zext i1 %15 to i32
  %17 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %18 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %19 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %18, i32 0, i32 2
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = call %struct.precisionType* (i32, ...) bitcast (%struct.precisionType* (i32)* @palloc to %struct.precisionType* (i32, ...)*)(i32 %21)
  store %struct.precisionType* %22, %struct.precisionType** %4, align 8
  %23 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %24 = icmp eq %struct.precisionType* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %14
  %26 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  store %struct.precisionType* %26, %struct.precisionType** %2, align 8
  br label %78

27:                                               ; preds = %14
  %28 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %29 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %28, i32 0, i32 3
  %30 = load i8, i8* %29, align 2
  %31 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %32 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %31, i32 0, i32 3
  store i8 %30, i8* %32, align 2
  %33 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %34 = call i32 @pcmpz(%struct.precisionType* %33)
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %46

36:                                               ; preds = %27
  %37 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %38 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %37, i32 0, i32 3
  %39 = load i8, i8* %38, align 2
  %40 = icmp ne i8 %39, 0
  %41 = xor i1 %40, true
  %42 = zext i1 %41 to i32
  %43 = trunc i32 %42 to i8
  %44 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %45 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %44, i32 0, i32 3
  store i8 %43, i8* %45, align 2
  br label %46

46:                                               ; preds = %36, %27
  %47 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %48 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %47, i32 0, i32 4
  %49 = getelementptr inbounds [1 x i16], [1 x i16]* %48, i64 0, i64 0
  %50 = bitcast i16* %49 to i8*
  %51 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %52 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %51, i32 0, i32 4
  %53 = getelementptr inbounds [1 x i16], [1 x i16]* %52, i64 0, i64 0
  %54 = bitcast i16* %53 to i8*
  %55 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %56 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %55, i32 0, i32 2
  %57 = load i16, i16* %56, align 2
  %58 = zext i16 %57 to i64
  %59 = mul i64 %58, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %50, i8* align 2 %54, i64 %59, i1 false)
  %60 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %61 = icmp ne %struct.precisionType* %60, null
  br i1 %61, label %62, label %73

62:                                               ; preds = %46
  %63 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %64 = bitcast %struct.precisionType* %63 to i16*
  %65 = load i16, i16* %64, align 2
  %66 = add i16 %65, -1
  store i16 %66, i16* %64, align 2
  %67 = zext i16 %66 to i32
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %62
  %70 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %71 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %70)
  %72 = icmp ne i32 %71, 0
  br label %73

73:                                               ; preds = %69, %62, %46
  %74 = phi i1 [ false, %62 ], [ false, %46 ], [ %72, %69 ]
  %75 = zext i1 %74 to i32
  %76 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %77 = call %struct.precisionType* @presult(%struct.precisionType* %76)
  store %struct.precisionType* %77, %struct.precisionType** %2, align 8
  br label %78

78:                                               ; preds = %73, %25
  %79 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  ret %struct.precisionType* %79
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @podd(%struct.precisionType* %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  %3 = alloca i32, align 4
  store %struct.precisionType* %0, %struct.precisionType** %2, align 8
  %4 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %5 = icmp ne %struct.precisionType* %4, null
  br i1 %5, label %6, label %13

6:                                                ; preds = %1
  %7 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %8 = bitcast %struct.precisionType* %7 to i16*
  %9 = load i16, i16* %8, align 2
  %10 = add i16 %9, 1
  store i16 %10, i16* %8, align 2
  %11 = zext i16 %9 to i32
  %12 = icmp ne i32 %11, 0
  br label %13

13:                                               ; preds = %6, %1
  %14 = phi i1 [ false, %1 ], [ %12, %6 ]
  %15 = zext i1 %14 to i32
  %16 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %17 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %18 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %17, i32 0, i32 4
  %19 = getelementptr inbounds [1 x i16], [1 x i16]* %18, i64 0, i64 0
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = and i32 %21, 1
  store i32 %22, i32* %3, align 4
  %23 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %24 = icmp ne %struct.precisionType* %23, null
  br i1 %24, label %25, label %36

25:                                               ; preds = %13
  %26 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %27 = bitcast %struct.precisionType* %26 to i16*
  %28 = load i16, i16* %27, align 2
  %29 = add i16 %28, -1
  store i16 %29, i16* %27, align 2
  %30 = zext i16 %29 to i32
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %25
  %33 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %34 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %33)
  %35 = icmp ne i32 %34, 0
  br label %36

36:                                               ; preds = %32, %25, %13
  %37 = phi i1 [ false, %25 ], [ false, %13 ], [ %35, %32 ]
  %38 = zext i1 %37 to i32
  %39 = load i32, i32* %3, align 4
  ret i32 %39
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @pnorm(%struct.precisionType* %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  %3 = alloca i16*, align 8
  store %struct.precisionType* %0, %struct.precisionType** %2, align 8
  %4 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %5 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %4, i32 0, i32 4
  %6 = getelementptr inbounds [1 x i16], [1 x i16]* %5, i64 0, i64 0
  %7 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %8 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %7, i32 0, i32 2
  %9 = load i16, i16* %8, align 2
  %10 = zext i16 %9 to i32
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i16, i16* %6, i64 %11
  store i16* %12, i16** %3, align 8
  br label %13

13:                                               ; preds = %21, %1
  %14 = load i16*, i16** %3, align 8
  %15 = getelementptr inbounds i16, i16* %14, i32 -1
  store i16* %15, i16** %3, align 8
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %13
  br label %27

20:                                               ; preds = %13
  br label %21

21:                                               ; preds = %20
  %22 = load i16*, i16** %3, align 8
  %23 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %24 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %23, i32 0, i32 4
  %25 = getelementptr inbounds [1 x i16], [1 x i16]* %24, i64 0, i64 0
  %26 = icmp ugt i16* %22, %25
  br i1 %26, label %13, label %27

27:                                               ; preds = %21, %19
  %28 = load i16*, i16** %3, align 8
  %29 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %30 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %29, i32 0, i32 4
  %31 = getelementptr inbounds [1 x i16], [1 x i16]* %30, i64 0, i64 0
  %32 = icmp eq i16* %28, %31
  br i1 %32, label %33, label %41

33:                                               ; preds = %27
  %34 = load i16*, i16** %3, align 8
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %40 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %39, i32 0, i32 3
  store i8 0, i8* %40, align 2
  br label %41

41:                                               ; preds = %38, %33, %27
  %42 = load i16*, i16** %3, align 8
  %43 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %44 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %43, i32 0, i32 4
  %45 = getelementptr inbounds [1 x i16], [1 x i16]* %44, i64 0, i64 0
  %46 = ptrtoint i16* %42 to i64
  %47 = ptrtoint i16* %45 to i64
  %48 = sub i64 %46, %47
  %49 = sdiv exact i64 %48, 2
  %50 = add nsw i64 %49, 1
  %51 = trunc i64 %50 to i16
  %52 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %53 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %52, i32 0, i32 2
  store i16 %51, i16* %53, align 2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @palloc(i32 %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  %3 = alloca i16, align 2
  %4 = alloca %struct.precisionType*, align 8
  %5 = alloca %struct.cacheType*, align 8
  %6 = trunc i32 %0 to i16
  store i16 %6, i16* %3, align 2
  %7 = load i16, i16* %3, align 2
  %8 = zext i16 %7 to i32
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %struct.cacheType, %struct.cacheType* getelementptr inbounds ([32 x %struct.cacheType], [32 x %struct.cacheType]* @pcache, i64 0, i64 0), i64 %9
  store %struct.cacheType* %10, %struct.cacheType** %5, align 8
  %11 = load i16, i16* %3, align 2
  %12 = zext i16 %11 to i64
  %13 = mul i64 2, %12
  %14 = add i64 8, %13
  %15 = call i8* @malloc(i64 %14)
  %16 = bitcast i8* %15 to %struct.precisionType*
  store %struct.precisionType* %16, %struct.precisionType** %4, align 8
  %17 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %18 = icmp eq %struct.precisionType* %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %1
  %20 = call %struct.precisionType* bitcast (i16* (i32, i8*, i8*)* @errorp to %struct.precisionType* (i32, i8*, i8*)*)(i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.104, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.105, i64 0, i64 0))
  store %struct.precisionType* %20, %struct.precisionType** %4, align 8
  %21 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  store %struct.precisionType* %21, %struct.precisionType** %2, align 8
  br label %31

22:                                               ; preds = %1
  %23 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %24 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %23, i32 0, i32 0
  store i16 1, i16* %24, align 2
  %25 = load i16, i16* %3, align 2
  %26 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %27 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %26, i32 0, i32 1
  store i16 %25, i16* %27, align 2
  %28 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %29 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %28, i32 0, i32 2
  store i16 %25, i16* %29, align 2
  %30 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  store %struct.precisionType* %30, %struct.precisionType** %2, align 8
  br label %31

31:                                               ; preds = %22, %19
  %32 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  ret %struct.precisionType* %32
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @pfree(%struct.precisionType* %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  %3 = alloca i16, align 2
  %4 = alloca %struct.cacheType*, align 8
  store %struct.precisionType* %0, %struct.precisionType** %2, align 8
  %5 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %6 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %5, i32 0, i32 1
  %7 = load i16, i16* %6, align 2
  store i16 %7, i16* %3, align 2
  %8 = load i16, i16* %3, align 2
  %9 = zext i16 %8 to i32
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %struct.cacheType, %struct.cacheType* getelementptr inbounds ([32 x %struct.cacheType], [32 x %struct.cacheType]* @pcache, i64 0, i64 0), i64 %10
  store %struct.cacheType* %11, %struct.cacheType** %4, align 8
  %12 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %13 = call i32 (%struct.precisionType*, ...) bitcast (void (i8*)* @free to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %12)
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @psetv(%struct.precisionType** %0, %struct.precisionType* %1) #0 {
  %3 = alloca %struct.precisionType**, align 8
  %4 = alloca %struct.precisionType*, align 8
  %5 = alloca %struct.precisionType*, align 8
  store %struct.precisionType** %0, %struct.precisionType*** %3, align 8
  store %struct.precisionType* %1, %struct.precisionType** %4, align 8
  %6 = load %struct.precisionType**, %struct.precisionType*** %3, align 8
  %7 = icmp eq %struct.precisionType** %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = call %struct.precisionType* bitcast (i16* (i32, i8*, i8*)* @errorp to %struct.precisionType* (i32, i8*, i8*)*)(i32 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.108, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.109, i64 0, i64 0))
  br label %10

10:                                               ; preds = %8, %2
  %11 = load %struct.precisionType**, %struct.precisionType*** %3, align 8
  %12 = load %struct.precisionType*, %struct.precisionType** %11, align 8
  store %struct.precisionType* %12, %struct.precisionType** %5, align 8
  %13 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %14 = load %struct.precisionType**, %struct.precisionType*** %3, align 8
  store %struct.precisionType* %13, %struct.precisionType** %14, align 8
  %15 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %16 = icmp ne %struct.precisionType* %15, null
  br i1 %16, label %17, label %22

17:                                               ; preds = %10
  %18 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %19 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %18, i32 0, i32 0
  %20 = load i16, i16* %19, align 2
  %21 = add i16 %20, 1
  store i16 %21, i16* %19, align 2
  br label %22

22:                                               ; preds = %17, %10
  %23 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %24 = icmp ne %struct.precisionType* %23, null
  br i1 %24, label %25, label %45

25:                                               ; preds = %22
  %26 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %27 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %26, i32 0, i32 3
  %28 = load i8, i8* %27, align 2
  %29 = zext i8 %28 to i32
  %30 = and i32 %29, -2
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = call %struct.precisionType* bitcast (i16* (i32, i8*, i8*)* @errorp to %struct.precisionType* (i32, i8*, i8*)*)(i32 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.108, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4.110, i64 0, i64 0))
  br label %34

34:                                               ; preds = %32, %25
  %35 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %36 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %35, i32 0, i32 0
  %37 = load i16, i16* %36, align 2
  %38 = add i16 %37, -1
  store i16 %38, i16* %36, align 2
  %39 = zext i16 %38 to i32
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %34
  %42 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %43 = call i32 @pfree(%struct.precisionType* %42)
  br label %44

44:                                               ; preds = %41, %34
  br label %45

45:                                               ; preds = %44, %22
  %46 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  ret %struct.precisionType* %46
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @pparmv(%struct.precisionType* %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  store %struct.precisionType* %0, %struct.precisionType** %2, align 8
  %3 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %4 = icmp eq %struct.precisionType* %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = call %struct.precisionType* bitcast (i16* (i32, i8*, i8*)* @errorp to %struct.precisionType* (i32, i8*, i8*)*)(i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.111, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.112, i64 0, i64 0))
  br label %7

7:                                                ; preds = %5, %1
  %8 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %9 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %8, i32 0, i32 3
  %10 = load i8, i8* %9, align 2
  %11 = zext i8 %10 to i32
  %12 = and i32 %11, -2
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = call %struct.precisionType* bitcast (i16* (i32, i8*, i8*)* @errorp to %struct.precisionType* (i32, i8*, i8*)*)(i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.111, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4.110, i64 0, i64 0))
  br label %16

16:                                               ; preds = %14, %7
  %17 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %18 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %17, i32 0, i32 0
  %19 = load i16, i16* %18, align 2
  %20 = add i16 %19, 1
  store i16 %20, i16* %18, align 2
  %21 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  ret %struct.precisionType* %21
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @pparmf(%struct.precisionType* %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  store %struct.precisionType* %0, %struct.precisionType** %2, align 8
  %3 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %4 = icmp ne %struct.precisionType* %3, null
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %7 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %6, i32 0, i32 0
  %8 = load i16, i16* %7, align 2
  %9 = add i16 %8, 1
  store i16 %9, i16* %7, align 2
  br label %10

10:                                               ; preds = %5, %1
  %11 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  ret %struct.precisionType* %11
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @pdestroyf(%struct.precisionType* %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  store %struct.precisionType* %0, %struct.precisionType** %2, align 8
  %3 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %4 = icmp ne %struct.precisionType* %3, null
  br i1 %4, label %5, label %15

5:                                                ; preds = %1
  %6 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %7 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %6, i32 0, i32 0
  %8 = load i16, i16* %7, align 2
  %9 = add i16 %8, -1
  store i16 %9, i16* %7, align 2
  %10 = zext i16 %9 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %5
  %13 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %14 = call i32 @pfree(%struct.precisionType* %13)
  br label %15

15:                                               ; preds = %12, %5, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @pnew(%struct.precisionType* %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  store %struct.precisionType* %0, %struct.precisionType** %2, align 8
  %3 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %4 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %3, i32 0, i32 0
  %5 = load i16, i16* %4, align 2
  %6 = add i16 %5, 1
  store i16 %6, i16* %4, align 2
  %7 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  ret %struct.precisionType* %7
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @presult(%struct.precisionType* %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  store %struct.precisionType* %0, %struct.precisionType** %2, align 8
  %3 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %4 = icmp ne %struct.precisionType* %3, null
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %7 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %6, i32 0, i32 0
  %8 = load i16, i16* %7, align 2
  %9 = add i16 %8, -1
  store i16 %9, i16* %7, align 2
  br label %10

10:                                               ; preds = %5, %1
  %11 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  ret %struct.precisionType* %11
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @psetq(%struct.precisionType** %0, %struct.precisionType* %1) #0 {
  %3 = alloca %struct.precisionType**, align 8
  %4 = alloca %struct.precisionType*, align 8
  %5 = alloca %struct.precisionType*, align 8
  store %struct.precisionType** %0, %struct.precisionType*** %3, align 8
  store %struct.precisionType* %1, %struct.precisionType** %4, align 8
  %6 = load %struct.precisionType**, %struct.precisionType*** %3, align 8
  %7 = load %struct.precisionType*, %struct.precisionType** %6, align 8
  store %struct.precisionType* %7, %struct.precisionType** %5, align 8
  %8 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %9 = load %struct.precisionType**, %struct.precisionType*** %3, align 8
  store %struct.precisionType* %8, %struct.precisionType** %9, align 8
  %10 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %11 = icmp ne %struct.precisionType* %10, null
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %14 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %13, i32 0, i32 0
  %15 = load i16, i16* %14, align 2
  %16 = add i16 %15, 1
  store i16 %16, i16* %14, align 2
  br label %17

17:                                               ; preds = %12, %2
  %18 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %19 = icmp ne %struct.precisionType* %18, null
  br i1 %19, label %20, label %30

20:                                               ; preds = %17
  %21 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %22 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %21, i32 0, i32 0
  %23 = load i16, i16* %22, align 2
  %24 = add i16 %23, -1
  store i16 %24, i16* %22, align 2
  %25 = zext i16 %24 to i32
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %20
  %28 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %29 = call i32 @pfree(%struct.precisionType* %28)
  br label %30

30:                                               ; preds = %27, %20, %17
  %31 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  ret %struct.precisionType* %31
}

; Function Attrs: noinline nounwind uwtable
define dso_local i16* @ppowmod(i16* %0, i16* %1, i16* %2) #0 {
  %4 = alloca i16*, align 8
  %5 = alloca i16*, align 8
  %6 = alloca i16*, align 8
  %7 = alloca i16*, align 8
  %8 = alloca i16*, align 8
  %9 = alloca i16*, align 8
  store i16* %0, i16** %4, align 8
  store i16* %1, i16** %5, align 8
  store i16* %2, i16** %6, align 8
  store i16* null, i16** %7, align 8
  store i16* null, i16** %8, align 8
  store i16* null, i16** %9, align 8
  %10 = load i16*, i16** %6, align 8
  %11 = icmp ne i16* %10, null
  br i1 %11, label %12, label %18

12:                                               ; preds = %3
  %13 = load i16*, i16** %6, align 8
  %14 = load i16, i16* %13, align 2
  %15 = add i16 %14, 1
  store i16 %15, i16* %13, align 2
  %16 = zext i16 %14 to i32
  %17 = icmp ne i32 %16, 0
  br label %18

18:                                               ; preds = %12, %3
  %19 = phi i1 [ false, %3 ], [ %17, %12 ]
  %20 = zext i1 %19 to i32
  %21 = load i16*, i16** %6, align 8
  %22 = load i16*, i16** %4, align 8
  %23 = icmp ne i16* %22, null
  br i1 %23, label %24, label %30

24:                                               ; preds = %18
  %25 = load i16*, i16** %4, align 8
  %26 = load i16, i16* %25, align 2
  %27 = add i16 %26, 1
  store i16 %27, i16* %25, align 2
  %28 = zext i16 %26 to i32
  %29 = icmp ne i32 %28, 0
  br label %30

30:                                               ; preds = %24, %18
  %31 = phi i1 [ false, %18 ], [ %29, %24 ]
  %32 = zext i1 %31 to i32
  %33 = load i16*, i16** %4, align 8
  %34 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %8, i16* %33)
  %35 = load i16*, i16** %5, align 8
  %36 = icmp ne i16* %35, null
  br i1 %36, label %37, label %43

37:                                               ; preds = %30
  %38 = load i16*, i16** %5, align 8
  %39 = load i16, i16* %38, align 2
  %40 = add i16 %39, 1
  store i16 %40, i16* %38, align 2
  %41 = zext i16 %39 to i32
  %42 = icmp ne i32 %41, 0
  br label %43

43:                                               ; preds = %37, %30
  %44 = phi i1 [ false, %30 ], [ %42, %37 ]
  %45 = zext i1 %44 to i32
  %46 = load i16*, i16** %5, align 8
  %47 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %9, i16* %46)
  %48 = load i16*, i16** bitcast (%struct.precisionType** @pone to i16**), align 8
  %49 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %7, i16* %48)
  br label %50

50:                                               ; preds = %76, %43
  %51 = load i16*, i16** %9, align 8
  %52 = call i32 bitcast (i32 (%struct.precisionType*)* @podd to i32 (i16*)*)(i16* %51)
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %61

54:                                               ; preds = %50
  %55 = load i16*, i16** %8, align 8
  %56 = load i16*, i16** %7, align 8
  %57 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @pmul to i16* (i16*, i16*)*)(i16* %55, i16* %56)
  %58 = load i16*, i16** %6, align 8
  %59 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*, %struct.precisionType**, %struct.precisionType**)* @pdivmod to i16* (i16*, i16*, i16**, i16**)*)(i16* %57, i16* %58, i16** null, i16** inttoptr (i64 -1 to i16**))
  %60 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %7, i16* %59)
  br label %61

61:                                               ; preds = %54, %50
  %62 = load i16*, i16** %9, align 8
  %63 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @phalf to i16* (i16*)*)(i16* %62)
  %64 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %9, i16* %63)
  %65 = load i16*, i16** %9, align 8
  %66 = call i32 bitcast (i32 (%struct.precisionType*)* @pcmpz to i32 (i16*)*)(i16* %65)
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %61
  br label %77

69:                                               ; preds = %61
  %70 = load i16*, i16** %8, align 8
  %71 = load i16*, i16** %8, align 8
  %72 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @pmul to i16* (i16*, i16*)*)(i16* %70, i16* %71)
  %73 = load i16*, i16** %6, align 8
  %74 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*, %struct.precisionType**, %struct.precisionType**)* @pdivmod to i16* (i16*, i16*, i16**, i16**)*)(i16* %72, i16* %73, i16** null, i16** inttoptr (i64 -1 to i16**))
  %75 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %8, i16* %74)
  br label %76

76:                                               ; preds = %69
  br i1 true, label %50, label %77

77:                                               ; preds = %76, %68
  %78 = load i16*, i16** %8, align 8
  %79 = icmp ne i16* %78, null
  br i1 %79, label %80, label %90

80:                                               ; preds = %77
  %81 = load i16*, i16** %8, align 8
  %82 = load i16, i16* %81, align 2
  %83 = add i16 %82, -1
  store i16 %83, i16* %81, align 2
  %84 = zext i16 %83 to i32
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %80
  %87 = load i16*, i16** %8, align 8
  %88 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %87)
  %89 = icmp ne i32 %88, 0
  br label %90

90:                                               ; preds = %86, %80, %77
  %91 = phi i1 [ false, %80 ], [ false, %77 ], [ %89, %86 ]
  %92 = zext i1 %91 to i32
  %93 = load i16*, i16** %9, align 8
  %94 = icmp ne i16* %93, null
  br i1 %94, label %95, label %105

95:                                               ; preds = %90
  %96 = load i16*, i16** %9, align 8
  %97 = load i16, i16* %96, align 2
  %98 = add i16 %97, -1
  store i16 %98, i16* %96, align 2
  %99 = zext i16 %98 to i32
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %105

101:                                              ; preds = %95
  %102 = load i16*, i16** %9, align 8
  %103 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %102)
  %104 = icmp ne i32 %103, 0
  br label %105

105:                                              ; preds = %101, %95, %90
  %106 = phi i1 [ false, %95 ], [ false, %90 ], [ %104, %101 ]
  %107 = zext i1 %106 to i32
  %108 = load i16*, i16** %4, align 8
  %109 = icmp ne i16* %108, null
  br i1 %109, label %110, label %120

110:                                              ; preds = %105
  %111 = load i16*, i16** %4, align 8
  %112 = load i16, i16* %111, align 2
  %113 = add i16 %112, -1
  store i16 %113, i16* %111, align 2
  %114 = zext i16 %113 to i32
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %120

116:                                              ; preds = %110
  %117 = load i16*, i16** %4, align 8
  %118 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %117)
  %119 = icmp ne i32 %118, 0
  br label %120

120:                                              ; preds = %116, %110, %105
  %121 = phi i1 [ false, %110 ], [ false, %105 ], [ %119, %116 ]
  %122 = zext i1 %121 to i32
  %123 = load i16*, i16** %5, align 8
  %124 = icmp ne i16* %123, null
  br i1 %124, label %125, label %135

125:                                              ; preds = %120
  %126 = load i16*, i16** %5, align 8
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -1
  store i16 %128, i16* %126, align 2
  %129 = zext i16 %128 to i32
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %135

131:                                              ; preds = %125
  %132 = load i16*, i16** %5, align 8
  %133 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %132)
  %134 = icmp ne i32 %133, 0
  br label %135

135:                                              ; preds = %131, %125, %120
  %136 = phi i1 [ false, %125 ], [ false, %120 ], [ %134, %131 ]
  %137 = zext i1 %136 to i32
  %138 = load i16*, i16** %6, align 8
  %139 = icmp ne i16* %138, null
  br i1 %139, label %140, label %150

140:                                              ; preds = %135
  %141 = load i16*, i16** %6, align 8
  %142 = load i16, i16* %141, align 2
  %143 = add i16 %142, -1
  store i16 %143, i16* %141, align 2
  %144 = zext i16 %143 to i32
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %150

146:                                              ; preds = %140
  %147 = load i16*, i16** %6, align 8
  %148 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %147)
  %149 = icmp ne i32 %148, 0
  br label %150

150:                                              ; preds = %146, %140, %135
  %151 = phi i1 [ false, %140 ], [ false, %135 ], [ %149, %146 ]
  %152 = zext i1 %151 to i32
  %153 = load i16*, i16** %7, align 8
  %154 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @presult to i16* (i16*)*)(i16* %153)
  ret i16* %154
}

; Function Attrs: noinline nounwind uwtable
define dso_local i16* @psqrt(i16* %0) #0 {
  %2 = alloca i16*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i16*, align 8
  %5 = alloca i16*, align 8
  store i16* %0, i16** %2, align 8
  store i16* null, i16** %4, align 8
  store i16* null, i16** %5, align 8
  %6 = load i16*, i16** %2, align 8
  %7 = icmp ne i16* %6, null
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  %9 = load i16*, i16** %2, align 8
  %10 = load i16, i16* %9, align 2
  %11 = add i16 %10, 1
  store i16 %11, i16* %9, align 2
  %12 = zext i16 %10 to i32
  %13 = icmp ne i32 %12, 0
  br label %14

14:                                               ; preds = %8, %1
  %15 = phi i1 [ false, %1 ], [ %13, %8 ]
  %16 = zext i1 %15 to i32
  %17 = load i16*, i16** %2, align 8
  %18 = call i32 bitcast (i32 (%struct.precisionType*)* @pcmpz to i32 (i16*)*)(i16* %17)
  store i32 %18, i32* %3, align 4
  %19 = load i32, i32* %3, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = load i16*, i16** bitcast (%struct.precisionType** @pzero to i16**), align 8
  %23 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %5, i16* %22)
  br label %50

24:                                               ; preds = %14
  %25 = load i32, i32* %3, align 4
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = call i16* @errorp(i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.128, i64 0, i64 0))
  %29 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %4, i16* %28)
  br label %49

30:                                               ; preds = %24
  %31 = load i16*, i16** %2, align 8
  %32 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %4, i16* %31)
  br label %33

33:                                               ; preds = %43, %30
  %34 = load i16*, i16** %4, align 8
  %35 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %5, i16* %34)
  %36 = load i16*, i16** %4, align 8
  %37 = load i16*, i16** %2, align 8
  %38 = load i16*, i16** %4, align 8
  %39 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*, %struct.precisionType**, %struct.precisionType**)* @pdivmod to i16* (i16*, i16*, i16**, i16**)*)(i16* %37, i16* %38, i16** inttoptr (i64 -1 to i16**), i16** null)
  %40 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*, %struct.precisionType*)* @padd to i16* (i16*, i16*)*)(i16* %36, i16* %39)
  %41 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @phalf to i16* (i16*)*)(i16* %40)
  %42 = call i16* bitcast (%struct.precisionType* (%struct.precisionType**, %struct.precisionType*)* @psetq to i16* (i16**, i16*)*)(i16** %4, i16* %41)
  br label %43

43:                                               ; preds = %33
  %44 = load i16*, i16** %4, align 8
  %45 = load i16*, i16** %5, align 8
  %46 = call i32 bitcast (i32 (%struct.precisionType*, %struct.precisionType*)* @pcmp to i32 (i16*, i16*)*)(i16* %44, i16* %45)
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %33, label %48

48:                                               ; preds = %43
  br label %49

49:                                               ; preds = %48, %27
  br label %50

50:                                               ; preds = %49, %21
  %51 = load i16*, i16** %4, align 8
  %52 = icmp ne i16* %51, null
  br i1 %52, label %53, label %63

53:                                               ; preds = %50
  %54 = load i16*, i16** %4, align 8
  %55 = load i16, i16* %54, align 2
  %56 = add i16 %55, -1
  store i16 %56, i16* %54, align 2
  %57 = zext i16 %56 to i32
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %63

59:                                               ; preds = %53
  %60 = load i16*, i16** %4, align 8
  %61 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %60)
  %62 = icmp ne i32 %61, 0
  br label %63

63:                                               ; preds = %59, %53, %50
  %64 = phi i1 [ false, %53 ], [ false, %50 ], [ %62, %59 ]
  %65 = zext i1 %64 to i32
  %66 = load i16*, i16** %2, align 8
  %67 = icmp ne i16* %66, null
  br i1 %67, label %68, label %78

68:                                               ; preds = %63
  %69 = load i16*, i16** %2, align 8
  %70 = load i16, i16* %69, align 2
  %71 = add i16 %70, -1
  store i16 %71, i16* %69, align 2
  %72 = zext i16 %71 to i32
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %68
  %75 = load i16*, i16** %2, align 8
  %76 = call i32 (i16*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (i16*, ...)*)(i16* %75)
  %77 = icmp ne i32 %76, 0
  br label %78

78:                                               ; preds = %74, %68, %63
  %79 = phi i1 [ false, %68 ], [ false, %63 ], [ %77, %74 ]
  %80 = zext i1 %79 to i32
  %81 = load i16*, i16** %5, align 8
  %82 = call i16* bitcast (%struct.precisionType* (%struct.precisionType*)* @presult to i16* (i16*)*)(i16* %81)
  ret i16* %82
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @psub(%struct.precisionType* %0, %struct.precisionType* %1) #0 {
  %3 = alloca %struct.precisionType*, align 8
  %4 = alloca %struct.precisionType*, align 8
  %5 = alloca %struct.precisionType*, align 8
  %6 = alloca i16*, align 8
  %7 = alloca i16*, align 8
  %8 = alloca i16*, align 8
  %9 = alloca i16*, align 8
  %10 = alloca %struct.precisionType*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i16, align 2
  %13 = alloca i32, align 4
  store %struct.precisionType* %0, %struct.precisionType** %4, align 8
  store %struct.precisionType* %1, %struct.precisionType** %5, align 8
  %14 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %15 = icmp ne %struct.precisionType* %14, null
  br i1 %15, label %16, label %23

16:                                               ; preds = %2
  %17 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %18 = bitcast %struct.precisionType* %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = add i16 %19, 1
  store i16 %20, i16* %18, align 2
  %21 = zext i16 %19 to i32
  %22 = icmp ne i32 %21, 0
  br label %23

23:                                               ; preds = %16, %2
  %24 = phi i1 [ false, %2 ], [ %22, %16 ]
  %25 = zext i1 %24 to i32
  %26 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %27 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %28 = icmp ne %struct.precisionType* %27, null
  br i1 %28, label %29, label %36

29:                                               ; preds = %23
  %30 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %31 = bitcast %struct.precisionType* %30 to i16*
  %32 = load i16, i16* %31, align 2
  %33 = add i16 %32, 1
  store i16 %33, i16* %31, align 2
  %34 = zext i16 %32 to i32
  %35 = icmp ne i32 %34, 0
  br label %36

36:                                               ; preds = %29, %23
  %37 = phi i1 [ false, %23 ], [ %35, %29 ]
  %38 = zext i1 %37 to i32
  %39 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %40 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %41 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %40, i32 0, i32 3
  %42 = load i8, i8* %41, align 2
  %43 = zext i8 %42 to i32
  %44 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %45 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %44, i32 0, i32 3
  %46 = load i8, i8* %45, align 2
  %47 = zext i8 %46 to i32
  %48 = icmp ne i32 %43, %47
  br i1 %48, label %49, label %72

49:                                               ; preds = %36
  store %struct.precisionType* null, %struct.precisionType** %10, align 8
  %50 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %51 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %50, i32 0, i32 3
  %52 = load i8, i8* %51, align 2
  %53 = icmp ne i8 %52, 0
  %54 = xor i1 %53, true
  %55 = zext i1 %54 to i32
  %56 = trunc i32 %55 to i8
  %57 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %58 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %57, i32 0, i32 3
  store i8 %56, i8* %58, align 2
  %59 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %60 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %61 = call %struct.precisionType* @padd(%struct.precisionType* %59, %struct.precisionType* %60)
  %62 = call %struct.precisionType* @psetq(%struct.precisionType** %10, %struct.precisionType* %61)
  %63 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %64 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %63, i32 0, i32 3
  %65 = load i8, i8* %64, align 2
  %66 = icmp ne i8 %65, 0
  %67 = xor i1 %66, true
  %68 = zext i1 %67 to i32
  %69 = trunc i32 %68 to i8
  %70 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %71 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %70, i32 0, i32 3
  store i8 %69, i8* %71, align 2
  br label %226

72:                                               ; preds = %36
  %73 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %74 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %75 = call i32 @pcmp(%struct.precisionType* %73, %struct.precisionType* %74)
  store i32 %75, i32* %13, align 4
  %76 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %77 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %76, i32 0, i32 3
  %78 = load i8, i8* %77, align 2
  %79 = icmp ne i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %72
  %81 = load i32, i32* %13, align 4
  %82 = sub nsw i32 0, %81
  store i32 %82, i32* %13, align 4
  br label %83

83:                                               ; preds = %80, %72
  %84 = load i32, i32* %13, align 4
  %85 = icmp slt i32 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %83
  %87 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  store %struct.precisionType* %87, %struct.precisionType** %10, align 8
  %88 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  store %struct.precisionType* %88, %struct.precisionType** %4, align 8
  %89 = load %struct.precisionType*, %struct.precisionType** %10, align 8
  store %struct.precisionType* %89, %struct.precisionType** %5, align 8
  br label %90

90:                                               ; preds = %86, %83
  %91 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %92 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %91, i32 0, i32 2
  %93 = load i16, i16* %92, align 2
  %94 = zext i16 %93 to i32
  %95 = call %struct.precisionType* (i32, ...) bitcast (%struct.precisionType* (i32)* @palloc to %struct.precisionType* (i32, ...)*)(i32 %94)
  store %struct.precisionType* %95, %struct.precisionType** %10, align 8
  %96 = load %struct.precisionType*, %struct.precisionType** %10, align 8
  %97 = icmp eq %struct.precisionType* %96, null
  br i1 %97, label %98, label %100

98:                                               ; preds = %90
  %99 = load %struct.precisionType*, %struct.precisionType** %10, align 8
  store %struct.precisionType* %99, %struct.precisionType** %3, align 8
  br label %261

100:                                              ; preds = %90
  %101 = load i32, i32* %13, align 4
  %102 = icmp slt i32 %101, 0
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %105 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %104, i32 0, i32 3
  %106 = load i8, i8* %105, align 2
  %107 = icmp ne i8 %106, 0
  %108 = xor i1 %107, true
  %109 = zext i1 %108 to i32
  %110 = trunc i32 %109 to i8
  %111 = load %struct.precisionType*, %struct.precisionType** %10, align 8
  %112 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %111, i32 0, i32 3
  store i8 %110, i8* %112, align 2
  br label %119

113:                                              ; preds = %100
  %114 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %115 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %114, i32 0, i32 3
  %116 = load i8, i8* %115, align 2
  %117 = load %struct.precisionType*, %struct.precisionType** %10, align 8
  %118 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %117, i32 0, i32 3
  store i8 %116, i8* %118, align 2
  br label %119

119:                                              ; preds = %113, %103
  %120 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %121 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %120, i32 0, i32 4
  %122 = getelementptr inbounds [1 x i16], [1 x i16]* %121, i64 0, i64 0
  store i16* %122, i16** %8, align 8
  %123 = load %struct.precisionType*, %struct.precisionType** %10, align 8
  %124 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %123, i32 0, i32 4
  %125 = getelementptr inbounds [1 x i16], [1 x i16]* %124, i64 0, i64 0
  store i16* %125, i16** %7, align 8
  %126 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %127 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %126, i32 0, i32 4
  %128 = getelementptr inbounds [1 x i16], [1 x i16]* %127, i64 0, i64 0
  store i16* %128, i16** %9, align 8
  store i16 1, i16* %12, align 2
  %129 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %130 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %129, i32 0, i32 4
  %131 = getelementptr inbounds [1 x i16], [1 x i16]* %130, i64 0, i64 0
  %132 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %133 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %132, i32 0, i32 2
  %134 = load i16, i16* %133, align 2
  %135 = zext i16 %134 to i32
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i16, i16* %131, i64 %136
  store i16* %137, i16** %6, align 8
  br label %138

138:                                              ; preds = %162, %119
  %139 = load i16*, i16** %9, align 8
  %140 = getelementptr inbounds i16, i16* %139, i32 1
  store i16* %140, i16** %9, align 8
  %141 = load i16, i16* %139, align 2
  %142 = zext i16 %141 to i32
  %143 = sub nsw i32 65535, %142
  store i32 %143, i32* %11, align 4
  %144 = load i16*, i16** %8, align 8
  %145 = getelementptr inbounds i16, i16* %144, i32 1
  store i16* %145, i16** %8, align 8
  %146 = load i16, i16* %144, align 2
  %147 = zext i16 %146 to i32
  %148 = load i32, i32* %11, align 4
  %149 = add i32 %148, %147
  store i32 %149, i32* %11, align 4
  %150 = load i16, i16* %12, align 2
  %151 = zext i16 %150 to i32
  %152 = load i32, i32* %11, align 4
  %153 = add i32 %152, %151
  store i32 %153, i32* %11, align 4
  %154 = load i32, i32* %11, align 4
  %155 = lshr i32 %154, 16
  %156 = trunc i32 %155 to i16
  store i16 %156, i16* %12, align 2
  %157 = load i32, i32* %11, align 4
  %158 = and i32 %157, 65535
  %159 = trunc i32 %158 to i16
  %160 = load i16*, i16** %7, align 8
  %161 = getelementptr inbounds i16, i16* %160, i32 1
  store i16* %161, i16** %7, align 8
  store i16 %159, i16* %160, align 2
  br label %162

162:                                              ; preds = %138
  %163 = load i16*, i16** %9, align 8
  %164 = load i16*, i16** %6, align 8
  %165 = icmp ult i16* %163, %164
  br i1 %165, label %138, label %166

166:                                              ; preds = %162
  %167 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %168 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %167, i32 0, i32 4
  %169 = getelementptr inbounds [1 x i16], [1 x i16]* %168, i64 0, i64 0
  %170 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %171 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %170, i32 0, i32 2
  %172 = load i16, i16* %171, align 2
  %173 = zext i16 %172 to i32
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds i16, i16* %169, i64 %174
  store i16* %175, i16** %6, align 8
  br label %176

176:                                              ; preds = %180, %166
  %177 = load i16*, i16** %8, align 8
  %178 = load i16*, i16** %6, align 8
  %179 = icmp ult i16* %177, %178
  br i1 %179, label %180, label %198

180:                                              ; preds = %176
  %181 = load i16*, i16** %8, align 8
  %182 = getelementptr inbounds i16, i16* %181, i32 1
  store i16* %182, i16** %8, align 8
  %183 = load i16, i16* %181, align 2
  %184 = zext i16 %183 to i32
  %185 = add nsw i32 65535, %184
  store i32 %185, i32* %11, align 4
  %186 = load i16, i16* %12, align 2
  %187 = zext i16 %186 to i32
  %188 = load i32, i32* %11, align 4
  %189 = add i32 %188, %187
  store i32 %189, i32* %11, align 4
  %190 = load i32, i32* %11, align 4
  %191 = lshr i32 %190, 16
  %192 = trunc i32 %191 to i16
  store i16 %192, i16* %12, align 2
  %193 = load i32, i32* %11, align 4
  %194 = and i32 %193, 65535
  %195 = trunc i32 %194 to i16
  %196 = load i16*, i16** %7, align 8
  %197 = getelementptr inbounds i16, i16* %196, i32 1
  store i16* %197, i16** %7, align 8
  store i16 %195, i16* %196, align 2
  br label %176

198:                                              ; preds = %176
  br label %199

199:                                              ; preds = %207, %198
  %200 = load i16*, i16** %7, align 8
  %201 = getelementptr inbounds i16, i16* %200, i32 -1
  store i16* %201, i16** %7, align 8
  %202 = load i16, i16* %201, align 2
  %203 = zext i16 %202 to i32
  %204 = icmp ne i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %199
  br label %213

206:                                              ; preds = %199
  br label %207

207:                                              ; preds = %206
  %208 = load i16*, i16** %7, align 8
  %209 = load %struct.precisionType*, %struct.precisionType** %10, align 8
  %210 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %209, i32 0, i32 4
  %211 = getelementptr inbounds [1 x i16], [1 x i16]* %210, i64 0, i64 0
  %212 = icmp ugt i16* %208, %211
  br i1 %212, label %199, label %213

213:                                              ; preds = %207, %205
  %214 = load i16*, i16** %7, align 8
  %215 = load %struct.precisionType*, %struct.precisionType** %10, align 8
  %216 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %215, i32 0, i32 4
  %217 = getelementptr inbounds [1 x i16], [1 x i16]* %216, i64 0, i64 0
  %218 = ptrtoint i16* %214 to i64
  %219 = ptrtoint i16* %217 to i64
  %220 = sub i64 %218, %219
  %221 = sdiv exact i64 %220, 2
  %222 = add nsw i64 %221, 1
  %223 = trunc i64 %222 to i16
  %224 = load %struct.precisionType*, %struct.precisionType** %10, align 8
  %225 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %224, i32 0, i32 2
  store i16 %223, i16* %225, align 2
  br label %226

226:                                              ; preds = %213, %49
  %227 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %228 = icmp ne %struct.precisionType* %227, null
  br i1 %228, label %229, label %240

229:                                              ; preds = %226
  %230 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %231 = bitcast %struct.precisionType* %230 to i16*
  %232 = load i16, i16* %231, align 2
  %233 = add i16 %232, -1
  store i16 %233, i16* %231, align 2
  %234 = zext i16 %233 to i32
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %240

236:                                              ; preds = %229
  %237 = load %struct.precisionType*, %struct.precisionType** %4, align 8
  %238 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %237)
  %239 = icmp ne i32 %238, 0
  br label %240

240:                                              ; preds = %236, %229, %226
  %241 = phi i1 [ false, %229 ], [ false, %226 ], [ %239, %236 ]
  %242 = zext i1 %241 to i32
  %243 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %244 = icmp ne %struct.precisionType* %243, null
  br i1 %244, label %245, label %256

245:                                              ; preds = %240
  %246 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %247 = bitcast %struct.precisionType* %246 to i16*
  %248 = load i16, i16* %247, align 2
  %249 = add i16 %248, -1
  store i16 %249, i16* %247, align 2
  %250 = zext i16 %249 to i32
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %256

252:                                              ; preds = %245
  %253 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %254 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %253)
  %255 = icmp ne i32 %254, 0
  br label %256

256:                                              ; preds = %252, %245, %240
  %257 = phi i1 [ false, %245 ], [ false, %240 ], [ %255, %252 ]
  %258 = zext i1 %257 to i32
  %259 = load %struct.precisionType*, %struct.precisionType** %10, align 8
  %260 = call %struct.precisionType* @presult(%struct.precisionType* %259)
  store %struct.precisionType* %260, %struct.precisionType** %3, align 8
  br label %261

261:                                              ; preds = %256, %98
  %262 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  ret %struct.precisionType* %262
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @ptoa(%struct.precisionType* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.precisionType*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.precisionType*, align 8
  %10 = alloca %struct.precisionType*, align 8
  %11 = alloca %struct.precisionType*, align 8
  %12 = alloca i32, align 4
  store %struct.precisionType* %0, %struct.precisionType** %3, align 8
  store i32 0, i32* %7, align 4
  %13 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %14 = icmp ne %struct.precisionType* %13, null
  br i1 %14, label %15, label %22

15:                                               ; preds = %1
  %16 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %17 = bitcast %struct.precisionType* %16 to i16*
  %18 = load i16, i16* %17, align 2
  %19 = add i16 %18, 1
  store i16 %19, i16* %17, align 2
  %20 = zext i16 %18 to i32
  %21 = icmp ne i32 %20, 0
  br label %22

22:                                               ; preds = %15, %1
  %23 = phi i1 [ false, %1 ], [ %21, %15 ]
  %24 = zext i1 %23 to i32
  %25 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  store %struct.precisionType* null, %struct.precisionType** %9, align 8
  store %struct.precisionType* null, %struct.precisionType** %10, align 8
  store %struct.precisionType* null, %struct.precisionType** %11, align 8
  %26 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %27 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %26, i32 0, i32 2
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  store i32 %29, i32* %8, align 4
  %30 = load i32, i32* %8, align 4
  %31 = icmp ugt i32 %30, 4090445
  br i1 %31, label %32, label %36

32:                                               ; preds = %22
  %33 = load i32, i32* %8, align 4
  %34 = udiv i32 %33, 109
  %35 = mul i32 %34, 525
  store i32 %35, i32* %8, align 4
  br label %40

36:                                               ; preds = %22
  %37 = load i32, i32* %8, align 4
  %38 = mul i32 %37, 525
  %39 = udiv i32 %38, 109
  store i32 %39, i32* %8, align 4
  br label %40

40:                                               ; preds = %36, %32
  %41 = load i32, i32* %8, align 4
  %42 = add i32 %41, 11
  store i32 %42, i32* %8, align 4
  %43 = load i32, i32* %8, align 4
  %44 = zext i32 %43 to i64
  %45 = call i8* @malloc(i64 %44)
  store i8* %45, i8** %6, align 8
  %46 = load i8*, i8** %6, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %48, label %50

48:                                               ; preds = %40
  %49 = load i8*, i8** %6, align 8
  store i8* %49, i8** %2, align 8
  br label %205

50:                                               ; preds = %40
  %51 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %52 = call %struct.precisionType* @pabs(%struct.precisionType* %51)
  %53 = call %struct.precisionType* @psetq(%struct.precisionType** %10, %struct.precisionType* %52)
  %54 = call %struct.precisionType* @utop(i32 1000000000)
  %55 = call %struct.precisionType* @psetq(%struct.precisionType** %11, %struct.precisionType* %54)
  %56 = load i8*, i8** %6, align 8
  %57 = load i32, i32* %8, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %56, i64 %58
  store i8* %59, i8** %5, align 8
  %60 = load i8*, i8** %5, align 8
  %61 = getelementptr inbounds i8, i8* %60, i32 -1
  store i8* %61, i8** %5, align 8
  store i8 0, i8* %61, align 1
  %62 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %63 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %62, i32 0, i32 3
  %64 = load i8, i8* %63, align 2
  %65 = zext i8 %64 to i32
  store i32 %65, i32* %7, align 4
  br label %66

66:                                               ; preds = %97, %50
  %67 = load %struct.precisionType*, %struct.precisionType** %10, align 8
  %68 = load %struct.precisionType*, %struct.precisionType** %11, align 8
  %69 = call %struct.precisionType* @pdivmod(%struct.precisionType* %67, %struct.precisionType* %68, %struct.precisionType** %10, %struct.precisionType** %9)
  %70 = load %struct.precisionType*, %struct.precisionType** %9, align 8
  %71 = call i32 @ptou(%struct.precisionType* %70)
  store i32 %71, i32* %4, align 4
  store i32 9, i32* %12, align 4
  br label %72

72:                                               ; preds = %92, %66
  %73 = load i32, i32* %4, align 4
  %74 = urem i32 %73, 10
  %75 = icmp ult i32 %74, 10
  br i1 %75, label %76, label %80

76:                                               ; preds = %72
  %77 = load i32, i32* %4, align 4
  %78 = urem i32 %77, 10
  %79 = add i32 %78, 48
  br label %85

80:                                               ; preds = %72
  %81 = load i32, i32* %4, align 4
  %82 = urem i32 %81, 10
  %83 = add i32 %82, 97
  %84 = sub i32 %83, 10
  br label %85

85:                                               ; preds = %80, %76
  %86 = phi i32 [ %79, %76 ], [ %84, %80 ]
  %87 = trunc i32 %86 to i8
  %88 = load i8*, i8** %5, align 8
  %89 = getelementptr inbounds i8, i8* %88, i32 -1
  store i8* %89, i8** %5, align 8
  store i8 %87, i8* %89, align 1
  %90 = load i32, i32* %4, align 4
  %91 = udiv i32 %90, 10
  store i32 %91, i32* %4, align 4
  br label %92

92:                                               ; preds = %85
  %93 = load i32, i32* %12, align 4
  %94 = add nsw i32 %93, -1
  store i32 %94, i32* %12, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %72, label %96

96:                                               ; preds = %92
  br label %97

97:                                               ; preds = %96
  %98 = load %struct.precisionType*, %struct.precisionType** %10, align 8
  %99 = call i32 @pcmpz(%struct.precisionType* %98)
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %66, label %101

101:                                              ; preds = %97
  br label %102

102:                                              ; preds = %107, %101
  %103 = load i8*, i8** %5, align 8
  %104 = load i8, i8* %103, align 1
  %105 = sext i8 %104 to i32
  %106 = icmp eq i32 %105, 48
  br i1 %106, label %107, label %110

107:                                              ; preds = %102
  %108 = load i8*, i8** %5, align 8
  %109 = getelementptr inbounds i8, i8* %108, i32 1
  store i8* %109, i8** %5, align 8
  br label %102

110:                                              ; preds = %102
  %111 = load i8*, i8** %5, align 8
  %112 = load i8, i8* %111, align 1
  %113 = sext i8 %112 to i32
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %110
  %116 = load i8*, i8** %5, align 8
  %117 = getelementptr inbounds i8, i8* %116, i32 -1
  store i8* %117, i8** %5, align 8
  br label %118

118:                                              ; preds = %115, %110
  %119 = load i32, i32* %7, align 4
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %118
  %122 = load i8*, i8** %5, align 8
  %123 = getelementptr inbounds i8, i8* %122, i32 -1
  store i8* %123, i8** %5, align 8
  store i8 45, i8* %123, align 1
  br label %124

124:                                              ; preds = %121, %118
  %125 = load i8*, i8** %5, align 8
  %126 = load i8*, i8** %6, align 8
  %127 = icmp ugt i8* %125, %126
  br i1 %127, label %128, label %139

128:                                              ; preds = %124
  %129 = load i8*, i8** %6, align 8
  %130 = load i8*, i8** %5, align 8
  %131 = load i32, i32* %8, align 4
  %132 = zext i32 %131 to i64
  %133 = load i8*, i8** %5, align 8
  %134 = load i8*, i8** %6, align 8
  %135 = ptrtoint i8* %133 to i64
  %136 = ptrtoint i8* %134 to i64
  %137 = sub i64 %135, %136
  %138 = sub nsw i64 %132, %137
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %129, i8* align 1 %130, i64 %138, i1 false)
  br label %139

139:                                              ; preds = %128, %124
  %140 = load %struct.precisionType*, %struct.precisionType** %11, align 8
  %141 = icmp ne %struct.precisionType* %140, null
  br i1 %141, label %142, label %153

142:                                              ; preds = %139
  %143 = load %struct.precisionType*, %struct.precisionType** %11, align 8
  %144 = bitcast %struct.precisionType* %143 to i16*
  %145 = load i16, i16* %144, align 2
  %146 = add i16 %145, -1
  store i16 %146, i16* %144, align 2
  %147 = zext i16 %146 to i32
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %153

149:                                              ; preds = %142
  %150 = load %struct.precisionType*, %struct.precisionType** %11, align 8
  %151 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %150)
  %152 = icmp ne i32 %151, 0
  br label %153

153:                                              ; preds = %149, %142, %139
  %154 = phi i1 [ false, %142 ], [ false, %139 ], [ %152, %149 ]
  %155 = zext i1 %154 to i32
  %156 = load %struct.precisionType*, %struct.precisionType** %10, align 8
  %157 = icmp ne %struct.precisionType* %156, null
  br i1 %157, label %158, label %169

158:                                              ; preds = %153
  %159 = load %struct.precisionType*, %struct.precisionType** %10, align 8
  %160 = bitcast %struct.precisionType* %159 to i16*
  %161 = load i16, i16* %160, align 2
  %162 = add i16 %161, -1
  store i16 %162, i16* %160, align 2
  %163 = zext i16 %162 to i32
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %169

165:                                              ; preds = %158
  %166 = load %struct.precisionType*, %struct.precisionType** %10, align 8
  %167 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %166)
  %168 = icmp ne i32 %167, 0
  br label %169

169:                                              ; preds = %165, %158, %153
  %170 = phi i1 [ false, %158 ], [ false, %153 ], [ %168, %165 ]
  %171 = zext i1 %170 to i32
  %172 = load %struct.precisionType*, %struct.precisionType** %9, align 8
  %173 = icmp ne %struct.precisionType* %172, null
  br i1 %173, label %174, label %185

174:                                              ; preds = %169
  %175 = load %struct.precisionType*, %struct.precisionType** %9, align 8
  %176 = bitcast %struct.precisionType* %175 to i16*
  %177 = load i16, i16* %176, align 2
  %178 = add i16 %177, -1
  store i16 %178, i16* %176, align 2
  %179 = zext i16 %178 to i32
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %185

181:                                              ; preds = %174
  %182 = load %struct.precisionType*, %struct.precisionType** %9, align 8
  %183 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %182)
  %184 = icmp ne i32 %183, 0
  br label %185

185:                                              ; preds = %181, %174, %169
  %186 = phi i1 [ false, %174 ], [ false, %169 ], [ %184, %181 ]
  %187 = zext i1 %186 to i32
  %188 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %189 = icmp ne %struct.precisionType* %188, null
  br i1 %189, label %190, label %201

190:                                              ; preds = %185
  %191 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %192 = bitcast %struct.precisionType* %191 to i16*
  %193 = load i16, i16* %192, align 2
  %194 = add i16 %193, -1
  store i16 %194, i16* %192, align 2
  %195 = zext i16 %194 to i32
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %201

197:                                              ; preds = %190
  %198 = load %struct.precisionType*, %struct.precisionType** %3, align 8
  %199 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %198)
  %200 = icmp ne i32 %199, 0
  br label %201

201:                                              ; preds = %197, %190, %185
  %202 = phi i1 [ false, %190 ], [ false, %185 ], [ %200, %197 ]
  %203 = zext i1 %202 to i32
  %204 = load i8*, i8** %6, align 8
  store i8* %204, i8** %2, align 8
  br label %205

205:                                              ; preds = %201, %48
  %206 = load i8*, i8** %2, align 8
  ret i8* %206
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ptob(%struct.precisionType* %0, i8* %1, i32 %2, i8* %3, i32 %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.precisionType*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.precisionType*, align 8
  %18 = alloca %struct.precisionType*, align 8
  %19 = alloca %struct.precisionType*, align 8
  store %struct.precisionType* %0, %struct.precisionType** %7, align 8
  store i8* %1, i8** %8, align 8
  store i32 %2, i32* %9, align 4
  store i8* %3, i8** %10, align 8
  store i32 %4, i32* %11, align 4
  store i32 0, i32* %16, align 4
  store %struct.precisionType* null, %struct.precisionType** %17, align 8
  store %struct.precisionType* null, %struct.precisionType** %18, align 8
  store %struct.precisionType* null, %struct.precisionType** %19, align 8
  %20 = load i32, i32* %11, align 4
  %21 = icmp ugt i32 %20, 256
  br i1 %21, label %25, label %22

22:                                               ; preds = %5
  %23 = load i32, i32* %11, align 4
  %24 = icmp ult i32 %23, 2
  br i1 %24, label %25, label %26

25:                                               ; preds = %22, %5
  store i32 -1, i32* %6, align 4
  br label %193

26:                                               ; preds = %22
  %27 = load i32, i32* %9, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  store i32 1, i32* %6, align 4
  br label %193

30:                                               ; preds = %26
  %31 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %32 = icmp ne %struct.precisionType* %31, null
  br i1 %32, label %33, label %40

33:                                               ; preds = %30
  %34 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %35 = bitcast %struct.precisionType* %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = add i16 %36, 1
  store i16 %37, i16* %35, align 2
  %38 = zext i16 %36 to i32
  %39 = icmp ne i32 %38, 0
  br label %40

40:                                               ; preds = %33, %30
  %41 = phi i1 [ false, %30 ], [ %39, %33 ]
  %42 = zext i1 %41 to i32
  %43 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %44 = load i32, i32* %11, align 4
  store i32 %44, i32* %12, align 4
  store i32 1, i32* %13, align 4
  br label %45

45:                                               ; preds = %51, %40
  %46 = load i32, i32* %12, align 4
  %47 = load i32, i32* %11, align 4
  %48 = mul i32 %46, %47
  %49 = load i32, i32* %12, align 4
  %50 = icmp ugt i32 %48, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %45
  %52 = load i32, i32* %11, align 4
  %53 = load i32, i32* %12, align 4
  %54 = mul i32 %53, %52
  store i32 %54, i32* %12, align 4
  %55 = load i32, i32* %13, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %13, align 4
  br label %45

57:                                               ; preds = %45
  %58 = load i32, i32* %13, align 4
  store i32 %58, i32* %15, align 4
  %59 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %60 = call %struct.precisionType* @pabs(%struct.precisionType* %59)
  %61 = call %struct.precisionType* @psetq(%struct.precisionType** %18, %struct.precisionType* %60)
  %62 = load i32, i32* %12, align 4
  %63 = call %struct.precisionType* @utop(i32 %62)
  %64 = call %struct.precisionType* @psetq(%struct.precisionType** %19, %struct.precisionType* %63)
  %65 = load i8*, i8** %8, align 8
  %66 = load i32, i32* %9, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds i8, i8* %65, i64 %67
  store i8* %68, i8** %14, align 8
  br label %69

69:                                               ; preds = %99, %57
  %70 = load %struct.precisionType*, %struct.precisionType** %18, align 8
  %71 = load %struct.precisionType*, %struct.precisionType** %19, align 8
  %72 = call %struct.precisionType* @pdivmod(%struct.precisionType* %70, %struct.precisionType* %71, %struct.precisionType** %18, %struct.precisionType** %17)
  %73 = load %struct.precisionType*, %struct.precisionType** %17, align 8
  %74 = call i32 @ptou(%struct.precisionType* %73)
  store i32 %74, i32* %12, align 4
  %75 = load i32, i32* %15, align 4
  store i32 %75, i32* %13, align 4
  br label %76

76:                                               ; preds = %94, %69
  %77 = load i8*, i8** %10, align 8
  %78 = load i32, i32* %12, align 4
  %79 = load i32, i32* %11, align 4
  %80 = urem i32 %78, %79
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds i8, i8* %77, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = load i8*, i8** %14, align 8
  %85 = getelementptr inbounds i8, i8* %84, i32 -1
  store i8* %85, i8** %14, align 8
  store i8 %83, i8* %85, align 1
  %86 = load i32, i32* %12, align 4
  %87 = load i32, i32* %11, align 4
  %88 = udiv i32 %86, %87
  store i32 %88, i32* %12, align 4
  %89 = load i8*, i8** %14, align 8
  %90 = load i8*, i8** %8, align 8
  %91 = icmp eq i8* %89, %90
  br i1 %91, label %92, label %93

92:                                               ; preds = %76
  br label %119

93:                                               ; preds = %76
  br label %94

94:                                               ; preds = %93
  %95 = load i32, i32* %13, align 4
  %96 = add i32 %95, -1
  store i32 %96, i32* %13, align 4
  %97 = icmp ugt i32 %96, 0
  br i1 %97, label %76, label %98

98:                                               ; preds = %94
  br label %99

99:                                               ; preds = %98
  %100 = load %struct.precisionType*, %struct.precisionType** %18, align 8
  %101 = call i32 @pcmpz(%struct.precisionType* %100)
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %69, label %103

103:                                              ; preds = %99
  %104 = load i8*, i8** %14, align 8
  %105 = load i8*, i8** %8, align 8
  %106 = icmp ugt i8* %104, %105
  br i1 %106, label %107, label %118

107:                                              ; preds = %103
  br label %108

108:                                              ; preds = %113, %107
  %109 = load i8*, i8** %10, align 8
  %110 = load i8, i8* %109, align 1
  %111 = load i8*, i8** %14, align 8
  %112 = getelementptr inbounds i8, i8* %111, i32 -1
  store i8* %112, i8** %14, align 8
  store i8 %110, i8* %112, align 1
  br label %113

113:                                              ; preds = %108
  %114 = load i8*, i8** %14, align 8
  %115 = load i8*, i8** %8, align 8
  %116 = icmp ugt i8* %114, %115
  br i1 %116, label %108, label %117

117:                                              ; preds = %113
  br label %118

118:                                              ; preds = %117, %103
  br label %119

119:                                              ; preds = %118, %92
  %120 = load %struct.precisionType*, %struct.precisionType** %18, align 8
  %121 = call i32 @pcmpz(%struct.precisionType* %120)
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %126, label %123

123:                                              ; preds = %119
  %124 = load i32, i32* %12, align 4
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123, %119
  store i32 1, i32* %16, align 4
  br label %127

127:                                              ; preds = %126, %123
  %128 = load %struct.precisionType*, %struct.precisionType** %19, align 8
  %129 = icmp ne %struct.precisionType* %128, null
  br i1 %129, label %130, label %141

130:                                              ; preds = %127
  %131 = load %struct.precisionType*, %struct.precisionType** %19, align 8
  %132 = bitcast %struct.precisionType* %131 to i16*
  %133 = load i16, i16* %132, align 2
  %134 = add i16 %133, -1
  store i16 %134, i16* %132, align 2
  %135 = zext i16 %134 to i32
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %141

137:                                              ; preds = %130
  %138 = load %struct.precisionType*, %struct.precisionType** %19, align 8
  %139 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %138)
  %140 = icmp ne i32 %139, 0
  br label %141

141:                                              ; preds = %137, %130, %127
  %142 = phi i1 [ false, %130 ], [ false, %127 ], [ %140, %137 ]
  %143 = zext i1 %142 to i32
  %144 = load %struct.precisionType*, %struct.precisionType** %18, align 8
  %145 = icmp ne %struct.precisionType* %144, null
  br i1 %145, label %146, label %157

146:                                              ; preds = %141
  %147 = load %struct.precisionType*, %struct.precisionType** %18, align 8
  %148 = bitcast %struct.precisionType* %147 to i16*
  %149 = load i16, i16* %148, align 2
  %150 = add i16 %149, -1
  store i16 %150, i16* %148, align 2
  %151 = zext i16 %150 to i32
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %157

153:                                              ; preds = %146
  %154 = load %struct.precisionType*, %struct.precisionType** %18, align 8
  %155 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %154)
  %156 = icmp ne i32 %155, 0
  br label %157

157:                                              ; preds = %153, %146, %141
  %158 = phi i1 [ false, %146 ], [ false, %141 ], [ %156, %153 ]
  %159 = zext i1 %158 to i32
  %160 = load %struct.precisionType*, %struct.precisionType** %17, align 8
  %161 = icmp ne %struct.precisionType* %160, null
  br i1 %161, label %162, label %173

162:                                              ; preds = %157
  %163 = load %struct.precisionType*, %struct.precisionType** %17, align 8
  %164 = bitcast %struct.precisionType* %163 to i16*
  %165 = load i16, i16* %164, align 2
  %166 = add i16 %165, -1
  store i16 %166, i16* %164, align 2
  %167 = zext i16 %166 to i32
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %173

169:                                              ; preds = %162
  %170 = load %struct.precisionType*, %struct.precisionType** %17, align 8
  %171 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %170)
  %172 = icmp ne i32 %171, 0
  br label %173

173:                                              ; preds = %169, %162, %157
  %174 = phi i1 [ false, %162 ], [ false, %157 ], [ %172, %169 ]
  %175 = zext i1 %174 to i32
  %176 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %177 = icmp ne %struct.precisionType* %176, null
  br i1 %177, label %178, label %189

178:                                              ; preds = %173
  %179 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %180 = bitcast %struct.precisionType* %179 to i16*
  %181 = load i16, i16* %180, align 2
  %182 = add i16 %181, -1
  store i16 %182, i16* %180, align 2
  %183 = zext i16 %182 to i32
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %189

185:                                              ; preds = %178
  %186 = load %struct.precisionType*, %struct.precisionType** %7, align 8
  %187 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %186)
  %188 = icmp ne i32 %187, 0
  br label %189

189:                                              ; preds = %185, %178, %173
  %190 = phi i1 [ false, %178 ], [ false, %173 ], [ %188, %185 ]
  %191 = zext i1 %190 to i32
  %192 = load i32, i32* %16, align 4
  store i32 %192, i32* %6, align 4
  br label %193

193:                                              ; preds = %189, %29, %25
  %194 = load i32, i32* %6, align 4
  ret i32 %194
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ptou(%struct.precisionType* %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  %3 = alloca i16*, align 8
  %4 = alloca i32, align 4
  store %struct.precisionType* %0, %struct.precisionType** %2, align 8
  %5 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %6 = icmp ne %struct.precisionType* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %9 = bitcast %struct.precisionType* %8 to i16*
  %10 = load i16, i16* %9, align 2
  %11 = add i16 %10, 1
  store i16 %11, i16* %9, align 2
  %12 = zext i16 %10 to i32
  %13 = icmp ne i32 %12, 0
  br label %14

14:                                               ; preds = %7, %1
  %15 = phi i1 [ false, %1 ], [ %13, %7 ]
  %16 = zext i1 %15 to i32
  %17 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %18 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %19 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %18, i32 0, i32 3
  %20 = load i8, i8* %19, align 2
  %21 = icmp ne i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %14
  %23 = call %struct.precisionType* bitcast (i16* (i32, i8*, i8*)* @errorp to %struct.precisionType* (i32, i8*, i8*)*)(i32 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.135, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.136, i64 0, i64 0))
  %24 = ptrtoint %struct.precisionType* %23 to i32
  store i32 %24, i32* %4, align 4
  br label %62

25:                                               ; preds = %14
  %26 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %27 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %26, i32 0, i32 4
  %28 = getelementptr inbounds [1 x i16], [1 x i16]* %27, i64 0, i64 0
  %29 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %30 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %29, i32 0, i32 2
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i16, i16* %28, i64 %33
  store i16* %34, i16** %3, align 8
  store i32 0, i32* %4, align 4
  br label %35

35:                                               ; preds = %55, %25
  %36 = load i32, i32* %4, align 4
  %37 = load i16*, i16** %3, align 8
  %38 = getelementptr inbounds i16, i16* %37, i32 -1
  store i16* %38, i16** %3, align 8
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = sub i32 -1, %40
  %42 = lshr i32 %41, 16
  %43 = icmp ugt i32 %36, %42
  br i1 %43, label %44, label %47

44:                                               ; preds = %35
  %45 = call %struct.precisionType* bitcast (i16* (i32, i8*, i8*)* @errorp to %struct.precisionType* (i32, i8*, i8*)*)(i32 5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.135, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.137, i64 0, i64 0))
  %46 = ptrtoint %struct.precisionType* %45 to i32
  store i32 %46, i32* %4, align 4
  br label %61

47:                                               ; preds = %35
  %48 = load i32, i32* %4, align 4
  %49 = shl i32 %48, 16
  store i32 %49, i32* %4, align 4
  %50 = load i16*, i16** %3, align 8
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = load i32, i32* %4, align 4
  %54 = add i32 %53, %52
  store i32 %54, i32* %4, align 4
  br label %55

55:                                               ; preds = %47
  %56 = load i16*, i16** %3, align 8
  %57 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %58 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %57, i32 0, i32 4
  %59 = getelementptr inbounds [1 x i16], [1 x i16]* %58, i64 0, i64 0
  %60 = icmp ugt i16* %56, %59
  br i1 %60, label %35, label %61

61:                                               ; preds = %55, %44
  br label %62

62:                                               ; preds = %61, %22
  %63 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %64 = icmp ne %struct.precisionType* %63, null
  br i1 %64, label %65, label %76

65:                                               ; preds = %62
  %66 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %67 = bitcast %struct.precisionType* %66 to i16*
  %68 = load i16, i16* %67, align 2
  %69 = add i16 %68, -1
  store i16 %69, i16* %67, align 2
  %70 = zext i16 %69 to i32
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %65
  %73 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  %74 = call i32 (%struct.precisionType*, ...) bitcast (i32 (%struct.precisionType*)* @pfree to i32 (%struct.precisionType*, ...)*)(%struct.precisionType* %73)
  %75 = icmp ne i32 %74, 0
  br label %76

76:                                               ; preds = %72, %65, %62
  %77 = phi i1 [ false, %65 ], [ false, %62 ], [ %75, %72 ]
  %78 = zext i1 %77 to i32
  %79 = load i32, i32* %4, align 4
  ret i32 %79
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.precisionType* @utop(i32 %0) #0 {
  %2 = alloca %struct.precisionType*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i16*, align 8
  %5 = alloca %struct.precisionType*, align 8
  store i32 %0, i32* %3, align 4
  %6 = call %struct.precisionType* (i32, ...) bitcast (%struct.precisionType* (i32)* @palloc to %struct.precisionType* (i32, ...)*)(i32 2)
  store %struct.precisionType* %6, %struct.precisionType** %5, align 8
  %7 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %8 = icmp eq %struct.precisionType* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  store %struct.precisionType* null, %struct.precisionType** %2, align 8
  br label %41

10:                                               ; preds = %1
  %11 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %12 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %11, i32 0, i32 3
  store i8 0, i8* %12, align 2
  %13 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %14 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %13, i32 0, i32 4
  %15 = getelementptr inbounds [1 x i16], [1 x i16]* %14, i64 0, i64 0
  store i16* %15, i16** %4, align 8
  br label %16

16:                                               ; preds = %24, %10
  %17 = load i32, i32* %3, align 4
  %18 = and i32 %17, 65535
  %19 = trunc i32 %18 to i16
  %20 = load i16*, i16** %4, align 8
  %21 = getelementptr inbounds i16, i16* %20, i32 1
  store i16* %21, i16** %4, align 8
  store i16 %19, i16* %20, align 2
  %22 = load i32, i32* %3, align 4
  %23 = lshr i32 %22, 16
  store i32 %23, i32* %3, align 4
  br label %24

24:                                               ; preds = %16
  %25 = load i32, i32* %3, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %16, label %27

27:                                               ; preds = %24
  %28 = load i16*, i16** %4, align 8
  %29 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %30 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %29, i32 0, i32 4
  %31 = getelementptr inbounds [1 x i16], [1 x i16]* %30, i64 0, i64 0
  %32 = ptrtoint i16* %28 to i64
  %33 = ptrtoint i16* %31 to i64
  %34 = sub i64 %32, %33
  %35 = sdiv exact i64 %34, 2
  %36 = trunc i64 %35 to i16
  %37 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %38 = getelementptr inbounds %struct.precisionType, %struct.precisionType* %37, i32 0, i32 2
  store i16 %36, i16* %38, align 2
  %39 = load %struct.precisionType*, %struct.precisionType** %5, align 8
  %40 = call %struct.precisionType* @presult(%struct.precisionType* %39)
  store %struct.precisionType* %40, %struct.precisionType** %2, align 8
  br label %41

41:                                               ; preds = %27, %9
  %42 = load %struct.precisionType*, %struct.precisionType** %2, align 8
  ret %struct.precisionType* %42
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { nounwind readnone speculatable willreturn }
attributes #8 = { nounwind readnone }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { nounwind readonly }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1}

!0 = !{!"Debian clang version 10.0.1-++20200708124224+ef32c611aa2-1~exp1~20200707224822.188 "}
!1 = !{i32 1, !"wchar_size", i32 4}
